var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.2.0","fields":["title","body"],"fieldVectors":[["title/components/AboutComponent.html",[0,0.072,1,0.816]],["body/components/AboutComponent.html",[0,0.116,1,1.002,2,0.087,3,0.076,4,0.581,5,0.581,6,0.581,7,0.066,8,1.694,9,0.345,10,1.698,11,1.268,12,0.774,13,1.027,14,3.405,15,1.568,16,0.581,17,2.072,18,0.932,19,3.162,20,0.932,21,3.162,22,0.375,23,0.666,24,4.533,25,5.299,26,1.418,27,1.868,28,0.978,29,3.897,30,1.795,31,4.533,32,3.961,33,0.581,34,1.97,35,3.038,36,0.505,37,3.162,38,0.64,39,0.019,40,1.045,41,0.864,42,0.504,43,1.951,44,1.97,45,1.706,46,2.356,47,5.299,48,3.699,49,1.565,50,5.971,51,2.718,52,1.215,53,1.337,54,1.97,55,1.392,56,1.97,57,2.364,58,1.471,59,2.718,60,1.392,61,1.97,62,1.97,63,3.405,64,3.897,65,1.031,66,1.654,67,1.97,68,2.718,69,1.535,70,1.97,71,1.132,72,1.392,73,1.784,74,2.471,75,1.49,76,1.491,77,0.199,78,0.087,79,0.554,80,0.705,81,0.076,82,0.045,83,1.97,84,1.375,85,1.97,86,3.162,87,0.78,88,0.78,89,0.554,90,0.64,91,1.694,92,1.97,93,1.97,94,0.916,95,1.97,96,1.694,97,4.521,98,1.97,99,0.978,100,1.97,101,1.97,102,1.97,103,1.97,104,1.97,105,0.916,106,3.162,107,1.511,108,0.672,109,3.477,110,1.818,111,2.207,112,3.163,113,0.891,114,1.704,115,3.235,116,4.01,117,2.033,118,2.033,119,3.164,120,1.558,121,4.065,122,2.718,123,1.763,124,1.526,125,3.897,126,3.435,127,3.87,128,2.718,129,2.426,130,2.718,131,2.718,132,2.426,133,2.426,134,2.718,135,2.914,136,2.718,137,2.033,138,2.718,139,2.954,140,2.772,141,2.718,142,2.718,143,2.718,144,2.954,145,3.162,146,3.018,147,4.533,148,3.162,149,2.033,150,4.975,151,1.654,152,2.718,153,2.033,154,2.718,155,2.718,156,2.426,157,2.718,158,2.718,159,2.426,160,2.207,161,3.675,162,2.426,163,1.33,164,2.772,165,3.162,166,3.162,167,1.888,168,3.657,169,3.162,170,2.849,171,4.277,172,4.975,173,4.533,174,2.207,175,2.706,176,3.661,177,3.162,178,3.162,179,0.848,180,2.772,181,3.205,182,3.162,183,4.065,184,3.162,185,3.163,186,2.207,187,1.392,188,2.426,189,3.162,190,2.718,191,3.162,192,0.932,193,4.533,194,2.207,195,4.533,196,5.299,197,3.162,198,2.426,199,1.471,200,4.04,201,4.891,202,2.207,203,3.028,204,3.721,205,3.162,206,4.44,207,4.533,208,2.207,209,2.718,210,1.168,211,3.162,212,1.654,213,2.426,214,3.162,215,2.033,216,3.162,217,3.164,218,1.888,219,2.954,220,2.706,221,2.718,222,2.718,223,3.162,224,2.718,225,3.162,226,2.426,227,1.471,228,2.426,229,2.718,230,0.011,231,0.241,232,0.932,233,0.932,234,1.337,235,0.581,236,0.581,237,0.48,238,0.932,239,0.48,240,0.581,241,0.48,242,0.581,243,0.48,244,1.337,245,0.457,246,0.932,247,0.48,248,0.581,249,0.48,250,0.457,251,0.528,252,0.48,253,0.581,254,0.48,255,0.581,256,0.48,257,0.528,258,0.581,259,0.457,260,0.581,261,0.457,262,0.48,263,0.554,264,0.48,265,0.581,266,0.48,267,0.581,268,0.457,269,0.48,270,0.581,271,0.504,272,0.581,273,0.008]],["title/modules/AboutModule.html",[274,0.251,275,2.372]],["body/modules/AboutModule.html",[0,0.126,1,1.63,2,0.211,3,0.184,7,0.158,9,0.294,11,1.522,36,0.52,39,0.019,77,0.378,78,0.211,81,0.231,82,0.107,90,1.54,179,1.272,192,1.399,230,0.014,231,0.581,273,0.014,274,0.479,275,4.738,276,1.334,277,2.114,278,1.468,279,4.078,280,4.078,281,4.078,282,4.616,283,1.934,284,1.54,285,4.745,286,1.934,287,2.621,288,1.194,289,1.585,290,2.133,291,1.54,292,1.675,293,2.133,294,1.617,295,1.334,296,2.621,297,0.999,298,2.485,299,2.621,300,1.979,301,1.979,302,2.359,303,1.979,304,4.078,305,1.979,306,1.979,307,1.934,308,2.088,309,1.879,310,4.078,311,4.078,312,4.745]],["title/modules/AboutRoutingModule.html",[274,0.251,282,2.372]],["body/modules/AboutRoutingModule.html",[0,0.125,1,1.527,2,0.241,3,0.21,7,0.18,39,0.019,43,3.523,75,1.524,77,0.358,78,0.241,79,1.524,81,0.251,82,0.123,99,1.677,230,0.016,273,0.016,274,0.497,282,4.155,288,1.086,289,1.259,292,1.817,311,4.66,313,5.422,314,2.314,315,4.66,316,4.159,317,2.836,318,4.66]],["title/components/AppComponent.html",[0,0.072,237,0.899]],["body/components/AppComponent.html",[0,0.138,1,0.832,2,0.167,3,0.146,4,1.109,5,1.109,6,1.109,7,0.125,9,0.233,10,1.486,11,0.961,12,1.007,13,1.661,15,2.303,16,1.109,17,2.245,18,1.509,20,1.509,22,0.717,23,1.077,26,2.338,27,2.349,28,1.583,30,2.472,33,1.509,36,0.57,38,1.221,39,0.019,40,1.225,41,1.108,42,0.961,45,1.926,46,2.676,49,1.439,52,1.372,53,1.509,55,2.252,69,2.02,71,1.832,73,0.916,77,0.292,78,0.167,80,1.346,81,0.146,82,0.085,87,1.489,88,1.489,89,1.057,99,1.163,110,1.008,112,3.726,113,0.775,114,1.188,124,0.961,163,1.008,164,2.677,167,3.054,210,1.109,212,2.677,227,2.38,230,0.012,231,0.461,232,1.509,233,1.509,234,1.841,235,1.109,236,1.109,237,1.521,238,1.509,239,0.916,240,1.109,241,0.916,242,1.109,243,0.916,244,1.841,245,0.873,246,1.509,247,0.916,248,1.109,249,0.916,250,0.873,251,1.008,252,0.916,253,1.109,254,0.916,255,1.109,256,0.916,257,1.008,258,1.109,259,0.873,260,1.109,261,0.873,262,0.916,263,1.057,264,0.916,265,1.109,266,0.916,267,1.109,268,0.873,269,0.916,270,1.109,271,0.961,272,1.109,273,0.012,295,1.755,317,2.677,319,3.233,320,2.903,321,3.572,322,3.572,323,3.925,324,2.426,325,3.289,326,5.117,327,5.117,328,3.756,329,2.604,330,3.761,331,5.79,332,3.843,333,5.117,334,3.761,335,3.761,336,3.761,337,1.832,338,5.117,339,1.163,340,3.289,341,3.761,342,3.761,343,3.761,344,3.761,345,3.761,346,3.761,347,3.761]],["title/modules/AppModule.html",[274,0.251,348,2.372]],["body/modules/AppModule.html",[0,0.087,2,0.198,3,0.173,7,0.149,12,0.838,39,0.019,77,0.378,78,0.198,81,0.222,82,0.101,179,1.198,192,1.318,230,0.014,231,0.548,237,1.829,259,1.691,273,0.014,274,0.431,275,4.545,276,1.256,277,2.056,278,1.959,283,1.862,284,1.451,287,2.524,288,1.149,289,1.331,292,1.612,297,0.941,348,4.958,349,3.841,350,3.841,351,3.841,352,3.841,353,4.545,354,4.442,355,4.545,356,4.545,357,4.442,358,4.469,359,5.735,360,3.428,361,3.119,362,4.399,363,4.469,364,4.469,365,4.469,366,3.841,367,3.119,368,3.841,369,4.469,370,4.469,371,4.469,372,4.469,373,4.469,374,4.469]],["title/modules/AppRoutingModule.html",[274,0.251,353,2.372]],["body/modules/AppRoutingModule.html",[0,0.132,2,0.232,3,0.203,7,0.174,12,0.765,39,0.019,43,3.352,75,1.472,77,0.354,78,0.232,79,1.472,81,0.246,82,0.118,99,1.62,112,3.126,113,0.729,230,0.015,259,1.58,273,0.015,274,0.463,288,1.049,289,1.216,292,1.78,314,2.266,316,5.423,317,2.74,325,3.367,353,4.07,366,4.502,367,3.655,368,4.502,375,5.237,376,5.237,377,5.237,378,5.237,379,4.502,380,3.655,381,4.502,382,4.017,383,5.237]],["title/components/ButtonBarComponent.html",[0,0.072,239,0.899]],["body/components/ButtonBarComponent.html",[0,0.124,1,0.641,2,0.129,3,0.112,4,0.854,5,0.854,6,0.854,7,0.096,9,0.179,10,1.288,11,1.512,12,0.865,16,0.854,17,2.185,18,1.254,20,1.254,22,0.552,23,0.896,33,1.486,36,0.625,39,0.019,40,0.896,41,1.354,42,1.42,49,1.196,60,2.218,65,1.515,66,2.225,69,2.346,71,2.581,72,2.444,73,1.83,75,2.027,77,0.253,78,0.129,81,0.112,82,0.065,89,0.814,110,0.776,113,0.818,114,1.436,115,2.095,120,2.095,124,0.74,144,4.083,151,2.906,153,3.571,161,3.095,163,0.776,179,1.14,185,3.692,187,2.722,198,3.263,200,3.877,203,2.225,210,0.854,213,3.263,230,0.01,231,0.355,232,1.254,233,1.254,234,1.638,235,0.854,236,0.854,237,0.706,238,1.254,239,1.353,240,0.854,241,1.441,242,0.854,243,0.706,244,1.638,245,0.672,246,1.254,247,0.706,248,0.854,249,0.706,250,0.672,251,1.586,252,0.706,253,0.854,254,0.706,255,0.854,256,0.706,257,0.776,258,0.854,259,0.672,260,0.854,261,0.672,262,0.706,263,0.814,264,0.706,265,0.854,266,0.706,267,0.854,268,0.672,269,0.706,270,0.854,271,0.74,272,0.854,273,0.013,297,0.61,320,1.978,321,2.969,384,5.53,385,5.53,386,2.49,387,4.254,388,4.569,389,2.969,390,2.095,391,2.969,392,3.656,393,2.539,394,3.263,395,4.254,396,4.254,397,4.333,398,4.333,399,4.333,400,3.867,401,4.333,402,5.041,403,5.086,404,5.086,405,5.041,406,5.041,407,5.041,408,3.571,409,4.254,410,2.897,411,2.897,412,2.897,413,5.452,414,2.897,415,2.897,416,2.897,417,2.897,418,2.897,419,2.897,420,3.571,421,3.657,422,2.897,423,3.657,424,3.263,425,2.897,426,3.263,427,3.263,428,2.897,429,2.225,430,2.736,431,2.897,432,5.555,433,1.515,434,2.897,435,2.49]],["title/components/ButtonsComponent.html",[0,0.072,241,0.899]],["body/components/ButtonsComponent.html",[0,0.131,1,0.551,2,0.111,3,0.097,4,0.734,5,0.734,6,0.734,7,0.083,9,0.154,10,1.177,11,0.636,12,0.81,13,1.233,15,1.823,16,0.734,17,2.144,18,1.12,20,1.12,22,0.475,23,0.8,26,2.093,27,2.2,28,1.175,30,2.04,33,1.12,36,0.603,38,1.672,39,0.019,40,1.231,41,1.224,42,1.316,45,1.429,46,2.417,49,1.068,52,1.487,53,1.636,55,1.671,60,2.973,69,2.229,71,2.346,73,1.763,74,1.429,75,1.842,76,1.429,77,0.314,78,0.111,79,0.7,80,0.891,81,0.097,82,0.056,87,0.986,88,0.986,89,1.448,99,1.594,105,1.766,110,0.667,113,0.858,114,1.568,115,3.088,120,2.879,124,0.636,144,3.714,146,1.871,161,3.279,163,0.667,168,3.489,170,3.142,176,3.653,179,1.018,181,1.987,185,3.489,198,2.914,203,3.058,204,2.442,210,1.358,213,3.952,215,3.312,230,0.009,231,0.305,232,1.12,233,1.12,234,1.519,235,0.734,236,0.734,237,0.607,238,1.12,239,0.607,240,0.734,241,1.255,242,0.734,243,0.925,244,1.519,245,0.578,246,1.12,247,0.925,248,0.734,249,0.607,250,0.578,251,1.833,252,0.607,253,0.734,254,0.607,255,0.734,256,0.607,257,0.667,258,0.734,259,0.578,260,0.734,261,0.578,262,1.122,263,0.7,264,0.607,265,0.734,266,0.607,267,0.734,268,0.578,269,0.607,270,0.734,271,0.636,272,0.734,273,0.009,297,0.524,317,3.181,320,2.396,324,1.921,329,2.149,391,2.651,392,3.495,397,3.958,398,3.958,399,3.958,400,3.532,401,3.958,408,3.312,413,4.484,426,4.484,427,2.914,429,1.987,430,2.538,433,1.303,435,2.141,436,2.141,437,3.798,438,3.798,439,3.798,440,3.798,441,3.798,442,2.141,443,3.952,444,2.675,445,3.798,446,2.49,447,2.49,448,2.49,449,2.49,450,2.49,451,2.49,452,2.49,453,2.49,454,2.49,455,3.798,456,2.49,457,3.798,458,2.49,459,3.798,460,2.49,461,2.914,462,2.651,463,1.987,464,2.651,465,2.442,466,3.265,467,3.265,468,3.532,469,1.91,470,1.601,471,1.987,472,1.91,473,1.601,474,1.388,475,3.952,476,2.914,477,3.958,478,2.914,479,3.265,480,2.267,481,2.49,482,2.49,483,2.49,484,2.267,485,2.141,486,2.49,487,3.798,488,3.532,489,4.605,490,3.532,491,4.605,492,4.605,493,2.49,494,2.49,495,2.49,496,2.141,497,2.49,498,1.039,499,2.49,500,2.49]],["title/components/CompleteTaskComponent.html",[0,0.072,243,0.899]],["body/components/CompleteTaskComponent.html",[0,0.126,1,0.502,2,0.101,3,0.088,4,0.669,5,0.669,6,0.669,7,0.075,9,0.219,10,1.11,11,0.58,12,0.777,13,1.147,15,1.72,16,0.669,17,2.117,18,1.042,20,1.042,22,0.432,23,1.315,26,2.329,27,2.119,28,1.093,30,1.942,33,1.042,36,0.603,38,1.41,39,0.019,40,1.119,41,1.26,42,1.11,45,1.33,46,2.351,49,0.994,52,1.675,53,1.66,55,1.555,58,1.644,60,1.911,69,1.343,73,0.552,74,2.288,75,0.638,76,0.854,77,0.305,78,0.101,80,0.812,81,0.088,82,0.051,87,0.898,88,0.898,89,0.994,99,1.093,105,1.644,108,1.671,110,0.608,111,4.244,113,0.88,114,1.766,117,2.272,124,0.58,127,3.961,163,0.608,170,3.074,171,3.422,180,3.181,183,2.711,187,0.998,199,1.055,202,3.93,203,1.849,204,2.272,206,3.331,210,0.669,227,1.644,230,0.009,231,0.278,232,1.042,233,1.042,234,1.446,235,0.669,236,0.669,237,0.552,238,1.042,239,0.552,240,0.669,241,0.552,242,0.669,243,1.194,244,1.446,245,0.526,246,1.042,247,0.552,248,0.669,249,0.552,250,0.526,251,1.164,252,0.552,253,0.669,254,0.552,255,0.669,256,0.552,257,1.164,258,0.669,259,0.526,260,0.669,261,0.526,262,0.552,263,0.638,264,0.552,265,0.669,266,0.552,267,0.669,268,0.526,269,0.552,270,0.669,271,0.58,272,0.669,273,0.009,288,0.454,289,0.526,297,0.478,324,1.811,329,2.045,337,1.265,390,2.773,392,1.265,408,3.152,426,4.319,429,2.565,430,2.415,433,1.187,462,3.422,470,4.478,480,1.354,485,3.733,490,2.711,498,2.045,501,5.344,502,1.354,503,2.272,504,2.272,505,4.215,506,6.081,507,4.903,508,6.081,509,3.909,510,3.038,511,3.534,512,2.592,513,2.592,514,1.74,515,2.792,516,3.152,517,4.51,518,1.911,519,2.158,520,2.734,521,3.534,522,1.458,523,1.95,524,1.95,525,1.74,526,3.422,527,3.534,528,2.712,529,2.268,530,3.038,531,3.038,532,3.038,533,2.268,534,2.268,535,2.268,536,3.534,537,2.268,538,3.038,539,4.215,540,4.343,541,1.95,542,3.361,543,2.467,544,3.761,545,1.95,546,4.319,547,1.95,548,2.268,549,3.534,550,3.534,551,2.467,552,3.534,553,3.038,554,2.467,555,3.534,556,2.268,557,2.268,558,2.272,559,0.669,560,2.711,561,0.998,562,1.74,563,1.458,564,1.187,565,1.354,566,1.354,567,1.74,568,1.74,569,1.583,570,2.268,571,2.268,572,2.268,573,2.268,574,2.268,575,3.038,576,1.74,577,2.268,578,1.95,579,2.268,580,3.534,581,3.534,582,2.272,583,2.268,584,2.268,585,2.268,586,2.268,587,1.74,588,3.534,589,3.534,590,3.534,591,1.95,592,1.74,593,1.74,594,2.268,595,2.268,596,2.268]],["title/modules/CompleteTaskModule.html",[274,0.251,597,2.372]],["body/modules/CompleteTaskModule.html",[0,0.124,2,0.203,3,0.177,7,0.152,9,0.283,36,0.508,39,0.019,77,0.377,78,0.203,79,1.285,81,0.226,82,0.103,90,1.484,113,0.67,114,1.35,179,1.225,192,1.348,230,0.014,231,0.56,243,1.782,273,0.014,274,0.474,276,1.285,277,2.078,278,1.414,283,1.889,284,1.484,286,1.889,287,2.56,288,1.166,289,1.564,290,2.083,291,1.484,292,1.636,293,2.083,294,1.557,295,1.285,296,2.56,297,0.962,298,2.427,299,2.56,300,1.906,301,1.906,302,2.534,303,1.906,305,2.427,306,1.906,307,2.078,308,2.011,309,1.81,314,2.083,339,1.8,469,3.505,470,3.74,471,2.391,501,3.505,561,2.011,597,4.572,598,3.928,599,3.928,600,3.19,601,3.244,602,3.244,603,3.74,604,3.473,605,3.74,606,3.74,607,3.74,608,3.74,609,2.548,610,2.938,611,3.928]],["title/components/CompleteTasksTableComponent.html",[0,0.072,245,0.856]],["body/components/CompleteTasksTableComponent.html",[0,0.133,1,0.968,2,0.194,3,0.17,4,1.291,5,1.291,6,1.291,7,0.146,9,0.271,10,1.119,11,1.119,12,1.003,16,1.291,17,2.274,18,1.669,20,1.669,22,0.834,23,1.192,36,0.382,39,0.019,40,1.192,41,0.834,49,1.591,65,2.29,66,2.961,73,1.066,74,2.13,77,0.284,78,0.194,81,0.17,82,0.099,110,1.84,113,0.881,114,1.738,124,1.119,163,1.173,210,1.291,230,0.014,231,0.536,232,1.669,233,1.669,234,1.955,235,1.291,236,1.291,237,1.066,238,1.669,239,1.066,240,1.291,241,1.066,242,1.291,243,1.066,244,1.955,245,1.539,246,1.669,247,1.066,248,1.291,249,1.066,250,1.016,251,1.173,252,1.066,253,1.291,254,1.066,255,1.291,256,1.066,257,1.173,258,1.291,259,1.016,260,1.291,261,1.016,262,1.066,263,1.231,264,1.066,265,1.291,266,1.066,267,1.291,268,1.016,269,1.066,270,1.291,271,1.829,272,1.291,273,0.014,612,4.865,613,3.358,614,3.95,615,4.865,616,4.865,617,6.63,618,3.763,619,3.95,620,3.056,621,3.056,622,4.378]],["title/components/ConfirmDeleteTaskComponent.html",[0,0.072,247,0.899]],["body/components/ConfirmDeleteTaskComponent.html",[0,0.133,1,0.615,2,0.124,3,0.108,4,0.82,5,0.82,6,0.82,7,0.093,9,0.172,10,1.258,11,0.711,12,0.85,13,1.34,15,1.949,16,0.82,17,2.174,18,1.217,20,1.217,22,0.53,23,0.869,26,1.95,27,2.294,28,1.277,30,2.157,33,1.217,36,0.596,38,0.903,39,0.019,40,1.037,41,1.162,42,0.711,45,1.554,46,2.492,49,1.161,52,1.46,53,1.606,55,1.817,60,2.397,69,1.523,73,0.678,74,1.554,75,1.161,77,0.306,78,0.124,80,0.996,81,0.108,82,0.063,87,1.102,88,1.102,89,1.384,99,1.277,105,1.92,108,1.407,110,0.746,113,0.887,114,0.958,115,3.82,117,3.165,124,0.711,149,1.788,153,1.788,163,0.746,170,3.218,176,2.302,192,1.217,210,2.097,230,0.01,231,0.341,232,1.217,233,1.217,234,1.606,235,0.82,236,0.82,237,0.678,238,1.217,239,0.678,240,0.82,241,0.678,242,0.82,243,0.678,244,1.606,245,0.646,246,1.217,247,1.327,248,0.82,249,0.678,250,0.646,251,1.32,252,0.678,253,0.82,254,0.678,255,0.82,256,0.678,257,1.32,258,0.82,259,0.646,260,0.82,261,0.646,262,0.678,263,0.782,264,0.678,265,0.82,266,0.678,267,0.82,268,0.646,269,0.678,270,0.82,271,0.711,272,0.82,273,0.01,297,0.586,324,2.054,329,2.272,337,1.478,429,2.16,430,2.425,433,1.455,473,4.449,480,1.661,490,3.167,496,5.24,502,1.661,503,2.654,504,2.654,509,4.167,512,2.939,513,2.939,514,2.134,515,3.165,516,3.502,518,2.166,519,2.397,520,2.935,522,1.788,523,2.391,524,2.391,526,3.802,528,1.949,541,3.549,542,3.869,559,0.82,562,2.134,563,1.788,564,1.455,565,1.661,566,1.661,567,2.134,568,2.134,569,3.436,575,3.549,582,1.788,587,2.134,623,5.308,624,2.782,625,2.134,626,2.391,627,2.782,628,2.782,629,4.129,630,2.782,631,2.782,632,2.782,633,2.391,634,2.391,635,1.661,636,2.782,637,2.134,638,2.782,639,2.782,640,2.782,641,2.782,642,4.129,643,4.129,644,2.782,645,2.782,646,4.129,647,3.167,648,4.129]],["title/modules/ConfirmDeleteTaskModule.html",[274,0.251,649,2.372]],["body/modules/ConfirmDeleteTaskModule.html",[0,0.125,2,0.207,3,0.181,7,0.155,9,0.288,36,0.514,39,0.019,77,0.377,78,0.207,79,1.309,81,0.228,82,0.105,90,1.511,113,0.678,115,3.52,179,1.248,192,1.373,230,0.014,231,0.57,247,1.789,273,0.014,274,0.476,276,1.309,277,2.096,278,1.44,283,1.911,284,1.511,286,1.911,287,2.59,288,1.18,289,1.575,290,2.107,291,1.511,292,1.655,293,2.107,294,1.587,295,1.309,296,2.59,297,0.98,298,2.455,299,2.59,300,1.942,301,1.942,302,2.331,303,1.942,305,1.942,306,1.942,307,1.911,308,2.049,309,1.843,314,2.107,339,1.821,471,2.436,472,3.571,473,3.784,561,2.049,600,3.25,601,3.282,602,3.282,604,3.514,623,3.571,649,4.594,650,4.002,651,4.002,652,2.993,653,4.656]],["title/injectables/ConsoleLoggerService.html",[559,1.088,654,2.575]],["body/injectables/ConsoleLoggerService.html",[2,0.267,3,0.259,7,0.222,9,0.331,10,1.818,12,0.586,13,1.301,22,0.764,23,1.349,28,2.123,36,0.599,38,1.301,39,0.019,40,1.405,41,1.271,42,1.535,52,1.878,53,1.575,77,0.268,78,0.178,81,0.155,82,0.091,99,1.652,137,4.778,146,2.631,187,2.819,230,0.013,273,0.013,390,2.631,466,4.591,498,2.228,518,2.35,528,2.379,539,5.899,543,3.728,559,1.771,635,3.188,654,3.728,655,5.118,656,3.075,657,4.591,658,5.459,659,5.341,660,5.341,661,7.116,662,4.118,663,4.591,664,5.341,665,4.097,666,4.591,667,4.591,668,4.472,669,4.914,670,4.591,671,4.097,672,5.374,673,4.008,674,3.728,675,4.097,676,3.075,677,4.008,678,4.008,679,4.008,680,4.472,681,4.008,682,4.008,683,4.118,684,4.008,685,4.008,686,4.008,687,3.075,688,5.118,689,3.445,690,6.007,691,4.008,692,4.008,693,4.008,694,4.008,695,4.008,696,4.008,697,4.008]],["title/modules/CoreModule.html",[274,0.251,354,2.372]],["body/modules/CoreModule.html",[2,0.195,3,0.17,7,0.146,9,0.272,12,0.918,33,1.296,36,0.495,39,0.019,42,1.45,52,1.521,77,0.382,78,0.195,79,1.236,81,0.22,82,0.099,89,1.236,179,1.843,203,2.3,230,0.014,273,0.014,274,0.428,288,1.259,289,1.459,290,2.25,291,1.427,292,1.867,293,2.25,294,1.498,295,1.236,297,0.926,314,2.25,325,3.648,328,3.702,332,3.164,339,2.054,348,4.269,354,4.605,360,3.372,362,4.353,444,1.934,463,2.3,519,2.497,520,2.044,551,3.068,614,3.068,635,2.624,647,3.372,654,3.961,665,3.372,687,3.372,698,4.396,699,5.675,700,3.648,701,4.353,702,5.675,703,6.284,704,3.778,705,4.353,706,6.284,707,4.396,708,4.396,709,3.961,710,4.396,711,4.396,712,4.396,713,4.396,714,4.396,715,4.396,716,4.396,717,3.778,718,3.778,719,3.778,720,3.068,721,3.372,722,3.778,723,3.778,724,3.778]],["title/components/CreateTaskComponent.html",[0,0.072,249,0.899]],["body/components/CreateTaskComponent.html",[0,0.131,1,0.658,2,0.132,3,0.115,4,0.877,5,0.877,6,0.877,7,0.099,9,0.269,10,1.945,11,0.76,12,0.874,13,1.408,15,2.027,16,0.877,17,2.191,18,1.279,20,1.279,22,0.567,23,0.913,26,2.235,27,2.35,28,1.342,30,2.227,33,1.279,36,0.588,38,0.966,39,0.019,40,1.184,41,1.14,42,0.76,45,1.632,46,2.535,49,1.219,52,1.508,53,1.659,55,1.908,65,1.556,66,2.269,69,2.044,71,1.553,72,1.908,73,1.57,75,1.219,76,2.117,77,0.323,78,0.132,81,0.115,82,0.067,87,1.178,88,1.178,89,1.681,94,1.383,99,1.342,105,2.017,108,2.128,110,0.797,113,0.872,114,1.007,124,0.76,146,2.136,163,0.797,170,3.183,175,1.775,180,2.269,181,1.556,185,3.727,210,0.877,230,0.011,231,0.364,232,1.279,233,1.279,234,1.659,235,0.877,236,0.877,237,0.724,238,1.279,239,0.724,240,0.877,241,0.724,242,0.877,243,0.724,244,1.659,245,0.69,246,1.279,247,0.724,248,0.877,249,1.37,250,0.69,251,0.797,252,0.724,253,0.877,254,0.724,255,0.877,256,0.724,257,0.797,258,0.877,259,0.69,260,0.877,261,0.69,262,0.724,263,0.836,264,0.724,265,0.877,266,1.709,267,0.877,268,0.69,269,0.724,270,0.877,271,0.76,272,0.877,273,0.011,297,0.626,324,2.135,329,2.346,337,1.832,392,2.418,430,2.136,433,1.556,484,2.589,502,1.775,503,2.788,504,2.788,509,4.247,512,3.055,513,3.055,515,2.788,516,3.616,518,2.252,519,2.475,520,2.998,526,3.027,563,1.912,564,1.556,565,1.775,566,1.775,569,2.076,582,1.912,725,5.251,726,4.4,727,3.728,728,3.327,729,5.625,730,2.974,731,3.728,732,2.557,733,2.557,734,4.337,735,2.974,736,2.974,737,2.974,738,2.557,739,2.557,740,2.557,741,1.775,742,2.281,743,2.557,744,2.974,745,2.974,746,2.974,747,2.974,748,2.076,749,2.974,750,2.557,751,2.974,752,2.557,753,2.974,754,2.974,755,2.974,756,2.974,757,2.974,758,2.974,759,4.337]],["title/modules/CreateTaskModule.html",[274,0.251,760,2.372]],["body/modules/CreateTaskModule.html",[0,0.129,2,0.197,3,0.172,7,0.148,9,0.275,12,0.834,36,0.498,39,0.019,48,3.985,77,0.378,78,0.197,79,1.248,81,0.221,82,0.1,90,1.441,113,0.727,120,2.812,179,1.19,192,1.309,230,0.014,231,0.544,249,1.771,273,0.014,274,0.48,276,1.248,277,2.049,278,1.373,283,1.853,284,1.441,286,1.853,287,2.513,288,1.144,289,1.547,290,2.044,291,1.441,292,1.605,293,2.044,294,1.512,295,1.248,296,2.513,297,0.934,298,1.851,299,2.513,300,1.851,301,2.382,302,2.5,303,2.382,305,1.851,306,1.851,307,1.853,308,1.953,309,1.757,314,2.044,339,1.953,471,2.322,561,1.953,600,3.098,601,3.183,602,3.183,603,3.67,604,3.408,605,3.67,606,3.67,607,3.67,720,3.098,725,3.404,726,3.67,741,2.649,760,4.675,761,3.815,762,3.815,763,3.815,764,3.935,765,2.853,766,4.438,767,3.404,768,3.404]],["title/components/EditTaskComponent.html",[0,0.072,250,0.856]],["body/components/EditTaskComponent.html",[0,0.128,1,0.351,2,0.07,3,0.062,4,0.468,5,0.468,6,0.468,7,0.053,9,0.164,10,0.871,11,1.56,12,0.647,13,0.86,15,1.35,16,0.468,17,1.993,18,0.781,20,0.781,22,1.013,23,1.007,26,2.143,27,2.001,28,0.819,30,1.576,33,0.781,35,3.053,36,0.598,38,0.86,39,0.019,40,0.838,41,1.217,42,0.677,43,1.679,45,1.909,46,1.909,49,0.745,52,1.604,53,1.568,57,0.947,60,1.165,63,2.277,65,1.386,66,1.783,69,2.076,71,1.425,72,2.43,73,1.388,74,2.001,75,1.119,76,1.283,77,0.311,78,0.07,79,0.446,80,0.568,81,0.062,82,0.115,87,0.628,88,1.049,89,1.119,90,0.86,94,2.058,99,1.645,105,1.851,108,1.629,110,0.425,112,1.581,113,0.882,114,1.417,121,4.236,124,1.222,125,2.277,126,3.342,127,1.477,128,2.277,129,2.032,133,1.217,146,2.179,153,1.703,162,3.891,163,0.425,168,2.035,170,2.65,180,1.386,181,1.783,185,3.173,186,1.108,187,2.43,199,3.069,201,1.217,210,1.005,212,2.501,218,2.641,219,2.666,220,2.854,230,0.006,231,0.194,232,0.781,233,0.781,234,1.174,235,0.468,236,0.468,237,0.387,238,0.781,239,1.078,240,0.468,241,0.387,242,0.468,243,0.387,244,1.174,245,0.368,246,0.781,247,0.387,248,0.468,249,0.387,250,0.924,251,1.824,252,0.387,253,0.468,254,0.387,255,0.468,256,0.387,257,1.36,258,0.468,259,0.368,260,0.468,261,0.368,262,0.645,263,0.745,264,0.387,265,0.468,266,1.425,267,0.468,268,0.368,269,0.387,270,0.468,271,0.406,272,0.468,273,0.006,274,0.108,288,0.318,289,0.368,291,0.515,297,0.334,307,2.142,317,2.781,324,1.422,328,2.219,329,1.66,331,3.421,337,1.584,382,1.217,385,1.217,388,3.417,389,1.108,390,1.96,392,1.477,393,1.581,400,3.053,421,2.277,427,4.371,429,1.386,430,2.179,433,0.83,443,3.053,444,2.232,461,1.217,463,1.783,464,3.088,468,2.032,471,0.83,474,0.885,475,2.032,476,1.217,477,2.277,478,1.217,479,1.364,480,2.035,484,2.641,498,0.662,502,0.947,503,1.703,504,1.703,509,3.417,512,2.035,513,2.035,518,1.5,519,1.751,520,2.472,525,1.217,528,2.496,538,2.93,545,1.364,547,1.364,558,1.703,563,1.02,564,0.83,565,0.947,566,0.947,576,4.371,578,1.364,582,1.703,625,1.217,662,1.703,683,1.02,700,1.02,727,3.421,728,2.032,733,1.364,741,0.947,742,1.217,743,1.364,748,1.849,769,5.284,770,2.277,771,4.781,772,3.98,773,4.781,774,3.98,775,4.781,776,4.781,777,3.803,778,3.98,779,3.98,780,2.649,781,3.98,782,1.587,783,3.98,784,2.649,785,2.649,786,1.587,787,2.649,788,2.277,789,1.587,790,2.277,791,2.649,792,2.277,793,1.587,794,2.277,795,2.649,796,1.587,797,1.587,798,2.277,799,1.587,800,1.587,801,3.053,802,1.587,803,1.587,804,2.649,805,1.587,806,1.587,807,1.587,808,1.587,809,3.409,810,4.425,811,1.587,812,1.587,813,1.587,814,2.649,815,1.587,816,1.96,817,2.649,818,1.217,819,1.217,820,1.364,821,1.587,822,2.649,823,3.409,824,1.364,825,1.587,826,1.587,827,1.587,828,3.409,829,1.587,830,1.108,831,1.587,832,1.587,833,1.364,834,1.108,835,1.587,836,1.587,837,1.587,838,1.587,839,1.587,840,1.587,841,1.587,842,1.587,843,2.93,844,1.587,845,1.587,846,1.587,847,2.649,848,1.217,849,1.587,850,2.649,851,2.649,852,2.649,853,2.649,854,1.587,855,1.587,856,1.587,857,1.587,858,1.587,859,1.587,860,1.587,861,1.587,862,1.587,863,1.587,864,1.587,865,1.364,866,1.364,867,1.364,868,1.364,869,1.587,870,1.364,871,1.217,872,1.364,873,1.587,874,1.587,875,1.587,876,1.587,877,1.587,878,1.587,879,1.587,880,2.93,881,1.587,882,1.587,883,3.98,884,1.364,885,1.587,886,2.649,887,1.587,888,1.587,889,1.364,890,1.587,891,1.587,892,3.409,893,3.98,894,4.425,895,3.421,896,4.425,897,1.587,898,1.587,899,1.364,900,1.587,901,1.587,902,1.587,903,1.587,904,1.364,905,1.217,906,1.587,907,1.364,908,1.587,909,1.364,910,1.587,911,1.364,912,1.587,913,1.364,914,1.587,915,1.587,916,1.364,917,1.587,918,1.364,919,1.587,920,2.649,921,1.587,922,1.587,923,1.587,924,2.649]],["title/modules/EditTaskModule.html",[274,0.251,925,2.372]],["body/modules/EditTaskModule.html",[0,0.116,2,0.177,3,0.154,7,0.132,9,0.246,12,0.581,36,0.464,39,0.019,73,0.969,77,0.38,78,0.177,79,1.118,81,0.206,82,0.09,90,1.292,113,0.689,179,1.712,192,1.173,230,0.013,231,0.488,250,1.649,251,1.604,262,1.731,263,1.118,273,0.013,274,0.453,276,1.118,277,1.943,278,1.231,283,1.725,284,1.292,286,1.725,287,2.339,288,1.065,289,1.483,290,1.903,291,1.292,292,1.494,293,1.903,294,1.356,295,1.118,296,2.339,297,0.838,298,2.217,299,2.339,300,1.66,301,1.66,302,2.37,303,1.66,305,2.217,306,1.66,307,1.943,308,1.751,309,1.575,314,1.903,339,1.644,388,2.558,471,2.78,561,1.751,600,2.777,601,2.963,602,2.963,603,3.416,604,3.172,605,3.416,606,3.416,607,3.416,608,3.416,609,2.218,610,2.558,611,3.42,652,3.416,724,3.42,741,2.375,764,3.818,765,3.416,767,3.052,769,3.052,819,3.052,925,4.838,926,3.42,927,3.42,928,3.42,929,3.42,930,4.088,931,4.088,932,4.495,933,4.569,934,4.077,935,5.315,936,3.71,937,4.569,938,3.71,939,3.052,940,3.42,941,3.42,942,3.42,943,3.979,944,2.777]],["title/components/FooterComponent.html",[0,0.072,252,0.899]],["body/components/FooterComponent.html",[0,0.141,1,1.038,2,0.208,3,0.182,4,1.385,5,1.385,6,1.385,7,0.156,9,0.291,10,1.656,11,1.2,12,1.075,16,1.385,17,2.287,18,1.745,20,1.745,39,0.019,40,1.246,49,1.664,73,1.144,77,0.235,78,0.208,81,0.182,82,0.106,110,1.259,113,0.824,114,1.374,124,1.2,163,1.259,210,1.385,230,0.014,231,0.575,232,1.745,233,1.745,234,2.007,235,1.385,236,1.385,237,1.144,238,1.745,239,1.144,240,1.385,241,1.144,242,1.385,243,1.144,244,2.007,245,1.09,246,1.745,247,1.144,248,1.385,249,1.144,250,1.09,251,1.259,252,1.658,253,1.385,254,1.144,255,1.385,256,1.144,257,1.259,258,1.385,259,1.09,260,1.385,261,1.09,262,1.144,263,1.32,264,1.144,265,1.385,266,1.144,267,1.385,268,1.09,269,1.144,270,1.385,271,1.2,272,1.385,273,0.014,322,4.75,945,4.037,946,5.919,947,5.919,948,5.919]],["title/modules/FooterModule.html",[274,0.251,355,2.372]],["body/modules/FooterModule.html",[0,0.12,2,0.223,3,0.195,7,0.167,9,0.311,36,0.538,39,0.019,77,0.365,78,0.223,79,1.411,81,0.27,82,0.113,179,1.345,192,1.48,230,0.015,231,0.615,252,1.87,273,0.015,274,0.487,276,1.411,277,2.168,278,1.552,283,2.002,284,1.629,287,2.714,288,1.236,289,1.432,290,2.208,291,1.629,292,1.734,293,2.208,294,1.71,295,1.411,314,2.208,322,4.305,355,4.741,949,4.313,950,4.313,951,4.313,952,5.017,953,5.017]],["title/components/HeaderComponent.html",[0,0.072,254,0.899]],["body/components/HeaderComponent.html",[0,0.136,1,0.614,2,0.123,3,0.108,4,0.819,5,0.819,6,0.819,7,0.092,9,0.255,10,1.257,11,0.71,12,0.967,13,1.339,15,1.947,16,0.819,17,2.174,18,1.216,20,1.605,22,0.529,23,0.868,27,2.188,28,1.276,30,2.155,33,0.819,36,0.588,38,1.767,39,0.019,40,1.146,41,1.202,42,1.054,45,2.048,46,2.491,49,1.53,52,1.459,53,1.605,55,1.815,58,2.287,65,1.453,66,2.157,68,3.544,69,2.215,71,1.948,72,1.815,73,1.198,74,2.293,76,1.851,77,0.273,78,0.123,80,0.994,81,0.108,82,0.063,84,1.938,87,1.1,88,1.1,89,0.781,94,2.833,99,0.859,105,1.292,108,2.076,109,4.175,110,0.744,113,0.701,114,0.957,123,3.035,124,0.71,132,3.163,135,3.738,139,3.69,140,3.619,151,2.847,161,2.157,163,1.874,164,3.524,167,3.249,200,4.701,210,0.819,212,3.524,227,2.531,228,5.307,230,0.01,231,0.34,232,1.216,233,1.216,234,1.605,235,0.819,236,0.819,237,0.676,238,1.216,239,0.676,240,0.819,241,0.676,242,0.819,243,0.676,244,1.605,245,0.645,246,1.216,247,0.676,248,0.819,249,0.676,250,0.645,251,0.744,252,0.676,253,0.819,254,1.326,255,0.819,256,0.676,257,0.744,258,0.819,259,0.645,260,0.819,261,0.645,262,0.676,263,0.781,264,0.676,265,0.819,266,0.676,267,0.819,268,0.645,269,1.416,270,0.819,271,0.71,272,0.819,273,0.01,307,1.339,309,1.633,320,1.918,324,2.051,329,2.27,393,2.461,413,3.163,420,3.499,444,2.681,463,2.157,465,3.738,467,3.544,474,1.548,498,1.158,662,2.651,954,2.387,955,3.163,956,3.544,957,5.569,958,3.544,959,4.175,960,3.163,961,3.69,962,4.998,963,4.123,964,4.123,965,3.738,966,6.307,967,5.443,968,5.443,969,4.123,970,2.777,971,4.123,972,2.777,973,2.777,974,4.393,975,4.123,976,2.777,977,4.123,978,2.777,979,2.777,980,2.777,981,4.175,982,2.777,983,2.777,984,4.123,985,2.13,986,2.387,987,2.777,988,4.123,989,1.938,990,2.651,991,4.918,992,2.777,993,2.777,994,2.777]],["title/modules/HeaderModule.html",[274,0.251,356,2.372]],["body/modules/HeaderModule.html",[0,0.124,2,0.202,3,0.176,7,0.151,9,0.282,12,0.665,36,0.506,39,0.019,77,0.377,78,0.202,79,1.279,81,0.261,82,0.103,90,1.477,179,1.22,192,1.342,212,3.035,230,0.014,231,0.558,254,1.849,273,0.014,274,0.484,276,1.279,277,2.074,278,1.408,283,1.883,284,1.477,286,1.883,287,2.553,288,1.163,289,1.561,290,2.077,291,1.477,292,1.631,293,2.077,294,1.551,295,1.279,296,2.553,297,0.958,298,1.898,299,2.553,300,1.898,301,1.898,302,2.297,303,1.898,305,1.898,306,1.898,307,1.883,308,2.002,309,1.802,314,2.077,339,1.795,356,4.744,936,4.05,985,3.491,995,3.912,996,3.912,997,3.912,998,3.912,999,4.567,1000,4.551,1001,5.802,1002,4.551,1003,4.987,1004,4.551,1005,4.551,1006,4.551]],["title/injectables/HttpService.html",[559,1.088,709,2.575]],["body/injectables/HttpService.html",[2,0.121,3,0.157,7,0.09,9,0.388,12,0.397,22,0.518,23,0.854,26,2.585,28,1.255,33,1.196,36,0.593,38,2.033,39,0.019,40,1.318,41,1.296,42,1.952,52,1.925,53,1.587,71,1.452,74,1.526,75,0.764,77,0.314,78,0.121,81,0.105,82,0.061,89,0.764,90,1.748,94,2.504,111,3.388,114,0.942,115,3.084,118,2.607,119,2.831,160,2.831,212,3.161,215,4.474,222,3.487,227,1.886,230,0.01,273,0.01,328,2.262,332,3.212,337,0.972,339,1.665,390,1.998,393,3.213,394,3.111,420,2.607,498,2.872,518,2.136,519,2.369,528,2.805,551,2.831,559,1.431,634,6.56,637,3.111,657,6.32,674,2.831,676,4.419,687,2.084,704,2.335,709,2.831,816,3.622,944,3.758,960,3.111,1007,2.335,1008,6.961,1009,4.056,1010,4.056,1011,5.384,1012,4.056,1013,4.056,1014,5.384,1015,3.487,1016,4.056,1017,4.056,1018,4.056,1019,4.056,1020,4.389,1021,4.056,1022,5.384,1023,6.043,1024,6.262,1025,6.262,1026,5.384,1027,2.716,1028,4.854,1029,4.056,1030,4.056,1031,2.716,1032,4.056,1033,2.716,1034,4.056,1035,2.716,1036,2.716,1037,4.635,1038,4.056,1039,2.716,1040,3.487,1041,4.056,1042,7.135,1043,2.716,1044,4.056,1045,2.716,1046,2.716,1047,4.056,1048,4.056,1049,2.716,1050,2.716,1051,2.716,1052,2.716,1053,2.716,1054,2.716,1055,2.716,1056,5.384,1057,4.854,1058,4.854,1059,2.716,1060,2.716,1061,2.716,1062,2.716,1063,4.056,1064,2.716,1065,2.716,1066,2.716,1067,2.716,1068,2.716,1069,2.716,1070,2.716,1071,2.716]],["title/components/ListItemComponent.html",[0,0.072,256,0.899]],["body/components/ListItemComponent.html",[0,0.133,1,0.565,2,0.114,3,0.099,4,0.754,5,0.754,6,0.754,7,0.085,9,0.158,10,1.335,11,0.653,12,0.82,13,1.258,15,1.853,16,0.754,17,2.152,18,1.143,20,1.143,22,0.487,23,0.816,27,2.223,28,1.199,30,2.068,33,0.754,36,0.6,38,1.519,39,0.019,40,0.985,41,1.278,42,0.653,45,1.761,46,2.588,49,1.66,52,1.039,53,1.143,55,2.06,69,1.616,71,1.388,72,1.706,73,1.77,74,2.378,77,0.262,78,0.114,80,0.915,81,0.099,82,0.106,84,1.785,87,1.013,88,1.013,89,0.719,90,1.519,94,1.803,99,1.616,108,1.321,110,0.685,113,0.813,114,1.303,116,3.938,119,2.705,124,1.196,126,3.858,140,2.028,144,3.608,146,2.909,161,2.732,163,0.685,164,3.09,187,2.848,194,2.705,199,2.747,210,0.754,212,2.028,217,4.412,218,3.663,219,3.421,220,3.663,226,1.962,227,1.803,230,0.009,231,0.313,232,1.143,233,1.143,234,1.54,235,0.754,236,0.754,237,0.623,238,1.143,239,0.623,240,0.754,241,0.623,242,0.754,243,0.623,244,1.54,245,0.594,246,1.143,247,0.623,248,0.754,249,0.623,250,0.594,251,0.685,252,0.623,253,0.754,254,0.623,255,0.754,256,1.272,257,1.735,258,0.754,259,0.594,260,0.754,261,0.594,262,0.623,263,0.719,264,0.623,265,0.754,266,0.623,267,0.754,268,0.594,269,0.623,270,0.754,271,0.653,272,0.754,273,0.009,288,0.512,289,0.594,307,1.822,324,1.952,329,2.178,337,1.388,484,3.35,498,2.178,520,2.747,528,2.775,542,3.863,554,2.705,558,2.492,564,1.338,816,3.113,884,5.433,889,2.198,955,2.973,959,2.973,960,1.962,974,3.608,1020,3.863,1072,5.971,1073,2.198,1074,3.876,1075,3.876,1076,3.332,1077,3.332,1078,3.876,1079,3.332,1080,3.876,1081,3.876,1082,5.223,1083,4.023,1084,4.68,1085,2.198,1086,3.876,1087,3.876,1088,5.223,1089,3.876,1090,2.557,1091,6.136,1092,3.876,1093,2.557,1094,3.876,1095,2.557,1096,3.876,1097,2.557,1098,2.557,1099,2.557,1100,2.557,1101,2.557,1102,2.557,1103,2.557,1104,2.557,1105,3.876,1106,2.557,1107,2.557,1108,2.557,1109,2.557,1110,5.223,1111,5.223,1112,2.198,1113,2.557,1114,2.557,1115,4.68,1116,4.68,1117,2.557,1118,2.557,1119,3.876,1120,3.876,1121,2.198,1122,2.557,1123,2.557,1124,2.557,1125,2.557,1126,2.198,1127,2.557,1128,2.557,1129,2.557,1130,2.557,1131,2.557]],["title/injectables/LoaderService.html",[332,2.057,559,1.088]],["body/injectables/LoaderService.html",[2,0.203,3,0.177,7,0.152,9,0.283,22,0.871,23,1.225,26,2.291,28,1.8,33,1.887,36,0.607,39,0.019,41,1.109,52,1.559,53,1.716,57,3.473,58,3.133,69,1.8,71,1.636,72,2.011,74,2.535,76,2.409,77,0.292,78,0.203,80,1.636,81,0.226,82,0.103,89,1.285,108,2.181,123,3.879,230,0.014,273,0.014,328,4.03,332,3.244,340,4.472,393,4.409,420,4.785,559,1.887,816,3.503,1037,5.337,1132,3.505,1133,6.212,1134,6.288,1135,5.818,1136,4.57,1137,4.57,1138,4.57,1139,5.337,1140,2.548,1141,3.928,1142,3.928,1143,3.928,1144,5.001]],["title/interfaces/LoaderState.html",[340,2.372,1140,2.057]],["body/interfaces/LoaderState.html",[2,0.218,3,0.191,7,0.164,9,0.305,22,0.937,23,1.283,26,1.761,33,1.45,39,0.019,41,0.937,57,2.936,58,2.833,69,2.2,71,2.181,72,2.681,74,2.293,76,2.293,77,0.305,78,0.218,80,1.761,81,0.236,82,0.111,89,1.383,108,2.076,123,3.857,230,0.015,273,0.015,328,3.965,332,2.742,340,4.255,393,4.244,420,4.809,559,1.796,816,3.26,1037,5.307,1132,3.772,1133,6.112,1134,5.689,1139,5.077,1140,3.397,1141,4.227,1142,4.227,1143,4.227,1144,5.237]],["title/classes/Logger.html",[82,0.083,518,1.624]],["body/classes/Logger.html",[2,0.319,3,0.231,7,0.198,9,0.293,13,1.932,22,0.903,23,1.253,36,0.568,39,0.019,40,0.998,41,1.34,42,1.211,53,1.397,75,1.332,77,0.237,78,0.21,81,0.231,82,0.147,97,3.307,118,4.183,159,3.634,187,2.085,208,3.307,230,0.014,273,0.014,288,0.949,339,1.841,498,2.483,518,3.004,519,2.085,528,1.876,543,3.307,559,1.755,658,5.851,662,3.045,668,3.307,669,3.634,671,3.634,672,4.992,674,3.307,675,5.743,680,5.143,683,4.736,1020,2.828,1140,3.318,1145,3.634,1146,4.738,1147,4.738,1148,4.738,1149,4.072,1150,4.072]],["title/injectables/LoggerService.html",[519,1.624,559,1.088]],["body/injectables/LoggerService.html",[2,0.313,3,0.245,7,0.21,9,0.353,13,2.048,22,0.845,23,1.201,28,1.765,36,0.581,38,1.439,39,0.019,40,1.328,41,1.385,42,1.612,52,1.188,53,1.682,75,1.604,77,0.222,78,0.197,81,0.221,82,0.129,97,3.982,118,4.055,159,4.376,187,2.51,208,3.982,230,0.014,273,0.014,288,1.143,339,2.061,498,2.38,518,2.931,519,2.51,528,2.498,543,3.982,559,1.86,658,5.844,662,3.667,668,3.982,669,4.376,670,4.904,671,4.376,672,5.412,674,3.982,675,5.72,676,3.4,680,5.075,683,4.674,1020,3.405,1140,2.471,1145,3.4,1149,3.81,1150,4.904,1151,4.432,1152,4.432,1153,4.432,1154,4.432]],["title/injectables/MatPaginatorCustom.html",[559,1.088,932,2.372]],["body/injectables/MatPaginatorCustom.html",[2,0.208,3,0.181,7,0.156,9,0.29,11,1.736,22,0.891,23,1.243,36,0.611,39,0.019,41,1.125,52,1.582,74,2.221,75,1.818,77,0.296,78,0.208,81,0.181,82,0.106,99,2.102,113,0.782,137,3.794,230,0.014,273,0.014,297,0.985,337,2.316,388,4.367,394,3.587,403,6.317,404,6.15,528,2.69,542,3.523,559,1.907,788,5.074,932,3.794,933,5.84,944,4.12,1155,5.84,1156,4.019,1157,5.903,1158,5.903,1159,6.794,1160,6.794,1161,6.794,1162,5.13,1163,5.903,1164,6.794,1165,5.903,1166,4.676,1167,5.074,1168,4.676,1169,4.676]],["title/components/PageNotFoundComponent.html",[0,0.072,259,0.856]],["body/components/PageNotFoundComponent.html",[0,0.14,1,1.008,2,0.202,3,0.177,4,1.344,5,1.344,6,1.344,7,0.152,9,0.282,10,1.633,11,1.913,12,1.068,16,1.344,17,2.281,18,1.712,20,1.712,39,0.018,40,1.223,49,1.633,73,1.11,77,0.228,78,0.202,81,0.177,82,0.103,94,2.701,110,1.221,113,0.818,114,1.348,124,1.164,163,1.221,210,1.344,230,0.014,231,0.558,232,1.712,233,1.712,234,1.985,235,1.344,236,1.344,237,1.11,238,1.712,239,1.11,240,1.344,241,1.11,242,1.344,243,1.11,244,1.985,245,1.058,246,1.712,247,1.11,248,1.344,249,1.11,250,1.058,251,1.221,252,1.11,253,1.344,254,1.11,255,1.344,256,1.11,257,1.221,258,1.344,259,1.562,260,1.344,261,1.058,262,1.11,263,1.281,264,1.11,265,1.344,266,1.11,267,1.344,268,1.058,269,1.11,270,1.344,271,1.164,272,1.344,273,0.014,367,3.181,382,5.163,666,5.785,770,4.992,830,4.698,1170,3.917,1171,3.917,1172,5.807,1173,5.807,1174,5.807]],["title/components/PendingTasksTableComponent.html",[0,0.072,261,0.856]],["body/components/PendingTasksTableComponent.html",[0,0.133,1,0.968,2,0.194,3,0.17,4,1.291,5,1.291,6,1.291,7,0.146,9,0.271,10,1.119,11,1.119,12,1.003,16,1.291,17,2.274,18,1.669,20,1.669,22,0.834,23,1.192,36,0.382,39,0.019,40,1.192,41,0.834,49,1.591,65,2.29,66,2.961,73,1.066,74,2.13,77,0.284,78,0.194,81,0.17,82,0.099,110,1.84,113,0.881,114,1.314,124,1.902,163,1.173,210,1.291,230,0.014,231,0.536,232,1.669,233,1.669,234,1.955,235,1.291,236,1.291,237,1.066,238,1.669,239,1.066,240,1.291,241,1.066,242,1.291,243,1.066,244,1.955,245,1.016,246,1.669,247,1.066,248,1.291,249,1.066,250,1.016,251,1.173,252,1.066,253,1.291,254,1.066,255,1.291,256,1.066,257,1.173,258,1.291,259,1.016,260,1.291,261,1.539,262,1.066,263,1.231,264,1.066,265,1.291,266,1.066,267,1.291,268,1.016,269,1.066,270,1.291,271,1.829,272,1.291,273,0.014,613,3.358,614,3.95,615,4.865,616,4.865,618,3.763,619,3.95,620,3.056,621,3.056,1175,4.865,1176,6.63,1177,4.378]],["title/components/RecurringTaskComponent.html",[0,0.072,262,0.899]],["body/components/RecurringTaskComponent.html",[0,0.138,1,0.661,2,0.133,3,0.116,4,0.882,5,0.882,6,0.882,7,0.1,9,0.185,10,1.312,11,0.764,12,0.876,13,1.414,15,2.033,16,0.882,17,2.193,18,1.284,20,1.284,22,0.57,23,0.917,26,2.239,27,2.122,28,1.347,30,2.233,33,1.284,36,0.598,38,0.971,39,0.019,40,1.081,41,1.192,42,0.764,45,1.639,46,2.43,49,1.224,52,1.512,53,1.663,60,2.259,69,1.935,72,2.482,73,1.251,75,0.841,76,1.639,77,0.3,78,0.133,81,0.116,82,0.068,87,1.184,88,1.184,89,1.224,108,1.75,110,0.802,113,0.884,114,1.011,124,0.764,161,2.278,163,0.802,168,2.599,170,3.188,176,3.145,180,2.278,181,2.95,199,2.025,203,2.278,210,0.882,217,3.039,230,0.011,231,0.366,232,1.284,233,1.284,234,1.663,235,0.882,236,0.882,237,0.729,238,1.284,239,0.729,240,0.882,241,0.729,242,0.882,243,0.729,244,1.663,245,0.694,246,1.284,247,0.729,248,0.882,249,0.729,250,0.694,251,1.986,252,0.729,253,0.882,254,0.729,255,0.882,256,0.729,257,0.802,258,0.882,259,0.694,260,0.882,261,0.694,262,1.374,263,1.993,264,0.729,265,0.882,266,0.729,267,0.882,268,0.694,269,0.729,270,0.882,271,0.764,272,0.882,273,0.011,297,0.63,324,2.142,329,2.353,337,2.019,390,2.145,392,1.668,408,3.625,429,2.95,430,2.778,433,1.565,462,3.039,463,2.95,464,4.366,480,1.785,502,1.785,503,2.799,504,2.799,509,4.253,512,3.065,513,3.065,514,2.294,515,3.301,516,3.625,517,4.953,522,1.923,525,2.294,526,3.039,544,4.326,559,0.882,560,2.294,561,1.316,562,2.294,565,1.785,566,1.785,567,2.294,568,2.294,569,3.039,587,2.294,592,2.294,593,2.294,625,2.294,626,2.571,731,3.743,732,2.571,738,2.571,739,2.571,740,2.571,777,5.55,798,3.743,801,4.326,880,2.571,1178,5.969,1179,4.354,1180,5.64,1181,4.354,1182,2.991,1183,2.991,1184,2.991,1185,2.991,1186,2.991]],["title/components/SidenavTasksComponent.html",[0,0.072,264,0.899]],["body/components/SidenavTasksComponent.html",[0,0.12,1,0.415,2,0.083,3,0.073,4,0.553,5,0.553,6,1.13,7,0.062,9,0.237,10,1.395,11,0.48,12,0.707,13,0.987,15,1.517,16,0.553,17,2.055,18,0.896,20,0.896,22,1.199,23,0.928,26,2.403,27,1.822,28,0.94,30,1.745,33,0.896,35,3.38,36,0.591,38,1.906,39,0.019,40,1.019,41,1.199,42,0.979,43,3.151,45,1.144,46,2.21,49,0.855,51,1.613,52,1.574,53,1.428,55,1.338,58,2.538,60,1.338,69,1.909,71,1.577,72,0.826,73,0.457,75,0.855,76,1.658,77,0.285,78,0.083,79,0.528,80,0.672,81,0.073,82,0.042,87,0.743,88,0.743,89,0.855,94,2.538,99,1.498,105,0.873,108,1.766,110,0.503,112,1.815,113,0.802,114,1.432,116,4.205,117,1.206,123,1.695,124,1.679,126,3.291,135,1.206,139,2.699,140,2.305,151,1.59,160,1.31,161,1.59,163,1.856,164,1.59,167,1.815,168,1.815,170,2.049,176,2.89,186,2.122,187,2.768,194,1.31,199,1.414,208,1.31,210,0.553,212,1.59,217,4.587,218,2.63,219,3.274,220,3.505,226,3.714,227,2.049,230,0.007,231,0.23,232,0.896,233,0.896,234,1.299,235,0.553,236,0.553,237,0.457,238,0.896,239,0.457,240,0.553,241,0.457,242,0.553,243,0.457,244,1.299,245,0.436,246,0.896,247,0.457,248,0.553,249,0.741,250,0.436,251,0.503,252,0.457,253,0.553,254,0.457,255,0.553,256,0.457,257,1.617,258,0.553,259,0.436,260,0.553,261,0.436,262,0.457,263,0.528,264,1.073,265,0.553,266,0.457,267,0.553,268,0.436,269,0.457,270,0.553,271,0.48,272,0.553,273,0.007,295,1.239,297,0.395,307,1.958,317,3.228,320,2.049,321,2.122,322,2.122,323,2.332,324,1.599,329,1.838,337,1.372,389,2.122,390,2.17,424,2.332,442,1.613,443,3.38,444,2.402,465,1.206,468,2.332,471,0.982,474,1.046,475,2.332,476,1.439,478,1.439,484,1.12,498,2.741,520,2.538,528,0.743,542,3.601,564,0.982,635,1.815,668,2.122,700,1.954,726,1.206,768,1.439,816,2.972,818,1.439,830,2.122,895,4.455,899,2.613,904,3.788,905,2.332,959,4.36,961,2.699,962,2.122,965,3.112,974,3.112,989,1.31,990,2.463,1020,3.257,1083,4.885,1112,3.788,1121,3.788,1126,3.788,1162,2.122,1187,5.15,1188,1.613,1189,2.613,1190,2.613,1191,4.406,1192,6.489,1193,5.683,1194,4.406,1195,4.406,1196,3.04,1197,4.406,1198,1.876,1199,1.876,1200,3.04,1201,3.04,1202,3.04,1203,3.04,1204,3.04,1205,1.876,1206,4.841,1207,3.04,1208,1.876,1209,1.876,1210,1.876,1211,3.04,1212,1.876,1213,3.04,1214,1.876,1215,1.876,1216,3.04,1217,6.489,1218,6.033,1219,3.04,1220,5.683,1221,3.04,1222,3.04,1223,1.876,1224,1.876,1225,1.876,1226,1.876,1227,1.876,1228,5.683,1229,3.04,1230,1.876,1231,1.876,1232,1.613,1233,1.876,1234,1.876,1235,1.876,1236,1.876,1237,1.876,1238,1.876,1239,1.876,1240,1.876,1241,3.04,1242,1.876,1243,1.876,1244,1.876,1245,1.876,1246,1.876,1247,1.876,1248,1.876,1249,1.876,1250,4.406,1251,1.876,1252,1.876,1253,1.876,1254,1.876,1255,1.876,1256,1.876,1257,1.876,1258,5.183,1259,1.876,1260,1.876,1261,1.876,1262,1.876,1263,1.876,1264,1.876,1265,3.832,1266,1.876]],["title/modules/SidenavTasksModule.html",[274,0.251,1267,2.372]],["body/modules/SidenavTasksModule.html",[0,0.121,2,0.19,3,0.166,7,0.143,9,0.265,12,0.626,36,0.487,39,0.019,77,0.378,78,0.19,79,1.205,81,0.255,82,0.097,90,1.391,113,0.642,163,1.664,179,1.148,192,1.264,230,0.014,231,0.525,256,1.703,257,1.148,264,1.836,273,0.014,274,0.476,276,1.205,277,2.015,278,1.326,283,1.812,284,1.391,286,1.812,287,2.456,288,1.118,289,1.527,290,1.998,291,1.391,292,1.569,293,1.998,294,1.46,295,1.205,296,2.456,297,0.902,298,2.328,299,2.456,300,1.787,301,1.787,302,2.458,303,1.787,305,2.328,306,1.787,307,2.015,308,1.886,309,1.697,314,1.998,339,1.727,609,2.389,705,4.281,726,2.754,760,4.494,765,3.588,768,3.287,936,3.896,1003,3.683,1187,3.287,1267,4.768,1268,3.683,1269,3.683,1270,4.285,1271,3.683,1272,4.285,1273,5.581,1274,5.581,1275,5.581,1276,5.581,1277,5.581,1278,5.581,1279,5.581,1280,4.285,1281,3.683,1282,4.285,1283,3.287]],["title/classes/Task.html",[82,0.083,113,0.425]],["body/classes/Task.html",[2,0.173,3,0.151,7,0.129,9,0.444,22,0.741,23,1.102,36,0.625,39,0.019,40,1.488,41,1.379,42,1.337,58,2.434,69,1.83,75,1.912,76,2.381,81,0.203,82,0.118,108,1.783,113,0.888,114,1.579,124,1.617,126,3.311,127,4.1,174,4.61,175,4.219,181,3.927,187,3.184,188,4.854,202,3.653,230,0.013,273,0.013,286,1.699,337,2.265,528,2.835,546,4.854,576,4.854,748,4.417,750,5.439,752,5.439,848,4.854,961,3.298,1162,3.653,1284,2.982,1285,5.233,1286,6.328,1287,4.854,1288,4.854,1289,4.854,1290,4.854,1291,3.888,1292,3.888,1293,3.888,1294,3.888,1295,3.888,1296,5.233,1297,4.498,1298,3.888,1299,3.888,1300,5.439,1301,3.888,1302,4.538,1303,4.538,1304,3.888]],["title/components/TaskFormComponent.html",[0,0.072,266,0.899]],["body/components/TaskFormComponent.html",[0,0.12,1,0.413,2,0.083,3,0.072,4,0.55,5,0.55,6,0.55,7,0.062,9,0.389,10,1.656,11,0.477,12,0.705,13,0.982,15,1.511,16,0.55,17,2.053,18,0.892,20,0.892,22,0.356,23,1.551,26,1.728,27,1.817,28,0.936,30,1.739,33,0.892,36,0.585,38,1.567,39,0.019,40,1.382,41,1.235,42,1.233,45,1.945,46,2.205,49,0.851,52,1.797,53,1.126,55,1.332,57,1.806,58,1.407,60,2.275,69,1.976,71,1.083,73,0.454,75,1.073,76,1.436,77,0.294,78,0.083,80,0.668,81,0.072,82,0.042,87,0.739,88,0.739,89,1.235,94,1.775,99,0.577,105,0.868,108,1.855,110,0.5,113,0.871,114,1.36,121,4.35,124,0.975,126,3.15,127,3.832,139,2.448,140,2.297,144,3.035,146,2.546,151,1.583,163,0.5,171,3.958,174,2.664,175,3.085,180,3.901,181,3.508,183,1.431,185,1.806,186,2.112,187,1.932,199,2.921,202,2.112,210,0.55,219,2.128,230,0.007,231,0.229,232,0.892,233,0.892,234,1.295,235,0.55,236,0.55,237,0.454,238,0.892,239,0.454,240,0.55,241,0.454,242,0.55,243,0.454,244,1.295,245,0.433,246,0.892,247,0.454,248,0.55,249,0.454,250,0.433,251,1.023,252,0.454,253,0.55,254,0.454,255,0.55,256,0.454,257,0.5,258,0.55,259,0.433,260,0.55,261,0.433,262,0.454,263,0.524,264,0.454,265,0.55,266,1.07,267,0.55,268,0.433,269,0.454,270,0.55,271,0.477,272,0.55,273,0.007,286,1.678,288,0.374,289,0.433,320,1.775,324,1.592,329,1.832,337,2.205,390,2.682,392,3.268,408,2.823,429,2.525,430,2.163,433,0.976,444,2.396,465,2.454,474,1.04,480,1.114,498,1.832,505,3.775,510,2.601,512,2.278,513,2.278,517,3.965,522,3.103,528,2.321,530,2.601,531,2.601,532,2.601,544,5.272,546,3.368,551,1.302,553,1.604,554,1.302,558,1.945,560,4.176,561,0.821,565,1.114,566,1.114,591,1.604,592,2.928,593,3.703,647,1.431,683,2.823,728,3.965,748,3.065,816,2.378,824,1.604,833,1.604,843,3.775,848,3.965,871,1.431,905,4.619,907,1.604,909,1.604,911,1.604,913,1.604,916,3.775,918,1.604,961,2.882,965,3.103,989,1.302,990,1.199,1287,2.321,1288,2.321,1289,2.321,1290,2.321,1302,2.321,1303,2.321,1305,5.143,1306,1.604,1307,3.775,1308,4.391,1309,3.026,1310,3.026,1311,5.444,1312,5.169,1313,5.671,1314,3.026,1315,3.026,1316,1.866,1317,3.026,1318,1.866,1319,1.866,1320,1.866,1321,3.026,1322,1.866,1323,3.026,1324,1.866,1325,3.026,1326,1.866,1327,3.026,1328,1.866,1329,1.866,1330,3.026,1331,1.866,1332,1.866,1333,1.866,1334,1.866,1335,1.866,1336,3.026,1337,1.866,1338,1.866,1339,1.866,1340,1.866,1341,3.026,1342,1.866,1343,1.866,1344,1.866,1345,1.866,1346,1.866,1347,1.866,1348,1.866,1349,1.866,1350,1.866,1351,1.866,1352,1.866,1353,1.866,1354,1.866,1355,1.866,1356,1.866,1357,3.026,1358,3.026,1359,4.391,1360,3.026,1361,3.026,1362,1.866,1363,3.026,1364,3.026,1365,1.866,1366,1.866,1367,1.866,1368,1.866,1369,1.866,1370,3.026,1371,1.866,1372,1.866,1373,1.866,1374,3.817,1375,1.866,1376,3.026,1377,1.604,1378,1.866,1379,1.866,1380,3.026]],["title/modules/TaskFormModule.html",[274,0.251,764,2.057]],["body/modules/TaskFormModule.html",[0,0.118,2,0.216,3,0.189,7,0.162,9,0.302,36,0.529,39,0.019,77,0.367,78,0.216,81,0.267,82,0.11,113,0.697,179,1.306,180,3.169,192,1.437,230,0.015,231,0.597,266,1.85,273,0.015,274,0.483,276,1.37,277,2.14,278,1.508,283,1.967,284,1.582,286,1.967,288,1.214,289,1.406,290,2.169,291,1.582,292,1.703,293,2.169,294,1.661,295,1.37,297,1.026,339,1.874,561,2.145,601,3.378,602,3.378,603,3.894,605,3.894,606,3.894,607,3.894,741,2.909,742,3.738,764,4.087,1305,3.738,1381,4.189,1382,4.189,1383,4.189,1384,4.874,1385,6.058]],["title/modules/TasksButtonBarModule.html",[274,0.251,930,2.202]],["body/modules/TasksButtonBarModule.html",[0,0.123,2,0.198,3,0.173,7,0.148,9,0.276,36,0.499,39,0.019,73,1.625,77,0.378,78,0.198,79,1.251,81,0.259,82,0.101,90,1.445,179,1.193,192,1.312,200,3.992,230,0.014,231,0.545,239,1.828,273,0.014,274,0.47,276,1.251,277,2.052,278,1.377,283,1.857,284,1.445,286,1.857,288,1.146,289,1.549,290,2.048,291,1.445,292,1.608,293,2.048,294,1.517,295,1.251,296,2.517,297,0.937,298,2.386,299,2.517,300,1.856,301,1.856,302,2.503,303,1.856,305,2.386,306,1.856,307,2.052,308,1.958,309,1.762,314,2.048,339,1.769,384,3.414,604,3.414,608,3.677,609,2.481,610,3.677,652,3.677,765,3.677,820,3.825,930,4.388,934,4.387,938,3.992,939,3.414,1386,3.825,1387,3.825,1388,3.825,1389,3.825,1390,4.216,1391,4.45,1392,3.825,1393,3.825,1394,3.825,1395,3.825]],["title/modules/TasksButtonsModule.html",[274,0.251,1390,2.202]],["body/modules/TasksButtonsModule.html",[0,0.122,2,0.196,3,0.172,7,0.147,9,0.274,12,0.647,36,0.497,39,0.019,73,1.388,77,0.374,78,0.196,79,1.244,81,0.258,82,0.1,90,1.437,113,0.766,114,1.323,115,2.807,120,3.279,179,1.186,192,1.305,203,2.982,204,3.664,215,3.664,230,0.014,231,0.542,241,1.826,251,1.528,273,0.014,274,0.453,276,1.244,277,2.047,278,1.369,283,1.85,284,1.437,286,1.85,288,1.142,289,1.545,290,2.04,291,1.437,292,1.602,293,2.04,294,1.508,295,1.244,296,2.508,297,0.932,298,2.377,299,2.508,300,1.846,301,1.846,302,2.496,303,1.846,305,2.377,306,1.846,307,2.047,308,1.948,309,1.752,314,2.04,320,3.096,339,1.763,391,3.978,604,3.402,608,3.664,609,2.468,610,3.664,652,3.664,765,3.664,938,3.978,1390,4.282,1392,3.804,1393,3.804,1396,3.804,1397,3.804,1398,3.804,1399,4.426,1400,4.426,1401,4.426]],["title/components/TasksComponent.html",[0,0.072,268,0.856]],["body/components/TasksComponent.html",[0,0.135,1,1.019,2,0.205,3,0.179,4,1.359,5,1.359,6,1.359,7,0.153,9,0.286,10,1.642,11,1.178,12,0.988,16,1.359,17,2.283,18,1.725,20,1.725,39,0.019,40,1.232,49,1.644,73,1.123,77,0.231,78,0.205,81,0.179,82,0.104,110,1.235,113,0.858,114,1.358,124,1.178,163,1.235,164,3.06,167,3.491,210,1.359,227,2.72,230,0.014,231,0.565,232,1.725,233,1.725,234,1.993,235,1.359,236,1.359,237,1.123,238,1.725,239,1.123,240,1.359,241,1.123,242,1.359,243,1.123,244,1.993,245,1.07,246,1.725,247,1.123,248,1.359,249,1.123,250,1.07,251,1.235,252,1.123,253,1.359,254,1.123,255,1.359,256,1.123,257,1.235,258,1.359,259,1.07,260,1.359,261,1.07,262,1.123,263,1.296,264,1.123,265,1.359,266,1.123,267,1.359,268,1.569,269,1.123,270,1.359,271,1.178,272,1.359,273,0.014,295,1.9,317,3.06,320,3.143,321,4.083,323,4.487,325,3.76,1189,5.028,1190,5.028,1402,3.962]],["title/modules/TasksDialogModule.html",[274,0.251,931,2.202]],["body/modules/TasksDialogModule.html",[0,0.12,2,0.224,3,0.196,7,0.168,9,0.312,12,0.737,36,0.54,39,0.019,77,0.365,78,0.224,81,0.24,82,0.114,115,3.047,170,2.877,179,1.351,192,1.486,230,0.015,231,0.618,273,0.015,274,0.496,276,1.417,277,1.636,278,1.559,283,2.008,284,1.636,286,2.008,288,1.01,289,1.17,292,1.739,339,1.913,469,3.867,470,3.24,472,3.867,473,3.24,597,4.685,649,4.685,741,3.009,764,4.064,767,3.867,931,4.512,1283,4.745,1403,5.041,1404,5.041,1405,5.041,1406,5.041]],["title/components/TasksFilterComponent.html",[0,0.072,269,0.899]],["body/components/TasksFilterComponent.html",[0,0.133,1,0.632,2,0.127,3,0.111,4,0.842,5,0.842,6,0.842,7,0.095,9,0.177,10,1.573,11,0.73,12,0.86,13,1.367,14,4.297,15,1.98,16,0.842,17,2.181,18,1.241,20,1.241,22,0.544,23,0.886,26,1.507,27,2.214,28,1.707,29,4.742,30,2.185,33,1.241,36,0.6,38,0.927,39,0.019,40,1.053,41,1.173,42,0.73,45,2.076,46,2.509,49,2.008,52,1.577,53,1.735,55,1.852,60,2.589,64,4.742,65,1.494,66,2.202,69,1.904,71,1.507,73,0.696,77,0.295,78,0.127,80,1.022,81,0.111,82,0.065,87,1.131,88,1.131,89,0.803,99,0.883,105,1.328,108,1.435,110,0.765,113,0.848,114,0.977,116,3.98,124,0.73,126,3.22,127,2.347,137,2.706,139,3.076,140,2.886,144,3.834,146,2.718,151,2.202,156,3.229,161,2.202,163,0.765,164,2.886,171,2.938,176,3.076,180,2.202,199,2.325,210,0.842,218,2.513,219,2.347,220,2.513,227,1.328,228,3.229,230,0.01,231,0.35,232,1.241,233,1.241,234,1.627,235,0.842,236,0.842,237,0.696,238,1.241,239,0.696,240,0.842,241,0.696,242,0.842,243,0.696,244,1.627,245,0.663,246,1.241,247,0.696,248,0.842,249,0.696,250,0.663,251,0.765,252,0.696,253,0.842,254,0.696,255,0.842,256,0.696,257,0.765,258,0.842,259,0.663,260,0.842,261,0.663,262,0.696,263,0.803,264,0.696,265,0.842,266,0.696,267,0.842,268,0.663,269,1.344,270,0.842,271,0.73,272,0.842,273,0.01,320,1.328,324,2.085,329,2.301,337,1.975,424,2.191,429,2.202,430,2.718,444,2.801,462,3.851,463,2.202,474,1.592,484,1.705,488,2.191,520,3.198,542,2.513,554,2.938,564,1.494,619,2.938,816,3.031,818,2.191,834,2.938,944,2.938,956,3.618,957,3.618,961,3.076,965,3.781,989,1.993,990,1.836,1079,4.742,1085,2.455,1407,5.201,1408,2.455,1409,3.229,1410,6.154,1411,4.21,1412,4.21,1413,4.21,1414,6.531,1415,6.154,1416,5.517,1417,4.21,1418,2.856,1419,2.856,1420,5.882,1421,2.856,1422,2.856,1423,2.856,1424,3.618,1425,4.21,1426,4.21,1427,4.21,1428,2.856,1429,2.856,1430,2.856,1431,2.856,1432,4.21,1433,2.856,1434,2.856,1435,4.21,1436,2.856,1437,2.455,1438,2.856,1439,2.856,1440,2.856,1441,2.856,1442,2.856,1443,2.856,1444,2.856]],["title/modules/TasksFilterModule.html",[274,0.251,999,2.372]],["body/modules/TasksFilterModule.html",[0,0.125,2,0.206,3,0.18,7,0.154,9,0.287,36,0.512,39,0.019,77,0.371,78,0.206,81,0.263,82,0.105,90,1.505,113,0.676,116,3.504,179,1.242,192,1.367,230,0.014,231,0.568,269,1.853,273,0.014,274,0.476,276,1.303,277,2.091,278,1.434,283,1.906,284,1.505,286,1.906,287,2.583,288,1.176,289,1.572,290,2.102,291,1.505,292,1.65,293,2.102,294,1.58,295,1.303,296,2.583,297,0.976,298,2.449,299,2.583,300,1.934,301,1.934,302,2.325,303,1.934,305,1.934,306,1.934,307,1.906,308,2.04,309,1.836,339,1.816,603,3.774,605,3.774,606,3.774,607,3.774,936,4.098,985,3.556,986,3.985,999,4.661,1407,3.556,1445,3.985,1446,3.985,1447,3.985,1448,4.636,1449,4.636,1450,5.871,1451,4.636]],["title/modules/TasksModule.html",[274,0.251,357,2.372]],["body/modules/TasksModule.html",[0,0.108,2,0.189,3,0.165,7,0.142,9,0.264,10,1.421,12,0.623,36,0.485,39,0.019,52,1.491,77,0.379,78,0.189,79,1.198,81,0.216,82,0.096,113,0.713,120,2.74,179,1.66,192,1.257,230,0.013,231,0.522,268,1.621,273,0.013,274,0.491,276,1.198,277,2.01,278,1.319,283,1.806,284,1.384,286,1.806,288,1.114,289,1.291,290,1.991,291,1.384,292,1.741,293,1.991,294,1.453,295,1.198,297,0.897,314,1.991,328,2.376,339,1.915,357,4.86,444,2.725,463,2.23,474,2.376,520,2.879,561,1.876,564,2.23,601,3.101,602,3.101,614,2.975,620,2.975,635,2.544,665,3.269,701,4.267,705,4.267,718,3.664,719,3.664,720,2.975,721,3.269,722,3.664,723,3.664,925,4.488,1267,4.488,1281,3.664,1283,3.269,1452,3.664,1453,3.664,1454,3.664,1455,4.488,1456,4.488,1457,4.262,1458,4.262,1459,3.664,1460,4.262,1461,4.262,1462,4.262]],["title/modules/TasksRoutingModule.html",[274,0.251,1455,2.372]],["body/modules/TasksRoutingModule.html",[0,0.139,2,0.222,3,0.194,7,0.166,39,0.019,43,3.428,75,1.406,77,0.369,78,0.222,79,1.406,81,0.239,82,0.113,99,1.547,113,0.837,124,1.278,230,0.015,245,1.429,250,1.429,261,1.548,268,1.429,273,0.015,274,0.486,288,1.002,289,1.161,292,1.731,314,2.204,315,4.299,316,4.722,317,2.617,318,4.299,379,4.299,380,3.491,381,4.299,471,2.617,621,4.297,1455,3.957,1459,4.299,1463,5.002,1464,4.299,1465,4.299,1466,5.002,1467,5.002,1468,5.002,1469,5.002,1470,5.002]],["title/modules/TasksTableModule.html",[274,0.251,1456,2.372]],["body/modules/TasksTableModule.html",[0,0.125,2,0.179,3,0.156,7,0.134,9,0.249,36,0.467,39,0.019,48,3.737,73,0.98,77,0.38,78,0.179,79,1.131,81,0.208,82,0.091,90,1.306,113,0.791,120,2.637,179,1.078,192,1.186,230,0.013,231,0.493,245,1.653,261,1.653,271,1.756,273,0.013,274,0.468,276,1.131,277,1.954,278,1.245,283,1.738,284,1.306,286,1.738,287,2.356,288,1.073,289,1.489,290,1.917,291,1.306,292,1.505,293,1.917,294,1.371,295,1.131,296,2.356,297,0.847,298,1.678,299,2.356,300,1.678,301,2.234,302,2.541,303,2.234,304,3.458,305,2.234,306,1.678,307,1.954,308,1.77,309,1.593,310,3.458,314,1.917,339,1.656,362,4.107,561,1.77,601,2.985,602,2.985,608,3.442,609,2.243,610,3.442,620,2.808,621,4.201,652,3.442,701,3.086,819,3.086,930,4.101,931,4.101,934,4.107,937,4.603,938,3.737,939,3.086,940,3.458,941,3.458,942,3.458,1390,4.101,1394,3.458,1395,3.458,1456,4.845,1464,3.458,1465,3.458,1471,3.458,1472,3.458,1473,4.023,1474,3.458,1475,4.023,1476,5.355,1477,5.355,1478,5.355]],["title/injectables/UtilsService.html",[444,1.624,559,1.088]],["body/injectables/UtilsService.html",[0,0.094,2,0.154,3,0.135,7,0.116,9,0.346,12,0.508,22,0.663,23,1.021,26,1.245,27,1.309,28,1.868,33,1.025,36,0.589,38,1.812,39,0.019,40,1.175,41,1.286,42,1.543,46,2.1,52,1.299,53,1.646,58,3.058,60,2.133,69,1.076,72,2.657,75,1.569,76,1.824,77,0.318,78,0.154,80,1.245,81,0.188,82,0.079,84,2.427,89,1.569,90,1.129,99,1.076,107,2.667,108,1.652,120,2.388,123,3.762,135,3.116,139,3.667,140,3.704,151,2.536,163,1.874,164,3.44,170,2.808,199,2.953,230,0.012,273,0.012,297,0.732,337,1.998,380,3.384,390,2.388,444,2.133,465,3.116,498,2.328,515,3.116,516,3.881,518,2.456,519,2.657,528,2.21,559,1.646,563,2.235,720,3.384,816,3.444,834,3.896,955,4.281,961,3.898,962,3.896,965,3.881,974,3.588,981,4.632,990,2.235,1139,4.281,1232,4.167,1409,4.281,1479,2.667,1480,4.167,1481,6.576,1482,6.038,1483,6.576,1484,6.35,1485,6.038,1486,4.848,1487,4.848,1488,3.477,1489,6.748,1490,4.848,1491,4.848,1492,6.038,1493,3.477,1494,4.848,1495,4.848,1496,4.848,1497,3.477,1498,3.477,1499,6.038,1500,3.477,1501,6.038,1502,3.477,1503,4.848,1504,4.848,1505,2.989,1506,4.848,1507,3.477,1508,3.477,1509,3.477,1510,3.477,1511,3.477,1512,3.477,1513,3.477,1514,3.477,1515,3.477,1516,3.477,1517,3.477,1518,3.477,1519,3.477,1520,3.477,1521,3.477,1522,3.477,1523,3.477,1524,3.477]],["title/coverage.html",[1525,3.874]],["body/coverage.html",[0,0.149,1,0.927,7,0.139,8,3.602,39,0.019,41,0.798,82,0.139,89,1.178,107,5.67,110,1.123,113,0.707,115,2.709,230,0.013,237,1.021,239,1.021,241,1.021,243,1.021,245,0.973,247,1.021,249,1.021,250,0.973,252,1.021,254,1.021,256,1.021,259,0.973,261,0.973,262,1.021,264,1.021,266,1.021,268,0.973,269,1.021,271,1.071,273,0.013,319,3.602,332,2.336,340,2.694,367,2.925,384,3.214,385,3.214,386,3.602,388,2.694,436,3.602,444,1.844,470,2.694,473,2.694,501,3.214,502,4.041,518,1.844,519,1.844,520,1.949,559,2.088,612,3.602,613,4.71,623,3.214,654,2.925,655,4.219,656,4.219,688,3.214,709,2.925,725,3.214,726,2.694,769,3.214,932,2.694,945,3.602,954,3.602,1007,3.602,1072,3.602,1073,3.602,1132,4.219,1140,2.336,1145,4.219,1155,3.602,1156,3.602,1162,4.286,1170,3.602,1171,3.602,1175,3.602,1178,3.602,1187,3.214,1188,3.602,1284,3.214,1297,3.602,1305,3.214,1306,3.602,1402,3.602,1407,3.214,1408,3.602,1474,3.602,1479,3.214,1525,3.214,1526,3.602,1527,4.19,1528,6.14,1529,4.19,1530,6.14,1531,5.501,1532,6.14,1533,6.52,1534,4.71,1535,6.14,1536,6.14,1537,5.501,1538,4.19,1539,4.19,1540,5.501,1541,4.19,1542,4.19,1543,5.501,1544,4.19,1545,4.19,1546,4.19,1547,5.501,1548,4.19,1549,4.19,1550,4.19,1551,4.19,1552,4.19,1553,4.19,1554,4.19,1555,4.19,1556,4.19,1557,4.19,1558,4.19,1559,4.19,1560,4.19,1561,4.19,1562,4.19,1563,4.19,1564,4.19,1565,4.19,1566,4.19,1567,4.19,1568,3.602,1569,4.219,1570,3.602,1571,4.19]],["title/dependencies.html",[276,1.249,1572,2.642]],["body/dependencies.html",[39,0.019,78,0.23,79,1.456,80,2.251,230,0.015,273,0.015,276,1.456,291,1.681,294,1.765,295,1.456,297,1.324,298,2.16,300,2.16,301,2.16,302,2.681,303,2.623,305,2.623,306,2.16,307,2.041,360,4.823,361,4.389,558,4.042,561,2.279,609,2.887,1573,5.178,1574,7.545,1575,5.178,1576,6.772,1577,5.178,1578,5.178,1579,5.178,1580,5.178,1581,5.178,1582,5.178,1583,5.178,1584,4.451,1585,5.178,1586,6.288,1587,5.178,1588,5.178,1589,4.451,1590,4.451,1591,5.178,1592,5.178,1593,5.178,1594,5.178,1595,6.288,1596,5.178,1597,5.178,1598,5.178]],["title/index.html",[22,0.586,700,1.976,1599,2.642]],["body/index.html",[0,0.079,1,0.457,3,0.08,7,0.136,9,0.128,10,0.839,11,0.528,12,1,13,0.671,23,0.435,36,0.18,39,0.01,40,0.435,42,0.839,45,1.236,48,1.442,49,0.923,57,1.233,58,2.364,59,1.776,71,0.74,74,0.778,90,1.066,94,1.527,96,1.776,97,3.777,109,3.136,110,1.096,111,1.442,112,4.202,113,0.743,114,0.949,116,1.96,118,2.628,119,3.251,120,1.018,122,2.823,123,1.152,124,0.839,126,2.831,127,2.597,129,1.585,130,4.369,131,3.514,132,2.519,133,4.151,134,2.823,135,2.628,136,1.776,137,1.328,138,1.776,139,2.597,140,2.437,141,1.776,142,1.776,143,1.776,144,1.152,146,3.575,149,3.479,150,2.823,151,1.718,152,2.823,153,3.479,154,3.514,155,2.823,156,2.519,157,6.239,158,3.514,160,2.853,162,1.585,167,1.233,168,1.233,172,4.369,175,1.233,176,1.152,181,2.139,188,3.573,190,4.652,199,2.166,201,2.519,203,2.659,204,2.628,206,1.585,209,1.776,215,4.151,218,1.233,219,1.831,220,1.233,221,1.776,224,1.776,227,1.527,229,3.514,230,0.008,257,0.554,273,0.008,276,1.655,278,0.639,286,0.671,288,1.346,295,0.581,307,0.671,309,2.247,320,1.527,325,3.647,361,4.339,380,2.293,389,2.293,391,2.293,423,2.823,461,1.585,463,1.081,464,1.442,488,1.585,522,2.628,582,1.328,619,3.96,633,1.776,635,1.233,637,4.769,663,1.776,667,5.214,680,1.442,700,3.267,717,1.776,721,1.585,790,1.776,792,2.823,794,1.776,801,1.585,830,2.293,834,2.853,865,1.776,866,1.776,867,2.823,868,2.823,870,1.776,871,1.585,872,4.003,958,1.776,1015,2.823,1020,1.233,1040,2.823,1076,2.823,1077,1.776,1167,2.823,1287,1.585,1288,1.585,1289,1.585,1290,1.585,1307,5.832,1377,5.061,1409,1.585,1424,1.776,1437,5.975,1480,1.776,1505,1.776,1525,4.151,1526,5.214,1569,1.585,1572,2.823,1589,1.776,1590,1.776,1599,2.823,1600,2.066,1601,2.066,1602,3.284,1603,5.082,1604,2.066,1605,7.206,1606,4.657,1607,5.082,1608,5.082,1609,3.284,1610,5.674,1611,3.284,1612,6.345,1613,7.512,1614,6.64,1615,6.345,1616,6.217,1617,6.217,1618,5.082,1619,4.657,1620,5.888,1621,6.345,1622,3.284,1623,3.284,1624,6.784,1625,5.082,1626,2.066,1627,3.284,1628,6.066,1629,5.082,1630,3.284,1631,4.088,1632,2.066,1633,2.066,1634,2.066,1635,6.217,1636,6.066,1637,4.657,1638,4.088,1639,3.284,1640,4.088,1641,3.284,1642,2.066,1643,2.066,1644,2.066,1645,5.888,1646,2.066,1647,2.066,1648,2.066,1649,2.066,1650,2.066,1651,2.066,1652,6.64,1653,2.066,1654,2.066,1655,4.088,1656,2.066,1657,2.066,1658,2.066,1659,2.066,1660,2.066,1661,3.284,1662,3.284,1663,2.066,1664,5.411,1665,4.088,1666,4.657,1667,2.066,1668,2.066,1669,2.066,1670,2.066,1671,2.066,1672,2.066,1673,3.284,1674,3.284,1675,2.066,1676,3.284,1677,2.066,1678,2.066,1679,5.888,1680,2.066,1681,2.066,1682,2.066,1683,3.284,1684,3.284,1685,3.284,1686,2.066,1687,2.066,1688,2.066,1689,2.066,1690,2.066,1691,2.066,1692,4.657,1693,5.411,1694,2.066,1695,2.066,1696,4.088,1697,2.066,1698,2.066,1699,3.284,1700,2.066,1701,2.066,1702,2.066,1703,2.066,1704,2.066,1705,2.066,1706,2.066,1707,3.284,1708,2.066,1709,4.657,1710,5.082,1711,2.066,1712,2.066,1713,1.776,1714,2.066,1715,2.066,1716,2.066,1717,2.066,1718,3.284,1719,2.066,1720,2.066,1721,2.066,1722,2.066,1723,2.066,1724,5.674,1725,2.066,1726,3.284,1727,2.066,1728,3.284,1729,2.066,1730,2.066,1731,2.066,1732,2.066,1733,2.066,1734,2.066,1735,2.066,1736,4.088,1737,3.284,1738,2.066,1739,2.066,1740,2.066,1741,2.066,1742,2.066,1743,4.657,1744,2.066,1745,2.066,1746,2.066,1747,3.284,1748,2.066,1749,3.284,1750,2.066,1751,2.066,1752,2.066,1753,2.066,1754,2.066,1755,2.066,1756,3.284,1757,2.066,1758,2.066,1759,3.284,1760,2.066,1761,2.066,1762,2.066,1763,2.066,1764,2.066,1765,2.066,1766,2.066,1767,2.066,1768,2.066,1769,2.066,1770,2.066,1771,3.284,1772,2.066,1773,2.066,1774,2.066,1775,3.284,1776,2.066,1777,2.066,1778,2.066,1779,2.066,1780,2.066,1781,2.066,1782,2.066,1783,2.066,1784,2.066,1785,2.066,1786,2.066]],["title/modules.html",[274,0.344]],["body/modules.html",[39,0.015,91,6.648,149,4.517,230,0.015,273,0.015,274,0.35,275,3.308,282,3.308,302,3.063,348,3.308,353,3.308,354,3.308,355,3.308,356,3.308,357,3.308,361,5.398,597,3.308,649,3.308,760,3.308,764,2.869,925,3.308,930,3.071,931,3.071,999,3.308,1267,3.308,1390,3.071,1455,3.308,1456,3.308,1713,6.693,1787,7.027]],["title/overview.html",[1788,4.341]],["body/overview.html",[0,0.069,1,1.247,39,0.019,43,1.747,81,0.138,82,0.08,117,2.279,179,0.95,192,1.046,194,2.475,230,0.012,231,0.435,237,1.653,239,1.653,241,1.653,243,1.374,245,1.309,247,1.374,249,1.374,250,1.309,252,1.653,254,1.653,256,1.374,259,1.309,261,1.309,262,1.374,264,1.653,266,1.653,268,1.309,269,1.653,271,1.441,273,0.012,274,0.334,275,4.361,276,0.997,277,1.151,278,1.097,279,3.048,280,3.048,281,3.048,282,3.625,283,1.595,284,1.151,348,4.825,349,3.048,350,3.048,351,3.048,352,3.048,353,3.625,354,3.625,355,4.253,356,4.446,357,4.691,559,1.046,597,4.111,598,3.048,599,3.048,649,4.111,650,3.048,651,3.048,760,4.361,761,3.048,762,3.048,763,3.048,764,3.856,925,4.747,926,3.048,927,3.048,928,3.048,929,3.048,930,4.191,931,4.243,932,3.625,949,3.048,950,3.048,951,3.048,995,3.048,996,3.048,997,3.048,998,3.048,999,4.253,1140,1.977,1267,4.57,1268,3.048,1269,3.048,1271,3.048,1381,3.048,1382,3.048,1383,3.048,1386,3.048,1387,3.048,1388,3.048,1389,3.048,1390,4.05,1396,3.048,1397,3.048,1398,3.048,1445,3.048,1446,3.048,1447,3.048,1452,3.048,1453,3.048,1454,3.048,1455,3.625,1456,4.747,1471,3.048,1472,3.048,1584,3.048,1788,3.048,1789,4.914,1790,3.546]],["title/routes.html",[43,2.488]],["body/routes.html",[39,0.017,43,2.992,230,0.017,273,0.017]],["title/miscellaneous/typealiases.html",[1791,2.146,1792,4.442]],["body/miscellaneous/typealiases.html",[22,1.102,39,0.018,41,1.279,113,0.665,149,3.716,174,4.035,175,3.451,230,0.016,273,0.016,961,3.223,962,4.035,974,3.716,981,5.442,1284,4.435,1300,6.098,1302,4.435,1303,4.435,1479,4.435,1791,4.035,1793,5.781,1794,5.781,1795,5.781]],["title/miscellaneous/variables.html",[1534,3.407,1791,2.146]],["body/miscellaneous/variables.html",[22,1.064,39,0.019,41,1.253,75,1.966,76,2.1,108,1.902,230,0.016,273,0.016,337,2.503,655,4.281,656,5.044,688,5.363,689,4.797,1534,4.281,1568,4.797,1569,5.725,1570,4.797,1791,3.896,1796,5.581,1797,5.581,1798,5.581,1799,7.22,1800,6.576]]],"invertedIndex":[["",{"_index":39,"title":{},"body":{"components/AboutComponent.html":{},"modules/AboutModule.html":{},"modules/AboutRoutingModule.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ButtonBarComponent.html":{},"components/ButtonsComponent.html":{},"components/CompleteTaskComponent.html":{},"modules/CompleteTaskModule.html":{},"components/CompleteTasksTableComponent.html":{},"components/ConfirmDeleteTaskComponent.html":{},"modules/ConfirmDeleteTaskModule.html":{},"injectables/ConsoleLoggerService.html":{},"modules/CoreModule.html":{},"components/CreateTaskComponent.html":{},"modules/CreateTaskModule.html":{},"components/EditTaskComponent.html":{},"modules/EditTaskModule.html":{},"components/FooterComponent.html":{},"modules/FooterModule.html":{},"components/HeaderComponent.html":{},"modules/HeaderModule.html":{},"injectables/HttpService.html":{},"components/ListItemComponent.html":{},"injectables/LoaderService.html":{},"interfaces/LoaderState.html":{},"classes/Logger.html":{},"injectables/LoggerService.html":{},"injectables/MatPaginatorCustom.html":{},"components/PageNotFoundComponent.html":{},"components/PendingTasksTableComponent.html":{},"components/RecurringTaskComponent.html":{},"components/SidenavTasksComponent.html":{},"modules/SidenavTasksModule.html":{},"classes/Task.html":{},"components/TaskFormComponent.html":{},"modules/TaskFormModule.html":{},"modules/TasksButtonBarModule.html":{},"modules/TasksButtonsModule.html":{},"components/TasksComponent.html":{},"modules/TasksDialogModule.html":{},"components/TasksFilterComponent.html":{},"modules/TasksFilterModule.html":{},"modules/TasksModule.html":{},"modules/TasksRoutingModule.html":{},"modules/TasksTableModule.html":{},"injectables/UtilsService.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":1162,"title":{},"body":{"injectables/MatPaginatorCustom.html":{},"components/SidenavTasksComponent.html":{},"classes/Task.html":{},"coverage.html":{}}}],["0.1.0",{"_index":1583,"title":{},"body":{"dependencies.html":{}}}],["0.8.26",{"_index":1598,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":1535,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":117,"title":{},"body":{"components/AboutComponent.html":{},"components/CompleteTaskComponent.html":{},"components/ConfirmDeleteTaskComponent.html":{},"components/SidenavTasksComponent.html":{},"overview.html":{}}}],["1.2.1",{"_index":1585,"title":{},"body":{"dependencies.html":{}}}],["1.22.0",{"_index":1650,"title":{},"body":{"index.html":{}}}],["1/1",{"_index":1532,"title":{},"body":{"coverage.html":{}}}],["1/4",{"_index":1562,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":1584,"title":{},"body":{"dependencies.html":{},"overview.html":{}}}],["10/10",{"_index":1552,"title":{},"body":{"coverage.html":{}}}],["10/11",{"_index":1537,"title":{},"body":{"coverage.html":{}}}],["10/12",{"_index":1544,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":107,"title":{},"body":{"components/AboutComponent.html":{},"injectables/UtilsService.html":{},"coverage.html":{}}}],["100vh",{"_index":1236,"title":{},"body":{"components/SidenavTasksComponent.html":{}}}],["100vw",{"_index":1234,"title":{},"body":{"components/SidenavTasksComponent.html":{}}}],["13/14",{"_index":1563,"title":{},"body":{"coverage.html":{}}}],["13/15",{"_index":1558,"title":{},"body":{"coverage.html":{}}}],["14/15",{"_index":1542,"title":{},"body":{"coverage.html":{}}}],["15/16",{"_index":1541,"title":{},"body":{"coverage.html":{}}}],["15/17",{"_index":1543,"title":{},"body":{"coverage.html":{}}}],["16/17",{"_index":1565,"title":{},"body":{"coverage.html":{}}}],["18.06.0",{"_index":1646,"title":{},"body":{"index.html":{}}}],["19075",{"_index":1649,"title":{},"body":{"index.html":{}}}],["2",{"_index":160,"title":{},"body":{"components/AboutComponent.html":{},"injectables/HttpService.html":{},"components/SidenavTasksComponent.html":{},"index.html":{}}}],["2.0.8",{"_index":1593,"title":{},"body":{"dependencies.html":{}}}],["2.22.2",{"_index":1594,"title":{},"body":{"dependencies.html":{}}}],["2.5.7",{"_index":1588,"title":{},"body":{"dependencies.html":{}}}],["2/2",{"_index":1533,"title":{},"body":{"coverage.html":{}}}],["20",{"_index":1789,"title":{},"body":{"overview.html":{}}}],["2000",{"_index":859,"title":{},"body":{"components/EditTaskComponent.html":{}}}],["2018",{"_index":948,"title":{},"body":{"components/FooterComponent.html":{}}}],["23/25",{"_index":1548,"title":{},"body":{"coverage.html":{}}}],["25",{"_index":1561,"title":{},"body":{"coverage.html":{}}}],["3",{"_index":194,"title":{},"body":{"components/AboutComponent.html":{},"components/ListItemComponent.html":{},"components/SidenavTasksComponent.html":{},"overview.html":{}}}],["3000",{"_index":1702,"title":{},"body":{"index.html":{}}}],["31/31",{"_index":1554,"title":{},"body":{"coverage.html":{}}}],["32/33",{"_index":1567,"title":{},"body":{"coverage.html":{}}}],["4",{"_index":208,"title":{},"body":{"components/AboutComponent.html":{},"classes/Logger.html":{},"injectables/LoggerService.html":{},"components/SidenavTasksComponent.html":{}}}],["4.7.0",{"_index":1591,"title":{},"body":{"dependencies.html":{}}}],["4/4",{"_index":1538,"title":{},"body":{"coverage.html":{}}}],["404",{"_index":382,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/EditTaskComponent.html":{},"components/PageNotFoundComponent.html":{}}}],["5",{"_index":211,"title":{},"body":{"components/AboutComponent.html":{}}}],["5.1.1",{"_index":1586,"title":{},"body":{"dependencies.html":{}}}],["5/5",{"_index":1539,"title":{},"body":{"coverage.html":{}}}],["5/6",{"_index":1531,"title":{},"body":{"coverage.html":{}}}],["50",{"_index":477,"title":{},"body":{"components/ButtonsComponent.html":{},"components/EditTaskComponent.html":{}}}],["6",{"_index":1683,"title":{},"body":{"index.html":{}}}],["6.0.0",{"_index":1578,"title":{},"body":{"dependencies.html":{}}}],["6.0.9",{"_index":1574,"title":{},"body":{"dependencies.html":{}}}],["6.2.0",{"_index":1653,"title":{},"body":{"index.html":{}}}],["6.2.2",{"_index":1595,"title":{},"body":{"dependencies.html":{}}}],["6.4.0",{"_index":1576,"title":{},"body":{"dependencies.html":{}}}],["7",{"_index":1790,"title":{},"body":{"overview.html":{}}}],["7/8",{"_index":1560,"title":{},"body":{"coverage.html":{}}}],["70",{"_index":1232,"title":{},"body":{"components/SidenavTasksComponent.html":{},"injectables/UtilsService.html":{}}}],["8.9.1",{"_index":1651,"title":{},"body":{"index.html":{}}}],["8/10",{"_index":1546,"title":{},"body":{"coverage.html":{}}}],["8/9",{"_index":1529,"title":{},"body":{"coverage.html":{}}}],["80",{"_index":1545,"title":{},"body":{"coverage.html":{}}}],["81",{"_index":1549,"title":{},"body":{"coverage.html":{}}}],["83",{"_index":1530,"title":{},"body":{"coverage.html":{}}}],["86",{"_index":1557,"title":{},"body":{"coverage.html":{}}}],["87",{"_index":1559,"title":{},"body":{"coverage.html":{}}}],["88",{"_index":1528,"title":{},"body":{"coverage.html":{}}}],["9/10",{"_index":1551,"title":{},"body":{"coverage.html":{}}}],["9/11",{"_index":1550,"title":{},"body":{"coverage.html":{}}}],["90",{"_index":1536,"title":{},"body":{"coverage.html":{}}}],["92",{"_index":1547,"title":{},"body":{"coverage.html":{}}}],["93",{"_index":1540,"title":{},"body":{"coverage.html":{}}}],["94",{"_index":1564,"title":{},"body":{"coverage.html":{}}}],["96",{"_index":1566,"title":{},"body":{"coverage.html":{}}}],["_sidenavmenuchang",{"_index":1482,"title":{},"body":{"injectables/UtilsService.html":{}}}],["about'},{'nam",{"_index":236,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ButtonBarComponent.html":{},"components/ButtonsComponent.html":{},"components/CompleteTaskComponent.html":{},"components/CompleteTasksTableComponent.html":{},"components/ConfirmDeleteTaskComponent.html":{},"components/CreateTaskComponent.html":{},"components/EditTaskComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/ListItemComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PendingTasksTableComponent.html":{},"components/RecurringTaskComponent.html":{},"components/SidenavTasksComponent.html":{},"components/TaskFormComponent.html":{},"components/TasksComponent.html":{},"components/TasksFilterComponent.html":{}}}],["about.compon",{"_index":311,"title":{},"body":{"modules/AboutModule.html":{},"modules/AboutRoutingModule.html":{}}}],["about.component.css",{"_index":19,"title":{},"body":{"components/AboutComponent.html":{}}}],["about.component.html",{"_index":21,"title":{},"body":{"components/AboutComponent.html":{}}}],["about.rout",{"_index":312,"title":{},"body":{"modules/AboutModule.html":{}}}],["about/about.modul",{"_index":365,"title":{},"body":{"modules/AppModule.html":{}}}],["about/about.module#aboutmodul",{"_index":378,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["aboutcompon",{"_index":1,"title":{"components/AboutComponent.html":{}},"body":{"components/AboutComponent.html":{},"modules/AboutModule.html":{},"modules/AboutRoutingModule.html":{},"components/AppComponent.html":{},"components/ButtonBarComponent.html":{},"components/ButtonsComponent.html":{},"components/CompleteTaskComponent.html":{},"components/CompleteTasksTableComponent.html":{},"components/ConfirmDeleteTaskComponent.html":{},"components/CreateTaskComponent.html":{},"components/EditTaskComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/ListItemComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PendingTasksTableComponent.html":{},"components/RecurringTaskComponent.html":{},"components/SidenavTasksComponent.html":{},"components/TaskFormComponent.html":{},"components/TasksComponent.html":{},"components/TasksFilterComponent.html":{},"coverage.html":{},"index.html":{},"overview.html":{}}}],["aboutel",{"_index":24,"title":{},"body":{"components/AboutComponent.html":{}}}],["aboutmodul",{"_index":275,"title":{"modules/AboutModule.html":{}},"body":{"modules/AboutModule.html":{},"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["aboutroutingmodul",{"_index":282,"title":{"modules/AboutRoutingModule.html":{}},"body":{"modules/AboutModule.html":{},"modules/AboutRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["abov",{"_index":201,"title":{},"body":{"components/AboutComponent.html":{},"components/EditTaskComponent.html":{},"index.html":{}}}],["abstract",{"_index":1149,"title":{},"body":{"classes/Logger.html":{},"injectables/LoggerService.html":{}}}],["access",{"_index":309,"title":{},"body":{"modules/AboutModule.html":{},"modules/CompleteTaskModule.html":{},"modules/ConfirmDeleteTaskModule.html":{},"modules/CreateTaskModule.html":{},"modules/EditTaskModule.html":{},"components/HeaderComponent.html":{},"modules/HeaderModule.html":{},"modules/SidenavTasksModule.html":{},"modules/TasksButtonBarModule.html":{},"modules/TasksButtonsModule.html":{},"modules/TasksFilterModule.html":{},"modules/TasksTableModule.html":{},"index.html":{}}}],["accessor",{"_index":677,"title":{},"body":{"injectables/ConsoleLoggerService.html":{}}}],["accordingli",{"_index":1426,"title":{},"body":{"components/TasksFilterComponent.html":{}}}],["acknowledg",{"_index":1623,"title":{},"body":{"index.html":{}}}],["action",{"_index":1014,"title":{},"body":{"injectables/HttpService.html":{}}}],["activatedrout",{"_index":35,"title":{},"body":{"components/AboutComponent.html":{},"components/EditTaskComponent.html":{},"components/SidenavTasksComponent.html":{}}}],["actual",{"_index":225,"title":{},"body":{"components/AboutComponent.html":{}}}],["actual_compon",{"_index":272,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ButtonBarComponent.html":{},"components/ButtonsComponent.html":{},"components/CompleteTaskComponent.html":{},"components/CompleteTasksTableComponent.html":{},"components/ConfirmDeleteTaskComponent.html":{},"components/CreateTaskComponent.html":{},"components/EditTaskComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/ListItemComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PendingTasksTableComponent.html":{},"components/RecurringTaskComponent.html":{},"components/SidenavTasksComponent.html":{},"components/TaskFormComponent.html":{},"components/TasksComponent.html":{},"components/TasksFilterComponent.html":{}}}],["ad",{"_index":792,"title":{},"body":{"components/EditTaskComponent.html":{},"index.html":{}}}],["adapt",{"_index":1581,"title":{},"body":{"dependencies.html":{}}}],["add",{"_index":90,"title":{},"body":{"components/AboutComponent.html":{},"modules/AboutModule.html":{},"modules/CompleteTaskModule.html":{},"modules/ConfirmDeleteTaskModule.html":{},"modules/CreateTaskModule.html":{},"components/EditTaskComponent.html":{},"modules/EditTaskModule.html":{},"modules/HeaderModule.html":{},"injectables/HttpService.html":{},"components/ListItemComponent.html":{},"modules/SidenavTasksModule.html":{},"modules/TasksButtonBarModule.html":{},"modules/TasksButtonsModule.html":{},"modules/TasksFilterModule.html":{},"modules/TasksTableModule.html":{},"injectables/UtilsService.html":{},"index.html":{}}}],["addit",{"_index":1642,"title":{},"body":{"index.html":{}}}],["addition",{"_index":150,"title":{},"body":{"components/AboutComponent.html":{},"index.html":{}}}],["after.clearvalid",{"_index":1369,"title":{},"body":{"components/TaskFormComponent.html":{}}}],["after.dis",{"_index":1368,"title":{},"body":{"components/TaskFormComponent.html":{}}}],["after.en",{"_index":1372,"title":{},"body":{"components/TaskFormComponent.html":{}}}],["after.setvalidators([validators.requir",{"_index":1373,"title":{},"body":{"components/TaskFormComponent.html":{}}}],["after.updatevalueandvalid",{"_index":1370,"title":{},"body":{"components/TaskFormComponent.html":{}}}],["afterviewinit",{"_index":14,"title":{},"body":{"components/AboutComponent.html":{},"components/TasksFilterComponent.html":{}}}],["again",{"_index":1689,"title":{},"body":{"index.html":{}}}],["against",{"_index":1717,"title":{},"body":{"index.html":{}}}],["alias",{"_index":1793,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["allow",{"_index":554,"title":{},"body":{"components/CompleteTaskComponent.html":{},"components/ListItemComponent.html":{},"components/TaskFormComponent.html":{},"components/TasksFilterComponent.html":{}}}],["along",{"_index":543,"title":{},"body":{"components/CompleteTaskComponent.html":{},"injectables/ConsoleLoggerService.html":{},"classes/Logger.html":{},"injectables/LoggerService.html":{}}}],["alreadi",{"_index":717,"title":{},"body":{"modules/CoreModule.html":{},"index.html":{}}}],["anchor",{"_index":92,"title":{},"body":{"components/AboutComponent.html":{}}}],["and/or",{"_index":198,"title":{},"body":{"components/AboutComponent.html":{},"components/ButtonBarComponent.html":{},"components/ButtonsComponent.html":{}}}],["angular",{"_index":288,"title":{},"body":{"modules/AboutModule.html":{},"modules/AboutRoutingModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CompleteTaskComponent.html":{},"modules/CompleteTaskModule.html":{},"modules/ConfirmDeleteTaskModule.html":{},"modules/CoreModule.html":{},"modules/CreateTaskModule.html":{},"components/EditTaskComponent.html":{},"modules/EditTaskModule.html":{},"modules/FooterModule.html":{},"modules/HeaderModule.html":{},"components/ListItemComponent.html":{},"classes/Logger.html":{},"injectables/LoggerService.html":{},"modules/SidenavTasksModule.html":{},"components/TaskFormComponent.html":{},"modules/TaskFormModule.html":{},"modules/TasksButtonBarModule.html":{},"modules/TasksButtonsModule.html":{},"modules/TasksDialogModule.html":{},"modules/TasksFilterModule.html":{},"modules/TasksModule.html":{},"modules/TasksRoutingModule.html":{},"modules/TasksTableModule.html":{},"index.html":{}}}],["angular/angular",{"_index":1010,"title":{},"body":{"injectables/HttpService.html":{}}}],["angular/anim",{"_index":1573,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":1575,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk/layout",{"_index":1507,"title":{},"body":{"injectables/UtilsService.html":{}}}],["angular/common",{"_index":291,"title":{},"body":{"modules/AboutModule.html":{},"modules/CompleteTaskModule.html":{},"modules/ConfirmDeleteTaskModule.html":{},"modules/CoreModule.html":{},"modules/CreateTaskModule.html":{},"components/EditTaskComponent.html":{},"modules/EditTaskModule.html":{},"modules/FooterModule.html":{},"modules/HeaderModule.html":{},"modules/SidenavTasksModule.html":{},"modules/TaskFormModule.html":{},"modules/TasksButtonBarModule.html":{},"modules/TasksButtonsModule.html":{},"modules/TasksFilterModule.html":{},"modules/TasksModule.html":{},"modules/TasksTableModule.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":704,"title":{},"body":{"modules/CoreModule.html":{},"injectables/HttpService.html":{}}}],["angular/compil",{"_index":1577,"title":{},"body":{"dependencies.html":{}}}],["angular/cor",{"_index":78,"title":{},"body":{"components/AboutComponent.html":{},"modules/AboutModule.html":{},"modules/AboutRoutingModule.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ButtonBarComponent.html":{},"components/ButtonsComponent.html":{},"components/CompleteTaskComponent.html":{},"modules/CompleteTaskModule.html":{},"components/CompleteTasksTableComponent.html":{},"components/ConfirmDeleteTaskComponent.html":{},"modules/ConfirmDeleteTaskModule.html":{},"injectables/ConsoleLoggerService.html":{},"modules/CoreModule.html":{},"components/CreateTaskComponent.html":{},"modules/CreateTaskModule.html":{},"components/EditTaskComponent.html":{},"modules/EditTaskModule.html":{},"components/FooterComponent.html":{},"modules/FooterModule.html":{},"components/HeaderComponent.html":{},"modules/HeaderModule.html":{},"injectables/HttpService.html":{},"components/ListItemComponent.html":{},"injectables/LoaderService.html":{},"interfaces/LoaderState.html":{},"classes/Logger.html":{},"injectables/LoggerService.html":{},"injectables/MatPaginatorCustom.html":{},"components/PageNotFoundComponent.html":{},"components/PendingTasksTableComponent.html":{},"components/RecurringTaskComponent.html":{},"components/SidenavTasksComponent.html":{},"modules/SidenavTasksModule.html":{},"components/TaskFormComponent.html":{},"modules/TaskFormModule.html":{},"modules/TasksButtonBarModule.html":{},"modules/TasksButtonsModule.html":{},"components/TasksComponent.html":{},"modules/TasksDialogModule.html":{},"components/TasksFilterComponent.html":{},"modules/TasksFilterModule.html":{},"modules/TasksModule.html":{},"modules/TasksRoutingModule.html":{},"modules/TasksTableModule.html":{},"injectables/UtilsService.html":{},"dependencies.html":{}}}],["angular/flex",{"_index":294,"title":{},"body":{"modules/AboutModule.html":{},"modules/CompleteTaskModule.html":{},"modules/ConfirmDeleteTaskModule.html":{},"modules/CoreModule.html":{},"modules/CreateTaskModule.html":{},"modules/EditTaskModule.html":{},"modules/FooterModule.html":{},"modules/HeaderModule.html":{},"modules/SidenavTasksModule.html":{},"modules/TaskFormModule.html":{},"modules/TasksButtonBarModule.html":{},"modules/TasksButtonsModule.html":{},"modules/TasksFilterModule.html":{},"modules/TasksModule.html":{},"modules/TasksTableModule.html":{},"dependencies.html":{}}}],["angular/form",{"_index":561,"title":{},"body":{"components/CompleteTaskComponent.html":{},"modules/CompleteTaskModule.html":{},"modules/ConfirmDeleteTaskModule.html":{},"modules/CreateTaskModule.html":{},"modules/EditTaskModule.html":{},"components/RecurringTaskComponent.html":{},"components/TaskFormComponent.html":{},"modules/TaskFormModule.html":{},"modules/TasksModule.html":{},"modules/TasksTableModule.html":{},"dependencies.html":{}}}],["angular/http",{"_index":1580,"title":{},"body":{"dependencies.html":{}}}],["angular/materi",{"_index":297,"title":{},"body":{"modules/AboutModule.html":{},"modules/AppModule.html":{},"components/ButtonBarComponent.html":{},"components/ButtonsComponent.html":{},"components/CompleteTaskComponent.html":{},"modules/CompleteTaskModule.html":{},"components/ConfirmDeleteTaskComponent.html":{},"modules/ConfirmDeleteTaskModule.html":{},"modules/CoreModule.html":{},"components/CreateTaskComponent.html":{},"modules/CreateTaskModule.html":{},"components/EditTaskComponent.html":{},"modules/EditTaskModule.html":{},"modules/HeaderModule.html":{},"injectables/MatPaginatorCustom.html":{},"components/RecurringTaskComponent.html":{},"components/SidenavTasksComponent.html":{},"modules/SidenavTasksModule.html":{},"modules/TaskFormModule.html":{},"modules/TasksButtonBarModule.html":{},"modules/TasksButtonsModule.html":{},"modules/TasksFilterModule.html":{},"modules/TasksModule.html":{},"modules/TasksTableModule.html":{},"injectables/UtilsService.html":{},"dependencies.html":{}}}],["angular/platform",{"_index":360,"title":{},"body":{"modules/AppModule.html":{},"modules/CoreModule.html":{},"dependencies.html":{}}}],["angular/rout",{"_index":79,"title":{},"body":{"components/AboutComponent.html":{},"modules/AboutRoutingModule.html":{},"modules/AppRoutingModule.html":{},"components/ButtonsComponent.html":{},"modules/CompleteTaskModule.html":{},"modules/ConfirmDeleteTaskModule.html":{},"modules/CoreModule.html":{},"modules/CreateTaskModule.html":{},"components/EditTaskComponent.html":{},"modules/EditTaskModule.html":{},"modules/FooterModule.html":{},"modules/HeaderModule.html":{},"components/SidenavTasksComponent.html":{},"modules/SidenavTasksModule.html":{},"modules/TasksButtonBarModule.html":{},"modules/TasksButtonsModule.html":{},"modules/TasksModule.html":{},"modules/TasksRoutingModule.html":{},"modules/TasksTableModule.html":{},"dependencies.html":{}}}],["answer",{"_index":95,"title":{},"body":{"components/AboutComponent.html":{}}}],["anyth",{"_index":182,"title":{},"body":{"components/AboutComponent.html":{}}}],["api",{"_index":637,"title":{},"body":{"components/ConfirmDeleteTaskComponent.html":{},"injectables/HttpService.html":{},"index.html":{}}}],["apidoc",{"_index":1737,"title":{},"body":{"index.html":{}}}],["app",{"_index":12,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ButtonBarComponent.html":{},"components/ButtonsComponent.html":{},"components/CompleteTaskComponent.html":{},"components/CompleteTasksTableComponent.html":{},"components/ConfirmDeleteTaskComponent.html":{},"injectables/ConsoleLoggerService.html":{},"modules/CoreModule.html":{},"components/CreateTaskComponent.html":{},"modules/CreateTaskModule.html":{},"components/EditTaskComponent.html":{},"modules/EditTaskModule.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"modules/HeaderModule.html":{},"injectables/HttpService.html":{},"components/ListItemComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PendingTasksTableComponent.html":{},"components/RecurringTaskComponent.html":{},"components/SidenavTasksComponent.html":{},"modules/SidenavTasksModule.html":{},"components/TaskFormComponent.html":{},"modules/TasksButtonsModule.html":{},"components/TasksComponent.html":{},"modules/TasksDialogModule.html":{},"components/TasksFilterComponent.html":{},"modules/TasksModule.html":{},"injectables/UtilsService.html":{},"index.html":{}}}],["app.compon",{"_index":363,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.css",{"_index":326,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.html",{"_index":327,"title":{},"body":{"components/AppComponent.html":{}}}],["app.rout",{"_index":364,"title":{},"body":{"modules/AppModule.html":{}}}],["app/core/services/logger.servic",{"_index":563,"title":{},"body":{"components/CompleteTaskComponent.html":{},"components/ConfirmDeleteTaskComponent.html":{},"components/CreateTaskComponent.html":{},"components/EditTaskComponent.html":{},"injectables/UtilsService.html":{}}}],["appcompon",{"_index":237,"title":{"components/AppComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ButtonBarComponent.html":{},"components/ButtonsComponent.html":{},"components/CompleteTaskComponent.html":{},"components/CompleteTasksTableComponent.html":{},"components/ConfirmDeleteTaskComponent.html":{},"components/CreateTaskComponent.html":{},"components/EditTaskComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/ListItemComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PendingTasksTableComponent.html":{},"components/RecurringTaskComponent.html":{},"components/SidenavTasksComponent.html":{},"components/TaskFormComponent.html":{},"components/TasksComponent.html":{},"components/TasksFilterComponent.html":{},"coverage.html":{},"overview.html":{}}}],["appli",{"_index":1088,"title":{},"body":{"components/ListItemComponent.html":{}}}],["applic",{"_index":112,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/EditTaskComponent.html":{},"components/SidenavTasksComponent.html":{},"index.html":{}}}],["application/json",{"_index":1064,"title":{},"body":{"injectables/HttpService.html":{}}}],["appmodul",{"_index":348,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules/CoreModule.html":{},"modules.html":{},"overview.html":{}}}],["approut",{"_index":376,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["approutingmodul",{"_index":353,"title":{"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["arg",{"_index":672,"title":{},"body":{"injectables/ConsoleLoggerService.html":{},"classes/Logger.html":{},"injectables/LoggerService.html":{}}}],["argument",{"_index":674,"title":{},"body":{"injectables/ConsoleLoggerService.html":{},"injectables/HttpService.html":{},"classes/Logger.html":{},"injectables/LoggerService.html":{}}}],["around",{"_index":718,"title":{},"body":{"modules/CoreModule.html":{},"modules/TasksModule.html":{}}}],["array",{"_index":389,"title":{},"body":{"components/ButtonBarComponent.html":{},"components/EditTaskComponent.html":{},"components/SidenavTasksComponent.html":{},"index.html":{}}}],["ascend",{"_index":128,"title":{},"body":{"components/AboutComponent.html":{},"components/EditTaskComponent.html":{}}}],["associ",{"_index":665,"title":{},"body":{"injectables/ConsoleLoggerService.html":{},"modules/CoreModule.html":{},"modules/TasksModule.html":{}}}],["audit",{"_index":1686,"title":{},"body":{"index.html":{}}}],["authent",{"_index":1012,"title":{},"body":{"injectables/HttpService.html":{}}}],["author",{"_index":1622,"title":{},"body":{"index.html":{}}}],["automat",{"_index":1697,"title":{},"body":{"index.html":{}}}],["avail",{"_index":149,"title":{},"body":{"components/AboutComponent.html":{},"components/ConfirmDeleteTaskComponent.html":{},"index.html":{},"modules.html":{},"miscellaneous/typealiases.html":{}}}],["awesom",{"_index":1590,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["back",{"_index":421,"title":{},"body":{"components/ButtonBarComponent.html":{},"components/EditTaskComponent.html":{}}}],["badg",{"_index":1091,"title":{},"body":{"components/ListItemComponent.html":{}}}],["bar",{"_index":200,"title":{},"body":{"components/AboutComponent.html":{},"components/ButtonBarComponent.html":{},"components/HeaderComponent.html":{},"modules/TasksButtonBarModule.html":{}}}],["bar'},{'nam",{"_index":240,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ButtonBarComponent.html":{},"components/ButtonsComponent.html":{},"components/CompleteTaskComponent.html":{},"components/CompleteTasksTableComponent.html":{},"components/ConfirmDeleteTaskComponent.html":{},"components/CreateTaskComponent.html":{},"components/EditTaskComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/ListItemComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PendingTasksTableComponent.html":{},"components/RecurringTaskComponent.html":{},"components/SidenavTasksComponent.html":{},"components/TaskFormComponent.html":{},"components/TasksComponent.html":{},"components/TasksFilterComponent.html":{}}}],["bar.compon",{"_index":820,"title":{},"body":{"components/EditTaskComponent.html":{},"modules/TasksButtonBarModule.html":{}}}],["bar.component.css",{"_index":395,"title":{},"body":{"components/ButtonBarComponent.html":{}}}],["bar.component.html",{"_index":396,"title":{},"body":{"components/ButtonBarComponent.html":{}}}],["bar.component.t",{"_index":386,"title":{},"body":{"components/ButtonBarComponent.html":{},"coverage.html":{}}}],["bar.component.ts:22",{"_index":410,"title":{},"body":{"components/ButtonBarComponent.html":{}}}],["bar.component.ts:24",{"_index":411,"title":{},"body":{"components/ButtonBarComponent.html":{}}}],["bar.component.ts:26",{"_index":412,"title":{},"body":{"components/ButtonBarComponent.html":{}}}],["bar.component.ts:28",{"_index":414,"title":{},"body":{"components/ButtonBarComponent.html":{}}}],["bar.component.ts:30",{"_index":415,"title":{},"body":{"components/ButtonBarComponent.html":{}}}],["bar.component.ts:32",{"_index":416,"title":{},"body":{"components/ButtonBarComponent.html":{}}}],["bar.component.ts:34",{"_index":417,"title":{},"body":{"components/ButtonBarComponent.html":{}}}],["bar.component.ts:36",{"_index":418,"title":{},"body":{"components/ButtonBarComponent.html":{}}}],["bar.component.ts:38",{"_index":419,"title":{},"body":{"components/ButtonBarComponent.html":{}}}],["bar.component.ts:40",{"_index":422,"title":{},"body":{"components/ButtonBarComponent.html":{}}}],["bar.component.ts:42",{"_index":425,"title":{},"body":{"components/ButtonBarComponent.html":{}}}],["bar.component.ts:44",{"_index":428,"title":{},"body":{"components/ButtonBarComponent.html":{}}}],["bar.component.ts:46",{"_index":431,"title":{},"body":{"components/ButtonBarComponent.html":{}}}],["bar.component.ts:48",{"_index":409,"title":{},"body":{"components/ButtonBarComponent.html":{}}}],["bar.modul",{"_index":940,"title":{},"body":{"modules/EditTaskModule.html":{},"modules/TasksTableModule.html":{}}}],["bar.module.t",{"_index":1391,"title":{},"body":{"modules/TasksButtonBarModule.html":{}}}],["bar/button",{"_index":385,"title":{},"body":{"components/ButtonBarComponent.html":{},"components/EditTaskComponent.html":{},"coverage.html":{}}}],["bar/task",{"_index":939,"title":{},"body":{"modules/EditTaskModule.html":{},"modules/TasksButtonBarModule.html":{},"modules/TasksTableModule.html":{}}}],["base",{"_index":94,"title":{},"body":{"components/AboutComponent.html":{},"components/CreateTaskComponent.html":{},"components/EditTaskComponent.html":{},"components/HeaderComponent.html":{},"injectables/HttpService.html":{},"components/ListItemComponent.html":{},"components/PageNotFoundComponent.html":{},"components/SidenavTasksComponent.html":{},"components/TaskFormComponent.html":{},"index.html":{}}}],["basic",{"_index":466,"title":{},"body":{"components/ButtonsComponent.html":{},"injectables/ConsoleLoggerService.html":{}}}],["be",{"_index":427,"title":{},"body":{"components/ButtonBarComponent.html":{},"components/ButtonsComponent.html":{},"components/EditTaskComponent.html":{}}}],["befor",{"_index":1040,"title":{},"body":{"injectables/HttpService.html":{},"index.html":{}}}],["behaviorsubject",{"_index":1501,"title":{},"body":{"injectables/UtilsService.html":{}}}],["behaviorsubject(fals",{"_index":1509,"title":{},"body":{"injectables/UtilsService.html":{}}}],["belong",{"_index":814,"title":{},"body":{"components/EditTaskComponent.html":{}}}],["below",{"_index":97,"title":{},"body":{"components/AboutComponent.html":{},"classes/Logger.html":{},"injectables/LoggerService.html":{},"index.html":{}}}],["beta.16",{"_index":1579,"title":{},"body":{"dependencies.html":{}}}],["between",{"_index":721,"title":{},"body":{"modules/CoreModule.html":{},"modules/TasksModule.html":{},"index.html":{}}}],["bind",{"_index":660,"title":{},"body":{"injectables/ConsoleLoggerService.html":{}}}],["bodi",{"_index":1042,"title":{},"body":{"injectables/HttpService.html":{}}}],["boolean",{"_index":69,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ButtonBarComponent.html":{},"components/ButtonsComponent.html":{},"components/CompleteTaskComponent.html":{},"components/ConfirmDeleteTaskComponent.html":{},"components/CreateTaskComponent.html":{},"components/EditTaskComponent.html":{},"components/HeaderComponent.html":{},"components/ListItemComponent.html":{},"injectables/LoaderService.html":{},"interfaces/LoaderState.html":{},"components/RecurringTaskComponent.html":{},"components/SidenavTasksComponent.html":{},"classes/Task.html":{},"components/TaskFormComponent.html":{},"components/TasksFilterComponent.html":{},"injectables/UtilsService.html":{}}}],["bootstrap",{"_index":278,"title":{},"body":{"modules/AboutModule.html":{},"modules/AppModule.html":{},"modules/CompleteTaskModule.html":{},"modules/ConfirmDeleteTaskModule.html":{},"modules/CreateTaskModule.html":{},"modules/EditTaskModule.html":{},"modules/FooterModule.html":{},"modules/HeaderModule.html":{},"modules/SidenavTasksModule.html":{},"modules/TaskFormModule.html":{},"modules/TasksButtonBarModule.html":{},"modules/TasksButtonsModule.html":{},"modules/TasksDialogModule.html":{},"modules/TasksFilterModule.html":{},"modules/TasksModule.html":{},"modules/TasksTableModule.html":{},"index.html":{},"overview.html":{}}}],["both",{"_index":1377,"title":{},"body":{"components/TaskFormComponent.html":{},"index.html":{}}}],["bottom",{"_index":184,"title":{},"body":{"components/AboutComponent.html":{}}}],["bound",{"_index":661,"title":{},"body":{"injectables/ConsoleLoggerService.html":{}}}],["break",{"_index":1688,"title":{},"body":{"index.html":{}}}],["breakpoint",{"_index":1505,"title":{},"body":{"injectables/UtilsService.html":{},"index.html":{}}}],["breakpointobserv",{"_index":1489,"title":{},"body":{"injectables/UtilsService.html":{}}}],["breakpoints.smal",{"_index":1513,"title":{},"body":{"injectables/UtilsService.html":{}}}],["breakpointst",{"_index":1506,"title":{},"body":{"injectables/UtilsService.html":{}}}],["brows",{"_index":1713,"title":{},"body":{"index.html":{},"modules.html":{}}}],["browser",{"_index":361,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"index.html":{},"modules.html":{}}}],["browser/anim",{"_index":707,"title":{},"body":{"modules/CoreModule.html":{}}}],["browseranimationsmodul",{"_index":706,"title":{},"body":{"modules/CoreModule.html":{}}}],["browsermodul",{"_index":359,"title":{},"body":{"modules/AppModule.html":{}}}],["build",{"_index":1612,"title":{},"body":{"index.html":{}}}],["buildthat",{"_index":1656,"title":{},"body":{"index.html":{}}}],["built",{"_index":1610,"title":{},"body":{"index.html":{}}}],["bulk",{"_index":636,"title":{},"body":{"components/ConfirmDeleteTaskComponent.html":{}}}],["button",{"_index":73,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ButtonBarComponent.html":{},"components/ButtonsComponent.html":{},"components/CompleteTaskComponent.html":{},"components/CompleteTasksTableComponent.html":{},"components/ConfirmDeleteTaskComponent.html":{},"components/CreateTaskComponent.html":{},"components/EditTaskComponent.html":{},"modules/EditTaskModule.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/ListItemComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PendingTasksTableComponent.html":{},"components/RecurringTaskComponent.html":{},"components/SidenavTasksComponent.html":{},"components/TaskFormComponent.html":{},"modules/TasksButtonBarModule.html":{},"modules/TasksButtonsModule.html":{},"components/TasksComponent.html":{},"components/TasksFilterComponent.html":{},"modules/TasksTableModule.html":{}}}],["buttonbar",{"_index":771,"title":{},"body":{"components/EditTaskComponent.html":{}}}],["buttonbarcompon",{"_index":239,"title":{"components/ButtonBarComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ButtonBarComponent.html":{},"components/ButtonsComponent.html":{},"components/CompleteTaskComponent.html":{},"components/CompleteTasksTableComponent.html":{},"components/ConfirmDeleteTaskComponent.html":{},"components/CreateTaskComponent.html":{},"components/EditTaskComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/ListItemComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PendingTasksTableComponent.html":{},"components/RecurringTaskComponent.html":{},"components/SidenavTasksComponent.html":{},"components/TaskFormComponent.html":{},"modules/TasksButtonBarModule.html":{},"components/TasksComponent.html":{},"components/TasksFilterComponent.html":{},"coverage.html":{},"overview.html":{}}}],["buttonclass",{"_index":1083,"title":{},"body":{"components/ListItemComponent.html":{},"components/SidenavTasksComponent.html":{}}}],["buttons'},{'nam",{"_index":242,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ButtonBarComponent.html":{},"components/ButtonsComponent.html":{},"components/CompleteTaskComponent.html":{},"components/CompleteTasksTableComponent.html":{},"components/ConfirmDeleteTaskComponent.html":{},"components/CreateTaskComponent.html":{},"components/EditTaskComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/ListItemComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PendingTasksTableComponent.html":{},"components/RecurringTaskComponent.html":{},"components/SidenavTasksComponent.html":{},"components/TaskFormComponent.html":{},"components/TasksComponent.html":{},"components/TasksFilterComponent.html":{}}}],["buttons.component.css",{"_index":437,"title":{},"body":{"components/ButtonsComponent.html":{}}}],["buttons.component.html",{"_index":438,"title":{},"body":{"components/ButtonsComponent.html":{}}}],["buttons.modul",{"_index":1395,"title":{},"body":{"modules/TasksButtonBarModule.html":{},"modules/TasksTableModule.html":{}}}],["buttons.module.t",{"_index":1400,"title":{},"body":{"modules/TasksButtonsModule.html":{}}}],["buttonscompon",{"_index":241,"title":{"components/ButtonsComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ButtonBarComponent.html":{},"components/ButtonsComponent.html":{},"components/CompleteTaskComponent.html":{},"components/CompleteTasksTableComponent.html":{},"components/ConfirmDeleteTaskComponent.html":{},"components/CreateTaskComponent.html":{},"components/EditTaskComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/ListItemComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PendingTasksTableComponent.html":{},"components/RecurringTaskComponent.html":{},"components/SidenavTasksComponent.html":{},"components/TaskFormComponent.html":{},"modules/TasksButtonsModule.html":{},"components/TasksComponent.html":{},"components/TasksFilterComponent.html":{},"coverage.html":{},"overview.html":{}}}],["cancel",{"_index":509,"title":{},"body":{"components/CompleteTaskComponent.html":{},"components/ConfirmDeleteTaskComponent.html":{},"components/CreateTaskComponent.html":{},"components/EditTaskComponent.html":{},"components/RecurringTaskComponent.html":{}}}],["capabl",{"_index":391,"title":{},"body":{"components/ButtonBarComponent.html":{},"components/ButtonsComponent.html":{},"modules/TasksButtonsModule.html":{},"index.html":{}}}],["case",{"_index":1634,"title":{},"body":{"index.html":{}}}],["cdk",{"_index":1744,"title":{},"body":{"index.html":{}}}],["ce",{"_index":1647,"title":{},"body":{"index.html":{}}}],["chai",{"_index":1706,"title":{},"body":{"index.html":{}}}],["challeng",{"_index":1774,"title":{},"body":{"index.html":{}}}],["chang",{"_index":834,"title":{},"body":{"components/EditTaskComponent.html":{},"components/TasksFilterComponent.html":{},"injectables/UtilsService.html":{},"index.html":{}}}],["changedetector",{"_index":785,"title":{},"body":{"components/EditTaskComponent.html":{}}}],["changedetectorref",{"_index":331,"title":{},"body":{"components/AppComponent.html":{},"components/EditTaskComponent.html":{}}}],["check",{"_index":905,"title":{},"body":{"components/EditTaskComponent.html":{},"components/SidenavTasksComponent.html":{},"components/TaskFormComponent.html":{}}}],["checkbox",{"_index":207,"title":{},"body":{"components/AboutComponent.html":{}}}],["checkerror",{"_index":510,"title":{},"body":{"components/CompleteTaskComponent.html":{},"components/TaskFormComponent.html":{}}}],["checkerror(param",{"_index":527,"title":{},"body":{"components/CompleteTaskComponent.html":{}}}],["checkerror(properti",{"_index":1321,"title":{},"body":{"components/TaskFormComponent.html":{}}}],["checkformerror",{"_index":1314,"title":{},"body":{"components/TaskFormComponent.html":{}}}],["checkformerror(form",{"_index":1323,"title":{},"body":{"components/TaskFormComponent.html":{}}}],["children",{"_index":1467,"title":{},"body":{"modules/TasksRoutingModule.html":{}}}],["chrome",{"_index":154,"title":{},"body":{"components/AboutComponent.html":{},"index.html":{}}}],["class",{"_index":82,"title":{"classes/Logger.html":{},"classes/Task.html":{}},"body":{"components/AboutComponent.html":{},"modules/AboutModule.html":{},"modules/AboutRoutingModule.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ButtonBarComponent.html":{},"components/ButtonsComponent.html":{},"components/CompleteTaskComponent.html":{},"modules/CompleteTaskModule.html":{},"components/CompleteTasksTableComponent.html":{},"components/ConfirmDeleteTaskComponent.html":{},"modules/ConfirmDeleteTaskModule.html":{},"injectables/ConsoleLoggerService.html":{},"modules/CoreModule.html":{},"components/CreateTaskComponent.html":{},"modules/CreateTaskModule.html":{},"components/EditTaskComponent.html":{},"modules/EditTaskModule.html":{},"components/FooterComponent.html":{},"modules/FooterModule.html":{},"components/HeaderComponent.html":{},"modules/HeaderModule.html":{},"injectables/HttpService.html":{},"components/ListItemComponent.html":{},"injectables/LoaderService.html":{},"interfaces/LoaderState.html":{},"classes/Logger.html":{},"injectables/LoggerService.html":{},"injectables/MatPaginatorCustom.html":{},"components/PageNotFoundComponent.html":{},"components/PendingTasksTableComponent.html":{},"components/RecurringTaskComponent.html":{},"components/SidenavTasksComponent.html":{},"modules/SidenavTasksModule.html":{},"classes/Task.html":{},"components/TaskFormComponent.html":{},"modules/TaskFormModule.html":{},"modules/TasksButtonBarModule.html":{},"modules/TasksButtonsModule.html":{},"components/TasksComponent.html":{},"modules/TasksDialogModule.html":{},"components/TasksFilterComponent.html":{},"modules/TasksFilterModule.html":{},"modules/TasksModule.html":{},"modules/TasksRoutingModule.html":{},"modules/TasksTableModule.html":{},"injectables/UtilsService.html":{},"coverage.html":{},"overview.html":{}}}],["class.mark",{"_index":513,"title":{},"body":{"components/CompleteTaskComponent.html":{},"components/ConfirmDeleteTaskComponent.html":{},"components/CreateTaskComponent.html":{},"components/EditTaskComponent.html":{},"components/RecurringTaskComponent.html":{},"components/TaskFormComponent.html":{}}}],["classmark",{"_index":566,"title":{},"body":{"components/CompleteTaskComponent.html":{},"components/ConfirmDeleteTaskComponent.html":{},"components/CreateTaskComponent.html":{},"components/EditTaskComponent.html":{},"components/RecurringTaskComponent.html":{},"components/TaskFormComponent.html":{}}}],["clean",{"_index":798,"title":{},"body":{"components/EditTaskComponent.html":{},"components/RecurringTaskComponent.html":{}}}],["clear",{"_index":1415,"title":{},"body":{"components/TasksFilterComponent.html":{}}}],["click",{"_index":161,"title":{},"body":{"components/AboutComponent.html":{},"components/ButtonBarComponent.html":{},"components/ButtonsComponent.html":{},"components/HeaderComponent.html":{},"components/ListItemComponent.html":{},"components/RecurringTaskComponent.html":{},"components/SidenavTasksComponent.html":{},"components/TasksFilterComponent.html":{}}}],["client",{"_index":1605,"title":{},"body":{"index.html":{}}}],["client/node_modules/protractor/node_modules/webdriv",{"_index":1729,"title":{},"body":{"index.html":{}}}],["clipboard",{"_index":904,"title":{},"body":{"components/EditTaskComponent.html":{},"components/SidenavTasksComponent.html":{}}}],["clone",{"_index":1625,"title":{},"body":{"index.html":{}}}],["close",{"_index":526,"title":{},"body":{"components/CompleteTaskComponent.html":{},"components/ConfirmDeleteTaskComponent.html":{},"components/CreateTaskComponent.html":{},"components/RecurringTaskComponent.html":{}}}],["cluster_aboutmodul",{"_index":279,"title":{},"body":{"modules/AboutModule.html":{},"overview.html":{}}}],["cluster_aboutmodule_declar",{"_index":280,"title":{},"body":{"modules/AboutModule.html":{},"overview.html":{}}}],["cluster_aboutmodule_import",{"_index":281,"title":{},"body":{"modules/AboutModule.html":{},"overview.html":{}}}],["cluster_appmodul",{"_index":349,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":352,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declar",{"_index":350,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_import",{"_index":351,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_completetaskmodul",{"_index":598,"title":{},"body":{"modules/CompleteTaskModule.html":{},"overview.html":{}}}],["cluster_completetaskmodule_declar",{"_index":599,"title":{},"body":{"modules/CompleteTaskModule.html":{},"overview.html":{}}}],["cluster_confirmdeletetaskmodul",{"_index":650,"title":{},"body":{"modules/ConfirmDeleteTaskModule.html":{},"overview.html":{}}}],["cluster_confirmdeletetaskmodule_declar",{"_index":651,"title":{},"body":{"modules/ConfirmDeleteTaskModule.html":{},"overview.html":{}}}],["cluster_createtaskmodul",{"_index":761,"title":{},"body":{"modules/CreateTaskModule.html":{},"overview.html":{}}}],["cluster_createtaskmodule_declar",{"_index":762,"title":{},"body":{"modules/CreateTaskModule.html":{},"overview.html":{}}}],["cluster_createtaskmodule_import",{"_index":763,"title":{},"body":{"modules/CreateTaskModule.html":{},"overview.html":{}}}],["cluster_edittaskmodul",{"_index":926,"title":{},"body":{"modules/EditTaskModule.html":{},"overview.html":{}}}],["cluster_edittaskmodule_declar",{"_index":927,"title":{},"body":{"modules/EditTaskModule.html":{},"overview.html":{}}}],["cluster_edittaskmodule_import",{"_index":928,"title":{},"body":{"modules/EditTaskModule.html":{},"overview.html":{}}}],["cluster_edittaskmodule_provid",{"_index":929,"title":{},"body":{"modules/EditTaskModule.html":{},"overview.html":{}}}],["cluster_footermodul",{"_index":949,"title":{},"body":{"modules/FooterModule.html":{},"overview.html":{}}}],["cluster_footermodule_declar",{"_index":950,"title":{},"body":{"modules/FooterModule.html":{},"overview.html":{}}}],["cluster_footermodule_export",{"_index":951,"title":{},"body":{"modules/FooterModule.html":{},"overview.html":{}}}],["cluster_headermodul",{"_index":995,"title":{},"body":{"modules/HeaderModule.html":{},"overview.html":{}}}],["cluster_headermodule_declar",{"_index":996,"title":{},"body":{"modules/HeaderModule.html":{},"overview.html":{}}}],["cluster_headermodule_export",{"_index":998,"title":{},"body":{"modules/HeaderModule.html":{},"overview.html":{}}}],["cluster_headermodule_import",{"_index":997,"title":{},"body":{"modules/HeaderModule.html":{},"overview.html":{}}}],["cluster_sidenavtasksmodul",{"_index":1268,"title":{},"body":{"modules/SidenavTasksModule.html":{},"overview.html":{}}}],["cluster_sidenavtasksmodule_declar",{"_index":1269,"title":{},"body":{"modules/SidenavTasksModule.html":{},"overview.html":{}}}],["cluster_sidenavtasksmodule_export",{"_index":1271,"title":{},"body":{"modules/SidenavTasksModule.html":{},"overview.html":{}}}],["cluster_sidenavtasksmodule_import",{"_index":1270,"title":{},"body":{"modules/SidenavTasksModule.html":{}}}],["cluster_taskformmodul",{"_index":1381,"title":{},"body":{"modules/TaskFormModule.html":{},"overview.html":{}}}],["cluster_taskformmodule_declar",{"_index":1382,"title":{},"body":{"modules/TaskFormModule.html":{},"overview.html":{}}}],["cluster_taskformmodule_export",{"_index":1383,"title":{},"body":{"modules/TaskFormModule.html":{},"overview.html":{}}}],["cluster_tasksbuttonbarmodul",{"_index":1386,"title":{},"body":{"modules/TasksButtonBarModule.html":{},"overview.html":{}}}],["cluster_tasksbuttonbarmodule_declar",{"_index":1387,"title":{},"body":{"modules/TasksButtonBarModule.html":{},"overview.html":{}}}],["cluster_tasksbuttonbarmodule_export",{"_index":1389,"title":{},"body":{"modules/TasksButtonBarModule.html":{},"overview.html":{}}}],["cluster_tasksbuttonbarmodule_import",{"_index":1388,"title":{},"body":{"modules/TasksButtonBarModule.html":{},"overview.html":{}}}],["cluster_tasksbuttonsmodul",{"_index":1396,"title":{},"body":{"modules/TasksButtonsModule.html":{},"overview.html":{}}}],["cluster_tasksbuttonsmodule_declar",{"_index":1397,"title":{},"body":{"modules/TasksButtonsModule.html":{},"overview.html":{}}}],["cluster_tasksbuttonsmodule_export",{"_index":1398,"title":{},"body":{"modules/TasksButtonsModule.html":{},"overview.html":{}}}],["cluster_tasksdialogmodul",{"_index":1403,"title":{},"body":{"modules/TasksDialogModule.html":{}}}],["cluster_tasksdialogmodule_import",{"_index":1404,"title":{},"body":{"modules/TasksDialogModule.html":{}}}],["cluster_tasksfiltermodul",{"_index":1445,"title":{},"body":{"modules/TasksFilterModule.html":{},"overview.html":{}}}],["cluster_tasksfiltermodule_declar",{"_index":1446,"title":{},"body":{"modules/TasksFilterModule.html":{},"overview.html":{}}}],["cluster_tasksfiltermodule_export",{"_index":1447,"title":{},"body":{"modules/TasksFilterModule.html":{},"overview.html":{}}}],["cluster_tasksmodul",{"_index":1452,"title":{},"body":{"modules/TasksModule.html":{},"overview.html":{}}}],["cluster_tasksmodule_declar",{"_index":1453,"title":{},"body":{"modules/TasksModule.html":{},"overview.html":{}}}],["cluster_tasksmodule_import",{"_index":1454,"title":{},"body":{"modules/TasksModule.html":{},"overview.html":{}}}],["cluster_taskstablemodul",{"_index":1471,"title":{},"body":{"modules/TasksTableModule.html":{},"overview.html":{}}}],["cluster_taskstablemodule_declar",{"_index":1472,"title":{},"body":{"modules/TasksTableModule.html":{},"overview.html":{}}}],["cluster_taskstablemodule_import",{"_index":1473,"title":{},"body":{"modules/TasksTableModule.html":{}}}],["code",{"_index":1696,"title":{},"body":{"index.html":{}}}],["collaps",{"_index":962,"title":{},"body":{"components/HeaderComponent.html":{},"components/SidenavTasksComponent.html":{},"injectables/UtilsService.html":{},"miscellaneous/typealiases.html":{}}}],["color",{"_index":791,"title":{},"body":{"components/EditTaskComponent.html":{}}}],["column",{"_index":214,"title":{},"body":{"components/AboutComponent.html":{}}}],["command",{"_index":1624,"title":{},"body":{"index.html":{}}}],["commonmodul",{"_index":290,"title":{},"body":{"modules/AboutModule.html":{},"modules/CompleteTaskModule.html":{},"modules/ConfirmDeleteTaskModule.html":{},"modules/CoreModule.html":{},"modules/CreateTaskModule.html":{},"modules/EditTaskModule.html":{},"modules/FooterModule.html":{},"modules/HeaderModule.html":{},"modules/SidenavTasksModule.html":{},"modules/TaskFormModule.html":{},"modules/TasksButtonBarModule.html":{},"modules/TasksButtonsModule.html":{},"modules/TasksFilterModule.html":{},"modules/TasksModule.html":{},"modules/TasksTableModule.html":{}}}],["compat",{"_index":1596,"title":{},"body":{"dependencies.html":{}}}],["complet",{"_index":114,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ButtonBarComponent.html":{},"components/ButtonsComponent.html":{},"components/CompleteTaskComponent.html":{},"modules/CompleteTaskModule.html":{},"components/CompleteTasksTableComponent.html":{},"components/ConfirmDeleteTaskComponent.html":{},"components/CreateTaskComponent.html":{},"components/EditTaskComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"injectables/HttpService.html":{},"components/ListItemComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PendingTasksTableComponent.html":{},"components/RecurringTaskComponent.html":{},"components/SidenavTasksComponent.html":{},"classes/Task.html":{},"components/TaskFormComponent.html":{},"modules/TasksButtonsModule.html":{},"components/TasksComponent.html":{},"components/TasksFilterComponent.html":{},"index.html":{}}}],["completedtask",{"_index":617,"title":{},"body":{"components/CompleteTasksTableComponent.html":{}}}],["completeselecteddialogref",{"_index":481,"title":{},"body":{"components/ButtonsComponent.html":{}}}],["completeselecteddialogref.componentinstance.completetask.subscrib",{"_index":486,"title":{},"body":{"components/ButtonsComponent.html":{}}}],["completetask",{"_index":485,"title":{},"body":{"components/ButtonsComponent.html":{},"components/CompleteTaskComponent.html":{}}}],["completetaskcompon",{"_index":243,"title":{"components/CompleteTaskComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ButtonBarComponent.html":{},"components/ButtonsComponent.html":{},"components/CompleteTaskComponent.html":{},"modules/CompleteTaskModule.html":{},"components/CompleteTasksTableComponent.html":{},"components/ConfirmDeleteTaskComponent.html":{},"components/CreateTaskComponent.html":{},"components/EditTaskComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/ListItemComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PendingTasksTableComponent.html":{},"components/RecurringTaskComponent.html":{},"components/SidenavTasksComponent.html":{},"components/TaskFormComponent.html":{},"components/TasksComponent.html":{},"components/TasksFilterComponent.html":{},"coverage.html":{},"overview.html":{}}}],["completetaskmodul",{"_index":597,"title":{"modules/CompleteTaskModule.html":{}},"body":{"modules/CompleteTaskModule.html":{},"modules/TasksDialogModule.html":{},"modules.html":{},"overview.html":{}}}],["completetaskstablecompon",{"_index":245,"title":{"components/CompleteTasksTableComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ButtonBarComponent.html":{},"components/ButtonsComponent.html":{},"components/CompleteTaskComponent.html":{},"components/CompleteTasksTableComponent.html":{},"components/ConfirmDeleteTaskComponent.html":{},"components/CreateTaskComponent.html":{},"components/EditTaskComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/ListItemComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PendingTasksTableComponent.html":{},"components/RecurringTaskComponent.html":{},"components/SidenavTasksComponent.html":{},"components/TaskFormComponent.html":{},"components/TasksComponent.html":{},"components/TasksFilterComponent.html":{},"modules/TasksRoutingModule.html":{},"modules/TasksTableModule.html":{},"coverage.html":{},"overview.html":{}}}],["compodoc",{"_index":1736,"title":{},"body":{"index.html":{}}}],["compon",{"_index":0,"title":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ButtonBarComponent.html":{},"components/ButtonsComponent.html":{},"components/CompleteTaskComponent.html":{},"components/CompleteTasksTableComponent.html":{},"components/ConfirmDeleteTaskComponent.html":{},"components/CreateTaskComponent.html":{},"components/EditTaskComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/ListItemComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PendingTasksTableComponent.html":{},"components/RecurringTaskComponent.html":{},"components/SidenavTasksComponent.html":{},"components/TaskFormComponent.html":{},"components/TasksComponent.html":{},"components/TasksFilterComponent.html":{}},"body":{"components/AboutComponent.html":{},"modules/AboutModule.html":{},"modules/AboutRoutingModule.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ButtonBarComponent.html":{},"components/ButtonsComponent.html":{},"components/CompleteTaskComponent.html":{},"modules/CompleteTaskModule.html":{},"components/CompleteTasksTableComponent.html":{},"components/ConfirmDeleteTaskComponent.html":{},"modules/ConfirmDeleteTaskModule.html":{},"components/CreateTaskComponent.html":{},"modules/CreateTaskModule.html":{},"components/EditTaskComponent.html":{},"modules/EditTaskModule.html":{},"components/FooterComponent.html":{},"modules/FooterModule.html":{},"components/HeaderComponent.html":{},"modules/HeaderModule.html":{},"components/ListItemComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PendingTasksTableComponent.html":{},"components/RecurringTaskComponent.html":{},"components/SidenavTasksComponent.html":{},"modules/SidenavTasksModule.html":{},"components/TaskFormComponent.html":{},"modules/TaskFormModule.html":{},"modules/TasksButtonBarModule.html":{},"modules/TasksButtonsModule.html":{},"components/TasksComponent.html":{},"modules/TasksDialogModule.html":{},"components/TasksFilterComponent.html":{},"modules/TasksFilterModule.html":{},"modules/TasksModule.html":{},"modules/TasksRoutingModule.html":{},"modules/TasksTableModule.html":{},"injectables/UtilsService.html":{},"coverage.html":{},"index.html":{},"overview.html":{}}}],["component_templ",{"_index":235,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ButtonBarComponent.html":{},"components/ButtonsComponent.html":{},"components/CompleteTaskComponent.html":{},"components/CompleteTasksTableComponent.html":{},"components/ConfirmDeleteTaskComponent.html":{},"components/CreateTaskComponent.html":{},"components/EditTaskComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/ListItemComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PendingTasksTableComponent.html":{},"components/RecurringTaskComponent.html":{},"components/SidenavTasksComponent.html":{},"components/TaskFormComponent.html":{},"components/TasksComponent.html":{},"components/TasksFilterComponent.html":{}}}],["components/pag",{"_index":366,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["compos",{"_index":1615,"title":{},"body":{"index.html":{}}}],["configur",{"_index":1636,"title":{},"body":{"index.html":{}}}],["confirm",{"_index":210,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ButtonBarComponent.html":{},"components/ButtonsComponent.html":{},"components/CompleteTaskComponent.html":{},"components/CompleteTasksTableComponent.html":{},"components/ConfirmDeleteTaskComponent.html":{},"components/CreateTaskComponent.html":{},"components/EditTaskComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/ListItemComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PendingTasksTableComponent.html":{},"components/RecurringTaskComponent.html":{},"components/SidenavTasksComponent.html":{},"components/TaskFormComponent.html":{},"components/TasksComponent.html":{},"components/TasksFilterComponent.html":{}}}],["confirmdeletedialogref",{"_index":493,"title":{},"body":{"components/ButtonsComponent.html":{}}}],["confirmdeletedialogref.componentinstance.deletetask.subscrib",{"_index":497,"title":{},"body":{"components/ButtonsComponent.html":{}}}],["confirmdeletetaskcompon",{"_index":247,"title":{"components/ConfirmDeleteTaskComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ButtonBarComponent.html":{},"components/ButtonsComponent.html":{},"components/CompleteTaskComponent.html":{},"components/CompleteTasksTableComponent.html":{},"components/ConfirmDeleteTaskComponent.html":{},"modules/ConfirmDeleteTaskModule.html":{},"components/CreateTaskComponent.html":{},"components/EditTaskComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/ListItemComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PendingTasksTableComponent.html":{},"components/RecurringTaskComponent.html":{},"components/SidenavTasksComponent.html":{},"components/TaskFormComponent.html":{},"components/TasksComponent.html":{},"components/TasksFilterComponent.html":{},"coverage.html":{},"overview.html":{}}}],["confirmdeletetaskmodul",{"_index":649,"title":{"modules/ConfirmDeleteTaskModule.html":{}},"body":{"modules/ConfirmDeleteTaskModule.html":{},"modules/TasksDialogModule.html":{},"modules.html":{},"overview.html":{}}}],["connect",{"_index":1667,"title":{},"body":{"index.html":{}}}],["consist",{"_index":321,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonBarComponent.html":{},"components/SidenavTasksComponent.html":{},"components/TasksComponent.html":{}}}],["consol",{"_index":675,"title":{},"body":{"injectables/ConsoleLoggerService.html":{},"classes/Logger.html":{},"injectables/LoggerService.html":{}}}],["console)[typ",{"_index":695,"title":{},"body":{"injectables/ConsoleLoggerService.html":{}}}],["console.error.bind(consol",{"_index":693,"title":{},"body":{"injectables/ConsoleLoggerService.html":{}}}],["console.info.bind(consol",{"_index":691,"title":{},"body":{"injectables/ConsoleLoggerService.html":{}}}],["console.log",{"_index":696,"title":{},"body":{"injectables/ConsoleLoggerService.html":{}}}],["console.warn.bind(consol",{"_index":692,"title":{},"body":{"injectables/ConsoleLoggerService.html":{}}}],["consoleloggerservic",{"_index":654,"title":{"injectables/ConsoleLoggerService.html":{}},"body":{"injectables/ConsoleLoggerService.html":{},"modules/CoreModule.html":{},"coverage.html":{}}}],["const",{"_index":99,"title":{},"body":{"components/AboutComponent.html":{},"modules/AboutRoutingModule.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/ButtonsComponent.html":{},"components/CompleteTaskComponent.html":{},"components/ConfirmDeleteTaskComponent.html":{},"injectables/ConsoleLoggerService.html":{},"components/CreateTaskComponent.html":{},"components/EditTaskComponent.html":{},"components/HeaderComponent.html":{},"components/ListItemComponent.html":{},"injectables/MatPaginatorCustom.html":{},"components/SidenavTasksComponent.html":{},"components/TaskFormComponent.html":{},"components/TasksFilterComponent.html":{},"modules/TasksRoutingModule.html":{},"injectables/UtilsService.html":{}}}],["constructor",{"_index":33,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ButtonBarComponent.html":{},"components/ButtonsComponent.html":{},"components/CompleteTaskComponent.html":{},"components/ConfirmDeleteTaskComponent.html":{},"modules/CoreModule.html":{},"components/CreateTaskComponent.html":{},"components/EditTaskComponent.html":{},"components/HeaderComponent.html":{},"injectables/HttpService.html":{},"components/ListItemComponent.html":{},"injectables/LoaderService.html":{},"interfaces/LoaderState.html":{},"components/RecurringTaskComponent.html":{},"components/SidenavTasksComponent.html":{},"components/TaskFormComponent.html":{},"components/TasksFilterComponent.html":{},"injectables/UtilsService.html":{}}}],["constructor(breakpointobserv",{"_index":1488,"title":{},"body":{"injectables/UtilsService.html":{}}}],["constructor(changedetector",{"_index":782,"title":{},"body":{"components/EditTaskComponent.html":{}}}],["constructor(changedetectorref",{"_index":330,"title":{},"body":{"components/AppComponent.html":{}}}],["constructor(data",{"_index":514,"title":{},"body":{"components/CompleteTaskComponent.html":{},"components/ConfirmDeleteTaskComponent.html":{},"components/RecurringTaskComponent.html":{}}}],["constructor(dialog",{"_index":442,"title":{},"body":{"components/ButtonsComponent.html":{},"components/SidenavTasksComponent.html":{}}}],["constructor(dialogref",{"_index":730,"title":{},"body":{"components/CreateTaskComponent.html":{}}}],["constructor(formbuild",{"_index":1316,"title":{},"body":{"components/TaskFormComponent.html":{}}}],["constructor(http",{"_index":1027,"title":{},"body":{"injectables/HttpService.html":{}}}],["constructor(priv",{"_index":84,"title":{},"body":{"components/AboutComponent.html":{},"components/HeaderComponent.html":{},"components/ListItemComponent.html":{},"injectables/UtilsService.html":{}}}],["constructor(rout",{"_index":34,"title":{},"body":{"components/AboutComponent.html":{}}}],["constructor(taskservic",{"_index":1085,"title":{},"body":{"components/ListItemComponent.html":{},"components/TasksFilterComponent.html":{}}}],["constructor(utilsservic",{"_index":970,"title":{},"body":{"components/HeaderComponent.html":{}}}],["contain",{"_index":619,"title":{},"body":{"components/CompleteTasksTableComponent.html":{},"components/PendingTasksTableComponent.html":{},"components/TasksFilterComponent.html":{},"index.html":{}}}],["content",{"_index":111,"title":{},"body":{"components/AboutComponent.html":{},"components/CompleteTaskComponent.html":{},"injectables/HttpService.html":{},"index.html":{}}}],["context",{"_index":664,"title":{},"body":{"injectables/ConsoleLoggerService.html":{}}}],["continu",{"_index":1691,"title":{},"body":{"index.html":{}}}],["conveni",{"_index":308,"title":{},"body":{"modules/AboutModule.html":{},"modules/CompleteTaskModule.html":{},"modules/ConfirmDeleteTaskModule.html":{},"modules/CreateTaskModule.html":{},"modules/EditTaskModule.html":{},"modules/HeaderModule.html":{},"modules/SidenavTasksModule.html":{},"modules/TasksButtonBarModule.html":{},"modules/TasksButtonsModule.html":{},"modules/TasksFilterModule.html":{},"modules/TasksTableModule.html":{}}}],["copi",{"_index":1626,"title":{},"body":{"index.html":{}}}],["core",{"_index":303,"title":{},"body":{"modules/AboutModule.html":{},"modules/CompleteTaskModule.html":{},"modules/ConfirmDeleteTaskModule.html":{},"modules/CreateTaskModule.html":{},"modules/EditTaskModule.html":{},"modules/HeaderModule.html":{},"modules/SidenavTasksModule.html":{},"modules/TasksButtonBarModule.html":{},"modules/TasksButtonsModule.html":{},"modules/TasksFilterModule.html":{},"modules/TasksTableModule.html":{},"dependencies.html":{}}}],["core/core.modul",{"_index":369,"title":{},"body":{"modules/AppModule.html":{}}}],["core/services/loader.servic",{"_index":341,"title":{},"body":{"components/AppComponent.html":{}}}],["coremodul",{"_index":354,"title":{"modules/CoreModule.html":{}},"body":{"modules/AppModule.html":{},"modules/CoreModule.html":{},"modules.html":{},"overview.html":{}}}],["coremodule.forroot",{"_index":373,"title":{},"body":{"modules/AppModule.html":{}}}],["correct",{"_index":668,"title":{},"body":{"injectables/ConsoleLoggerService.html":{},"classes/Logger.html":{},"injectables/LoggerService.html":{},"components/SidenavTasksComponent.html":{}}}],["correspond",{"_index":790,"title":{},"body":{"components/EditTaskComponent.html":{},"index.html":{}}}],["coverag",{"_index":1525,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["creat",{"_index":10,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ButtonBarComponent.html":{},"components/ButtonsComponent.html":{},"components/CompleteTaskComponent.html":{},"components/CompleteTasksTableComponent.html":{},"components/ConfirmDeleteTaskComponent.html":{},"injectables/ConsoleLoggerService.html":{},"components/CreateTaskComponent.html":{},"components/EditTaskComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/ListItemComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PendingTasksTableComponent.html":{},"components/RecurringTaskComponent.html":{},"components/SidenavTasksComponent.html":{},"components/TaskFormComponent.html":{},"components/TasksComponent.html":{},"components/TasksFilterComponent.html":{},"modules/TasksModule.html":{},"index.html":{}}}],["createdialogref",{"_index":1237,"title":{},"body":{"components/SidenavTasksComponent.html":{}}}],["createtaskcompon",{"_index":249,"title":{"components/CreateTaskComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ButtonBarComponent.html":{},"components/ButtonsComponent.html":{},"components/CompleteTaskComponent.html":{},"components/CompleteTasksTableComponent.html":{},"components/ConfirmDeleteTaskComponent.html":{},"components/CreateTaskComponent.html":{},"modules/CreateTaskModule.html":{},"components/EditTaskComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/ListItemComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PendingTasksTableComponent.html":{},"components/RecurringTaskComponent.html":{},"components/SidenavTasksComponent.html":{},"components/TaskFormComponent.html":{},"components/TasksComponent.html":{},"components/TasksFilterComponent.html":{},"coverage.html":{},"overview.html":{}}}],["createtaskmodul",{"_index":760,"title":{"modules/CreateTaskModule.html":{}},"body":{"modules/CreateTaskModule.html":{},"modules/SidenavTasksModule.html":{},"modules.html":{},"overview.html":{}}}],["creation",{"_index":734,"title":{},"body":{"components/CreateTaskComponent.html":{}}}],["css",{"_index":1087,"title":{},"body":{"components/ListItemComponent.html":{}}}],["current",{"_index":227,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/CompleteTaskComponent.html":{},"components/HeaderComponent.html":{},"injectables/HttpService.html":{},"components/ListItemComponent.html":{},"components/SidenavTasksComponent.html":{},"components/TasksComponent.html":{},"components/TasksFilterComponent.html":{},"index.html":{}}}],["custom",{"_index":944,"title":{},"body":{"modules/EditTaskModule.html":{},"injectables/HttpService.html":{},"injectables/MatPaginatorCustom.html":{},"components/TasksFilterComponent.html":{}}}],["custom.t",{"_index":1156,"title":{},"body":{"injectables/MatPaginatorCustom.html":{},"coverage.html":{}}}],["custom.ts:10",{"_index":1168,"title":{},"body":{"injectables/MatPaginatorCustom.html":{}}}],["custom.ts:11",{"_index":1169,"title":{},"body":{"injectables/MatPaginatorCustom.html":{}}}],["custom.ts:13",{"_index":1166,"title":{},"body":{"injectables/MatPaginatorCustom.html":{}}}],["d30c21a2f24f",{"_index":1013,"title":{},"body":{"injectables/HttpService.html":{}}}],["daili",{"_index":1287,"title":{},"body":{"classes/Task.html":{},"components/TaskFormComponent.html":{},"index.html":{}}}],["data",{"_index":522,"title":{},"body":{"components/CompleteTaskComponent.html":{},"components/ConfirmDeleteTaskComponent.html":{},"components/RecurringTaskComponent.html":{},"components/TaskFormComponent.html":{},"index.html":{}}}],["data:ani",{"_index":568,"title":{},"body":{"components/CompleteTaskComponent.html":{},"components/ConfirmDeleteTaskComponent.html":{},"components/RecurringTaskComponent.html":{}}}],["databas",{"_index":1608,"title":{},"body":{"index.html":{}}}],["date",{"_index":127,"title":{},"body":{"components/AboutComponent.html":{},"components/CompleteTaskComponent.html":{},"components/EditTaskComponent.html":{},"classes/Task.html":{},"components/TaskFormComponent.html":{},"components/TasksFilterComponent.html":{},"index.html":{}}}],["datechang",{"_index":1427,"title":{},"body":{"components/TasksFilterComponent.html":{}}}],["datecomplet",{"_index":546,"title":{},"body":{"components/CompleteTaskComponent.html":{},"classes/Task.html":{},"components/TaskFormComponent.html":{}}}],["datecompletedform",{"_index":505,"title":{},"body":{"components/CompleteTaskComponent.html":{},"components/TaskFormComponent.html":{}}}],["datepick",{"_index":1410,"title":{},"body":{"components/TasksFilterComponent.html":{}}}],["day",{"_index":892,"title":{},"body":{"components/EditTaskComponent.html":{}}}],["days').utc",{"_index":890,"title":{},"body":{"components/EditTaskComponent.html":{}}}],["days').utc().format('yyyi",{"_index":1125,"title":{},"body":{"components/ListItemComponent.html":{}}}],["db",{"_index":1693,"title":{},"body":{"index.html":{}}}],["dd",{"_index":1120,"title":{},"body":{"components/ListItemComponent.html":{}}}],["deboucetim",{"_index":1439,"title":{},"body":{"components/TasksFilterComponent.html":{}}}],["debouncetim",{"_index":1431,"title":{},"body":{"components/TasksFilterComponent.html":{}}}],["debouncetime(150",{"_index":1443,"title":{},"body":{"components/TasksFilterComponent.html":{}}}],["decid",{"_index":1780,"title":{},"body":{"index.html":{}}}],["declar",{"_index":277,"title":{},"body":{"modules/AboutModule.html":{},"modules/AppModule.html":{},"modules/CompleteTaskModule.html":{},"modules/ConfirmDeleteTaskModule.html":{},"modules/CreateTaskModule.html":{},"modules/EditTaskModule.html":{},"modules/FooterModule.html":{},"modules/HeaderModule.html":{},"modules/SidenavTasksModule.html":{},"modules/TaskFormModule.html":{},"modules/TasksButtonBarModule.html":{},"modules/TasksButtonsModule.html":{},"modules/TasksDialogModule.html":{},"modules/TasksFilterModule.html":{},"modules/TasksModule.html":{},"modules/TasksTableModule.html":{},"overview.html":{}}}],["decor",{"_index":65,"title":{},"body":{"components/AboutComponent.html":{},"components/ButtonBarComponent.html":{},"components/CompleteTasksTableComponent.html":{},"components/CreateTaskComponent.html":{},"components/EditTaskComponent.html":{},"components/HeaderComponent.html":{},"components/PendingTasksTableComponent.html":{},"components/TasksFilterComponent.html":{}}}],["default",{"_index":75,"title":{},"body":{"components/AboutComponent.html":{},"modules/AboutRoutingModule.html":{},"modules/AppRoutingModule.html":{},"components/ButtonBarComponent.html":{},"components/ButtonsComponent.html":{},"components/CompleteTaskComponent.html":{},"components/ConfirmDeleteTaskComponent.html":{},"components/CreateTaskComponent.html":{},"components/EditTaskComponent.html":{},"injectables/HttpService.html":{},"classes/Logger.html":{},"injectables/LoggerService.html":{},"injectables/MatPaginatorCustom.html":{},"components/RecurringTaskComponent.html":{},"components/SidenavTasksComponent.html":{},"classes/Task.html":{},"components/TaskFormComponent.html":{},"modules/TasksRoutingModule.html":{},"injectables/UtilsService.html":{},"miscellaneous/variables.html":{}}}],["defaultbadg",{"_index":1216,"title":{},"body":{"components/SidenavTasksComponent.html":{}}}],["defin",{"_index":36,"title":{},"body":{"components/AboutComponent.html":{},"modules/AboutModule.html":{},"components/AppComponent.html":{},"components/ButtonBarComponent.html":{},"components/ButtonsComponent.html":{},"components/CompleteTaskComponent.html":{},"modules/CompleteTaskModule.html":{},"components/CompleteTasksTableComponent.html":{},"components/ConfirmDeleteTaskComponent.html":{},"modules/ConfirmDeleteTaskModule.html":{},"injectables/ConsoleLoggerService.html":{},"modules/CoreModule.html":{},"components/CreateTaskComponent.html":{},"modules/CreateTaskModule.html":{},"components/EditTaskComponent.html":{},"modules/EditTaskModule.html":{},"modules/FooterModule.html":{},"components/HeaderComponent.html":{},"modules/HeaderModule.html":{},"injectables/HttpService.html":{},"components/ListItemComponent.html":{},"injectables/LoaderService.html":{},"classes/Logger.html":{},"injectables/LoggerService.html":{},"injectables/MatPaginatorCustom.html":{},"components/PendingTasksTableComponent.html":{},"components/RecurringTaskComponent.html":{},"components/SidenavTasksComponent.html":{},"modules/SidenavTasksModule.html":{},"classes/Task.html":{},"components/TaskFormComponent.html":{},"modules/TaskFormModule.html":{},"modules/TasksButtonBarModule.html":{},"modules/TasksButtonsModule.html":{},"modules/TasksDialogModule.html":{},"components/TasksFilterComponent.html":{},"modules/TasksFilterModule.html":{},"modules/TasksModule.html":{},"modules/TasksTableModule.html":{},"injectables/UtilsService.html":{},"index.html":{}}}],["delay",{"_index":1436,"title":{},"body":{"components/TasksFilterComponent.html":{}}}],["delet",{"_index":115,"title":{},"body":{"components/AboutComponent.html":{},"components/ButtonBarComponent.html":{},"components/ButtonsComponent.html":{},"components/ConfirmDeleteTaskComponent.html":{},"modules/ConfirmDeleteTaskModule.html":{},"injectables/HttpService.html":{},"modules/TasksButtonsModule.html":{},"modules/TasksDialogModule.html":{},"coverage.html":{}}}],["delete'},{'nam",{"_index":248,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ButtonBarComponent.html":{},"components/ButtonsComponent.html":{},"components/CompleteTaskComponent.html":{},"components/CompleteTasksTableComponent.html":{},"components/ConfirmDeleteTaskComponent.html":{},"components/CreateTaskComponent.html":{},"components/EditTaskComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/ListItemComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PendingTasksTableComponent.html":{},"components/RecurringTaskComponent.html":{},"components/SidenavTasksComponent.html":{},"components/TaskFormComponent.html":{},"components/TasksComponent.html":{},"components/TasksFilterComponent.html":{}}}],["delete(url",{"_index":1030,"title":{},"body":{"injectables/HttpService.html":{}}}],["deletetask",{"_index":496,"title":{},"body":{"components/ButtonsComponent.html":{},"components/ConfirmDeleteTaskComponent.html":{}}}],["depdend",{"_index":1768,"title":{},"body":{"index.html":{}}}],["depend",{"_index":276,"title":{"dependencies.html":{}},"body":{"modules/AboutModule.html":{},"modules/AppModule.html":{},"modules/CompleteTaskModule.html":{},"modules/ConfirmDeleteTaskModule.html":{},"modules/CreateTaskModule.html":{},"modules/EditTaskModule.html":{},"modules/FooterModule.html":{},"modules/HeaderModule.html":{},"modules/SidenavTasksModule.html":{},"modules/TaskFormModule.html":{},"modules/TasksButtonBarModule.html":{},"modules/TasksButtonsModule.html":{},"modules/TasksDialogModule.html":{},"modules/TasksFilterModule.html":{},"modules/TasksModule.html":{},"modules/TasksTableModule.html":{},"dependencies.html":{},"index.html":{},"overview.html":{}}}],["descript",{"_index":9,"title":{},"body":{"components/AboutComponent.html":{},"modules/AboutModule.html":{},"components/AppComponent.html":{},"components/ButtonBarComponent.html":{},"components/ButtonsComponent.html":{},"components/CompleteTaskComponent.html":{},"modules/CompleteTaskModule.html":{},"components/CompleteTasksTableComponent.html":{},"components/ConfirmDeleteTaskComponent.html":{},"modules/ConfirmDeleteTaskModule.html":{},"injectables/ConsoleLoggerService.html":{},"modules/CoreModule.html":{},"components/CreateTaskComponent.html":{},"modules/CreateTaskModule.html":{},"components/EditTaskComponent.html":{},"modules/EditTaskModule.html":{},"components/FooterComponent.html":{},"modules/FooterModule.html":{},"components/HeaderComponent.html":{},"modules/HeaderModule.html":{},"injectables/HttpService.html":{},"components/ListItemComponent.html":{},"injectables/LoaderService.html":{},"interfaces/LoaderState.html":{},"classes/Logger.html":{},"injectables/LoggerService.html":{},"injectables/MatPaginatorCustom.html":{},"components/PageNotFoundComponent.html":{},"components/PendingTasksTableComponent.html":{},"components/RecurringTaskComponent.html":{},"components/SidenavTasksComponent.html":{},"modules/SidenavTasksModule.html":{},"classes/Task.html":{},"components/TaskFormComponent.html":{},"modules/TaskFormModule.html":{},"modules/TasksButtonBarModule.html":{},"modules/TasksButtonsModule.html":{},"components/TasksComponent.html":{},"modules/TasksDialogModule.html":{},"components/TasksFilterComponent.html":{},"modules/TasksFilterModule.html":{},"modules/TasksModule.html":{},"modules/TasksTableModule.html":{},"injectables/UtilsService.html":{},"index.html":{}}}],["design",{"_index":131,"title":{},"body":{"components/AboutComponent.html":{},"index.html":{}}}],["desir",{"_index":196,"title":{},"body":{"components/AboutComponent.html":{}}}],["desktop",{"_index":147,"title":{},"body":{"components/AboutComponent.html":{}}}],["destori",{"_index":1109,"title":{},"body":{"components/ListItemComponent.html":{}}}],["detail",{"_index":172,"title":{},"body":{"components/AboutComponent.html":{},"index.html":{}}}],["determin",{"_index":461,"title":{},"body":{"components/ButtonsComponent.html":{},"components/EditTaskComponent.html":{},"index.html":{}}}],["develop",{"_index":1618,"title":{},"body":{"index.html":{}}}],["devic",{"_index":135,"title":{},"body":{"components/AboutComponent.html":{},"components/HeaderComponent.html":{},"components/SidenavTasksComponent.html":{},"injectables/UtilsService.html":{},"index.html":{}}}],["devtool",{"_index":155,"title":{},"body":{"components/AboutComponent.html":{},"index.html":{}}}],["diagram",{"_index":1755,"title":{},"body":{"index.html":{}}}],["dialog",{"_index":170,"title":{},"body":{"components/AboutComponent.html":{},"components/ButtonsComponent.html":{},"components/CompleteTaskComponent.html":{},"components/ConfirmDeleteTaskComponent.html":{},"components/CreateTaskComponent.html":{},"components/EditTaskComponent.html":{},"components/RecurringTaskComponent.html":{},"components/SidenavTasksComponent.html":{},"modules/TasksDialogModule.html":{},"injectables/UtilsService.html":{}}}],["dialog.modul",{"_index":942,"title":{},"body":{"modules/EditTaskModule.html":{},"modules/TasksTableModule.html":{}}}],["dialog.module.t",{"_index":1406,"title":{},"body":{"modules/TasksDialogModule.html":{}}}],["dialogconfig",{"_index":475,"title":{},"body":{"components/ButtonsComponent.html":{},"components/EditTaskComponent.html":{},"components/SidenavTasksComponent.html":{}}}],["dialogconfig.autofocu",{"_index":478,"title":{},"body":{"components/ButtonsComponent.html":{},"components/EditTaskComponent.html":{},"components/SidenavTasksComponent.html":{}}}],["dialogconfig.data",{"_index":479,"title":{},"body":{"components/ButtonsComponent.html":{},"components/EditTaskComponent.html":{}}}],["dialogconfig.maxheight",{"_index":1235,"title":{},"body":{"components/SidenavTasksComponent.html":{}}}],["dialogconfig.maxwidth",{"_index":1233,"title":{},"body":{"components/SidenavTasksComponent.html":{}}}],["dialogconfig.width",{"_index":476,"title":{},"body":{"components/ButtonsComponent.html":{},"components/EditTaskComponent.html":{},"components/SidenavTasksComponent.html":{}}}],["dialogref",{"_index":515,"title":{},"body":{"components/CompleteTaskComponent.html":{},"components/ConfirmDeleteTaskComponent.html":{},"components/CreateTaskComponent.html":{},"components/RecurringTaskComponent.html":{},"injectables/UtilsService.html":{}}}],["dialogref.afterclosed().subscrib",{"_index":1522,"title":{},"body":{"injectables/UtilsService.html":{}}}],["dialogref.updatesize('100",{"_index":1520,"title":{},"body":{"injectables/UtilsService.html":{}}}],["dialogref.updatesize(larges",{"_index":1521,"title":{},"body":{"injectables/UtilsService.html":{}}}],["differ",{"_index":1440,"title":{},"body":{"components/TasksFilterComponent.html":{}}}],["direct",{"_index":233,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ButtonBarComponent.html":{},"components/ButtonsComponent.html":{},"components/CompleteTaskComponent.html":{},"components/CompleteTasksTableComponent.html":{},"components/ConfirmDeleteTaskComponent.html":{},"components/CreateTaskComponent.html":{},"components/EditTaskComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/ListItemComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PendingTasksTableComponent.html":{},"components/RecurringTaskComponent.html":{},"components/SidenavTasksComponent.html":{},"components/TaskFormComponent.html":{},"components/TasksComponent.html":{},"components/TasksFilterComponent.html":{}}}],["directli",{"_index":958,"title":{},"body":{"components/HeaderComponent.html":{},"index.html":{}}}],["directori",{"_index":1628,"title":{},"body":{"index.html":{}}}],["dirti",{"_index":531,"title":{},"body":{"components/CompleteTaskComponent.html":{},"components/TaskFormComponent.html":{}}}],["disabl",{"_index":392,"title":{},"body":{"components/ButtonBarComponent.html":{},"components/ButtonsComponent.html":{},"components/CompleteTaskComponent.html":{},"components/CreateTaskComponent.html":{},"components/EditTaskComponent.html":{},"components/RecurringTaskComponent.html":{},"components/TaskFormComponent.html":{}}}],["disablecompletebutton",{"_index":397,"title":{},"body":{"components/ButtonBarComponent.html":{},"components/ButtonsComponent.html":{}}}],["disabledeletebutton",{"_index":398,"title":{},"body":{"components/ButtonBarComponent.html":{},"components/ButtonsComponent.html":{}}}],["disableeditbutton",{"_index":399,"title":{},"body":{"components/ButtonBarComponent.html":{},"components/ButtonsComponent.html":{}}}],["disk",{"_index":1695,"title":{},"body":{"index.html":{}}}],["display",{"_index":74,"title":{},"body":{"components/AboutComponent.html":{},"components/ButtonsComponent.html":{},"components/CompleteTaskComponent.html":{},"components/CompleteTasksTableComponent.html":{},"components/ConfirmDeleteTaskComponent.html":{},"components/EditTaskComponent.html":{},"components/HeaderComponent.html":{},"injectables/HttpService.html":{},"components/ListItemComponent.html":{},"injectables/LoaderService.html":{},"interfaces/LoaderState.html":{},"injectables/MatPaginatorCustom.html":{},"components/PendingTasksTableComponent.html":{},"index.html":{}}}],["displayscrolltotop",{"_index":25,"title":{},"body":{"components/AboutComponent.html":{}}}],["distinctuntilchang",{"_index":1432,"title":{},"body":{"components/TasksFilterComponent.html":{}}}],["div",{"_index":62,"title":{},"body":{"components/AboutComponent.html":{}}}],["dive",{"_index":1786,"title":{},"body":{"index.html":{}}}],["divid",{"_index":1604,"title":{},"body":{"index.html":{}}}],["doc",{"_index":1739,"title":{},"body":{"index.html":{}}}],["docbuilt",{"_index":1741,"title":{},"body":{"index.html":{}}}],["docker",{"_index":1614,"title":{},"body":{"index.html":{}}}],["document",{"_index":1526,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["document.queryselector",{"_index":101,"title":{},"body":{"components/AboutComponent.html":{}}}],["doesn't",{"_index":550,"title":{},"body":{"components/CompleteTaskComponent.html":{}}}],["dom",{"_index":5,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ButtonBarComponent.html":{},"components/ButtonsComponent.html":{},"components/CompleteTaskComponent.html":{},"components/CompleteTasksTableComponent.html":{},"components/ConfirmDeleteTaskComponent.html":{},"components/CreateTaskComponent.html":{},"components/EditTaskComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/ListItemComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PendingTasksTableComponent.html":{},"components/RecurringTaskComponent.html":{},"components/SidenavTasksComponent.html":{},"components/TaskFormComponent.html":{},"components/TasksComponent.html":{},"components/TasksFilterComponent.html":{}}}],["don't",{"_index":865,"title":{},"body":{"components/EditTaskComponent.html":{},"index.html":{}}}],["down",{"_index":178,"title":{},"body":{"components/AboutComponent.html":{}}}],["download",{"_index":1726,"title":{},"body":{"index.html":{}}}],["drift",{"_index":1672,"title":{},"body":{"index.html":{}}}],["driver",{"_index":1728,"title":{},"body":{"index.html":{}}}],["drop",{"_index":177,"title":{},"body":{"components/AboutComponent.html":{}}}],["dropdown",{"_index":1079,"title":{},"body":{"components/ListItemComponent.html":{},"components/TasksFilterComponent.html":{}}}],["due",{"_index":126,"title":{},"body":{"components/AboutComponent.html":{},"components/EditTaskComponent.html":{},"components/ListItemComponent.html":{},"components/SidenavTasksComponent.html":{},"classes/Task.html":{},"components/TaskFormComponent.html":{},"components/TasksFilterComponent.html":{},"index.html":{}}}],["duebutton",{"_index":956,"title":{},"body":{"components/HeaderComponent.html":{},"components/TasksFilterComponent.html":{}}}],["duedat",{"_index":748,"title":{},"body":{"components/CreateTaskComponent.html":{},"components/EditTaskComponent.html":{},"classes/Task.html":{},"components/TaskFormComponent.html":{}}}],["duedate.format('mm/dd/yyyi",{"_index":903,"title":{},"body":{"components/EditTaskComponent.html":{}}}],["duetodaybadg",{"_index":1221,"title":{},"body":{"components/SidenavTasksComponent.html":{}}}],["duetomorrowbadg",{"_index":1222,"title":{},"body":{"components/SidenavTasksComponent.html":{}}}],["dummi",{"_index":1355,"title":{},"body":{"components/TaskFormComponent.html":{}}}],["durat",{"_index":858,"title":{},"body":{"components/EditTaskComponent.html":{}}}],["dynam",{"_index":1582,"title":{},"body":{"dependencies.html":{}}}],["e2",{"_index":1621,"title":{},"body":{"index.html":{}}}],["e2e:headlessa",{"_index":1719,"title":{},"body":{"index.html":{}}}],["e2e:screenshotsif",{"_index":1733,"title":{},"body":{"index.html":{}}}],["e2ethi",{"_index":1716,"title":{},"body":{"index.html":{}}}],["each",{"_index":635,"title":{},"body":{"components/ConfirmDeleteTaskComponent.html":{},"injectables/ConsoleLoggerService.html":{},"modules/CoreModule.html":{},"components/SidenavTasksComponent.html":{},"modules/TasksModule.html":{},"index.html":{}}}],["easi",{"_index":960,"title":{},"body":{"components/HeaderComponent.html":{},"injectables/HttpService.html":{},"components/ListItemComponent.html":{}}}],["easili",{"_index":1017,"title":{},"body":{"injectables/HttpService.html":{}}}],["edg",{"_index":1724,"title":{},"body":{"index.html":{}}}],["edit",{"_index":251,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ButtonBarComponent.html":{},"components/ButtonsComponent.html":{},"components/CompleteTaskComponent.html":{},"components/CompleteTasksTableComponent.html":{},"components/ConfirmDeleteTaskComponent.html":{},"components/CreateTaskComponent.html":{},"components/EditTaskComponent.html":{},"modules/EditTaskModule.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/ListItemComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PendingTasksTableComponent.html":{},"components/RecurringTaskComponent.html":{},"components/SidenavTasksComponent.html":{},"components/TaskFormComponent.html":{},"modules/TasksButtonsModule.html":{},"components/TasksComponent.html":{},"components/TasksFilterComponent.html":{}}}],["editrecurringtaskform",{"_index":1180,"title":{},"body":{"components/RecurringTaskComponent.html":{}}}],["edittaskcompon",{"_index":250,"title":{"components/EditTaskComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ButtonBarComponent.html":{},"components/ButtonsComponent.html":{},"components/CompleteTaskComponent.html":{},"components/CompleteTasksTableComponent.html":{},"components/ConfirmDeleteTaskComponent.html":{},"components/CreateTaskComponent.html":{},"components/EditTaskComponent.html":{},"modules/EditTaskModule.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/ListItemComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PendingTasksTableComponent.html":{},"components/RecurringTaskComponent.html":{},"components/SidenavTasksComponent.html":{},"components/TaskFormComponent.html":{},"components/TasksComponent.html":{},"components/TasksFilterComponent.html":{},"modules/TasksRoutingModule.html":{},"coverage.html":{},"overview.html":{}}}],["edittaskmodul",{"_index":925,"title":{"modules/EditTaskModule.html":{}},"body":{"modules/EditTaskModule.html":{},"modules/TasksModule.html":{},"modules.html":{},"overview.html":{}}}],["element",{"_index":49,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ButtonBarComponent.html":{},"components/ButtonsComponent.html":{},"components/CompleteTaskComponent.html":{},"components/CompleteTasksTableComponent.html":{},"components/ConfirmDeleteTaskComponent.html":{},"components/CreateTaskComponent.html":{},"components/EditTaskComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/ListItemComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PendingTasksTableComponent.html":{},"components/RecurringTaskComponent.html":{},"components/SidenavTasksComponent.html":{},"components/TaskFormComponent.html":{},"components/TasksComponent.html":{},"components/TasksFilterComponent.html":{},"index.html":{}}}],["element.scrollintoview({behavior:'smooth",{"_index":104,"title":{},"body":{"components/AboutComponent.html":{}}}],["elementref",{"_index":64,"title":{},"body":{"components/AboutComponent.html":{},"components/TasksFilterComponent.html":{}}}],["emit",{"_index":429,"title":{},"body":{"components/ButtonBarComponent.html":{},"components/ButtonsComponent.html":{},"components/CompleteTaskComponent.html":{},"components/ConfirmDeleteTaskComponent.html":{},"components/EditTaskComponent.html":{},"components/RecurringTaskComponent.html":{},"components/TaskFormComponent.html":{},"components/TasksFilterComponent.html":{}}}],["emitt",{"_index":629,"title":{},"body":{"components/ConfirmDeleteTaskComponent.html":{}}}],["empti",{"_index":1657,"title":{},"body":{"index.html":{}}}],["emul",{"_index":152,"title":{},"body":{"components/AboutComponent.html":{},"index.html":{}}}],["enabl",{"_index":185,"title":{},"body":{"components/AboutComponent.html":{},"components/ButtonBarComponent.html":{},"components/ButtonsComponent.html":{},"components/CreateTaskComponent.html":{},"components/EditTaskComponent.html":{},"components/TaskFormComponent.html":{}}}],["enablecreatebutton",{"_index":729,"title":{},"body":{"components/CreateTaskComponent.html":{}}}],["enableupdatebutton",{"_index":772,"title":{},"body":{"components/EditTaskComponent.html":{}}}],["end",{"_index":186,"title":{},"body":{"components/AboutComponent.html":{},"components/EditTaskComponent.html":{},"components/SidenavTasksComponent.html":{},"components/TaskFormComponent.html":{}}}],["endindex",{"_index":1165,"title":{},"body":{"injectables/MatPaginatorCustom.html":{}}}],["endsaft",{"_index":752,"title":{},"body":{"components/CreateTaskComponent.html":{},"classes/Task.html":{}}}],["enhanc",{"_index":136,"title":{},"body":{"components/AboutComponent.html":{},"index.html":{}}}],["enjoy",{"_index":1776,"title":{},"body":{"index.html":{}}}],["enter",{"_index":171,"title":{},"body":{"components/AboutComponent.html":{},"components/CompleteTaskComponent.html":{},"components/TaskFormComponent.html":{},"components/TasksFilterComponent.html":{}}}],["entir",{"_index":1783,"title":{},"body":{"index.html":{}}}],["entiti",{"_index":1753,"title":{},"body":{"index.html":{}}}],["entrycompon",{"_index":287,"title":{},"body":{"modules/AboutModule.html":{},"modules/AppModule.html":{},"modules/CompleteTaskModule.html":{},"modules/ConfirmDeleteTaskModule.html":{},"modules/CreateTaskModule.html":{},"modules/EditTaskModule.html":{},"modules/FooterModule.html":{},"modules/HeaderModule.html":{},"modules/SidenavTasksModule.html":{},"modules/TasksFilterModule.html":{},"modules/TasksTableModule.html":{}}}],["environ",{"_index":1569,"title":{},"body":{"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["er",{"_index":1754,"title":{},"body":{"index.html":{}}}],["error",{"_index":683,"title":{},"body":{"injectables/ConsoleLoggerService.html":{},"components/EditTaskComponent.html":{},"classes/Logger.html":{},"injectables/LoggerService.html":{},"components/TaskFormComponent.html":{}}}],["error('coremodul",{"_index":716,"title":{},"body":{"modules/CoreModule.html":{}}}],["even",{"_index":870,"title":{},"body":{"components/EditTaskComponent.html":{},"index.html":{}}}],["event",{"_index":60,"title":{},"body":{"components/AboutComponent.html":{},"components/ButtonBarComponent.html":{},"components/ButtonsComponent.html":{},"components/CompleteTaskComponent.html":{},"components/ConfirmDeleteTaskComponent.html":{},"components/EditTaskComponent.html":{},"components/RecurringTaskComponent.html":{},"components/SidenavTasksComponent.html":{},"components/TaskFormComponent.html":{},"components/TasksFilterComponent.html":{},"injectables/UtilsService.html":{}}}],["event.stoppropag",{"_index":492,"title":{},"body":{"components/ButtonsComponent.html":{}}}],["eventemitt",{"_index":430,"title":{},"body":{"components/ButtonBarComponent.html":{},"components/ButtonsComponent.html":{},"components/CompleteTaskComponent.html":{},"components/ConfirmDeleteTaskComponent.html":{},"components/CreateTaskComponent.html":{},"components/EditTaskComponent.html":{},"components/RecurringTaskComponent.html":{},"components/TaskFormComponent.html":{},"components/TasksFilterComponent.html":{}}}],["examin",{"_index":1763,"title":{},"body":{"index.html":{}}}],["exampl",{"_index":1308,"title":{},"body":{"components/TaskFormComponent.html":{}}}],["excit",{"_index":1773,"title":{},"body":{"index.html":{}}}],["execut",{"_index":663,"title":{},"body":{"injectables/ConsoleLoggerService.html":{},"index.html":{}}}],["exist",{"_index":770,"title":{},"body":{"components/EditTaskComponent.html":{},"components/PageNotFoundComponent.html":{}}}],["expand",{"_index":974,"title":{},"body":{"components/HeaderComponent.html":{},"components/ListItemComponent.html":{},"components/SidenavTasksComponent.html":{},"injectables/UtilsService.html":{},"miscellaneous/typealiases.html":{}}}],["expect",{"_index":1179,"title":{},"body":{"components/RecurringTaskComponent.html":{}}}],["export",{"_index":81,"title":{},"body":{"components/AboutComponent.html":{},"modules/AboutModule.html":{},"modules/AboutRoutingModule.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ButtonBarComponent.html":{},"components/ButtonsComponent.html":{},"components/CompleteTaskComponent.html":{},"modules/CompleteTaskModule.html":{},"components/CompleteTasksTableComponent.html":{},"components/ConfirmDeleteTaskComponent.html":{},"modules/ConfirmDeleteTaskModule.html":{},"injectables/ConsoleLoggerService.html":{},"modules/CoreModule.html":{},"components/CreateTaskComponent.html":{},"modules/CreateTaskModule.html":{},"components/EditTaskComponent.html":{},"modules/EditTaskModule.html":{},"components/FooterComponent.html":{},"modules/FooterModule.html":{},"components/HeaderComponent.html":{},"modules/HeaderModule.html":{},"injectables/HttpService.html":{},"components/ListItemComponent.html":{},"injectables/LoaderService.html":{},"interfaces/LoaderState.html":{},"classes/Logger.html":{},"injectables/LoggerService.html":{},"injectables/MatPaginatorCustom.html":{},"components/PageNotFoundComponent.html":{},"components/PendingTasksTableComponent.html":{},"components/RecurringTaskComponent.html":{},"components/SidenavTasksComponent.html":{},"modules/SidenavTasksModule.html":{},"classes/Task.html":{},"components/TaskFormComponent.html":{},"modules/TaskFormModule.html":{},"modules/TasksButtonBarModule.html":{},"modules/TasksButtonsModule.html":{},"components/TasksComponent.html":{},"modules/TasksDialogModule.html":{},"components/TasksFilterComponent.html":{},"modules/TasksFilterModule.html":{},"modules/TasksModule.html":{},"modules/TasksRoutingModule.html":{},"modules/TasksTableModule.html":{},"injectables/UtilsService.html":{},"overview.html":{}}}],["express",{"_index":1606,"title":{},"body":{"index.html":{}}}],["extend",{"_index":394,"title":{},"body":{"components/ButtonBarComponent.html":{},"injectables/HttpService.html":{},"injectables/MatPaginatorCustom.html":{}}}],["extens",{"_index":1157,"title":{},"body":{"injectables/MatPaginatorCustom.html":{}}}],["f",{"_index":102,"title":{},"body":{"components/AboutComponent.html":{}}}],["fa",{"_index":810,"title":{},"body":{"components/EditTaskComponent.html":{}}}],["faangleup",{"_index":304,"title":{},"body":{"modules/AboutModule.html":{},"modules/TasksTableModule.html":{}}}],["faarrowleft",{"_index":1392,"title":{},"body":{"modules/TasksButtonBarModule.html":{},"modules/TasksButtonsModule.html":{}}}],["fabar",{"_index":1002,"title":{},"body":{"modules/HeaderModule.html":{}}}],["facheck",{"_index":610,"title":{},"body":{"modules/CompleteTaskModule.html":{},"modules/EditTaskModule.html":{},"modules/TasksButtonBarModule.html":{},"modules/TasksButtonsModule.html":{},"modules/TasksTableModule.html":{}}}],["fachecksquar",{"_index":608,"title":{},"body":{"modules/CompleteTaskModule.html":{},"modules/EditTaskModule.html":{},"modules/TasksButtonBarModule.html":{},"modules/TasksButtonsModule.html":{},"modules/TasksTableModule.html":{}}}],["faclipboardcheck",{"_index":1276,"title":{},"body":{"modules/SidenavTasksModule.html":{}}}],["faclipboardlist",{"_index":1003,"title":{},"body":{"modules/HeaderModule.html":{},"modules/SidenavTasksModule.html":{}}}],["faedit",{"_index":938,"title":{},"body":{"modules/EditTaskModule.html":{},"modules/TasksButtonBarModule.html":{},"modules/TasksButtonsModule.html":{},"modules/TasksTableModule.html":{}}}],["fahourglass",{"_index":1275,"title":{},"body":{"modules/SidenavTasksModule.html":{}}}],["fahourglassend",{"_index":1277,"title":{},"body":{"modules/SidenavTasksModule.html":{}}}],["fahourglasshalf",{"_index":1278,"title":{},"body":{"modules/SidenavTasksModule.html":{}}}],["fahourglassstart",{"_index":1279,"title":{},"body":{"modules/SidenavTasksModule.html":{}}}],["fail",{"_index":1735,"title":{},"body":{"index.html":{}}}],["fals",{"_index":76,"title":{},"body":{"components/AboutComponent.html":{},"components/ButtonsComponent.html":{},"components/CompleteTaskComponent.html":{},"components/CreateTaskComponent.html":{},"components/EditTaskComponent.html":{},"components/HeaderComponent.html":{},"injectables/LoaderService.html":{},"interfaces/LoaderState.html":{},"components/RecurringTaskComponent.html":{},"components/SidenavTasksComponent.html":{},"classes/Task.html":{},"components/TaskFormComponent.html":{},"injectables/UtilsService.html":{},"miscellaneous/variables.html":{}}}],["fapast",{"_index":765,"title":{},"body":{"modules/CreateTaskModule.html":{},"modules/EditTaskModule.html":{},"modules/SidenavTasksModule.html":{},"modules/TasksButtonBarModule.html":{},"modules/TasksButtonsModule.html":{}}}],["far",{"_index":809,"title":{},"body":{"components/EditTaskComponent.html":{}}}],["fasearch",{"_index":1449,"title":{},"body":{"modules/TasksFilterModule.html":{}}}],["fatim",{"_index":1450,"title":{},"body":{"modules/TasksFilterModule.html":{}}}],["fatrash",{"_index":652,"title":{},"body":{"modules/ConfirmDeleteTaskModule.html":{},"modules/EditTaskModule.html":{},"modules/TasksButtonBarModule.html":{},"modules/TasksButtonsModule.html":{},"modules/TasksTableModule.html":{}}}],["favorit",{"_index":1715,"title":{},"body":{"index.html":{}}}],["featur",{"_index":1746,"title":{},"body":{"index.html":{}}}],["few",{"_index":1638,"title":{},"body":{"index.html":{}}}],["field",{"_index":183,"title":{},"body":{"components/AboutComponent.html":{},"components/CompleteTaskComponent.html":{},"components/TaskFormComponent.html":{}}}],["file",{"_index":7,"title":{},"body":{"components/AboutComponent.html":{},"modules/AboutModule.html":{},"modules/AboutRoutingModule.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ButtonBarComponent.html":{},"components/ButtonsComponent.html":{},"components/CompleteTaskComponent.html":{},"modules/CompleteTaskModule.html":{},"components/CompleteTasksTableComponent.html":{},"components/ConfirmDeleteTaskComponent.html":{},"modules/ConfirmDeleteTaskModule.html":{},"injectables/ConsoleLoggerService.html":{},"modules/CoreModule.html":{},"components/CreateTaskComponent.html":{},"modules/CreateTaskModule.html":{},"components/EditTaskComponent.html":{},"modules/EditTaskModule.html":{},"components/FooterComponent.html":{},"modules/FooterModule.html":{},"components/HeaderComponent.html":{},"modules/HeaderModule.html":{},"injectables/HttpService.html":{},"components/ListItemComponent.html":{},"injectables/LoaderService.html":{},"interfaces/LoaderState.html":{},"classes/Logger.html":{},"injectables/LoggerService.html":{},"injectables/MatPaginatorCustom.html":{},"components/PageNotFoundComponent.html":{},"components/PendingTasksTableComponent.html":{},"components/RecurringTaskComponent.html":{},"components/SidenavTasksComponent.html":{},"modules/SidenavTasksModule.html":{},"classes/Task.html":{},"components/TaskFormComponent.html":{},"modules/TaskFormModule.html":{},"modules/TasksButtonBarModule.html":{},"modules/TasksButtonsModule.html":{},"components/TasksComponent.html":{},"modules/TasksDialogModule.html":{},"components/TasksFilterComponent.html":{},"modules/TasksFilterModule.html":{},"modules/TasksModule.html":{},"modules/TasksRoutingModule.html":{},"modules/TasksTableModule.html":{},"injectables/UtilsService.html":{},"coverage.html":{},"index.html":{}}}],["fill",{"_index":191,"title":{},"body":{"components/AboutComponent.html":{}}}],["filter",{"_index":116,"title":{},"body":{"components/AboutComponent.html":{},"components/ListItemComponent.html":{},"components/SidenavTasksComponent.html":{},"components/TasksFilterComponent.html":{},"modules/TasksFilterModule.html":{},"index.html":{}}}],["filter'},{'nam",{"_index":270,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ButtonBarComponent.html":{},"components/ButtonsComponent.html":{},"components/CompleteTaskComponent.html":{},"components/CompleteTasksTableComponent.html":{},"components/ConfirmDeleteTaskComponent.html":{},"components/CreateTaskComponent.html":{},"components/EditTaskComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/ListItemComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PendingTasksTableComponent.html":{},"components/RecurringTaskComponent.html":{},"components/SidenavTasksComponent.html":{},"components/TaskFormComponent.html":{},"components/TasksComponent.html":{},"components/TasksFilterComponent.html":{}}}],["filter(ev",{"_index":1247,"title":{},"body":{"components/SidenavTasksComponent.html":{}}}],["filter.compon",{"_index":986,"title":{},"body":{"components/HeaderComponent.html":{},"modules/TasksFilterModule.html":{}}}],["filter.component.css",{"_index":1412,"title":{},"body":{"components/TasksFilterComponent.html":{}}}],["filter.component.html",{"_index":1413,"title":{},"body":{"components/TasksFilterComponent.html":{}}}],["filter.component.t",{"_index":1408,"title":{},"body":{"components/TasksFilterComponent.html":{},"coverage.html":{}}}],["filter.component.ts:24",{"_index":1429,"title":{},"body":{"components/TasksFilterComponent.html":{}}}],["filter.component.ts:26",{"_index":1428,"title":{},"body":{"components/TasksFilterComponent.html":{}}}],["filter.component.ts:28",{"_index":1417,"title":{},"body":{"components/TasksFilterComponent.html":{}}}],["filter.component.ts:38",{"_index":1418,"title":{},"body":{"components/TasksFilterComponent.html":{}}}],["filter.component.ts:46",{"_index":1421,"title":{},"body":{"components/TasksFilterComponent.html":{}}}],["filter.component.ts:53",{"_index":1422,"title":{},"body":{"components/TasksFilterComponent.html":{}}}],["filter.component.ts:66",{"_index":1419,"title":{},"body":{"components/TasksFilterComponent.html":{}}}],["filter.component.ts:86",{"_index":1423,"title":{},"body":{"components/TasksFilterComponent.html":{}}}],["filter.modul",{"_index":1006,"title":{},"body":{"modules/HeaderModule.html":{}}}],["filter.module.t",{"_index":1448,"title":{},"body":{"modules/TasksFilterModule.html":{}}}],["filter/search",{"_index":1411,"title":{},"body":{"components/TasksFilterComponent.html":{}}}],["final",{"_index":1068,"title":{},"body":{"injectables/HttpService.html":{}}}],["find",{"_index":829,"title":{},"body":{"components/EditTaskComponent.html":{}}}],["finish",{"_index":193,"title":{},"body":{"components/AboutComponent.html":{}}}],["first",{"_index":423,"title":{},"body":{"components/ButtonBarComponent.html":{},"index.html":{}}}],["fix",{"_index":1685,"title":{},"body":{"index.html":{}}}],["fixth",{"_index":1687,"title":{},"body":{"index.html":{}}}],["flexlayoutmodul",{"_index":293,"title":{},"body":{"modules/AboutModule.html":{},"modules/CompleteTaskModule.html":{},"modules/ConfirmDeleteTaskModule.html":{},"modules/CoreModule.html":{},"modules/CreateTaskModule.html":{},"modules/EditTaskModule.html":{},"modules/FooterModule.html":{},"modules/HeaderModule.html":{},"modules/SidenavTasksModule.html":{},"modules/TaskFormModule.html":{},"modules/TasksButtonBarModule.html":{},"modules/TasksButtonsModule.html":{},"modules/TasksFilterModule.html":{},"modules/TasksModule.html":{},"modules/TasksTableModule.html":{}}}],["follow",{"_index":1307,"title":{},"body":{"components/TaskFormComponent.html":{},"index.html":{}}}],["font",{"_index":1589,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["fontawesom",{"_index":298,"title":{},"body":{"modules/AboutModule.html":{},"modules/CompleteTaskModule.html":{},"modules/ConfirmDeleteTaskModule.html":{},"modules/CreateTaskModule.html":{},"modules/EditTaskModule.html":{},"modules/HeaderModule.html":{},"modules/SidenavTasksModule.html":{},"modules/TasksButtonBarModule.html":{},"modules/TasksButtonsModule.html":{},"modules/TasksFilterModule.html":{},"modules/TasksTableModule.html":{},"dependencies.html":{}}}],["fontawesomemodul",{"_index":299,"title":{},"body":{"modules/AboutModule.html":{},"modules/CompleteTaskModule.html":{},"modules/ConfirmDeleteTaskModule.html":{},"modules/CreateTaskModule.html":{},"modules/EditTaskModule.html":{},"modules/HeaderModule.html":{},"modules/SidenavTasksModule.html":{},"modules/TasksButtonBarModule.html":{},"modules/TasksButtonsModule.html":{},"modules/TasksFilterModule.html":{},"modules/TasksTableModule.html":{}}}],["footer",{"_index":322,"title":{},"body":{"components/AppComponent.html":{},"components/FooterComponent.html":{},"modules/FooterModule.html":{},"components/SidenavTasksComponent.html":{}}}],["footer'},{'nam",{"_index":253,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ButtonBarComponent.html":{},"components/ButtonsComponent.html":{},"components/CompleteTaskComponent.html":{},"components/CompleteTasksTableComponent.html":{},"components/ConfirmDeleteTaskComponent.html":{},"components/CreateTaskComponent.html":{},"components/EditTaskComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/ListItemComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PendingTasksTableComponent.html":{},"components/RecurringTaskComponent.html":{},"components/SidenavTasksComponent.html":{},"components/TaskFormComponent.html":{},"components/TasksComponent.html":{},"components/TasksFilterComponent.html":{}}}],["footer.compon",{"_index":953,"title":{},"body":{"modules/FooterModule.html":{}}}],["footer.component.css",{"_index":946,"title":{},"body":{"components/FooterComponent.html":{}}}],["footer.component.html",{"_index":947,"title":{},"body":{"components/FooterComponent.html":{}}}],["footer/footer.modul",{"_index":370,"title":{},"body":{"modules/AppModule.html":{}}}],["footercompon",{"_index":252,"title":{"components/FooterComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ButtonBarComponent.html":{},"components/ButtonsComponent.html":{},"components/CompleteTaskComponent.html":{},"components/CompleteTasksTableComponent.html":{},"components/ConfirmDeleteTaskComponent.html":{},"components/CreateTaskComponent.html":{},"components/EditTaskComponent.html":{},"components/FooterComponent.html":{},"modules/FooterModule.html":{},"components/HeaderComponent.html":{},"components/ListItemComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PendingTasksTableComponent.html":{},"components/RecurringTaskComponent.html":{},"components/SidenavTasksComponent.html":{},"components/TaskFormComponent.html":{},"components/TasksComponent.html":{},"components/TasksFilterComponent.html":{},"coverage.html":{},"overview.html":{}}}],["footermodul",{"_index":355,"title":{"modules/FooterModule.html":{}},"body":{"modules/AppModule.html":{},"modules/FooterModule.html":{},"modules.html":{},"overview.html":{}}}],["form",{"_index":180,"title":{},"body":{"components/AboutComponent.html":{},"components/CompleteTaskComponent.html":{},"components/CreateTaskComponent.html":{},"components/EditTaskComponent.html":{},"components/RecurringTaskComponent.html":{},"components/TaskFormComponent.html":{},"modules/TaskFormModule.html":{},"components/TasksFilterComponent.html":{}}}],["form'},{'nam",{"_index":267,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ButtonBarComponent.html":{},"components/ButtonsComponent.html":{},"components/CompleteTaskComponent.html":{},"components/CompleteTasksTableComponent.html":{},"components/ConfirmDeleteTaskComponent.html":{},"components/CreateTaskComponent.html":{},"components/EditTaskComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/ListItemComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PendingTasksTableComponent.html":{},"components/RecurringTaskComponent.html":{},"components/SidenavTasksComponent.html":{},"components/TaskFormComponent.html":{},"components/TasksComponent.html":{},"components/TasksFilterComponent.html":{}}}],["form.compon",{"_index":742,"title":{},"body":{"components/CreateTaskComponent.html":{},"components/EditTaskComponent.html":{},"modules/TaskFormModule.html":{}}}],["form.component.css",{"_index":1309,"title":{},"body":{"components/TaskFormComponent.html":{}}}],["form.component.html",{"_index":1310,"title":{},"body":{"components/TaskFormComponent.html":{}}}],["form.component.t",{"_index":1306,"title":{},"body":{"components/TaskFormComponent.html":{},"coverage.html":{}}}],["form.component.ts:106",{"_index":1328,"title":{},"body":{"components/TaskFormComponent.html":{}}}],["form.component.ts:113",{"_index":1329,"title":{},"body":{"components/TaskFormComponent.html":{}}}],["form.component.ts:197",{"_index":1331,"title":{},"body":{"components/TaskFormComponent.html":{}}}],["form.component.ts:34",{"_index":1320,"title":{},"body":{"components/TaskFormComponent.html":{}}}],["form.component.ts:36",{"_index":1318,"title":{},"body":{"components/TaskFormComponent.html":{}}}],["form.component.ts:38",{"_index":1319,"title":{},"body":{"components/TaskFormComponent.html":{}}}],["form.component.ts:40",{"_index":1332,"title":{},"body":{"components/TaskFormComponent.html":{}}}],["form.component.ts:42",{"_index":1334,"title":{},"body":{"components/TaskFormComponent.html":{}}}],["form.component.ts:44",{"_index":1337,"title":{},"body":{"components/TaskFormComponent.html":{}}}],["form.component.ts:46",{"_index":1333,"title":{},"body":{"components/TaskFormComponent.html":{}}}],["form.component.ts:48",{"_index":1335,"title":{},"body":{"components/TaskFormComponent.html":{}}}],["form.component.ts:50",{"_index":1317,"title":{},"body":{"components/TaskFormComponent.html":{}}}],["form.component.ts:63",{"_index":1322,"title":{},"body":{"components/TaskFormComponent.html":{}}}],["form.component.ts:81",{"_index":1324,"title":{},"body":{"components/TaskFormComponent.html":{}}}],["form.component.ts:90",{"_index":1326,"title":{},"body":{"components/TaskFormComponent.html":{}}}],["form.get(property).dirti",{"_index":1345,"title":{},"body":{"components/TaskFormComponent.html":{}}}],["form.get(property).invalid",{"_index":1344,"title":{},"body":{"components/TaskFormComponent.html":{}}}],["form.get(property).touch",{"_index":1346,"title":{},"body":{"components/TaskFormComponent.html":{}}}],["form.modul",{"_index":767,"title":{},"body":{"modules/CreateTaskModule.html":{},"modules/EditTaskModule.html":{},"modules/TasksDialogModule.html":{}}}],["form.module.t",{"_index":1384,"title":{},"body":{"modules/TaskFormModule.html":{}}}],["formbuild",{"_index":517,"title":{},"body":{"components/CompleteTaskComponent.html":{},"components/RecurringTaskComponent.html":{},"components/TaskFormComponent.html":{}}}],["formdata",{"_index":1351,"title":{},"body":{"components/TaskFormComponent.html":{}}}],["formdata.statu",{"_index":1353,"title":{},"body":{"components/TaskFormComponent.html":{}}}],["formdata.value.descript",{"_index":912,"title":{},"body":{"components/EditTaskComponent.html":{}}}],["formdata.value.du",{"_index":914,"title":{},"body":{"components/EditTaskComponent.html":{}}}],["formdata.value.nam",{"_index":908,"title":{},"body":{"components/EditTaskComponent.html":{}}}],["formdata.value.prior",{"_index":910,"title":{},"body":{"components/EditTaskComponent.html":{}}}],["formgroup",{"_index":544,"title":{},"body":{"components/CompleteTaskComponent.html":{},"components/RecurringTaskComponent.html":{},"components/TaskFormComponent.html":{}}}],["formsmodul",{"_index":601,"title":{},"body":{"modules/CompleteTaskModule.html":{},"modules/ConfirmDeleteTaskModule.html":{},"modules/CreateTaskModule.html":{},"modules/EditTaskModule.html":{},"modules/TaskFormModule.html":{},"modules/TasksModule.html":{},"modules/TasksTableModule.html":{}}}],["formsvalid",{"_index":1374,"title":{},"body":{"components/TaskFormComponent.html":{}}}],["formvalid",{"_index":728,"title":{},"body":{"components/CreateTaskComponent.html":{},"components/EditTaskComponent.html":{},"components/TaskFormComponent.html":{}}}],["forroot",{"_index":723,"title":{},"body":{"modules/CoreModule.html":{},"modules/TasksModule.html":{}}}],["fortawesome/angular",{"_index":300,"title":{},"body":{"modules/AboutModule.html":{},"modules/CompleteTaskModule.html":{},"modules/ConfirmDeleteTaskModule.html":{},"modules/CreateTaskModule.html":{},"modules/EditTaskModule.html":{},"modules/HeaderModule.html":{},"modules/SidenavTasksModule.html":{},"modules/TasksButtonBarModule.html":{},"modules/TasksButtonsModule.html":{},"modules/TasksFilterModule.html":{},"modules/TasksTableModule.html":{},"dependencies.html":{}}}],["fortawesome/fontawesom",{"_index":301,"title":{},"body":{"modules/AboutModule.html":{},"modules/CompleteTaskModule.html":{},"modules/ConfirmDeleteTaskModule.html":{},"modules/CreateTaskModule.html":{},"modules/EditTaskModule.html":{},"modules/HeaderModule.html":{},"modules/SidenavTasksModule.html":{},"modules/TasksButtonBarModule.html":{},"modules/TasksButtonsModule.html":{},"modules/TasksFilterModule.html":{},"modules/TasksTableModule.html":{},"dependencies.html":{}}}],["fortawesome/fre",{"_index":305,"title":{},"body":{"modules/AboutModule.html":{},"modules/CompleteTaskModule.html":{},"modules/ConfirmDeleteTaskModule.html":{},"modules/CreateTaskModule.html":{},"modules/EditTaskModule.html":{},"modules/HeaderModule.html":{},"modules/SidenavTasksModule.html":{},"modules/TasksButtonBarModule.html":{},"modules/TasksButtonsModule.html":{},"modules/TasksFilterModule.html":{},"modules/TasksTableModule.html":{},"dependencies.html":{}}}],["found",{"_index":830,"title":{},"body":{"components/EditTaskComponent.html":{},"components/PageNotFoundComponent.html":{},"components/SidenavTasksComponent.html":{},"index.html":{}}}],["found'},{'nam",{"_index":260,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ButtonBarComponent.html":{},"components/ButtonsComponent.html":{},"components/CompleteTaskComponent.html":{},"components/CompleteTasksTableComponent.html":{},"components/ConfirmDeleteTaskComponent.html":{},"components/CreateTaskComponent.html":{},"components/EditTaskComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/ListItemComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PendingTasksTableComponent.html":{},"components/RecurringTaskComponent.html":{},"components/SidenavTasksComponent.html":{},"components/TaskFormComponent.html":{},"components/TasksComponent.html":{},"components/TasksFilterComponent.html":{}}}],["found.compon",{"_index":368,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["found.component.css",{"_index":1172,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["found.component.html",{"_index":1173,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["found.component.t",{"_index":1171,"title":{},"body":{"components/PageNotFoundComponent.html":{},"coverage.html":{}}}],["found/pag",{"_index":367,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/PageNotFoundComponent.html":{},"coverage.html":{}}}],["fragment",{"_index":47,"title":{},"body":{"components/AboutComponent.html":{}}}],["framework",{"_index":1759,"title":{},"body":{"index.html":{}}}],["frequenc",{"_index":1286,"title":{},"body":{"classes/Task.html":{}}}],["fromev",{"_index":1430,"title":{},"body":{"components/TasksFilterComponent.html":{}}}],["fromevent(this.taskfilterinput.nativeelement,'keyup",{"_index":1441,"title":{},"body":{"components/TasksFilterComponent.html":{}}}],["front",{"_index":1094,"title":{},"body":{"components/ListItemComponent.html":{}}}],["full",{"_index":380,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/TasksRoutingModule.html":{},"injectables/UtilsService.html":{},"index.html":{}}}],["fulli",{"_index":156,"title":{},"body":{"components/AboutComponent.html":{},"components/TasksFilterComponent.html":{},"index.html":{}}}],["fullscreendialogsub",{"_index":1486,"title":{},"body":{"injectables/UtilsService.html":{}}}],["fullscreendialogsub(dialogref",{"_index":1491,"title":{},"body":{"injectables/UtilsService.html":{}}}],["function",{"_index":137,"title":{},"body":{"components/AboutComponent.html":{},"injectables/ConsoleLoggerService.html":{},"injectables/MatPaginatorCustom.html":{},"components/TasksFilterComponent.html":{},"index.html":{}}}],["further",{"_index":1762,"title":{},"body":{"index.html":{}}}],["futur",{"_index":555,"title":{},"body":{"components/CompleteTaskComponent.html":{}}}],["gave",{"_index":1784,"title":{},"body":{"index.html":{}}}],["gener",{"_index":1709,"title":{},"body":{"index.html":{}}}],["get",{"_index":1599,"title":{"index.html":{}},"body":{"index.html":{}}}],["get(url",{"_index":1032,"title":{},"body":{"injectables/HttpService.html":{}}}],["geterror",{"_index":684,"title":{},"body":{"injectables/ConsoleLoggerService.html":{}}}],["getformdata",{"_index":1315,"title":{},"body":{"components/TaskFormComponent.html":{}}}],["getformdata(form",{"_index":1325,"title":{},"body":{"components/TaskFormComponent.html":{}}}],["getinfo",{"_index":678,"title":{},"body":{"injectables/ConsoleLoggerService.html":{}}}],["getrangelabel",{"_index":1159,"title":{},"body":{"injectables/MatPaginatorCustom.html":{}}}],["getrequestoptionarg",{"_index":1021,"title":{},"body":{"injectables/HttpService.html":{}}}],["getrequestoptionargs(opt",{"_index":1034,"title":{},"body":{"injectables/HttpService.html":{}}}],["getrouteparamsfromchild",{"_index":1195,"title":{},"body":{"components/SidenavTasksComponent.html":{}}}],["getter",{"_index":659,"title":{},"body":{"injectables/ConsoleLoggerService.html":{}}}],["getwarn",{"_index":681,"title":{},"body":{"injectables/ConsoleLoggerService.html":{}}}],["git",{"_index":1629,"title":{},"body":{"index.html":{}}}],["github",{"_index":1758,"title":{},"body":{"index.html":{}}}],["given",{"_index":390,"title":{},"body":{"components/ButtonBarComponent.html":{},"components/CompleteTaskComponent.html":{},"injectables/ConsoleLoggerService.html":{},"components/EditTaskComponent.html":{},"injectables/HttpService.html":{},"components/RecurringTaskComponent.html":{},"components/SidenavTasksComponent.html":{},"components/TaskFormComponent.html":{},"injectables/UtilsService.html":{}}}],["go",{"_index":1781,"title":{},"body":{"index.html":{}}}],["goe",{"_index":787,"title":{},"body":{"components/EditTaskComponent.html":{}}}],["graph",{"_index":1787,"title":{},"body":{"modules.html":{}}}],["half",{"_index":899,"title":{},"body":{"components/EditTaskComponent.html":{},"components/SidenavTasksComponent.html":{}}}],["hammerj",{"_index":1592,"title":{},"body":{"dependencies.html":{}}}],["hand",{"_index":166,"title":{},"body":{"components/AboutComponent.html":{}}}],["handi",{"_index":1766,"title":{},"body":{"index.html":{}}}],["handl",{"_index":57,"title":{},"body":{"components/AboutComponent.html":{},"components/EditTaskComponent.html":{},"injectables/LoaderService.html":{},"interfaces/LoaderState.html":{},"components/TaskFormComponent.html":{},"index.html":{}}}],["handset",{"_index":1745,"title":{},"body":{"index.html":{}}}],["header",{"_index":212,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/EditTaskComponent.html":{},"components/HeaderComponent.html":{},"modules/HeaderModule.html":{},"injectables/HttpService.html":{},"components/ListItemComponent.html":{},"components/SidenavTasksComponent.html":{}}}],["header'},{'nam",{"_index":255,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ButtonBarComponent.html":{},"components/ButtonsComponent.html":{},"components/CompleteTaskComponent.html":{},"components/CompleteTasksTableComponent.html":{},"components/ConfirmDeleteTaskComponent.html":{},"components/CreateTaskComponent.html":{},"components/EditTaskComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/ListItemComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PendingTasksTableComponent.html":{},"components/RecurringTaskComponent.html":{},"components/SidenavTasksComponent.html":{},"components/TaskFormComponent.html":{},"components/TasksComponent.html":{},"components/TasksFilterComponent.html":{}}}],["header.compon",{"_index":1005,"title":{},"body":{"modules/HeaderModule.html":{}}}],["header.component.css",{"_index":963,"title":{},"body":{"components/HeaderComponent.html":{}}}],["header.component.html",{"_index":964,"title":{},"body":{"components/HeaderComponent.html":{}}}],["header/header.modul",{"_index":371,"title":{},"body":{"modules/AppModule.html":{}}}],["headercompon",{"_index":254,"title":{"components/HeaderComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ButtonBarComponent.html":{},"components/ButtonsComponent.html":{},"components/CompleteTaskComponent.html":{},"components/CompleteTasksTableComponent.html":{},"components/ConfirmDeleteTaskComponent.html":{},"components/CreateTaskComponent.html":{},"components/EditTaskComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"modules/HeaderModule.html":{},"components/ListItemComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PendingTasksTableComponent.html":{},"components/RecurringTaskComponent.html":{},"components/SidenavTasksComponent.html":{},"components/TaskFormComponent.html":{},"components/TasksComponent.html":{},"components/TasksFilterComponent.html":{},"coverage.html":{},"overview.html":{}}}],["headermodul",{"_index":356,"title":{"modules/HeaderModule.html":{}},"body":{"modules/AppModule.html":{},"modules/HeaderModule.html":{},"modules.html":{},"overview.html":{}}}],["height",{"_index":1495,"title":{},"body":{"injectables/UtilsService.html":{}}}],["help",{"_index":1639,"title":{},"body":{"index.html":{}}}],["here",{"_index":872,"title":{},"body":{"components/EditTaskComponent.html":{},"index.html":{}}}],["hidden",{"_index":413,"title":{},"body":{"components/ButtonBarComponent.html":{},"components/ButtonsComponent.html":{},"components/HeaderComponent.html":{}}}],["hide",{"_index":393,"title":{},"body":{"components/ButtonBarComponent.html":{},"components/EditTaskComponent.html":{},"components/HeaderComponent.html":{},"injectables/HttpService.html":{},"injectables/LoaderService.html":{},"interfaces/LoaderState.html":{}}}],["hidecompletebutton",{"_index":400,"title":{},"body":{"components/ButtonBarComponent.html":{},"components/ButtonsComponent.html":{},"components/EditTaskComponent.html":{}}}],["hideeditbutton",{"_index":401,"title":{},"body":{"components/ButtonBarComponent.html":{},"components/ButtonsComponent.html":{}}}],["hideload",{"_index":1022,"title":{},"body":{"injectables/HttpService.html":{}}}],["hidepages",{"_index":402,"title":{},"body":{"components/ButtonBarComponent.html":{}}}],["high",{"_index":1302,"title":{},"body":{"classes/Task.html":{},"components/TaskFormComponent.html":{},"miscellaneous/typealiases.html":{}}}],["highlight",{"_index":1206,"title":{},"body":{"components/SidenavTasksComponent.html":{}}}],["highlightlistitem",{"_index":1196,"title":{},"body":{"components/SidenavTasksComponent.html":{}}}],["highlightlistitem(param",{"_index":1204,"title":{},"body":{"components/SidenavTasksComponent.html":{}}}],["hint",{"_index":506,"title":{},"body":{"components/CompleteTaskComponent.html":{}}}],["home",{"_index":1757,"title":{},"body":{"index.html":{}}}],["host",{"_index":1671,"title":{},"body":{"index.html":{}}}],["hostbind",{"_index":512,"title":{},"body":{"components/CompleteTaskComponent.html":{},"components/ConfirmDeleteTaskComponent.html":{},"components/CreateTaskComponent.html":{},"components/EditTaskComponent.html":{},"components/RecurringTaskComponent.html":{},"components/TaskFormComponent.html":{}}}],["hostbinding('class.mark",{"_index":565,"title":{},"body":{"components/CompleteTaskComponent.html":{},"components/ConfirmDeleteTaskComponent.html":{},"components/CreateTaskComponent.html":{},"components/EditTaskComponent.html":{},"components/RecurringTaskComponent.html":{},"components/TaskFormComponent.html":{}}}],["hourglass",{"_index":895,"title":{},"body":{"components/EditTaskComponent.html":{},"components/SidenavTasksComponent.html":{}}}],["html",{"_index":232,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ButtonBarComponent.html":{},"components/ButtonsComponent.html":{},"components/CompleteTaskComponent.html":{},"components/CompleteTasksTableComponent.html":{},"components/ConfirmDeleteTaskComponent.html":{},"components/CreateTaskComponent.html":{},"components/EditTaskComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/ListItemComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PendingTasksTableComponent.html":{},"components/RecurringTaskComponent.html":{},"components/SidenavTasksComponent.html":{},"components/TaskFormComponent.html":{},"components/TasksComponent.html":{},"components/TasksFilterComponent.html":{}}}],["http",{"_index":1008,"title":{},"body":{"injectables/HttpService.html":{}}}],["http://localhost:3000/api",{"_index":1047,"title":{},"body":{"injectables/HttpService.html":{}}}],["http://localhost:3000/api/task",{"_index":1703,"title":{},"body":{"index.html":{}}}],["http://localhost:4200",{"_index":1665,"title":{},"body":{"index.html":{}}}],["http:httpclient",{"_index":1053,"title":{},"body":{"injectables/HttpService.html":{}}}],["httpclient",{"_index":1028,"title":{},"body":{"injectables/HttpService.html":{}}}],["httpclientmodul",{"_index":703,"title":{},"body":{"modules/CoreModule.html":{}}}],["httpheader",{"_index":1048,"title":{},"body":{"injectables/HttpService.html":{}}}],["https://github.com/angular/angular/issues/6595",{"_index":98,"title":{},"body":{"components/AboutComponent.html":{}}}],["https://github.com/jonathan",{"_index":1630,"title":{},"body":{"index.html":{}}}],["https://medium.com/beauti",{"_index":1009,"title":{},"body":{"injectables/HttpService.html":{}}}],["https://robferguson.org/blog/2017/09/09/a",{"_index":1150,"title":{},"body":{"classes/Logger.html":{},"injectables/LoggerService.html":{}}}],["httpservic",{"_index":709,"title":{"injectables/HttpService.html":{}},"body":{"modules/CoreModule.html":{},"injectables/HttpService.html":{},"coverage.html":{}}}],["hwclock",{"_index":1676,"title":{},"body":{"index.html":{}}}],["icon",{"_index":307,"title":{},"body":{"modules/AboutModule.html":{},"modules/CompleteTaskModule.html":{},"modules/ConfirmDeleteTaskModule.html":{},"modules/CreateTaskModule.html":{},"components/EditTaskComponent.html":{},"modules/EditTaskModule.html":{},"components/HeaderComponent.html":{},"modules/HeaderModule.html":{},"components/ListItemComponent.html":{},"components/SidenavTasksComponent.html":{},"modules/SidenavTasksModule.html":{},"modules/TasksButtonBarModule.html":{},"modules/TasksButtonsModule.html":{},"modules/TasksFilterModule.html":{},"modules/TasksTableModule.html":{},"dependencies.html":{},"index.html":{}}}],["iconclass",{"_index":773,"title":{},"body":{"components/EditTaskComponent.html":{}}}],["id",{"_index":576,"title":{},"body":{"components/CompleteTaskComponent.html":{},"components/EditTaskComponent.html":{},"classes/Task.html":{}}}],["identifi",{"_index":1297,"title":{},"body":{"classes/Task.html":{},"coverage.html":{}}}],["if(!task.iscomplet",{"_index":846,"title":{},"body":{"components/EditTaskComponent.html":{}}}],["if(!this.task",{"_index":1354,"title":{},"body":{"components/TaskFormComponent.html":{}}}],["if(!this.task.iscomplet",{"_index":886,"title":{},"body":{"components/EditTaskComponent.html":{}}}],["if(!this.updateal",{"_index":881,"title":{},"body":{"components/EditTaskComponent.html":{}}}],["if(chang",{"_index":856,"title":{},"body":{"components/EditTaskComponent.html":{}}}],["if(duedate.isbefore(today",{"_index":891,"title":{},"body":{"components/EditTaskComponent.html":{}}}],["if(duedate.issame(today",{"_index":898,"title":{},"body":{"components/EditTaskComponent.html":{}}}],["if(duedate.issame(tomorrow",{"_index":901,"title":{},"body":{"components/EditTaskComponent.html":{}}}],["if(el",{"_index":103,"title":{},"body":{"components/AboutComponent.html":{}}}],["if(filt",{"_index":1265,"title":{},"body":{"components/SidenavTasksComponent.html":{}}}],["if(formvalid",{"_index":758,"title":{},"body":{"components/CreateTaskComponent.html":{}}}],["if(index",{"_index":641,"title":{},"body":{"components/ConfirmDeleteTaskComponent.html":{}}}],["if(isdevmod",{"_index":690,"title":{},"body":{"injectables/ConsoleLoggerService.html":{}}}],["if(ismediumscreen",{"_index":1519,"title":{},"body":{"injectables/UtilsService.html":{}}}],["if(isnan(id",{"_index":863,"title":{},"body":{"components/EditTaskComponent.html":{}}}],["if(next",{"_index":1249,"title":{},"body":{"components/SidenavTasksComponent.html":{}}}],["if(num",{"_index":1131,"title":{},"body":{"components/ListItemComponent.html":{}}}],["if(parentmodul",{"_index":714,"title":{},"body":{"modules/CoreModule.html":{}}}],["if(properti",{"_index":1341,"title":{},"body":{"components/TaskFormComponent.html":{}}}],["if(this.editrecurringtaskform.get('updateall').valu",{"_index":1185,"title":{},"body":{"components/RecurringTaskComponent.html":{}}}],["if(this.isexpand",{"_index":1253,"title":{},"body":{"components/SidenavTasksComponent.html":{}}}],["if(this.repeatpropertiesform.get(property).valu",{"_index":1367,"title":{},"body":{"components/TaskFormComponent.html":{}}}],["if(this.router.url.indexof('complet",{"_index":1266,"title":{},"body":{"components/SidenavTasksComponent.html":{}}}],["if(this.sidenavmenust",{"_index":992,"title":{},"body":{"components/HeaderComponent.html":{}}}],["if(this.task",{"_index":844,"title":{},"body":{"components/EditTaskComponent.html":{}}}],["if(this.task.iscomplet",{"_index":824,"title":{},"body":{"components/EditTaskComponent.html":{},"components/TaskFormComponent.html":{}}}],["if(this.tasks.length",{"_index":575,"title":{},"body":{"components/CompleteTaskComponent.html":{},"components/ConfirmDeleteTaskComponent.html":{}}}],["if(this.text",{"_index":1110,"title":{},"body":{"components/ListItemComponent.html":{}}}],["implement",{"_index":13,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/CompleteTaskComponent.html":{},"components/ConfirmDeleteTaskComponent.html":{},"injectables/ConsoleLoggerService.html":{},"components/CreateTaskComponent.html":{},"components/EditTaskComponent.html":{},"components/HeaderComponent.html":{},"components/ListItemComponent.html":{},"classes/Logger.html":{},"injectables/LoggerService.html":{},"components/RecurringTaskComponent.html":{},"components/SidenavTasksComponent.html":{},"components/TaskFormComponent.html":{},"components/TasksFilterComponent.html":{},"index.html":{}}}],["import",{"_index":77,"title":{},"body":{"components/AboutComponent.html":{},"modules/AboutModule.html":{},"modules/AboutRoutingModule.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ButtonBarComponent.html":{},"components/ButtonsComponent.html":{},"components/CompleteTaskComponent.html":{},"modules/CompleteTaskModule.html":{},"components/CompleteTasksTableComponent.html":{},"components/ConfirmDeleteTaskComponent.html":{},"modules/ConfirmDeleteTaskModule.html":{},"injectables/ConsoleLoggerService.html":{},"modules/CoreModule.html":{},"components/CreateTaskComponent.html":{},"modules/CreateTaskModule.html":{},"components/EditTaskComponent.html":{},"modules/EditTaskModule.html":{},"components/FooterComponent.html":{},"modules/FooterModule.html":{},"components/HeaderComponent.html":{},"modules/HeaderModule.html":{},"injectables/HttpService.html":{},"components/ListItemComponent.html":{},"injectables/LoaderService.html":{},"interfaces/LoaderState.html":{},"classes/Logger.html":{},"injectables/LoggerService.html":{},"injectables/MatPaginatorCustom.html":{},"components/PageNotFoundComponent.html":{},"components/PendingTasksTableComponent.html":{},"components/RecurringTaskComponent.html":{},"components/SidenavTasksComponent.html":{},"modules/SidenavTasksModule.html":{},"components/TaskFormComponent.html":{},"modules/TaskFormModule.html":{},"modules/TasksButtonBarModule.html":{},"modules/TasksButtonsModule.html":{},"components/TasksComponent.html":{},"modules/TasksDialogModule.html":{},"components/TasksFilterComponent.html":{},"modules/TasksFilterModule.html":{},"modules/TasksModule.html":{},"modules/TasksRoutingModule.html":{},"modules/TasksTableModule.html":{},"injectables/UtilsService.html":{}}}],["includ",{"_index":215,"title":{},"body":{"components/AboutComponent.html":{},"components/ButtonsComponent.html":{},"injectables/HttpService.html":{},"modules/TasksButtonsModule.html":{},"index.html":{}}}],["index",{"_index":22,"title":{"index.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ButtonBarComponent.html":{},"components/ButtonsComponent.html":{},"components/CompleteTaskComponent.html":{},"components/CompleteTasksTableComponent.html":{},"components/ConfirmDeleteTaskComponent.html":{},"injectables/ConsoleLoggerService.html":{},"components/CreateTaskComponent.html":{},"components/EditTaskComponent.html":{},"components/HeaderComponent.html":{},"injectables/HttpService.html":{},"components/ListItemComponent.html":{},"injectables/LoaderService.html":{},"interfaces/LoaderState.html":{},"classes/Logger.html":{},"injectables/LoggerService.html":{},"injectables/MatPaginatorCustom.html":{},"components/PendingTasksTableComponent.html":{},"components/RecurringTaskComponent.html":{},"components/SidenavTasksComponent.html":{},"classes/Task.html":{},"components/TaskFormComponent.html":{},"components/TasksFilterComponent.html":{},"injectables/UtilsService.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["index.html",{"_index":1714,"title":{},"body":{"index.html":{}}}],["index:numb",{"_index":639,"title":{},"body":{"components/ConfirmDeleteTaskComponent.html":{}}}],["indic",{"_index":71,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ButtonBarComponent.html":{},"components/ButtonsComponent.html":{},"components/CreateTaskComponent.html":{},"components/EditTaskComponent.html":{},"components/HeaderComponent.html":{},"injectables/HttpService.html":{},"components/ListItemComponent.html":{},"injectables/LoaderService.html":{},"interfaces/LoaderState.html":{},"components/SidenavTasksComponent.html":{},"components/TaskFormComponent.html":{},"components/TasksFilterComponent.html":{},"index.html":{}}}],["individu",{"_index":633,"title":{},"body":{"components/ConfirmDeleteTaskComponent.html":{},"index.html":{}}}],["info",{"_index":2,"title":{},"body":{"components/AboutComponent.html":{},"modules/AboutModule.html":{},"modules/AboutRoutingModule.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ButtonBarComponent.html":{},"components/ButtonsComponent.html":{},"components/CompleteTaskComponent.html":{},"modules/CompleteTaskModule.html":{},"components/CompleteTasksTableComponent.html":{},"components/ConfirmDeleteTaskComponent.html":{},"modules/ConfirmDeleteTaskModule.html":{},"injectables/ConsoleLoggerService.html":{},"modules/CoreModule.html":{},"components/CreateTaskComponent.html":{},"modules/CreateTaskModule.html":{},"components/EditTaskComponent.html":{},"modules/EditTaskModule.html":{},"components/FooterComponent.html":{},"modules/FooterModule.html":{},"components/HeaderComponent.html":{},"modules/HeaderModule.html":{},"injectables/HttpService.html":{},"components/ListItemComponent.html":{},"injectables/LoaderService.html":{},"interfaces/LoaderState.html":{},"classes/Logger.html":{},"injectables/LoggerService.html":{},"injectables/MatPaginatorCustom.html":{},"components/PageNotFoundComponent.html":{},"components/PendingTasksTableComponent.html":{},"components/RecurringTaskComponent.html":{},"components/SidenavTasksComponent.html":{},"modules/SidenavTasksModule.html":{},"classes/Task.html":{},"components/TaskFormComponent.html":{},"modules/TaskFormModule.html":{},"modules/TasksButtonBarModule.html":{},"modules/TasksButtonsModule.html":{},"components/TasksComponent.html":{},"modules/TasksDialogModule.html":{},"components/TasksFilterComponent.html":{},"modules/TasksFilterModule.html":{},"modules/TasksModule.html":{},"modules/TasksRoutingModule.html":{},"modules/TasksTableModule.html":{},"injectables/UtilsService.html":{}}}],["inid",{"_index":804,"title":{},"body":{"components/EditTaskComponent.html":{}}}],["initi",{"_index":45,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/CompleteTaskComponent.html":{},"components/ConfirmDeleteTaskComponent.html":{},"components/CreateTaskComponent.html":{},"components/EditTaskComponent.html":{},"components/HeaderComponent.html":{},"components/ListItemComponent.html":{},"components/RecurringTaskComponent.html":{},"components/SidenavTasksComponent.html":{},"components/TaskFormComponent.html":{},"components/TasksFilterComponent.html":{},"index.html":{}}}],["initiconclass",{"_index":778,"title":{},"body":{"components/EditTaskComponent.html":{}}}],["initpagin",{"_index":779,"title":{},"body":{"components/EditTaskComponent.html":{}}}],["inject",{"_index":559,"title":{"injectables/ConsoleLoggerService.html":{},"injectables/HttpService.html":{},"injectables/LoaderService.html":{},"injectables/LoggerService.html":{},"injectables/MatPaginatorCustom.html":{},"injectables/UtilsService.html":{}},"body":{"components/CompleteTaskComponent.html":{},"components/ConfirmDeleteTaskComponent.html":{},"injectables/ConsoleLoggerService.html":{},"injectables/HttpService.html":{},"injectables/LoaderService.html":{},"interfaces/LoaderState.html":{},"classes/Logger.html":{},"injectables/LoggerService.html":{},"injectables/MatPaginatorCustom.html":{},"components/RecurringTaskComponent.html":{},"injectables/UtilsService.html":{},"coverage.html":{},"overview.html":{}}}],["inject(mat_dialog_data",{"_index":567,"title":{},"body":{"components/CompleteTaskComponent.html":{},"components/ConfirmDeleteTaskComponent.html":{},"components/RecurringTaskComponent.html":{}}}],["input",{"_index":144,"title":{},"body":{"components/AboutComponent.html":{},"components/ButtonBarComponent.html":{},"components/ButtonsComponent.html":{},"components/ListItemComponent.html":{},"components/TaskFormComponent.html":{},"components/TasksFilterComponent.html":{},"index.html":{}}}],["insert",{"_index":1015,"title":{},"body":{"injectables/HttpService.html":{},"index.html":{}}}],["instal",{"_index":1635,"title":{},"body":{"index.html":{}}}],["install:allif",{"_index":1682,"title":{},"body":{"index.html":{}}}],["instanc",{"_index":719,"title":{},"body":{"modules/CoreModule.html":{},"modules/TasksModule.html":{}}}],["instead",{"_index":1694,"title":{},"body":{"index.html":{}}}],["intercept",{"_index":1023,"title":{},"body":{"injectables/HttpService.html":{}}}],["intercept(observ",{"_index":1038,"title":{},"body":{"injectables/HttpService.html":{}}}],["interfac",{"_index":1140,"title":{"interfaces/LoaderState.html":{}},"body":{"injectables/LoaderService.html":{},"interfaces/LoaderState.html":{},"classes/Logger.html":{},"injectables/LoggerService.html":{},"coverage.html":{},"overview.html":{}}}],["invalid",{"_index":530,"title":{},"body":{"components/CompleteTaskComponent.html":{},"components/TaskFormComponent.html":{}}}],["invokeconsolemethod",{"_index":670,"title":{},"body":{"injectables/ConsoleLoggerService.html":{},"injectables/LoggerService.html":{}}}],["invokeconsolemethod(typ",{"_index":671,"title":{},"body":{"injectables/ConsoleLoggerService.html":{},"classes/Logger.html":{},"injectables/LoggerService.html":{}}}],["iscomplet",{"_index":750,"title":{},"body":{"components/CreateTaskComponent.html":{},"classes/Task.html":{}}}],["iscomplete=fals",{"_index":1285,"title":{},"body":{"classes/Task.html":{}}}],["isdevmod",{"_index":686,"title":{},"body":{"injectables/ConsoleLoggerService.html":{}}}],["isexpand",{"_index":1191,"title":{},"body":{"components/SidenavTasksComponent.html":{}}}],["ismediumscreen",{"_index":965,"title":{},"body":{"components/HeaderComponent.html":{},"components/SidenavTasksComponent.html":{},"components/TaskFormComponent.html":{},"components/TasksFilterComponent.html":{},"injectables/UtilsService.html":{}}}],["ismediumscreensourc",{"_index":1484,"title":{},"body":{"injectables/UtilsService.html":{}}}],["issu",{"_index":96,"title":{},"body":{"components/AboutComponent.html":{},"index.html":{}}}],["istanbul",{"_index":1712,"title":{},"body":{"index.html":{}}}],["it'",{"_index":727,"title":{},"body":{"components/CreateTaskComponent.html":{},"components/EditTaskComponent.html":{}}}],["item",{"_index":217,"title":{},"body":{"components/AboutComponent.html":{},"components/ListItemComponent.html":{},"components/RecurringTaskComponent.html":{},"components/SidenavTasksComponent.html":{}}}],["item'},{'nam",{"_index":258,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ButtonBarComponent.html":{},"components/ButtonsComponent.html":{},"components/CompleteTaskComponent.html":{},"components/CompleteTasksTableComponent.html":{},"components/ConfirmDeleteTaskComponent.html":{},"components/CreateTaskComponent.html":{},"components/EditTaskComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/ListItemComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PendingTasksTableComponent.html":{},"components/RecurringTaskComponent.html":{},"components/SidenavTasksComponent.html":{},"components/TaskFormComponent.html":{},"components/TasksComponent.html":{},"components/TasksFilterComponent.html":{}}}],["item.compon",{"_index":1282,"title":{},"body":{"modules/SidenavTasksModule.html":{}}}],["item.component.css",{"_index":1080,"title":{},"body":{"components/ListItemComponent.html":{}}}],["item.component.html",{"_index":1081,"title":{},"body":{"components/ListItemComponent.html":{}}}],["item.component.t",{"_index":1073,"title":{},"body":{"components/ListItemComponent.html":{},"coverage.html":{}}}],["item.component.ts:25",{"_index":1090,"title":{},"body":{"components/ListItemComponent.html":{}}}],["item.component.ts:27",{"_index":1095,"title":{},"body":{"components/ListItemComponent.html":{}}}],["item.component.ts:29",{"_index":1093,"title":{},"body":{"components/ListItemComponent.html":{}}}],["item.component.ts:31",{"_index":1097,"title":{},"body":{"components/ListItemComponent.html":{}}}],["item.component.ts:33",{"_index":1098,"title":{},"body":{"components/ListItemComponent.html":{}}}],["item.component.ts:35",{"_index":1099,"title":{},"body":{"components/ListItemComponent.html":{}}}],["item.component.ts:37",{"_index":1102,"title":{},"body":{"components/ListItemComponent.html":{}}}],["item.component.ts:39",{"_index":1103,"title":{},"body":{"components/ListItemComponent.html":{}}}],["item.component.ts:41",{"_index":1104,"title":{},"body":{"components/ListItemComponent.html":{}}}],["item.component.ts:43",{"_index":1086,"title":{},"body":{"components/ListItemComponent.html":{}}}],["item.component.ts:50",{"_index":1100,"title":{},"body":{"components/ListItemComponent.html":{}}}],["item.component.ts:57",{"_index":1101,"title":{},"body":{"components/ListItemComponent.html":{}}}],["jonathan",{"_index":1770,"title":{},"body":{"index.html":{}}}],["jqueri",{"_index":1779,"title":{},"body":{"index.html":{}}}],["js",{"_index":1587,"title":{},"body":{"dependencies.html":{}}}],["json",{"_index":1699,"title":{},"body":{"index.html":{}}}],["jwt",{"_index":1011,"title":{},"body":{"injectables/HttpService.html":{}}}],["karma",{"_index":1704,"title":{},"body":{"index.html":{}}}],["keyup",{"_index":1420,"title":{},"body":{"components/TasksFilterComponent.html":{}}}],["keyword",{"_index":224,"title":{},"body":{"components/AboutComponent.html":{},"index.html":{}}}],["label",{"_index":1158,"title":{},"body":{"injectables/MatPaginatorCustom.html":{}}}],["lack",{"_index":142,"title":{},"body":{"components/AboutComponent.html":{},"index.html":{}}}],["laptop",{"_index":148,"title":{},"body":{"components/AboutComponent.html":{}}}],["larg",{"_index":955,"title":{},"body":{"components/HeaderComponent.html":{},"components/ListItemComponent.html":{},"injectables/UtilsService.html":{}}}],["larger",{"_index":975,"title":{},"body":{"components/HeaderComponent.html":{}}}],["larges",{"_index":1492,"title":{},"body":{"injectables/UtilsService.html":{}}}],["last",{"_index":424,"title":{},"body":{"components/ButtonBarComponent.html":{},"components/SidenavTasksComponent.html":{},"components/TasksFilterComponent.html":{}}}],["latest",{"_index":1740,"title":{},"body":{"index.html":{}}}],["layout",{"_index":295,"title":{},"body":{"modules/AboutModule.html":{},"components/AppComponent.html":{},"modules/CompleteTaskModule.html":{},"modules/ConfirmDeleteTaskModule.html":{},"modules/CoreModule.html":{},"modules/CreateTaskModule.html":{},"modules/EditTaskModule.html":{},"modules/FooterModule.html":{},"modules/HeaderModule.html":{},"components/SidenavTasksComponent.html":{},"modules/SidenavTasksModule.html":{},"modules/TaskFormModule.html":{},"modules/TasksButtonBarModule.html":{},"modules/TasksButtonsModule.html":{},"components/TasksComponent.html":{},"modules/TasksFilterModule.html":{},"modules/TasksModule.html":{},"modules/TasksTableModule.html":{},"dependencies.html":{},"index.html":{}}}],["learn",{"_index":1775,"title":{},"body":{"index.html":{}}}],["left",{"_index":165,"title":{},"body":{"components/AboutComponent.html":{}}}],["legend",{"_index":231,"title":{},"body":{"components/AboutComponent.html":{},"modules/AboutModule.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ButtonBarComponent.html":{},"components/ButtonsComponent.html":{},"components/CompleteTaskComponent.html":{},"modules/CompleteTaskModule.html":{},"components/CompleteTasksTableComponent.html":{},"components/ConfirmDeleteTaskComponent.html":{},"modules/ConfirmDeleteTaskModule.html":{},"components/CreateTaskComponent.html":{},"modules/CreateTaskModule.html":{},"components/EditTaskComponent.html":{},"modules/EditTaskModule.html":{},"components/FooterComponent.html":{},"modules/FooterModule.html":{},"components/HeaderComponent.html":{},"modules/HeaderModule.html":{},"components/ListItemComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PendingTasksTableComponent.html":{},"components/RecurringTaskComponent.html":{},"components/SidenavTasksComponent.html":{},"modules/SidenavTasksModule.html":{},"components/TaskFormComponent.html":{},"modules/TaskFormModule.html":{},"modules/TasksButtonBarModule.html":{},"modules/TasksButtonsModule.html":{},"components/TasksComponent.html":{},"modules/TasksDialogModule.html":{},"components/TasksFilterComponent.html":{},"modules/TasksFilterModule.html":{},"modules/TasksModule.html":{},"modules/TasksTableModule.html":{},"overview.html":{}}}],["length",{"_index":403,"title":{},"body":{"components/ButtonBarComponent.html":{},"injectables/MatPaginatorCustom.html":{}}}],["leverag",{"_index":1742,"title":{},"body":{"index.html":{}}}],["librari",{"_index":289,"title":{},"body":{"modules/AboutModule.html":{},"modules/AboutRoutingModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CompleteTaskComponent.html":{},"modules/CompleteTaskModule.html":{},"modules/ConfirmDeleteTaskModule.html":{},"modules/CoreModule.html":{},"modules/CreateTaskModule.html":{},"components/EditTaskComponent.html":{},"modules/EditTaskModule.html":{},"modules/FooterModule.html":{},"modules/HeaderModule.html":{},"components/ListItemComponent.html":{},"modules/SidenavTasksModule.html":{},"components/TaskFormComponent.html":{},"modules/TaskFormModule.html":{},"modules/TasksButtonBarModule.html":{},"modules/TasksButtonsModule.html":{},"modules/TasksDialogModule.html":{},"modules/TasksFilterModule.html":{},"modules/TasksModule.html":{},"modules/TasksRoutingModule.html":{},"modules/TasksTableModule.html":{}}}],["library.add(faangleup",{"_index":310,"title":{},"body":{"modules/AboutModule.html":{},"modules/TasksTableModule.html":{}}}],["library.add(faarrowleft",{"_index":1393,"title":{},"body":{"modules/TasksButtonBarModule.html":{},"modules/TasksButtonsModule.html":{}}}],["library.add(fabar",{"_index":1004,"title":{},"body":{"modules/HeaderModule.html":{}}}],["library.add(facheck",{"_index":611,"title":{},"body":{"modules/CompleteTaskModule.html":{},"modules/EditTaskModule.html":{}}}],["library.add(faclipboardlist",{"_index":1280,"title":{},"body":{"modules/SidenavTasksModule.html":{}}}],["library.add(fapast",{"_index":766,"title":{},"body":{"modules/CreateTaskModule.html":{}}}],["library.add(fasearch",{"_index":1451,"title":{},"body":{"modules/TasksFilterModule.html":{}}}],["library.add(fatrash",{"_index":653,"title":{},"body":{"modules/ConfirmDeleteTaskModule.html":{}}}],["limit",{"_index":138,"title":{},"body":{"components/AboutComponent.html":{},"index.html":{}}}],["line",{"_index":669,"title":{},"body":{"injectables/ConsoleLoggerService.html":{},"classes/Logger.html":{},"injectables/LoggerService.html":{}}}],["link",{"_index":1640,"title":{},"body":{"index.html":{}}}],["link{buttonscompon",{"_index":387,"title":{},"body":{"components/ButtonBarComponent.html":{}}}],["list",{"_index":257,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ButtonBarComponent.html":{},"components/ButtonsComponent.html":{},"components/CompleteTaskComponent.html":{},"components/CompleteTasksTableComponent.html":{},"components/ConfirmDeleteTaskComponent.html":{},"components/CreateTaskComponent.html":{},"components/EditTaskComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/ListItemComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PendingTasksTableComponent.html":{},"components/RecurringTaskComponent.html":{},"components/SidenavTasksComponent.html":{},"modules/SidenavTasksModule.html":{},"components/TaskFormComponent.html":{},"components/TasksComponent.html":{},"components/TasksFilterComponent.html":{},"index.html":{}}}],["listen",{"_index":1424,"title":{},"body":{"components/TasksFilterComponent.html":{},"index.html":{}}}],["listitem",{"_index":1192,"title":{},"body":{"components/SidenavTasksComponent.html":{}}}],["listitemcompon",{"_index":256,"title":{"components/ListItemComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ButtonBarComponent.html":{},"components/ButtonsComponent.html":{},"components/CompleteTaskComponent.html":{},"components/CompleteTasksTableComponent.html":{},"components/ConfirmDeleteTaskComponent.html":{},"components/CreateTaskComponent.html":{},"components/EditTaskComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/ListItemComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PendingTasksTableComponent.html":{},"components/RecurringTaskComponent.html":{},"components/SidenavTasksComponent.html":{},"modules/SidenavTasksModule.html":{},"components/TaskFormComponent.html":{},"components/TasksComponent.html":{},"components/TasksFilterComponent.html":{},"coverage.html":{},"overview.html":{}}}],["load",{"_index":328,"title":{},"body":{"components/AppComponent.html":{},"modules/CoreModule.html":{},"components/EditTaskComponent.html":{},"injectables/HttpService.html":{},"injectables/LoaderService.html":{},"interfaces/LoaderState.html":{},"modules/TasksModule.html":{}}}],["loadchildren",{"_index":377,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["loader",{"_index":1037,"title":{},"body":{"injectables/HttpService.html":{},"injectables/LoaderService.html":{},"interfaces/LoaderState.html":{}}}],["loader.servic",{"_index":1052,"title":{},"body":{"injectables/HttpService.html":{}}}],["loaderservic",{"_index":332,"title":{"injectables/LoaderService.html":{}},"body":{"components/AppComponent.html":{},"modules/CoreModule.html":{},"injectables/HttpService.html":{},"injectables/LoaderService.html":{},"interfaces/LoaderState.html":{},"coverage.html":{}}}],["loaderservice:loaderservic",{"_index":1054,"title":{},"body":{"injectables/HttpService.html":{}}}],["loaderst",{"_index":340,"title":{"interfaces/LoaderState.html":{}},"body":{"components/AppComponent.html":{},"injectables/LoaderService.html":{},"interfaces/LoaderState.html":{},"coverage.html":{}}}],["loaderstate.show",{"_index":345,"title":{},"body":{"components/AppComponent.html":{}}}],["loadersubject",{"_index":1134,"title":{},"body":{"injectables/LoaderService.html":{},"interfaces/LoaderState.html":{}}}],["loadtask",{"_index":780,"title":{},"body":{"components/EditTaskComponent.html":{}}}],["loadtask(id",{"_index":795,"title":{},"body":{"components/EditTaskComponent.html":{}}}],["local",{"_index":1738,"title":{},"body":{"index.html":{}}}],["locat",{"_index":162,"title":{},"body":{"components/AboutComponent.html":{},"components/EditTaskComponent.html":{},"index.html":{}}}],["log",{"_index":658,"title":{},"body":{"injectables/ConsoleLoggerService.html":{},"classes/Logger.html":{},"injectables/LoggerService.html":{}}}],["logfn",{"_index":694,"title":{},"body":{"injectables/ConsoleLoggerService.html":{}}}],["logfn.apply(consol",{"_index":697,"title":{},"body":{"injectables/ConsoleLoggerService.html":{}}}],["logger",{"_index":518,"title":{"classes/Logger.html":{}},"body":{"components/CompleteTaskComponent.html":{},"components/ConfirmDeleteTaskComponent.html":{},"injectables/ConsoleLoggerService.html":{},"components/CreateTaskComponent.html":{},"components/EditTaskComponent.html":{},"injectables/HttpService.html":{},"classes/Logger.html":{},"injectables/LoggerService.html":{},"injectables/UtilsService.html":{},"coverage.html":{}}}],["logger.servic",{"_index":687,"title":{},"body":{"injectables/ConsoleLoggerService.html":{},"modules/CoreModule.html":{},"injectables/HttpService.html":{}}}],["logger.service.t",{"_index":656,"title":{},"body":{"injectables/ConsoleLoggerService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["logger.service.ts:21",{"_index":679,"title":{},"body":{"injectables/ConsoleLoggerService.html":{}}}],["logger.service.ts:32",{"_index":682,"title":{},"body":{"injectables/ConsoleLoggerService.html":{}}}],["logger.service.ts:43",{"_index":685,"title":{},"body":{"injectables/ConsoleLoggerService.html":{}}}],["logger.service.ts:58",{"_index":673,"title":{},"body":{"injectables/ConsoleLoggerService.html":{}}}],["loggerservic",{"_index":519,"title":{"injectables/LoggerService.html":{}},"body":{"components/CompleteTaskComponent.html":{},"components/ConfirmDeleteTaskComponent.html":{},"modules/CoreModule.html":{},"components/CreateTaskComponent.html":{},"components/EditTaskComponent.html":{},"injectables/HttpService.html":{},"classes/Logger.html":{},"injectables/LoggerService.html":{},"injectables/UtilsService.html":{},"coverage.html":{}}}],["long",{"_index":205,"title":{},"body":{"components/AboutComponent.html":{}}}],["look",{"_index":666,"title":{},"body":{"injectables/ConsoleLoggerService.html":{},"components/PageNotFoundComponent.html":{}}}],["lot",{"_index":552,"title":{},"body":{"components/CompleteTaskComponent.html":{}}}],["low",{"_index":174,"title":{},"body":{"components/AboutComponent.html":{},"classes/Task.html":{},"components/TaskFormComponent.html":{},"miscellaneous/typealiases.html":{}}}],["machin",{"_index":1637,"title":{},"body":{"index.html":{}}}],["made",{"_index":1660,"title":{},"body":{"index.html":{}}}],["main",{"_index":320,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonBarComponent.html":{},"components/ButtonsComponent.html":{},"components/HeaderComponent.html":{},"components/SidenavTasksComponent.html":{},"components/TaskFormComponent.html":{},"modules/TasksButtonsModule.html":{},"components/TasksComponent.html":{},"components/TasksFilterComponent.html":{},"index.html":{}}}],["mainpropertiesform",{"_index":1311,"title":{},"body":{"components/TaskFormComponent.html":{}}}],["maintain",{"_index":1108,"title":{},"body":{"components/ListItemComponent.html":{}}}],["make",{"_index":551,"title":{},"body":{"components/CompleteTaskComponent.html":{},"modules/CoreModule.html":{},"injectables/HttpService.html":{},"components/TaskFormComponent.html":{}}}],["manag",{"_index":120,"title":{},"body":{"components/AboutComponent.html":{},"components/ButtonBarComponent.html":{},"components/ButtonsComponent.html":{},"modules/CreateTaskModule.html":{},"modules/TasksButtonsModule.html":{},"modules/TasksModule.html":{},"modules/TasksTableModule.html":{},"injectables/UtilsService.html":{},"index.html":{}}}],["manager/selenium**not",{"_index":1730,"title":{},"body":{"index.html":{}}}],["manual",{"_index":1725,"title":{},"body":{"index.html":{}}}],["map((formdata",{"_index":1350,"title":{},"body":{"components/TaskFormComponent.html":{}}}],["mark",{"_index":202,"title":{},"body":{"components/AboutComponent.html":{},"components/CompleteTaskComponent.html":{},"classes/Task.html":{},"components/TaskFormComponent.html":{}}}],["marker",{"_index":1217,"title":{},"body":{"components/SidenavTasksComponent.html":{}}}],["mat",{"_index":884,"title":{},"body":{"components/EditTaskComponent.html":{},"components/ListItemComponent.html":{}}}],["mat_dialog_data",{"_index":562,"title":{},"body":{"components/CompleteTaskComponent.html":{},"components/ConfirmDeleteTaskComponent.html":{},"components/RecurringTaskComponent.html":{}}}],["matbadgemodul",{"_index":1273,"title":{},"body":{"modules/SidenavTasksModule.html":{}}}],["matbuttonmodul",{"_index":296,"title":{},"body":{"modules/AboutModule.html":{},"modules/CompleteTaskModule.html":{},"modules/ConfirmDeleteTaskModule.html":{},"modules/CreateTaskModule.html":{},"modules/EditTaskModule.html":{},"modules/HeaderModule.html":{},"modules/SidenavTasksModule.html":{},"modules/TasksButtonBarModule.html":{},"modules/TasksButtonsModule.html":{},"modules/TasksFilterModule.html":{},"modules/TasksTableModule.html":{}}}],["match",{"_index":273,"title":{},"body":{"components/AboutComponent.html":{},"modules/AboutModule.html":{},"modules/AboutRoutingModule.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ButtonBarComponent.html":{},"components/ButtonsComponent.html":{},"components/CompleteTaskComponent.html":{},"modules/CompleteTaskModule.html":{},"components/CompleteTasksTableComponent.html":{},"components/ConfirmDeleteTaskComponent.html":{},"modules/ConfirmDeleteTaskModule.html":{},"injectables/ConsoleLoggerService.html":{},"modules/CoreModule.html":{},"components/CreateTaskComponent.html":{},"modules/CreateTaskModule.html":{},"components/EditTaskComponent.html":{},"modules/EditTaskModule.html":{},"components/FooterComponent.html":{},"modules/FooterModule.html":{},"components/HeaderComponent.html":{},"modules/HeaderModule.html":{},"injectables/HttpService.html":{},"components/ListItemComponent.html":{},"injectables/LoaderService.html":{},"interfaces/LoaderState.html":{},"classes/Logger.html":{},"injectables/LoggerService.html":{},"injectables/MatPaginatorCustom.html":{},"components/PageNotFoundComponent.html":{},"components/PendingTasksTableComponent.html":{},"components/RecurringTaskComponent.html":{},"components/SidenavTasksComponent.html":{},"modules/SidenavTasksModule.html":{},"classes/Task.html":{},"components/TaskFormComponent.html":{},"modules/TaskFormModule.html":{},"modules/TasksButtonBarModule.html":{},"modules/TasksButtonsModule.html":{},"components/TasksComponent.html":{},"modules/TasksDialogModule.html":{},"components/TasksFilterComponent.html":{},"modules/TasksFilterModule.html":{},"modules/TasksModule.html":{},"modules/TasksRoutingModule.html":{},"modules/TasksTableModule.html":{},"injectables/UtilsService.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["matcheckboxmodul",{"_index":1476,"title":{},"body":{"modules/TasksTableModule.html":{}}}],["matdatepickermodul",{"_index":603,"title":{},"body":{"modules/CompleteTaskModule.html":{},"modules/CreateTaskModule.html":{},"modules/EditTaskModule.html":{},"modules/TaskFormModule.html":{},"modules/TasksFilterModule.html":{}}}],["matdialog",{"_index":443,"title":{},"body":{"components/ButtonsComponent.html":{},"components/EditTaskComponent.html":{},"components/SidenavTasksComponent.html":{}}}],["matdialogconfig",{"_index":468,"title":{},"body":{"components/ButtonsComponent.html":{},"components/EditTaskComponent.html":{},"components/SidenavTasksComponent.html":{}}}],["matdialogmodul",{"_index":604,"title":{},"body":{"modules/CompleteTaskModule.html":{},"modules/ConfirmDeleteTaskModule.html":{},"modules/CreateTaskModule.html":{},"modules/EditTaskModule.html":{},"modules/TasksButtonBarModule.html":{},"modules/TasksButtonsModule.html":{}}}],["matdialogref",{"_index":516,"title":{},"body":{"components/CompleteTaskComponent.html":{},"components/ConfirmDeleteTaskComponent.html":{},"components/CreateTaskComponent.html":{},"components/RecurringTaskComponent.html":{},"injectables/UtilsService.html":{}}}],["materi",{"_index":1743,"title":{},"body":{"index.html":{}}}],["matformfieldmodul",{"_index":605,"title":{},"body":{"modules/CompleteTaskModule.html":{},"modules/CreateTaskModule.html":{},"modules/EditTaskModule.html":{},"modules/TaskFormModule.html":{},"modules/TasksFilterModule.html":{}}}],["math.max(length",{"_index":1163,"title":{},"body":{"injectables/MatPaginatorCustom.html":{}}}],["matinputmodul",{"_index":606,"title":{},"body":{"modules/CompleteTaskModule.html":{},"modules/CreateTaskModule.html":{},"modules/EditTaskModule.html":{},"modules/TaskFormModule.html":{},"modules/TasksFilterModule.html":{}}}],["matlistmodul",{"_index":1274,"title":{},"body":{"modules/SidenavTasksModule.html":{}}}],["matnativedatemodul",{"_index":607,"title":{},"body":{"modules/CompleteTaskModule.html":{},"modules/CreateTaskModule.html":{},"modules/EditTaskModule.html":{},"modules/TaskFormModule.html":{},"modules/TasksFilterModule.html":{}}}],["matpagin",{"_index":432,"title":{},"body":{"components/ButtonBarComponent.html":{}}}],["matpaginatorcustom",{"_index":932,"title":{"injectables/MatPaginatorCustom.html":{}},"body":{"modules/EditTaskModule.html":{},"injectables/MatPaginatorCustom.html":{},"coverage.html":{},"overview.html":{}}}],["matpaginatorintl",{"_index":933,"title":{},"body":{"modules/EditTaskModule.html":{},"injectables/MatPaginatorCustom.html":{}}}],["matpaginatormodul",{"_index":934,"title":{},"body":{"modules/EditTaskModule.html":{},"modules/TasksButtonBarModule.html":{},"modules/TasksTableModule.html":{}}}],["matprogressspinnermodul",{"_index":362,"title":{},"body":{"modules/AppModule.html":{},"modules/CoreModule.html":{},"modules/TasksTableModule.html":{}}}],["matradiomodul",{"_index":935,"title":{},"body":{"modules/EditTaskModule.html":{}}}],["matselectmodul",{"_index":1385,"title":{},"body":{"modules/TaskFormModule.html":{}}}],["matsidenavmodul",{"_index":705,"title":{},"body":{"modules/CoreModule.html":{},"modules/SidenavTasksModule.html":{},"modules/TasksModule.html":{}}}],["matsnackbar",{"_index":783,"title":{},"body":{"components/EditTaskComponent.html":{}}}],["matsnackbarmodul",{"_index":937,"title":{},"body":{"modules/EditTaskModule.html":{},"modules/TasksTableModule.html":{}}}],["matsortmodul",{"_index":1477,"title":{},"body":{"modules/TasksTableModule.html":{}}}],["mattablemodul",{"_index":1478,"title":{},"body":{"modules/TasksTableModule.html":{}}}],["mattoolbarmodul",{"_index":1001,"title":{},"body":{"modules/HeaderModule.html":{}}}],["mattooltipmodul",{"_index":936,"title":{},"body":{"modules/EditTaskModule.html":{},"modules/HeaderModule.html":{},"modules/SidenavTasksModule.html":{},"modules/TasksFilterModule.html":{}}}],["max",{"_index":549,"title":{},"body":{"components/CompleteTaskComponent.html":{}}}],["maxdatecomplet",{"_index":507,"title":{},"body":{"components/CompleteTaskComponent.html":{}}}],["meant",{"_index":119,"title":{},"body":{"components/AboutComponent.html":{},"injectables/HttpService.html":{},"components/ListItemComponent.html":{},"index.html":{}}}],["medium",{"_index":961,"title":{},"body":{"components/HeaderComponent.html":{},"components/SidenavTasksComponent.html":{},"classes/Task.html":{},"components/TaskFormComponent.html":{},"components/TasksFilterComponent.html":{},"injectables/UtilsService.html":{},"miscellaneous/typealiases.html":{}}}],["memori",{"_index":1692,"title":{},"body":{"index.html":{}}}],["menu",{"_index":164,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/HeaderComponent.html":{},"components/ListItemComponent.html":{},"components/SidenavTasksComponent.html":{},"components/TasksComponent.html":{},"components/TasksFilterComponent.html":{},"injectables/UtilsService.html":{}}}],["messag",{"_index":539,"title":{},"body":{"components/CompleteTaskComponent.html":{},"injectables/ConsoleLoggerService.html":{}}}],["metadata",{"_index":16,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ButtonBarComponent.html":{},"components/ButtonsComponent.html":{},"components/CompleteTaskComponent.html":{},"components/CompleteTasksTableComponent.html":{},"components/ConfirmDeleteTaskComponent.html":{},"components/CreateTaskComponent.html":{},"components/EditTaskComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/ListItemComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PendingTasksTableComponent.html":{},"components/RecurringTaskComponent.html":{},"components/SidenavTasksComponent.html":{},"components/TaskFormComponent.html":{},"components/TasksComponent.html":{},"components/TasksFilterComponent.html":{}}}],["method",{"_index":28,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/CompleteTaskComponent.html":{},"components/ConfirmDeleteTaskComponent.html":{},"injectables/ConsoleLoggerService.html":{},"components/CreateTaskComponent.html":{},"components/EditTaskComponent.html":{},"components/HeaderComponent.html":{},"injectables/HttpService.html":{},"components/ListItemComponent.html":{},"injectables/LoaderService.html":{},"injectables/LoggerService.html":{},"components/RecurringTaskComponent.html":{},"components/SidenavTasksComponent.html":{},"components/TaskFormComponent.html":{},"components/TasksFilterComponent.html":{},"injectables/UtilsService.html":{}}}],["microsoft",{"_index":1723,"title":{},"body":{"index.html":{}}}],["microsoftwebdriv",{"_index":1727,"title":{},"body":{"index.html":{}}}],["mindued",{"_index":1312,"title":{},"body":{"components/TaskFormComponent.html":{}}}],["minimum",{"_index":1336,"title":{},"body":{"components/TaskFormComponent.html":{}}}],["miscellan",{"_index":1791,"title":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mix",{"_index":1778,"title":{},"body":{"index.html":{}}}],["mm",{"_index":1119,"title":{},"body":{"components/ListItemComponent.html":{}}}],["mocha",{"_index":1705,"title":{},"body":{"index.html":{}}}],["modal",{"_index":169,"title":{},"body":{"components/AboutComponent.html":{}}}],["mode",{"_index":1619,"title":{},"body":{"index.html":{}}}],["modifi",{"_index":121,"title":{},"body":{"components/AboutComponent.html":{},"components/EditTaskComponent.html":{},"components/TaskFormComponent.html":{}}}],["modul",{"_index":274,"title":{"modules/AboutModule.html":{},"modules/AboutRoutingModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/CompleteTaskModule.html":{},"modules/ConfirmDeleteTaskModule.html":{},"modules/CoreModule.html":{},"modules/CreateTaskModule.html":{},"modules/EditTaskModule.html":{},"modules/FooterModule.html":{},"modules/HeaderModule.html":{},"modules/SidenavTasksModule.html":{},"modules/TaskFormModule.html":{},"modules/TasksButtonBarModule.html":{},"modules/TasksButtonsModule.html":{},"modules/TasksDialogModule.html":{},"modules/TasksFilterModule.html":{},"modules/TasksModule.html":{},"modules/TasksRoutingModule.html":{},"modules/TasksTableModule.html":{},"modules.html":{}},"body":{"modules/AboutModule.html":{},"modules/AboutRoutingModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/CompleteTaskModule.html":{},"modules/ConfirmDeleteTaskModule.html":{},"modules/CoreModule.html":{},"modules/CreateTaskModule.html":{},"components/EditTaskComponent.html":{},"modules/EditTaskModule.html":{},"modules/FooterModule.html":{},"modules/HeaderModule.html":{},"modules/SidenavTasksModule.html":{},"modules/TaskFormModule.html":{},"modules/TasksButtonBarModule.html":{},"modules/TasksButtonsModule.html":{},"modules/TasksDialogModule.html":{},"modules/TasksFilterModule.html":{},"modules/TasksModule.html":{},"modules/TasksRoutingModule.html":{},"modules/TasksTableModule.html":{},"modules.html":{},"overview.html":{}}}],["modulewithprovid",{"_index":701,"title":{},"body":{"modules/CoreModule.html":{},"modules/TasksModule.html":{},"modules/TasksTableModule.html":{}}}],["moment",{"_index":558,"title":{},"body":{"components/CompleteTaskComponent.html":{},"components/EditTaskComponent.html":{},"components/ListItemComponent.html":{},"components/TaskFormComponent.html":{},"dependencies.html":{}}}],["moment().startof('day').add(1",{"_index":889,"title":{},"body":{"components/EditTaskComponent.html":{},"components/ListItemComponent.html":{}}}],["moment().startof('day').utc",{"_index":888,"title":{},"body":{"components/EditTaskComponent.html":{}}}],["moment().startof('day').utc().format('yyyi",{"_index":1118,"title":{},"body":{"components/ListItemComponent.html":{}}}],["moment().startof('day').utc().tod",{"_index":586,"title":{},"body":{"components/CompleteTaskComponent.html":{}}}],["moment(this.task.datecomplet",{"_index":1358,"title":{},"body":{"components/TaskFormComponent.html":{}}}],["moment(this.task.dued",{"_index":1363,"title":{},"body":{"components/TaskFormComponent.html":{}}}],["moment(this.task.duedate).utc",{"_index":887,"title":{},"body":{"components/EditTaskComponent.html":{}}}],["moment.iso_8601",{"_index":1359,"title":{},"body":{"components/TaskFormComponent.html":{}}}],["monthli",{"_index":1289,"title":{},"body":{"classes/Task.html":{},"components/TaskFormComponent.html":{},"index.html":{}}}],["more",{"_index":204,"title":{},"body":{"components/AboutComponent.html":{},"components/ButtonsComponent.html":{},"components/CompleteTaskComponent.html":{},"modules/TasksButtonsModule.html":{},"index.html":{}}}],["mous",{"_index":143,"title":{},"body":{"components/AboutComponent.html":{},"index.html":{}}}],["msg",{"_index":540,"title":{},"body":{"components/CompleteTaskComponent.html":{}}}],["multi",{"_index":1777,"title":{},"body":{"index.html":{}}}],["multipl",{"_index":1075,"title":{},"body":{"components/ListItemComponent.html":{}}}],["mytask",{"_index":109,"title":{},"body":{"components/AboutComponent.html":{},"components/HeaderComponent.html":{},"index.html":{}}}],["mytasks_angular",{"_index":1675,"title":{},"body":{"index.html":{}}}],["mytasks_serv",{"_index":1677,"title":{},"body":{"index.html":{}}}],["name",{"_index":40,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ButtonBarComponent.html":{},"components/ButtonsComponent.html":{},"components/CompleteTaskComponent.html":{},"components/CompleteTasksTableComponent.html":{},"components/ConfirmDeleteTaskComponent.html":{},"injectables/ConsoleLoggerService.html":{},"components/CreateTaskComponent.html":{},"components/EditTaskComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"injectables/HttpService.html":{},"components/ListItemComponent.html":{},"classes/Logger.html":{},"injectables/LoggerService.html":{},"components/PageNotFoundComponent.html":{},"components/PendingTasksTableComponent.html":{},"components/RecurringTaskComponent.html":{},"components/SidenavTasksComponent.html":{},"classes/Task.html":{},"components/TaskFormComponent.html":{},"components/TasksComponent.html":{},"components/TasksFilterComponent.html":{},"injectables/UtilsService.html":{},"index.html":{}}}],["navig",{"_index":1213,"title":{},"body":{"components/SidenavTasksComponent.html":{}}}],["need",{"_index":871,"title":{},"body":{"components/EditTaskComponent.html":{},"components/TaskFormComponent.html":{},"index.html":{}}}],["new",{"_index":89,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ButtonBarComponent.html":{},"components/ButtonsComponent.html":{},"components/CompleteTaskComponent.html":{},"components/ConfirmDeleteTaskComponent.html":{},"modules/CoreModule.html":{},"components/CreateTaskComponent.html":{},"components/EditTaskComponent.html":{},"components/HeaderComponent.html":{},"injectables/HttpService.html":{},"components/ListItemComponent.html":{},"injectables/LoaderService.html":{},"interfaces/LoaderState.html":{},"components/RecurringTaskComponent.html":{},"components/SidenavTasksComponent.html":{},"components/TaskFormComponent.html":{},"components/TasksFilterComponent.html":{},"injectables/UtilsService.html":{},"coverage.html":{}}}],["next",{"_index":1167,"title":{},"body":{"injectables/MatPaginatorCustom.html":{},"index.html":{}}}],["nextid",{"_index":1752,"title":{},"body":{"index.html":{}}}],["nextpagelabel",{"_index":1160,"title":{},"body":{"injectables/MatPaginatorCustom.html":{}}}],["ngafterviewinit",{"_index":29,"title":{},"body":{"components/AboutComponent.html":{},"components/TasksFilterComponent.html":{}}}],["ngmodul",{"_index":292,"title":{},"body":{"modules/AboutModule.html":{},"modules/AboutRoutingModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/CompleteTaskModule.html":{},"modules/ConfirmDeleteTaskModule.html":{},"modules/CoreModule.html":{},"modules/CreateTaskModule.html":{},"modules/EditTaskModule.html":{},"modules/FooterModule.html":{},"modules/HeaderModule.html":{},"modules/SidenavTasksModule.html":{},"modules/TaskFormModule.html":{},"modules/TasksButtonBarModule.html":{},"modules/TasksButtonsModule.html":{},"modules/TasksDialogModule.html":{},"modules/TasksFilterModule.html":{},"modules/TasksModule.html":{},"modules/TasksRoutingModule.html":{},"modules/TasksTableModule.html":{}}}],["ngondestroy",{"_index":30,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/CompleteTaskComponent.html":{},"components/ConfirmDeleteTaskComponent.html":{},"components/CreateTaskComponent.html":{},"components/EditTaskComponent.html":{},"components/HeaderComponent.html":{},"components/ListItemComponent.html":{},"components/RecurringTaskComponent.html":{},"components/SidenavTasksComponent.html":{},"components/TaskFormComponent.html":{},"components/TasksFilterComponent.html":{}}}],["ngoninit",{"_index":329,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/CompleteTaskComponent.html":{},"components/ConfirmDeleteTaskComponent.html":{},"components/CreateTaskComponent.html":{},"components/EditTaskComponent.html":{},"components/HeaderComponent.html":{},"components/ListItemComponent.html":{},"components/RecurringTaskComponent.html":{},"components/SidenavTasksComponent.html":{},"components/TaskFormComponent.html":{},"components/TasksFilterComponent.html":{}}}],["node",{"_index":1617,"title":{},"body":{"index.html":{}}}],["node_modul",{"_index":1661,"title":{},"body":{"index.html":{}}}],["none",{"_index":1062,"title":{},"body":{"injectables/HttpService.html":{}}}],["noop",{"_index":688,"title":{},"body":{"injectables/ConsoleLoggerService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["norepeat",{"_index":848,"title":{},"body":{"components/EditTaskComponent.html":{},"classes/Task.html":{},"components/TaskFormComponent.html":{}}}],["note",{"_index":221,"title":{},"body":{"components/AboutComponent.html":{},"index.html":{}}}],["notic",{"_index":885,"title":{},"body":{"components/EditTaskComponent.html":{}}}],["notifyandclos",{"_index":511,"title":{},"body":{"components/CompleteTaskComponent.html":{}}}],["notifyandclose(msg",{"_index":536,"title":{},"body":{"components/CompleteTaskComponent.html":{}}}],["npm",{"_index":1652,"title":{},"body":{"index.html":{}}}],["null",{"_index":843,"title":{},"body":{"components/EditTaskComponent.html":{},"components/TaskFormComponent.html":{}}}],["num",{"_index":1106,"title":{},"body":{"components/ListItemComponent.html":{}}}],["num.tostr",{"_index":1116,"title":{},"body":{"components/ListItemComponent.html":{}}}],["number",{"_index":187,"title":{},"body":{"components/AboutComponent.html":{},"components/ButtonBarComponent.html":{},"components/CompleteTaskComponent.html":{},"injectables/ConsoleLoggerService.html":{},"components/EditTaskComponent.html":{},"components/ListItemComponent.html":{},"classes/Logger.html":{},"injectables/LoggerService.html":{},"components/SidenavTasksComponent.html":{},"classes/Task.html":{},"components/TaskFormComponent.html":{}}}],["number(params['id",{"_index":862,"title":{},"body":{"components/EditTaskComponent.html":{}}}],["numtasksdu",{"_index":1082,"title":{},"body":{"components/ListItemComponent.html":{}}}],["numtasksduetoday",{"_index":1121,"title":{},"body":{"components/ListItemComponent.html":{},"components/SidenavTasksComponent.html":{}}}],["numtasksduetomorrow",{"_index":1126,"title":{},"body":{"components/ListItemComponent.html":{},"components/SidenavTasksComponent.html":{}}}],["numtasksoverdu",{"_index":1112,"title":{},"body":{"components/ListItemComponent.html":{},"components/SidenavTasksComponent.html":{}}}],["ob",{"_index":823,"title":{},"body":{"components/EditTaskComponent.html":{}}}],["object",{"_index":1799,"title":{},"body":{"miscellaneous/variables.html":{}}}],["obs.subscribe((task",{"_index":827,"title":{},"body":{"components/EditTaskComponent.html":{}}}],["observ",{"_index":816,"title":{},"body":{"components/EditTaskComponent.html":{},"injectables/HttpService.html":{},"components/ListItemComponent.html":{},"injectables/LoaderService.html":{},"interfaces/LoaderState.html":{},"components/SidenavTasksComponent.html":{},"components/TaskFormComponent.html":{},"components/TasksFilterComponent.html":{},"injectables/UtilsService.html":{}}}],["observable.catch((err",{"_index":1066,"title":{},"body":{"injectables/HttpService.html":{}}}],["observable.of(form.valu",{"_index":1347,"title":{},"body":{"components/TaskFormComponent.html":{}}}],["observable.of(formdata",{"_index":1349,"title":{},"body":{"components/TaskFormComponent.html":{}}}],["observable.throw(err",{"_index":1067,"title":{},"body":{"injectables/HttpService.html":{}}}],["observal",{"_index":1504,"title":{},"body":{"injectables/UtilsService.html":{}}}],["observe([breakpoints.handset",{"_index":1512,"title":{},"body":{"injectables/UtilsService.html":{}}}],["occurr",{"_index":1380,"title":{},"body":{"components/TaskFormComponent.html":{}}}],["offset",{"_index":1092,"title":{},"body":{"components/ListItemComponent.html":{}}}],["omit",{"_index":1658,"title":{},"body":{"index.html":{}}}],["on",{"_index":203,"title":{},"body":{"components/AboutComponent.html":{},"components/ButtonBarComponent.html":{},"components/ButtonsComponent.html":{},"components/CompleteTaskComponent.html":{},"modules/CoreModule.html":{},"components/RecurringTaskComponent.html":{},"modules/TasksButtonsModule.html":{},"index.html":{}}}],["onaboutscrol",{"_index":31,"title":{},"body":{"components/AboutComponent.html":{}}}],["onc",{"_index":190,"title":{},"body":{"components/AboutComponent.html":{},"index.html":{}}}],["ondestroy",{"_index":15,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/CompleteTaskComponent.html":{},"components/ConfirmDeleteTaskComponent.html":{},"components/CreateTaskComponent.html":{},"components/EditTaskComponent.html":{},"components/HeaderComponent.html":{},"components/ListItemComponent.html":{},"components/RecurringTaskComponent.html":{},"components/SidenavTasksComponent.html":{},"components/TaskFormComponent.html":{},"components/TasksFilterComponent.html":{}}}],["oninit",{"_index":324,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/CompleteTaskComponent.html":{},"components/ConfirmDeleteTaskComponent.html":{},"components/CreateTaskComponent.html":{},"components/EditTaskComponent.html":{},"components/HeaderComponent.html":{},"components/ListItemComponent.html":{},"components/RecurringTaskComponent.html":{},"components/SidenavTasksComponent.html":{},"components/TaskFormComponent.html":{},"components/TasksFilterComponent.html":{}}}],["onlin",{"_index":1767,"title":{},"body":{"index.html":{}}}],["onsidenavmenutoggl",{"_index":968,"title":{},"body":{"components/HeaderComponent.html":{}}}],["onupd",{"_index":774,"title":{},"body":{"components/EditTaskComponent.html":{}}}],["open",{"_index":168,"title":{},"body":{"components/AboutComponent.html":{},"components/ButtonsComponent.html":{},"components/EditTaskComponent.html":{},"components/RecurringTaskComponent.html":{},"components/SidenavTasksComponent.html":{},"index.html":{}}}],["opencompletedialog",{"_index":439,"title":{},"body":{"components/ButtonsComponent.html":{}}}],["opencompletedialog(ev",{"_index":455,"title":{},"body":{"components/ButtonsComponent.html":{}}}],["openconfirmdeletedialog",{"_index":440,"title":{},"body":{"components/ButtonsComponent.html":{}}}],["openconfirmdeletedialog(ev",{"_index":457,"title":{},"body":{"components/ButtonsComponent.html":{}}}],["opencreatetaskdialog",{"_index":1197,"title":{},"body":{"components/SidenavTasksComponent.html":{}}}],["openeditdialog",{"_index":441,"title":{},"body":{"components/ButtonsComponent.html":{}}}],["openeditdialog(ev",{"_index":459,"title":{},"body":{"components/ButtonsComponent.html":{}}}],["openrecurringtaskdialog",{"_index":781,"title":{},"body":{"components/EditTaskComponent.html":{}}}],["opportun",{"_index":1785,"title":{},"body":{"index.html":{}}}],["option",{"_index":42,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ButtonBarComponent.html":{},"components/ButtonsComponent.html":{},"components/CompleteTaskComponent.html":{},"components/ConfirmDeleteTaskComponent.html":{},"injectables/ConsoleLoggerService.html":{},"modules/CoreModule.html":{},"components/CreateTaskComponent.html":{},"components/EditTaskComponent.html":{},"components/HeaderComponent.html":{},"injectables/HttpService.html":{},"components/ListItemComponent.html":{},"classes/Logger.html":{},"injectables/LoggerService.html":{},"components/RecurringTaskComponent.html":{},"components/SidenavTasksComponent.html":{},"classes/Task.html":{},"components/TaskFormComponent.html":{},"components/TasksFilterComponent.html":{},"injectables/UtilsService.html":{},"index.html":{}}}],["options.head",{"_index":1063,"title":{},"body":{"injectables/HttpService.html":{}}}],["orang",{"_index":900,"title":{},"body":{"components/EditTaskComponent.html":{}}}],["order",{"_index":129,"title":{},"body":{"components/AboutComponent.html":{},"components/EditTaskComponent.html":{},"index.html":{}}}],["orm",{"_index":1760,"title":{},"body":{"index.html":{}}}],["other",{"_index":1089,"title":{},"body":{"components/ListItemComponent.html":{}}}],["otherwis",{"_index":465,"title":{},"body":{"components/ButtonsComponent.html":{},"components/HeaderComponent.html":{},"components/SidenavTasksComponent.html":{},"components/TaskFormComponent.html":{},"injectables/UtilsService.html":{}}}],["out",{"_index":192,"title":{},"body":{"components/AboutComponent.html":{},"modules/AboutModule.html":{},"modules/AppModule.html":{},"modules/CompleteTaskModule.html":{},"components/ConfirmDeleteTaskComponent.html":{},"modules/ConfirmDeleteTaskModule.html":{},"modules/CreateTaskModule.html":{},"modules/EditTaskModule.html":{},"modules/FooterModule.html":{},"modules/HeaderModule.html":{},"modules/SidenavTasksModule.html":{},"modules/TaskFormModule.html":{},"modules/TasksButtonBarModule.html":{},"modules/TasksButtonsModule.html":{},"modules/TasksDialogModule.html":{},"modules/TasksFilterModule.html":{},"modules/TasksModule.html":{},"modules/TasksTableModule.html":{},"overview.html":{}}}],["outlet",{"_index":323,"title":{},"body":{"components/AppComponent.html":{},"components/SidenavTasksComponent.html":{},"components/TasksComponent.html":{}}}],["output",{"_index":408,"title":{},"body":{"components/ButtonBarComponent.html":{},"components/ButtonsComponent.html":{},"components/CompleteTaskComponent.html":{},"components/RecurringTaskComponent.html":{},"components/TaskFormComponent.html":{}}}],["outsid",{"_index":1643,"title":{},"body":{"index.html":{}}}],["over",{"_index":218,"title":{},"body":{"components/AboutComponent.html":{},"components/EditTaskComponent.html":{},"components/ListItemComponent.html":{},"components/SidenavTasksComponent.html":{},"components/TasksFilterComponent.html":{},"index.html":{}}}],["overdu",{"_index":226,"title":{},"body":{"components/AboutComponent.html":{},"components/ListItemComponent.html":{},"components/SidenavTasksComponent.html":{}}}],["overduebadg",{"_index":1219,"title":{},"body":{"components/SidenavTasksComponent.html":{}}}],["overload",{"_index":1438,"title":{},"body":{"components/TasksFilterComponent.html":{}}}],["overview",{"_index":1788,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["packag",{"_index":1572,"title":{"dependencies.html":{}},"body":{"index.html":{}}}],["package.json",{"_index":1764,"title":{},"body":{"index.html":{}}}],["page",{"_index":11,"title":{},"body":{"components/AboutComponent.html":{},"modules/AboutModule.html":{},"components/AppComponent.html":{},"components/ButtonBarComponent.html":{},"components/ButtonsComponent.html":{},"components/CompleteTaskComponent.html":{},"components/CompleteTasksTableComponent.html":{},"components/ConfirmDeleteTaskComponent.html":{},"components/CreateTaskComponent.html":{},"components/EditTaskComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/ListItemComponent.html":{},"injectables/MatPaginatorCustom.html":{},"components/PageNotFoundComponent.html":{},"components/PendingTasksTableComponent.html":{},"components/RecurringTaskComponent.html":{},"components/SidenavTasksComponent.html":{},"components/TaskFormComponent.html":{},"components/TasksComponent.html":{},"components/TasksFilterComponent.html":{},"index.html":{}}}],["pagenotfoundcompon",{"_index":259,"title":{"components/PageNotFoundComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ButtonBarComponent.html":{},"components/ButtonsComponent.html":{},"components/CompleteTaskComponent.html":{},"components/CompleteTasksTableComponent.html":{},"components/ConfirmDeleteTaskComponent.html":{},"components/CreateTaskComponent.html":{},"components/EditTaskComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/ListItemComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PendingTasksTableComponent.html":{},"components/RecurringTaskComponent.html":{},"components/SidenavTasksComponent.html":{},"components/TaskFormComponent.html":{},"components/TasksComponent.html":{},"components/TasksFilterComponent.html":{},"coverage.html":{},"overview.html":{}}}],["pages",{"_index":404,"title":{},"body":{"components/ButtonBarComponent.html":{},"injectables/MatPaginatorCustom.html":{}}}],["pagesizeopt",{"_index":405,"title":{},"body":{"components/ButtonBarComponent.html":{}}}],["pagin",{"_index":388,"title":{},"body":{"components/ButtonBarComponent.html":{},"components/EditTaskComponent.html":{},"modules/EditTaskModule.html":{},"injectables/MatPaginatorCustom.html":{},"coverage.html":{}}}],["param",{"_index":498,"title":{},"body":{"components/ButtonsComponent.html":{},"components/CompleteTaskComponent.html":{},"injectables/ConsoleLoggerService.html":{},"components/EditTaskComponent.html":{},"components/HeaderComponent.html":{},"injectables/HttpService.html":{},"components/ListItemComponent.html":{},"classes/Logger.html":{},"injectables/LoggerService.html":{},"components/SidenavTasksComponent.html":{},"components/TaskFormComponent.html":{},"injectables/UtilsService.html":{}}}],["paramet",{"_index":38,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/CompleteTaskComponent.html":{},"components/ConfirmDeleteTaskComponent.html":{},"injectables/ConsoleLoggerService.html":{},"components/CreateTaskComponent.html":{},"components/EditTaskComponent.html":{},"components/HeaderComponent.html":{},"injectables/HttpService.html":{},"components/ListItemComponent.html":{},"injectables/LoggerService.html":{},"components/RecurringTaskComponent.html":{},"components/SidenavTasksComponent.html":{},"components/TaskFormComponent.html":{},"components/TasksFilterComponent.html":{},"injectables/UtilsService.html":{}}}],["params.subscribe(param",{"_index":1256,"title":{},"body":{"components/SidenavTasksComponent.html":{}}}],["params['filt",{"_index":1264,"title":{},"body":{"components/SidenavTasksComponent.html":{}}}],["paramssub",{"_index":860,"title":{},"body":{"components/EditTaskComponent.html":{}}}],["paramt",{"_index":1105,"title":{},"body":{"components/ListItemComponent.html":{}}}],["parent",{"_index":490,"title":{},"body":{"components/ButtonsComponent.html":{},"components/CompleteTaskComponent.html":{},"components/ConfirmDeleteTaskComponent.html":{}}}],["parentmodul",{"_index":713,"title":{},"body":{"modules/CoreModule.html":{}}}],["part",{"_index":1680,"title":{},"body":{"index.html":{}}}],["partial",{"_index":573,"title":{},"body":{"components/CompleteTaskComponent.html":{}}}],["pass",{"_index":662,"title":{},"body":{"injectables/ConsoleLoggerService.html":{},"components/EditTaskComponent.html":{},"components/HeaderComponent.html":{},"classes/Logger.html":{},"injectables/LoggerService.html":{}}}],["past",{"_index":1356,"title":{},"body":{"components/TaskFormComponent.html":{}}}],["patch",{"_index":1024,"title":{},"body":{"injectables/HttpService.html":{}}}],["patch(url",{"_index":1041,"title":{},"body":{"injectables/HttpService.html":{}}}],["path",{"_index":316,"title":{},"body":{"modules/AboutRoutingModule.html":{},"modules/AppRoutingModule.html":{},"modules/TasksRoutingModule.html":{}}}],["path:':id",{"_index":1470,"title":{},"body":{"modules/TasksRoutingModule.html":{}}}],["path:'complet",{"_index":1469,"title":{},"body":{"modules/TasksRoutingModule.html":{}}}],["path:'pend",{"_index":1468,"title":{},"body":{"modules/TasksRoutingModule.html":{}}}],["pathmatch",{"_index":379,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/TasksRoutingModule.html":{}}}],["pend",{"_index":124,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ButtonBarComponent.html":{},"components/ButtonsComponent.html":{},"components/CompleteTaskComponent.html":{},"components/CompleteTasksTableComponent.html":{},"components/ConfirmDeleteTaskComponent.html":{},"components/CreateTaskComponent.html":{},"components/EditTaskComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/ListItemComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PendingTasksTableComponent.html":{},"components/RecurringTaskComponent.html":{},"components/SidenavTasksComponent.html":{},"classes/Task.html":{},"components/TaskFormComponent.html":{},"components/TasksComponent.html":{},"components/TasksFilterComponent.html":{},"modules/TasksRoutingModule.html":{},"index.html":{}}}],["pendingtask",{"_index":1176,"title":{},"body":{"components/PendingTasksTableComponent.html":{}}}],["pendingtaskstablecompon",{"_index":261,"title":{"components/PendingTasksTableComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ButtonBarComponent.html":{},"components/ButtonsComponent.html":{},"components/CompleteTaskComponent.html":{},"components/CompleteTasksTableComponent.html":{},"components/ConfirmDeleteTaskComponent.html":{},"components/CreateTaskComponent.html":{},"components/EditTaskComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/ListItemComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PendingTasksTableComponent.html":{},"components/RecurringTaskComponent.html":{},"components/SidenavTasksComponent.html":{},"components/TaskFormComponent.html":{},"components/TasksComponent.html":{},"components/TasksFilterComponent.html":{},"modules/TasksRoutingModule.html":{},"modules/TasksTableModule.html":{},"coverage.html":{},"overview.html":{}}}],["perform",{"_index":657,"title":{},"body":{"injectables/ConsoleLoggerService.html":{},"injectables/HttpService.html":{}}}],["persist",{"_index":1662,"title":{},"body":{"index.html":{}}}],["phillip",{"_index":1771,"title":{},"body":{"index.html":{}}}],["phillips/mi",{"_index":1632,"title":{},"body":{"index.html":{}}}],["picker",{"_index":216,"title":{},"body":{"components/AboutComponent.html":{}}}],["pipe",{"_index":1442,"title":{},"body":{"components/TasksFilterComponent.html":{}}}],["point",{"_index":1669,"title":{},"body":{"index.html":{}}}],["port",{"_index":1701,"title":{},"body":{"index.html":{}}}],["post",{"_index":1025,"title":{},"body":{"injectables/HttpService.html":{}}}],["post(url",{"_index":1044,"title":{},"body":{"injectables/HttpService.html":{}}}],["prefix",{"_index":775,"title":{},"body":{"components/EditTaskComponent.html":{}}}],["prerequisit",{"_index":1611,"title":{},"body":{"index.html":{}}}],["present",{"_index":51,"title":{},"body":{"components/AboutComponent.html":{},"components/SidenavTasksComponent.html":{}}}],["prevent",{"_index":488,"title":{},"body":{"components/ButtonsComponent.html":{},"components/TasksFilterComponent.html":{},"index.html":{}}}],["previou",{"_index":788,"title":{},"body":{"components/EditTaskComponent.html":{},"injectables/MatPaginatorCustom.html":{}}}],["previouspagelabel",{"_index":1161,"title":{},"body":{"injectables/MatPaginatorCustom.html":{}}}],["prior",{"_index":1772,"title":{},"body":{"index.html":{}}}],["prioriti",{"_index":175,"title":{},"body":{"components/AboutComponent.html":{},"components/CreateTaskComponent.html":{},"classes/Task.html":{},"components/TaskFormComponent.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["prioritytyp",{"_index":1300,"title":{},"body":{"classes/Task.html":{},"miscellaneous/typealiases.html":{}}}],["privat",{"_index":26,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/CompleteTaskComponent.html":{},"components/ConfirmDeleteTaskComponent.html":{},"components/CreateTaskComponent.html":{},"components/EditTaskComponent.html":{},"injectables/HttpService.html":{},"injectables/LoaderService.html":{},"interfaces/LoaderState.html":{},"components/RecurringTaskComponent.html":{},"components/SidenavTasksComponent.html":{},"components/TaskFormComponent.html":{},"components/TasksFilterComponent.html":{},"injectables/UtilsService.html":{}}}],["privileg",{"_index":1674,"title":{},"body":{"index.html":{}}}],["product",{"_index":1800,"title":{},"body":{"miscellaneous/variables.html":{}}}],["project",{"_index":1761,"title":{},"body":{"index.html":{}}}],["propag",{"_index":489,"title":{},"body":{"components/ButtonsComponent.html":{}}}],["properti",{"_index":23,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ButtonBarComponent.html":{},"components/ButtonsComponent.html":{},"components/CompleteTaskComponent.html":{},"components/CompleteTasksTableComponent.html":{},"components/ConfirmDeleteTaskComponent.html":{},"injectables/ConsoleLoggerService.html":{},"components/CreateTaskComponent.html":{},"components/EditTaskComponent.html":{},"components/HeaderComponent.html":{},"injectables/HttpService.html":{},"components/ListItemComponent.html":{},"injectables/LoaderService.html":{},"interfaces/LoaderState.html":{},"classes/Logger.html":{},"injectables/LoggerService.html":{},"injectables/MatPaginatorCustom.html":{},"components/PendingTasksTableComponent.html":{},"components/RecurringTaskComponent.html":{},"components/SidenavTasksComponent.html":{},"classes/Task.html":{},"components/TaskFormComponent.html":{},"components/TasksFilterComponent.html":{},"injectables/UtilsService.html":{},"index.html":{}}}],["properties).subscribe((task",{"_index":580,"title":{},"body":{"components/CompleteTaskComponent.html":{}}}],["protect",{"_index":1481,"title":{},"body":{"injectables/UtilsService.html":{}}}],["protractor",{"_index":1707,"title":{},"body":{"index.html":{}}}],["provid",{"_index":179,"title":{},"body":{"components/AboutComponent.html":{},"modules/AboutModule.html":{},"modules/AppModule.html":{},"components/ButtonBarComponent.html":{},"components/ButtonsComponent.html":{},"modules/CompleteTaskModule.html":{},"modules/ConfirmDeleteTaskModule.html":{},"modules/CoreModule.html":{},"modules/CreateTaskModule.html":{},"modules/EditTaskModule.html":{},"modules/FooterModule.html":{},"modules/HeaderModule.html":{},"modules/SidenavTasksModule.html":{},"modules/TaskFormModule.html":{},"modules/TasksButtonBarModule.html":{},"modules/TasksButtonsModule.html":{},"modules/TasksDialogModule.html":{},"modules/TasksFilterModule.html":{},"modules/TasksModule.html":{},"modules/TasksTableModule.html":{},"overview.html":{}}}],["purpos",{"_index":794,"title":{},"body":{"components/EditTaskComponent.html":{},"index.html":{}}}],["quantiti",{"_index":1096,"title":{},"body":{"components/ListItemComponent.html":{}}}],["re",{"_index":1077,"title":{},"body":{"components/ListItemComponent.html":{},"index.html":{}}}],["reach",{"_index":1202,"title":{},"body":{"components/SidenavTasksComponent.html":{}}}],["react",{"_index":1425,"title":{},"body":{"components/TasksFilterComponent.html":{}}}],["reactiveformsmodul",{"_index":602,"title":{},"body":{"modules/CompleteTaskModule.html":{},"modules/ConfirmDeleteTaskModule.html":{},"modules/CreateTaskModule.html":{},"modules/EditTaskModule.html":{},"modules/TaskFormModule.html":{},"modules/TasksModule.html":{},"modules/TasksTableModule.html":{}}}],["readonli",{"_index":1483,"title":{},"body":{"injectables/UtilsService.html":{}}}],["receiv",{"_index":491,"title":{},"body":{"components/ButtonsComponent.html":{}}}],["recommend",{"_index":145,"title":{},"body":{"components/AboutComponent.html":{}}}],["recur",{"_index":263,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ButtonBarComponent.html":{},"components/ButtonsComponent.html":{},"components/CompleteTaskComponent.html":{},"components/CompleteTasksTableComponent.html":{},"components/ConfirmDeleteTaskComponent.html":{},"components/CreateTaskComponent.html":{},"components/EditTaskComponent.html":{},"modules/EditTaskModule.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/ListItemComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PendingTasksTableComponent.html":{},"components/RecurringTaskComponent.html":{},"components/SidenavTasksComponent.html":{},"components/TaskFormComponent.html":{},"components/TasksComponent.html":{},"components/TasksFilterComponent.html":{}}}],["recurringdialogref",{"_index":876,"title":{},"body":{"components/EditTaskComponent.html":{}}}],["recurringdialogref.componentinstance.updateall.subscribe((updateal",{"_index":879,"title":{},"body":{"components/EditTaskComponent.html":{}}}],["recurringtaskcompon",{"_index":262,"title":{"components/RecurringTaskComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ButtonBarComponent.html":{},"components/ButtonsComponent.html":{},"components/CompleteTaskComponent.html":{},"components/CompleteTasksTableComponent.html":{},"components/ConfirmDeleteTaskComponent.html":{},"components/CreateTaskComponent.html":{},"components/EditTaskComponent.html":{},"modules/EditTaskModule.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/ListItemComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PendingTasksTableComponent.html":{},"components/RecurringTaskComponent.html":{},"components/SidenavTasksComponent.html":{},"components/TaskFormComponent.html":{},"components/TasksComponent.html":{},"components/TasksFilterComponent.html":{},"coverage.html":{},"overview.html":{}}}],["red",{"_index":897,"title":{},"body":{"components/EditTaskComponent.html":{}}}],["redirect",{"_index":864,"title":{},"body":{"components/EditTaskComponent.html":{}}}],["redirectto",{"_index":381,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/TasksRoutingModule.html":{}}}],["refer",{"_index":68,"title":{},"body":{"components/AboutComponent.html":{},"components/HeaderComponent.html":{}}}],["regular",{"_index":609,"title":{},"body":{"modules/CompleteTaskModule.html":{},"modules/EditTaskModule.html":{},"modules/SidenavTasksModule.html":{},"modules/TasksButtonBarModule.html":{},"modules/TasksButtonsModule.html":{},"modules/TasksTableModule.html":{},"dependencies.html":{}}}],["relat",{"_index":1751,"title":{},"body":{"index.html":{}}}],["relationship",{"_index":1749,"title":{},"body":{"index.html":{}}}],["remain",{"_index":464,"title":{},"body":{"components/ButtonsComponent.html":{},"components/EditTaskComponent.html":{},"components/RecurringTaskComponent.html":{},"index.html":{}}}],["remov",{"_index":1731,"title":{},"body":{"index.html":{}}}],["render",{"_index":467,"title":{},"body":{"components/ButtonsComponent.html":{},"components/HeaderComponent.html":{}}}],["repeat",{"_index":181,"title":{},"body":{"components/AboutComponent.html":{},"components/ButtonsComponent.html":{},"components/CreateTaskComponent.html":{},"components/EditTaskComponent.html":{},"components/RecurringTaskComponent.html":{},"classes/Task.html":{},"components/TaskFormComponent.html":{},"index.html":{}}}],["repeatformdata.value.aft",{"_index":919,"title":{},"body":{"components/EditTaskComponent.html":{}}}],["repeatformdata.value.repeat",{"_index":917,"title":{},"body":{"components/EditTaskComponent.html":{}}}],["repeatproperti",{"_index":1371,"title":{},"body":{"components/TaskFormComponent.html":{}}}],["repeatpropertiesform",{"_index":1313,"title":{},"body":{"components/TaskFormComponent.html":{}}}],["repo",{"_index":1641,"title":{},"body":{"index.html":{}}}],["report",{"_index":1710,"title":{},"body":{"index.html":{}}}],["repositori",{"_index":1627,"title":{},"body":{"index.html":{}}}],["repres",{"_index":1750,"title":{},"body":{"index.html":{}}}],["request",{"_index":634,"title":{},"body":{"components/ConfirmDeleteTaskComponent.html":{},"injectables/HttpService.html":{}}}],["requir",{"_index":286,"title":{},"body":{"modules/AboutModule.html":{},"modules/CompleteTaskModule.html":{},"modules/ConfirmDeleteTaskModule.html":{},"modules/CreateTaskModule.html":{},"modules/EditTaskModule.html":{},"modules/HeaderModule.html":{},"modules/SidenavTasksModule.html":{},"classes/Task.html":{},"components/TaskFormComponent.html":{},"modules/TaskFormModule.html":{},"modules/TasksButtonBarModule.html":{},"modules/TasksButtonsModule.html":{},"modules/TasksDialogModule.html":{},"modules/TasksFilterModule.html":{},"modules/TasksModule.html":{},"modules/TasksTableModule.html":{},"index.html":{}}}],["requri",{"_index":1016,"title":{},"body":{"injectables/HttpService.html":{}}}],["reset",{"_index":284,"title":{},"body":{"modules/AboutModule.html":{},"modules/AppModule.html":{},"modules/CompleteTaskModule.html":{},"modules/ConfirmDeleteTaskModule.html":{},"modules/CreateTaskModule.html":{},"modules/EditTaskModule.html":{},"modules/FooterModule.html":{},"modules/HeaderModule.html":{},"modules/SidenavTasksModule.html":{},"modules/TaskFormModule.html":{},"modules/TasksButtonBarModule.html":{},"modules/TasksButtonsModule.html":{},"modules/TasksDialogModule.html":{},"modules/TasksFilterModule.html":{},"modules/TasksModule.html":{},"modules/TasksTableModule.html":{},"overview.html":{}}}],["respons",{"_index":132,"title":{},"body":{"components/AboutComponent.html":{},"components/HeaderComponent.html":{},"index.html":{}}}],["restart",{"_index":1663,"title":{},"body":{"index.html":{}}}],["result",{"_index":230,"title":{},"body":{"components/AboutComponent.html":{},"modules/AboutModule.html":{},"modules/AboutRoutingModule.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ButtonBarComponent.html":{},"components/ButtonsComponent.html":{},"components/CompleteTaskComponent.html":{},"modules/CompleteTaskModule.html":{},"components/CompleteTasksTableComponent.html":{},"components/ConfirmDeleteTaskComponent.html":{},"modules/ConfirmDeleteTaskModule.html":{},"injectables/ConsoleLoggerService.html":{},"modules/CoreModule.html":{},"components/CreateTaskComponent.html":{},"modules/CreateTaskModule.html":{},"components/EditTaskComponent.html":{},"modules/EditTaskModule.html":{},"components/FooterComponent.html":{},"modules/FooterModule.html":{},"components/HeaderComponent.html":{},"modules/HeaderModule.html":{},"injectables/HttpService.html":{},"components/ListItemComponent.html":{},"injectables/LoaderService.html":{},"interfaces/LoaderState.html":{},"classes/Logger.html":{},"injectables/LoggerService.html":{},"injectables/MatPaginatorCustom.html":{},"components/PageNotFoundComponent.html":{},"components/PendingTasksTableComponent.html":{},"components/RecurringTaskComponent.html":{},"components/SidenavTasksComponent.html":{},"modules/SidenavTasksModule.html":{},"classes/Task.html":{},"components/TaskFormComponent.html":{},"modules/TaskFormModule.html":{},"modules/TasksButtonBarModule.html":{},"modules/TasksButtonsModule.html":{},"components/TasksComponent.html":{},"modules/TasksDialogModule.html":{},"components/TasksFilterComponent.html":{},"modules/TasksFilterModule.html":{},"modules/TasksModule.html":{},"modules/TasksRoutingModule.html":{},"modules/TasksTableModule.html":{},"injectables/UtilsService.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":52,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/CompleteTaskComponent.html":{},"components/ConfirmDeleteTaskComponent.html":{},"injectables/ConsoleLoggerService.html":{},"modules/CoreModule.html":{},"components/CreateTaskComponent.html":{},"components/EditTaskComponent.html":{},"components/HeaderComponent.html":{},"injectables/HttpService.html":{},"components/ListItemComponent.html":{},"injectables/LoaderService.html":{},"injectables/LoggerService.html":{},"injectables/MatPaginatorCustom.html":{},"components/RecurringTaskComponent.html":{},"components/SidenavTasksComponent.html":{},"components/TaskFormComponent.html":{},"components/TasksFilterComponent.html":{},"modules/TasksModule.html":{},"injectables/UtilsService.html":{}}}],["review",{"_index":1765,"title":{},"body":{"index.html":{}}}],["right",{"_index":959,"title":{},"body":{"components/HeaderComponent.html":{},"components/ListItemComponent.html":{},"components/SidenavTasksComponent.html":{}}}],["rm",{"_index":1673,"title":{},"body":{"index.html":{}}}],["root",{"_index":325,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"modules/CoreModule.html":{},"components/TasksComponent.html":{},"index.html":{}}}],["root'},{'nam",{"_index":238,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ButtonBarComponent.html":{},"components/ButtonsComponent.html":{},"components/CompleteTaskComponent.html":{},"components/CompleteTasksTableComponent.html":{},"components/ConfirmDeleteTaskComponent.html":{},"components/CreateTaskComponent.html":{},"components/EditTaskComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/ListItemComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PendingTasksTableComponent.html":{},"components/RecurringTaskComponent.html":{},"components/SidenavTasksComponent.html":{},"components/TaskFormComponent.html":{},"components/TasksComponent.html":{},"components/TasksFilterComponent.html":{}}}],["rout",{"_index":43,"title":{"routes.html":{}},"body":{"components/AboutComponent.html":{},"modules/AboutRoutingModule.html":{},"modules/AppRoutingModule.html":{},"components/EditTaskComponent.html":{},"components/SidenavTasksComponent.html":{},"modules/TasksRoutingModule.html":{},"overview.html":{},"routes.html":{}}}],["route.firstchild",{"_index":1262,"title":{},"body":{"components/SidenavTasksComponent.html":{}}}],["route.param",{"_index":1263,"title":{},"body":{"components/SidenavTasksComponent.html":{}}}],["route:activatedrout",{"_index":85,"title":{},"body":{"components/AboutComponent.html":{}}}],["routeparam",{"_index":1220,"title":{},"body":{"components/SidenavTasksComponent.html":{}}}],["router",{"_index":317,"title":{},"body":{"modules/AboutRoutingModule.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/ButtonsComponent.html":{},"components/EditTaskComponent.html":{},"components/SidenavTasksComponent.html":{},"components/TasksComponent.html":{},"modules/TasksRoutingModule.html":{}}}],["routerlink",{"_index":1218,"title":{},"body":{"components/SidenavTasksComponent.html":{}}}],["routermodul",{"_index":314,"title":{},"body":{"modules/AboutRoutingModule.html":{},"modules/AppRoutingModule.html":{},"modules/CompleteTaskModule.html":{},"modules/ConfirmDeleteTaskModule.html":{},"modules/CoreModule.html":{},"modules/CreateTaskModule.html":{},"modules/EditTaskModule.html":{},"modules/FooterModule.html":{},"modules/HeaderModule.html":{},"modules/SidenavTasksModule.html":{},"modules/TasksButtonBarModule.html":{},"modules/TasksButtonsModule.html":{},"modules/TasksModule.html":{},"modules/TasksRoutingModule.html":{},"modules/TasksTableModule.html":{}}}],["routermodule.forchild(rout",{"_index":318,"title":{},"body":{"modules/AboutRoutingModule.html":{},"modules/TasksRoutingModule.html":{}}}],["routermodule.forroot(approut",{"_index":383,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["row",{"_index":195,"title":{},"body":{"components/AboutComponent.html":{}}}],["run",{"_index":1613,"title":{},"body":{"index.html":{}}}],["rxj",{"_index":80,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/CompleteTaskComponent.html":{},"components/ConfirmDeleteTaskComponent.html":{},"components/EditTaskComponent.html":{},"components/HeaderComponent.html":{},"components/ListItemComponent.html":{},"injectables/LoaderService.html":{},"interfaces/LoaderState.html":{},"components/SidenavTasksComponent.html":{},"components/TaskFormComponent.html":{},"components/TasksFilterComponent.html":{},"injectables/UtilsService.html":{},"dependencies.html":{}}}],["rxjs/add/observable/of",{"_index":1338,"title":{},"body":{"components/TaskFormComponent.html":{}}}],["rxjs/add/operator/catch",{"_index":1050,"title":{},"body":{"injectables/HttpService.html":{}}}],["rxjs/add/operator/fin",{"_index":1051,"title":{},"body":{"injectables/HttpService.html":{}}}],["rxjs/add/operator/map",{"_index":1339,"title":{},"body":{"components/TaskFormComponent.html":{}}}],["rxjs/add/operator/switchmap",{"_index":1340,"title":{},"body":{"components/TaskFormComponent.html":{}}}],["rxjs/observ",{"_index":1049,"title":{},"body":{"injectables/HttpService.html":{}}}],["rxjs/oper",{"_index":818,"title":{},"body":{"components/EditTaskComponent.html":{},"components/SidenavTasksComponent.html":{},"components/TasksFilterComponent.html":{}}}],["rxjs/subscript",{"_index":740,"title":{},"body":{"components/CreateTaskComponent.html":{},"components/RecurringTaskComponent.html":{}}}],["s",{"_index":1631,"title":{},"body":{"index.html":{}}}],["same",{"_index":206,"title":{},"body":{"components/AboutComponent.html":{},"components/CompleteTaskComponent.html":{},"index.html":{}}}],["sampl",{"_index":189,"title":{},"body":{"components/AboutComponent.html":{}}}],["scope",{"_index":1644,"title":{},"body":{"index.html":{}}}],["screen",{"_index":140,"title":{},"body":{"components/AboutComponent.html":{},"components/HeaderComponent.html":{},"components/ListItemComponent.html":{},"components/SidenavTasksComponent.html":{},"components/TaskFormComponent.html":{},"components/TasksFilterComponent.html":{},"injectables/UtilsService.html":{},"index.html":{}}}],["screenshot",{"_index":158,"title":{},"body":{"components/AboutComponent.html":{},"index.html":{}}}],["script",{"_index":1679,"title":{},"body":{"index.html":{}}}],["scroll",{"_index":50,"title":{},"body":{"components/AboutComponent.html":{}}}],["scrolltotop",{"_index":32,"title":{},"body":{"components/AboutComponent.html":{}}}],["search",{"_index":228,"title":{},"body":{"components/AboutComponent.html":{},"components/HeaderComponent.html":{},"components/TasksFilterComponent.html":{}}}],["section",{"_index":209,"title":{},"body":{"components/AboutComponent.html":{},"index.html":{}}}],["see",{"_index":229,"title":{},"body":{"components/AboutComponent.html":{},"index.html":{}}}],["seed",{"_index":1698,"title":{},"body":{"index.html":{}}}],["seem",{"_index":866,"title":{},"body":{"components/EditTaskComponent.html":{},"index.html":{}}}],["seen",{"_index":197,"title":{},"body":{"components/AboutComponent.html":{}}}],["segement",{"_index":1203,"title":{},"body":{"components/SidenavTasksComponent.html":{}}}],["select",{"_index":176,"title":{},"body":{"components/AboutComponent.html":{},"components/ButtonsComponent.html":{},"components/ConfirmDeleteTaskComponent.html":{},"components/RecurringTaskComponent.html":{},"components/SidenavTasksComponent.html":{},"components/TasksFilterComponent.html":{},"index.html":{}}}],["select(index",{"_index":1211,"title":{},"body":{"components/SidenavTasksComponent.html":{}}}],["selectedindex",{"_index":1193,"title":{},"body":{"components/SidenavTasksComponent.html":{}}}],["selector",{"_index":17,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ButtonBarComponent.html":{},"components/ButtonsComponent.html":{},"components/CompleteTaskComponent.html":{},"components/CompleteTasksTableComponent.html":{},"components/ConfirmDeleteTaskComponent.html":{},"components/CreateTaskComponent.html":{},"components/EditTaskComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/ListItemComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PendingTasksTableComponent.html":{},"components/RecurringTaskComponent.html":{},"components/SidenavTasksComponent.html":{},"components/TaskFormComponent.html":{},"components/TasksComponent.html":{},"components/TasksFilterComponent.html":{}}}],["send",{"_index":632,"title":{},"body":{"components/ConfirmDeleteTaskComponent.html":{}}}],["sens",{"_index":553,"title":{},"body":{"components/CompleteTaskComponent.html":{},"components/TaskFormComponent.html":{}}}],["separ",{"_index":122,"title":{},"body":{"components/AboutComponent.html":{},"index.html":{}}}],["sequenc",{"_index":801,"title":{},"body":{"components/EditTaskComponent.html":{},"components/RecurringTaskComponent.html":{},"index.html":{}}}],["server",{"_index":1437,"title":{},"body":{"components/TasksFilterComponent.html":{},"index.html":{}}}],["servic",{"_index":339,"title":{},"body":{"components/AppComponent.html":{},"modules/CompleteTaskModule.html":{},"modules/ConfirmDeleteTaskModule.html":{},"modules/CoreModule.html":{},"modules/CreateTaskModule.html":{},"modules/EditTaskModule.html":{},"modules/HeaderModule.html":{},"injectables/HttpService.html":{},"classes/Logger.html":{},"injectables/LoggerService.html":{},"modules/SidenavTasksModule.html":{},"modules/TaskFormModule.html":{},"modules/TasksButtonBarModule.html":{},"modules/TasksButtonsModule.html":{},"modules/TasksDialogModule.html":{},"modules/TasksFilterModule.html":{},"modules/TasksModule.html":{},"modules/TasksTableModule.html":{}}}],["services/consol",{"_index":708,"title":{},"body":{"modules/CoreModule.html":{}}}],["services/http.servic",{"_index":710,"title":{},"body":{"modules/CoreModule.html":{}}}],["services/loader.servic",{"_index":711,"title":{},"body":{"modules/CoreModule.html":{}}}],["services/logger.servic",{"_index":712,"title":{},"body":{"modules/CoreModule.html":{}}}],["set",{"_index":58,"title":{},"body":{"components/AboutComponent.html":{},"components/CompleteTaskComponent.html":{},"components/HeaderComponent.html":{},"injectables/LoaderService.html":{},"interfaces/LoaderState.html":{},"components/SidenavTasksComponent.html":{},"classes/Task.html":{},"components/TaskFormComponent.html":{},"injectables/UtilsService.html":{},"index.html":{}}}],["setshowsearchbar",{"_index":969,"title":{},"body":{"components/HeaderComponent.html":{}}}],["setshowsearchbar(showsearchbar",{"_index":977,"title":{},"body":{"components/HeaderComponent.html":{}}}],["setup",{"_index":1616,"title":{},"body":{"index.html":{}}}],["share",{"_index":720,"title":{},"body":{"modules/CoreModule.html":{},"modules/CreateTaskModule.html":{},"modules/TasksModule.html":{},"injectables/UtilsService.html":{}}}],["show",{"_index":420,"title":{},"body":{"components/ButtonBarComponent.html":{},"components/HeaderComponent.html":{},"injectables/HttpService.html":{},"injectables/LoaderService.html":{},"interfaces/LoaderState.html":{}}}],["showbackbutton",{"_index":406,"title":{},"body":{"components/ButtonBarComponent.html":{}}}],["showfirstlastbutton",{"_index":407,"title":{},"body":{"components/ButtonBarComponent.html":{}}}],["showload",{"_index":1026,"title":{},"body":{"injectables/HttpService.html":{}}}],["shown",{"_index":173,"title":{},"body":{"components/AboutComponent.html":{}}}],["showsearchbar",{"_index":966,"title":{},"body":{"components/HeaderComponent.html":{}}}],["side",{"_index":167,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/HeaderComponent.html":{},"components/SidenavTasksComponent.html":{},"components/TasksComponent.html":{},"index.html":{}}}],["sidenav",{"_index":163,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ButtonBarComponent.html":{},"components/ButtonsComponent.html":{},"components/CompleteTaskComponent.html":{},"components/CompleteTasksTableComponent.html":{},"components/ConfirmDeleteTaskComponent.html":{},"components/CreateTaskComponent.html":{},"components/EditTaskComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/ListItemComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PendingTasksTableComponent.html":{},"components/RecurringTaskComponent.html":{},"components/SidenavTasksComponent.html":{},"modules/SidenavTasksModule.html":{},"components/TaskFormComponent.html":{},"components/TasksComponent.html":{},"components/TasksFilterComponent.html":{},"injectables/UtilsService.html":{}}}],["sidenavmenuchang",{"_index":1485,"title":{},"body":{"injectables/UtilsService.html":{}}}],["sidenavmenuev",{"_index":981,"title":{},"body":{"components/HeaderComponent.html":{},"injectables/UtilsService.html":{},"miscellaneous/typealiases.html":{}}}],["sidenavmenust",{"_index":967,"title":{},"body":{"components/HeaderComponent.html":{}}}],["sidenavrout",{"_index":1194,"title":{},"body":{"components/SidenavTasksComponent.html":{}}}],["sidenavtaskscompon",{"_index":264,"title":{"components/SidenavTasksComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ButtonBarComponent.html":{},"components/ButtonsComponent.html":{},"components/CompleteTaskComponent.html":{},"components/CompleteTasksTableComponent.html":{},"components/ConfirmDeleteTaskComponent.html":{},"components/CreateTaskComponent.html":{},"components/EditTaskComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/ListItemComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PendingTasksTableComponent.html":{},"components/RecurringTaskComponent.html":{},"components/SidenavTasksComponent.html":{},"modules/SidenavTasksModule.html":{},"components/TaskFormComponent.html":{},"components/TasksComponent.html":{},"components/TasksFilterComponent.html":{},"coverage.html":{},"overview.html":{}}}],["sidenavtasksmodul",{"_index":1267,"title":{"modules/SidenavTasksModule.html":{}},"body":{"modules/SidenavTasksModule.html":{},"modules/TasksModule.html":{},"modules.html":{},"overview.html":{}}}],["simpl",{"_index":118,"title":{},"body":{"components/AboutComponent.html":{},"injectables/HttpService.html":{},"classes/Logger.html":{},"injectables/LoggerService.html":{},"index.html":{}}}],["singl",{"_index":463,"title":{},"body":{"components/ButtonsComponent.html":{},"modules/CoreModule.html":{},"components/EditTaskComponent.html":{},"components/HeaderComponent.html":{},"components/RecurringTaskComponent.html":{},"components/TasksFilterComponent.html":{},"modules/TasksModule.html":{},"index.html":{}}}],["singleton",{"_index":699,"title":{},"body":{"modules/CoreModule.html":{}}}],["size",{"_index":151,"title":{},"body":{"components/AboutComponent.html":{},"components/ButtonBarComponent.html":{},"components/HeaderComponent.html":{},"components/SidenavTasksComponent.html":{},"components/TaskFormComponent.html":{},"components/TasksFilterComponent.html":{},"injectables/UtilsService.html":{},"index.html":{}}}],["size.match",{"_index":1516,"title":{},"body":{"injectables/UtilsService.html":{}}}],["skipself",{"_index":702,"title":{},"body":{"modules/CoreModule.html":{}}}],["small",{"_index":1409,"title":{},"body":{"components/TasksFilterComponent.html":{},"injectables/UtilsService.html":{},"index.html":{}}}],["smaller",{"_index":139,"title":{},"body":{"components/AboutComponent.html":{},"components/HeaderComponent.html":{},"components/SidenavTasksComponent.html":{},"components/TaskFormComponent.html":{},"components/TasksFilterComponent.html":{},"injectables/UtilsService.html":{},"index.html":{}}}],["snackbar",{"_index":538,"title":{},"body":{"components/CompleteTaskComponent.html":{},"components/EditTaskComponent.html":{}}}],["snode",{"_index":1678,"title":{},"body":{"index.html":{}}}],["solid",{"_index":306,"title":{},"body":{"modules/AboutModule.html":{},"modules/CompleteTaskModule.html":{},"modules/ConfirmDeleteTaskModule.html":{},"modules/CreateTaskModule.html":{},"modules/EditTaskModule.html":{},"modules/HeaderModule.html":{},"modules/SidenavTasksModule.html":{},"modules/TasksButtonBarModule.html":{},"modules/TasksButtonsModule.html":{},"modules/TasksFilterModule.html":{},"modules/TasksTableModule.html":{},"dependencies.html":{}}}],["solut",{"_index":1782,"title":{},"body":{"index.html":{}}}],["someth",{"_index":338,"title":{},"body":{"components/AppComponent.html":{}}}],["sorri",{"_index":1174,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["sort",{"_index":125,"title":{},"body":{"components/AboutComponent.html":{},"components/EditTaskComponent.html":{}}}],["sourc",{"_index":3,"title":{},"body":{"components/AboutComponent.html":{},"modules/AboutModule.html":{},"modules/AboutRoutingModule.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ButtonBarComponent.html":{},"components/ButtonsComponent.html":{},"components/CompleteTaskComponent.html":{},"modules/CompleteTaskModule.html":{},"components/CompleteTasksTableComponent.html":{},"components/ConfirmDeleteTaskComponent.html":{},"modules/ConfirmDeleteTaskModule.html":{},"injectables/ConsoleLoggerService.html":{},"modules/CoreModule.html":{},"components/CreateTaskComponent.html":{},"modules/CreateTaskModule.html":{},"components/EditTaskComponent.html":{},"modules/EditTaskModule.html":{},"components/FooterComponent.html":{},"modules/FooterModule.html":{},"components/HeaderComponent.html":{},"modules/HeaderModule.html":{},"injectables/HttpService.html":{},"components/ListItemComponent.html":{},"injectables/LoaderService.html":{},"interfaces/LoaderState.html":{},"classes/Logger.html":{},"injectables/LoggerService.html":{},"injectables/MatPaginatorCustom.html":{},"components/PageNotFoundComponent.html":{},"components/PendingTasksTableComponent.html":{},"components/RecurringTaskComponent.html":{},"components/SidenavTasksComponent.html":{},"modules/SidenavTasksModule.html":{},"classes/Task.html":{},"components/TaskFormComponent.html":{},"modules/TaskFormModule.html":{},"modules/TasksButtonBarModule.html":{},"modules/TasksButtonsModule.html":{},"components/TasksComponent.html":{},"modules/TasksDialogModule.html":{},"components/TasksFilterComponent.html":{},"modules/TasksFilterModule.html":{},"modules/TasksModule.html":{},"modules/TasksRoutingModule.html":{},"modules/TasksTableModule.html":{},"injectables/UtilsService.html":{},"index.html":{}}}],["space",{"_index":141,"title":{},"body":{"components/AboutComponent.html":{},"index.html":{}}}],["special",{"_index":223,"title":{},"body":{"components/AboutComponent.html":{}}}],["specif",{"_index":1207,"title":{},"body":{"components/SidenavTasksComponent.html":{}}}],["speed",{"_index":1668,"title":{},"body":{"index.html":{}}}],["spinner",{"_index":1133,"title":{},"body":{"injectables/LoaderService.html":{},"interfaces/LoaderState.html":{}}}],["sqlite",{"_index":1607,"title":{},"body":{"index.html":{}}}],["src/.../consol",{"_index":1798,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.prod.t",{"_index":1796,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.t",{"_index":1797,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../task.model.t",{"_index":1794,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../utils.service.t",{"_index":1795,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/app/about/about.component.t",{"_index":8,"title":{},"body":{"components/AboutComponent.html":{},"coverage.html":{}}}],["src/app/about/about.component.ts:17",{"_index":67,"title":{},"body":{"components/AboutComponent.html":{}}}],["src/app/about/about.component.ts:19",{"_index":70,"title":{},"body":{"components/AboutComponent.html":{}}}],["src/app/about/about.component.ts:21",{"_index":37,"title":{},"body":{"components/AboutComponent.html":{}}}],["src/app/about/about.component.ts:30",{"_index":54,"title":{},"body":{"components/AboutComponent.html":{}}}],["src/app/about/about.component.ts:38",{"_index":44,"title":{},"body":{"components/AboutComponent.html":{}}}],["src/app/about/about.component.ts:55",{"_index":56,"title":{},"body":{"components/AboutComponent.html":{}}}],["src/app/about/about.component.ts:67",{"_index":61,"title":{},"body":{"components/AboutComponent.html":{}}}],["src/app/about/about.module.t",{"_index":285,"title":{},"body":{"modules/AboutModule.html":{}}}],["src/app/about/about.routing.t",{"_index":313,"title":{},"body":{"modules/AboutRoutingModule.html":{}}}],["src/app/app.component.t",{"_index":319,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:20",{"_index":336,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:22",{"_index":333,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:32",{"_index":334,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:39",{"_index":335,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.t",{"_index":358,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/app.routing.t",{"_index":375,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["src/app/components/pag",{"_index":1170,"title":{},"body":{"components/PageNotFoundComponent.html":{},"coverage.html":{}}}],["src/app/core/core.module.t",{"_index":698,"title":{},"body":{"modules/CoreModule.html":{}}}],["src/app/core/services/consol",{"_index":655,"title":{},"body":{"injectables/ConsoleLoggerService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/core/services/http.service.t",{"_index":1007,"title":{},"body":{"injectables/HttpService.html":{},"coverage.html":{}}}],["src/app/core/services/http.service.ts:107",{"_index":1046,"title":{},"body":{"injectables/HttpService.html":{}}}],["src/app/core/services/http.service.ts:114",{"_index":1036,"title":{},"body":{"injectables/HttpService.html":{}}}],["src/app/core/services/http.service.ts:25",{"_index":1029,"title":{},"body":{"injectables/HttpService.html":{}}}],["src/app/core/services/http.service.ts:39",{"_index":1033,"title":{},"body":{"injectables/HttpService.html":{}}}],["src/app/core/services/http.service.ts:50",{"_index":1045,"title":{},"body":{"injectables/HttpService.html":{}}}],["src/app/core/services/http.service.ts:62",{"_index":1043,"title":{},"body":{"injectables/HttpService.html":{}}}],["src/app/core/services/http.service.ts:73",{"_index":1031,"title":{},"body":{"injectables/HttpService.html":{}}}],["src/app/core/services/http.service.ts:83",{"_index":1035,"title":{},"body":{"injectables/HttpService.html":{}}}],["src/app/core/services/http.service.ts:95",{"_index":1039,"title":{},"body":{"injectables/HttpService.html":{}}}],["src/app/core/services/loader.service.t",{"_index":1132,"title":{},"body":{"injectables/LoaderService.html":{},"interfaces/LoaderState.html":{},"coverage.html":{}}}],["src/app/core/services/loader.service.ts:20",{"_index":1138,"title":{},"body":{"injectables/LoaderService.html":{}}}],["src/app/core/services/loader.service.ts:22",{"_index":1135,"title":{},"body":{"injectables/LoaderService.html":{}}}],["src/app/core/services/loader.service.ts:32",{"_index":1137,"title":{},"body":{"injectables/LoaderService.html":{}}}],["src/app/core/services/loader.service.ts:39",{"_index":1136,"title":{},"body":{"injectables/LoaderService.html":{}}}],["src/app/core/services/logger.service.t",{"_index":1145,"title":{},"body":{"classes/Logger.html":{},"injectables/LoggerService.html":{},"coverage.html":{}}}],["src/app/core/services/logger.service.ts:11",{"_index":1148,"title":{},"body":{"classes/Logger.html":{}}}],["src/app/core/services/logger.service.ts:13",{"_index":1146,"title":{},"body":{"classes/Logger.html":{}}}],["src/app/core/services/logger.service.ts:25",{"_index":1153,"title":{},"body":{"injectables/LoggerService.html":{}}}],["src/app/core/services/logger.service.ts:27",{"_index":1154,"title":{},"body":{"injectables/LoggerService.html":{}}}],["src/app/core/services/logger.service.ts:29",{"_index":1152,"title":{},"body":{"injectables/LoggerService.html":{}}}],["src/app/core/services/logger.service.ts:38",{"_index":1151,"title":{},"body":{"injectables/LoggerService.html":{}}}],["src/app/core/services/logger.service.ts:9",{"_index":1147,"title":{},"body":{"classes/Logger.html":{}}}],["src/app/footer/footer.component.t",{"_index":945,"title":{},"body":{"components/FooterComponent.html":{},"coverage.html":{}}}],["src/app/footer/footer.module.t",{"_index":952,"title":{},"body":{"modules/FooterModule.html":{}}}],["src/app/header/header.component.t",{"_index":954,"title":{},"body":{"components/HeaderComponent.html":{},"coverage.html":{}}}],["src/app/header/header.component.ts:24",{"_index":983,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/header/header.component.ts:26",{"_index":979,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/header/header.component.ts:28",{"_index":980,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/header/header.component.ts:30",{"_index":982,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/header/header.component.ts:32",{"_index":971,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/header/header.component.ts:39",{"_index":972,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/header/header.component.ts:47",{"_index":973,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/header/header.component.ts:63",{"_index":976,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/header/header.component.ts:79",{"_index":978,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/header/header.module.t",{"_index":1000,"title":{},"body":{"modules/HeaderModule.html":{}}}],["src/app/tasks/button",{"_index":384,"title":{},"body":{"components/ButtonBarComponent.html":{},"modules/TasksButtonBarModule.html":{},"coverage.html":{}}}],["src/app/tasks/buttons/buttons.component.t",{"_index":436,"title":{},"body":{"components/ButtonsComponent.html":{},"coverage.html":{}}}],["src/app/tasks/buttons/buttons.component.ts:102",{"_index":460,"title":{},"body":{"components/ButtonsComponent.html":{}}}],["src/app/tasks/buttons/buttons.component.ts:111",{"_index":453,"title":{},"body":{"components/ButtonsComponent.html":{}}}],["src/app/tasks/buttons/buttons.component.ts:118",{"_index":454,"title":{},"body":{"components/ButtonsComponent.html":{}}}],["src/app/tasks/buttons/buttons.component.ts:26",{"_index":446,"title":{},"body":{"components/ButtonsComponent.html":{}}}],["src/app/tasks/buttons/buttons.component.ts:28",{"_index":447,"title":{},"body":{"components/ButtonsComponent.html":{}}}],["src/app/tasks/buttons/buttons.component.ts:30",{"_index":448,"title":{},"body":{"components/ButtonsComponent.html":{}}}],["src/app/tasks/buttons/buttons.component.ts:32",{"_index":449,"title":{},"body":{"components/ButtonsComponent.html":{}}}],["src/app/tasks/buttons/buttons.component.ts:34",{"_index":450,"title":{},"body":{"components/ButtonsComponent.html":{}}}],["src/app/tasks/buttons/buttons.component.ts:36",{"_index":451,"title":{},"body":{"components/ButtonsComponent.html":{}}}],["src/app/tasks/buttons/buttons.component.ts:38",{"_index":452,"title":{},"body":{"components/ButtonsComponent.html":{}}}],["src/app/tasks/buttons/buttons.component.ts:40",{"_index":445,"title":{},"body":{"components/ButtonsComponent.html":{}}}],["src/app/tasks/buttons/buttons.component.ts:53",{"_index":456,"title":{},"body":{"components/ButtonsComponent.html":{}}}],["src/app/tasks/buttons/buttons.component.ts:74",{"_index":458,"title":{},"body":{"components/ButtonsComponent.html":{}}}],["src/app/tasks/buttons/task",{"_index":1399,"title":{},"body":{"modules/TasksButtonsModule.html":{}}}],["src/app/tasks/dialogs/complet",{"_index":501,"title":{},"body":{"components/CompleteTaskComponent.html":{},"modules/CompleteTaskModule.html":{},"coverage.html":{}}}],["src/app/tasks/dialogs/confirm",{"_index":623,"title":{},"body":{"components/ConfirmDeleteTaskComponent.html":{},"modules/ConfirmDeleteTaskModule.html":{},"coverage.html":{}}}],["src/app/tasks/dialogs/cr",{"_index":725,"title":{},"body":{"components/CreateTaskComponent.html":{},"modules/CreateTaskModule.html":{},"coverage.html":{}}}],["src/app/tasks/dialogs/task",{"_index":1405,"title":{},"body":{"modules/TasksDialogModule.html":{}}}],["src/app/tasks/edit/edit",{"_index":769,"title":{},"body":{"components/EditTaskComponent.html":{},"modules/EditTaskModule.html":{},"coverage.html":{}}}],["src/app/tasks/edit/recur",{"_index":1178,"title":{},"body":{"components/RecurringTaskComponent.html":{},"coverage.html":{}}}],["src/app/tasks/filter/task",{"_index":1407,"title":{},"body":{"components/TasksFilterComponent.html":{},"modules/TasksFilterModule.html":{},"coverage.html":{}}}],["src/app/tasks/form/task",{"_index":1305,"title":{},"body":{"components/TaskFormComponent.html":{},"modules/TaskFormModule.html":{},"coverage.html":{}}}],["src/app/tasks/shared/models/task.model.t",{"_index":1284,"title":{},"body":{"classes/Task.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/app/tasks/shared/models/task.model.ts:12",{"_index":1295,"title":{},"body":{"classes/Task.html":{}}}],["src/app/tasks/shared/models/task.model.ts:14",{"_index":1299,"title":{},"body":{"classes/Task.html":{}}}],["src/app/tasks/shared/models/task.model.ts:16",{"_index":1292,"title":{},"body":{"classes/Task.html":{}}}],["src/app/tasks/shared/models/task.model.ts:18",{"_index":1293,"title":{},"body":{"classes/Task.html":{}}}],["src/app/tasks/shared/models/task.model.ts:20",{"_index":1291,"title":{},"body":{"classes/Task.html":{}}}],["src/app/tasks/shared/models/task.model.ts:22",{"_index":1298,"title":{},"body":{"classes/Task.html":{}}}],["src/app/tasks/shared/models/task.model.ts:24",{"_index":1301,"title":{},"body":{"classes/Task.html":{}}}],["src/app/tasks/shared/models/task.model.ts:26",{"_index":1304,"title":{},"body":{"classes/Task.html":{}}}],["src/app/tasks/shared/models/task.model.ts:28",{"_index":1294,"title":{},"body":{"classes/Task.html":{}}}],["src/app/tasks/shared/services/task.service.t",{"_index":1553,"title":{},"body":{"coverage.html":{}}}],["src/app/tasks/shared/services/tasks.datasource.t",{"_index":1555,"title":{},"body":{"coverage.html":{}}}],["src/app/tasks/shared/services/utils.service.t",{"_index":1479,"title":{},"body":{"injectables/UtilsService.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/app/tasks/shared/services/utils.service.ts:20",{"_index":1502,"title":{},"body":{"injectables/UtilsService.html":{}}}],["src/app/tasks/shared/services/utils.service.ts:22",{"_index":1498,"title":{},"body":{"injectables/UtilsService.html":{}}}],["src/app/tasks/shared/services/utils.service.ts:24",{"_index":1500,"title":{},"body":{"injectables/UtilsService.html":{}}}],["src/app/tasks/shared/services/utils.service.ts:26",{"_index":1490,"title":{},"body":{"injectables/UtilsService.html":{}}}],["src/app/tasks/shared/services/utils.service.ts:48",{"_index":1493,"title":{},"body":{"injectables/UtilsService.html":{}}}],["src/app/tasks/shared/services/utils.service.ts:68",{"_index":1497,"title":{},"body":{"injectables/UtilsService.html":{}}}],["src/app/tasks/shared/util/mat",{"_index":1155,"title":{},"body":{"injectables/MatPaginatorCustom.html":{},"coverage.html":{}}}],["src/app/tasks/sidenav/list",{"_index":1072,"title":{},"body":{"components/ListItemComponent.html":{},"coverage.html":{}}}],["src/app/tasks/sidenav/sidenav",{"_index":1187,"title":{},"body":{"components/SidenavTasksComponent.html":{},"modules/SidenavTasksModule.html":{},"coverage.html":{}}}],["src/app/tasks/table/complet",{"_index":612,"title":{},"body":{"components/CompleteTasksTableComponent.html":{},"coverage.html":{}}}],["src/app/tasks/table/pend",{"_index":1175,"title":{},"body":{"components/PendingTasksTableComponent.html":{},"coverage.html":{}}}],["src/app/tasks/table/task",{"_index":1474,"title":{},"body":{"modules/TasksTableModule.html":{},"coverage.html":{}}}],["src/app/tasks/tasks.component.t",{"_index":1402,"title":{},"body":{"components/TasksComponent.html":{},"coverage.html":{}}}],["src/app/tasks/tasks.module.t",{"_index":1457,"title":{},"body":{"modules/TasksModule.html":{}}}],["src/app/tasks/tasks.routing.t",{"_index":1463,"title":{},"body":{"modules/TasksRoutingModule.html":{}}}],["src/environments/environment.prod.t",{"_index":1568,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.t",{"_index":1570,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["stack",{"_index":1602,"title":{},"body":{"index.html":{}}}],["start",{"_index":700,"title":{"index.html":{}},"body":{"modules/CoreModule.html":{},"components/EditTaskComponent.html":{},"components/SidenavTasksComponent.html":{},"index.html":{}}}],["start:deval",{"_index":1700,"title":{},"body":{"index.html":{}}}],["startindex",{"_index":1164,"title":{},"body":{"injectables/MatPaginatorCustom.html":{}}}],["startonc",{"_index":1690,"title":{},"body":{"index.html":{}}}],["state",{"_index":123,"title":{},"body":{"components/AboutComponent.html":{},"components/HeaderComponent.html":{},"injectables/LoaderService.html":{},"interfaces/LoaderState.html":{},"components/SidenavTasksComponent.html":{},"injectables/UtilsService.html":{},"index.html":{}}}],["statement",{"_index":1527,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":722,"title":{},"body":{"modules/CoreModule.html":{},"modules/TasksModule.html":{}}}],["statu",{"_index":1352,"title":{},"body":{"components/TaskFormComponent.html":{}}}],["step",{"_index":1681,"title":{},"body":{"index.html":{}}}],["store",{"_index":1748,"title":{},"body":{"index.html":{}}}],["string",{"_index":528,"title":{},"body":{"components/CompleteTaskComponent.html":{},"components/ConfirmDeleteTaskComponent.html":{},"injectables/ConsoleLoggerService.html":{},"components/EditTaskComponent.html":{},"injectables/HttpService.html":{},"components/ListItemComponent.html":{},"classes/Logger.html":{},"injectables/LoggerService.html":{},"injectables/MatPaginatorCustom.html":{},"components/SidenavTasksComponent.html":{},"classes/Task.html":{},"components/TaskFormComponent.html":{},"injectables/UtilsService.html":{}}}],["style",{"_index":1074,"title":{},"body":{"components/ListItemComponent.html":{}}}],["styleurl",{"_index":18,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ButtonBarComponent.html":{},"components/ButtonsComponent.html":{},"components/CompleteTaskComponent.html":{},"components/CompleteTasksTableComponent.html":{},"components/ConfirmDeleteTaskComponent.html":{},"components/CreateTaskComponent.html":{},"components/EditTaskComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/ListItemComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PendingTasksTableComponent.html":{},"components/RecurringTaskComponent.html":{},"components/SidenavTasksComponent.html":{},"components/TaskFormComponent.html":{},"components/TasksComponent.html":{},"components/TasksFilterComponent.html":{}}}],["sub",{"_index":27,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/CompleteTaskComponent.html":{},"components/ConfirmDeleteTaskComponent.html":{},"components/CreateTaskComponent.html":{},"components/EditTaskComponent.html":{},"components/HeaderComponent.html":{},"components/ListItemComponent.html":{},"components/RecurringTaskComponent.html":{},"components/SidenavTasksComponent.html":{},"components/TaskFormComponent.html":{},"components/TasksFilterComponent.html":{},"injectables/UtilsService.html":{}}}],["sub.unsubscrib",{"_index":1523,"title":{},"body":{"injectables/UtilsService.html":{}}}],["subform",{"_index":850,"title":{},"body":{"components/EditTaskComponent.html":{}}}],["subject",{"_index":1139,"title":{},"body":{"injectables/LoaderService.html":{},"interfaces/LoaderState.html":{},"injectables/UtilsService.html":{}}}],["subload",{"_index":342,"title":{},"body":{"components/AppComponent.html":{}}}],["submenutoggl",{"_index":1245,"title":{},"body":{"components/SidenavTasksComponent.html":{}}}],["suboverdu",{"_index":1113,"title":{},"body":{"components/ListItemComponent.html":{}}}],["subscreens",{"_index":1252,"title":{},"body":{"components/SidenavTasksComponent.html":{}}}],["subscrib",{"_index":484,"title":{},"body":{"components/ButtonsComponent.html":{},"components/CreateTaskComponent.html":{},"components/EditTaskComponent.html":{},"components/ListItemComponent.html":{},"components/SidenavTasksComponent.html":{},"components/TasksFilterComponent.html":{}}}],["subscribe((s",{"_index":1514,"title":{},"body":{"injectables/UtilsService.html":{}}}],["subscribe((task",{"_index":921,"title":{},"body":{"components/EditTaskComponent.html":{}}}],["subscribe(next",{"_index":1248,"title":{},"body":{"components/SidenavTasksComponent.html":{}}}],["subscript",{"_index":46,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/CompleteTaskComponent.html":{},"components/ConfirmDeleteTaskComponent.html":{},"components/CreateTaskComponent.html":{},"components/EditTaskComponent.html":{},"components/HeaderComponent.html":{},"components/ListItemComponent.html":{},"components/RecurringTaskComponent.html":{},"components/SidenavTasksComponent.html":{},"components/TaskFormComponent.html":{},"components/TasksFilterComponent.html":{},"injectables/UtilsService.html":{}}}],["subtoday",{"_index":1122,"title":{},"body":{"components/ListItemComponent.html":{}}}],["subtomorrow",{"_index":1127,"title":{},"body":{"components/ListItemComponent.html":{}}}],["successfulli",{"_index":582,"title":{},"body":{"components/CompleteTaskComponent.html":{},"components/ConfirmDeleteTaskComponent.html":{},"components/CreateTaskComponent.html":{},"components/EditTaskComponent.html":{},"index.html":{}}}],["support",{"_index":91,"title":{},"body":{"components/AboutComponent.html":{},"modules.html":{}}}],["sure",{"_index":647,"title":{},"body":{"components/ConfirmDeleteTaskComponent.html":{},"modules/CoreModule.html":{},"components/TaskFormComponent.html":{}}}],["svg",{"_index":302,"title":{},"body":{"modules/AboutModule.html":{},"modules/CompleteTaskModule.html":{},"modules/ConfirmDeleteTaskModule.html":{},"modules/CreateTaskModule.html":{},"modules/EditTaskModule.html":{},"modules/HeaderModule.html":{},"modules/SidenavTasksModule.html":{},"modules/TasksButtonBarModule.html":{},"modules/TasksButtonsModule.html":{},"modules/TasksFilterModule.html":{},"modules/TasksTableModule.html":{},"dependencies.html":{},"modules.html":{}}}],["switchmap(formdata",{"_index":1348,"title":{},"body":{"components/TaskFormComponent.html":{}}}],["sync",{"_index":1670,"title":{},"body":{"index.html":{}}}],["system",{"_index":1655,"title":{},"body":{"index.html":{}}}],["tabl",{"_index":110,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ButtonBarComponent.html":{},"components/ButtonsComponent.html":{},"components/CompleteTaskComponent.html":{},"components/CompleteTasksTableComponent.html":{},"components/ConfirmDeleteTaskComponent.html":{},"components/CreateTaskComponent.html":{},"components/EditTaskComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/ListItemComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PendingTasksTableComponent.html":{},"components/RecurringTaskComponent.html":{},"components/SidenavTasksComponent.html":{},"components/TaskFormComponent.html":{},"components/TasksComponent.html":{},"components/TasksFilterComponent.html":{},"coverage.html":{},"index.html":{}}}],["table'},{'nam",{"_index":246,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ButtonBarComponent.html":{},"components/ButtonsComponent.html":{},"components/CompleteTaskComponent.html":{},"components/CompleteTasksTableComponent.html":{},"components/ConfirmDeleteTaskComponent.html":{},"components/CreateTaskComponent.html":{},"components/EditTaskComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/ListItemComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PendingTasksTableComponent.html":{},"components/RecurringTaskComponent.html":{},"components/SidenavTasksComponent.html":{},"components/TaskFormComponent.html":{},"components/TasksComponent.html":{},"components/TasksFilterComponent.html":{}}}],["table.compon",{"_index":621,"title":{},"body":{"components/CompleteTasksTableComponent.html":{},"components/PendingTasksTableComponent.html":{},"modules/TasksRoutingModule.html":{},"modules/TasksTableModule.html":{}}}],["table.component.css",{"_index":615,"title":{},"body":{"components/CompleteTasksTableComponent.html":{},"components/PendingTasksTableComponent.html":{}}}],["table.component.html",{"_index":616,"title":{},"body":{"components/CompleteTasksTableComponent.html":{},"components/PendingTasksTableComponent.html":{}}}],["table.component.t",{"_index":613,"title":{},"body":{"components/CompleteTasksTableComponent.html":{},"components/PendingTasksTableComponent.html":{},"coverage.html":{}}}],["table.component.ts:18",{"_index":618,"title":{},"body":{"components/CompleteTasksTableComponent.html":{},"components/PendingTasksTableComponent.html":{}}}],["table.modul",{"_index":1462,"title":{},"body":{"modules/TasksModule.html":{}}}],["table.module.t",{"_index":1475,"title":{},"body":{"modules/TasksTableModule.html":{}}}],["tablesort(document.getelementbyid('coverag",{"_index":1571,"title":{},"body":{"coverage.html":{}}}],["tag",{"_index":93,"title":{},"body":{"components/AboutComponent.html":{}}}],["take",{"_index":1666,"title":{},"body":{"index.html":{}}}],["taken",{"_index":159,"title":{},"body":{"components/AboutComponent.html":{},"classes/Logger.html":{},"injectables/LoggerService.html":{}}}],["tap",{"_index":817,"title":{},"body":{"components/EditTaskComponent.html":{}}}],["task",{"_index":113,"title":{"classes/Task.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/ButtonBarComponent.html":{},"components/ButtonsComponent.html":{},"components/CompleteTaskComponent.html":{},"modules/CompleteTaskModule.html":{},"components/CompleteTasksTableComponent.html":{},"components/ConfirmDeleteTaskComponent.html":{},"modules/ConfirmDeleteTaskModule.html":{},"components/CreateTaskComponent.html":{},"modules/CreateTaskModule.html":{},"components/EditTaskComponent.html":{},"modules/EditTaskModule.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/ListItemComponent.html":{},"injectables/MatPaginatorCustom.html":{},"components/PageNotFoundComponent.html":{},"components/PendingTasksTableComponent.html":{},"components/RecurringTaskComponent.html":{},"components/SidenavTasksComponent.html":{},"modules/SidenavTasksModule.html":{},"classes/Task.html":{},"components/TaskFormComponent.html":{},"modules/TaskFormModule.html":{},"modules/TasksButtonsModule.html":{},"components/TasksComponent.html":{},"components/TasksFilterComponent.html":{},"modules/TasksFilterModule.html":{},"modules/TasksModule.html":{},"modules/TasksRoutingModule.html":{},"modules/TasksTableModule.html":{},"coverage.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["task'},{'nam",{"_index":244,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ButtonBarComponent.html":{},"components/ButtonsComponent.html":{},"components/CompleteTaskComponent.html":{},"components/CompleteTasksTableComponent.html":{},"components/ConfirmDeleteTaskComponent.html":{},"components/CreateTaskComponent.html":{},"components/EditTaskComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/ListItemComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PendingTasksTableComponent.html":{},"components/RecurringTaskComponent.html":{},"components/SidenavTasksComponent.html":{},"components/TaskFormComponent.html":{},"components/TasksComponent.html":{},"components/TasksFilterComponent.html":{}}}],["task(",{"_index":426,"title":{},"body":{"components/ButtonBarComponent.html":{},"components/ButtonsComponent.html":{},"components/CompleteTaskComponent.html":{}}}],["task.compon",{"_index":471,"title":{},"body":{"components/ButtonsComponent.html":{},"modules/CompleteTaskModule.html":{},"modules/ConfirmDeleteTaskModule.html":{},"modules/CreateTaskModule.html":{},"components/EditTaskComponent.html":{},"modules/EditTaskModule.html":{},"components/SidenavTasksComponent.html":{},"modules/TasksRoutingModule.html":{}}}],["task.component.css",{"_index":503,"title":{},"body":{"components/CompleteTaskComponent.html":{},"components/ConfirmDeleteTaskComponent.html":{},"components/CreateTaskComponent.html":{},"components/EditTaskComponent.html":{},"components/RecurringTaskComponent.html":{}}}],["task.component.html",{"_index":504,"title":{},"body":{"components/CompleteTaskComponent.html":{},"components/ConfirmDeleteTaskComponent.html":{},"components/CreateTaskComponent.html":{},"components/EditTaskComponent.html":{},"components/RecurringTaskComponent.html":{}}}],["task.component.t",{"_index":502,"title":{},"body":{"components/CompleteTaskComponent.html":{},"components/ConfirmDeleteTaskComponent.html":{},"components/CreateTaskComponent.html":{},"components/EditTaskComponent.html":{},"components/RecurringTaskComponent.html":{},"coverage.html":{}}}],["task.component.ts:105",{"_index":535,"title":{},"body":{"components/CompleteTaskComponent.html":{}}}],["task.component.ts:122",{"_index":796,"title":{},"body":{"components/EditTaskComponent.html":{}}}],["task.component.ts:137",{"_index":537,"title":{},"body":{"components/CompleteTaskComponent.html":{}}}],["task.component.ts:152",{"_index":799,"title":{},"body":{"components/EditTaskComponent.html":{}}}],["task.component.ts:179",{"_index":797,"title":{},"body":{"components/EditTaskComponent.html":{}}}],["task.component.ts:188",{"_index":800,"title":{},"body":{"components/EditTaskComponent.html":{}}}],["task.component.ts:21",{"_index":624,"title":{},"body":{"components/ConfirmDeleteTaskComponent.html":{}}}],["task.component.ts:218",{"_index":789,"title":{},"body":{"components/EditTaskComponent.html":{}}}],["task.component.ts:22",{"_index":1182,"title":{},"body":{"components/RecurringTaskComponent.html":{}}}],["task.component.ts:23",{"_index":630,"title":{},"body":{"components/ConfirmDeleteTaskComponent.html":{}}}],["task.component.ts:24",{"_index":732,"title":{},"body":{"components/CreateTaskComponent.html":{},"components/RecurringTaskComponent.html":{}}}],["task.component.ts:25",{"_index":631,"title":{},"body":{"components/ConfirmDeleteTaskComponent.html":{}}}],["task.component.ts:258",{"_index":802,"title":{},"body":{"components/EditTaskComponent.html":{}}}],["task.component.ts:26",{"_index":738,"title":{},"body":{"components/CreateTaskComponent.html":{},"components/RecurringTaskComponent.html":{}}}],["task.component.ts:27",{"_index":524,"title":{},"body":{"components/CompleteTaskComponent.html":{},"components/ConfirmDeleteTaskComponent.html":{}}}],["task.component.ts:28",{"_index":739,"title":{},"body":{"components/CreateTaskComponent.html":{},"components/RecurringTaskComponent.html":{}}}],["task.component.ts:29",{"_index":523,"title":{},"body":{"components/CompleteTaskComponent.html":{},"components/ConfirmDeleteTaskComponent.html":{}}}],["task.component.ts:30",{"_index":731,"title":{},"body":{"components/CreateTaskComponent.html":{},"components/RecurringTaskComponent.html":{}}}],["task.component.ts:31",{"_index":541,"title":{},"body":{"components/CompleteTaskComponent.html":{},"components/ConfirmDeleteTaskComponent.html":{}}}],["task.component.ts:33",{"_index":545,"title":{},"body":{"components/CompleteTaskComponent.html":{},"components/EditTaskComponent.html":{}}}],["task.component.ts:35",{"_index":547,"title":{},"body":{"components/CompleteTaskComponent.html":{},"components/EditTaskComponent.html":{}}}],["task.component.ts:37",{"_index":803,"title":{},"body":{"components/EditTaskComponent.html":{}}}],["task.component.ts:38",{"_index":548,"title":{},"body":{"components/CompleteTaskComponent.html":{}}}],["task.component.ts:39",{"_index":812,"title":{},"body":{"components/EditTaskComponent.html":{}}}],["task.component.ts:40",{"_index":556,"title":{},"body":{"components/CompleteTaskComponent.html":{}}}],["task.component.ts:41",{"_index":733,"title":{},"body":{"components/CreateTaskComponent.html":{},"components/EditTaskComponent.html":{}}}],["task.component.ts:42",{"_index":557,"title":{},"body":{"components/CompleteTaskComponent.html":{}}}],["task.component.ts:43",{"_index":625,"title":{},"body":{"components/ConfirmDeleteTaskComponent.html":{},"components/EditTaskComponent.html":{},"components/RecurringTaskComponent.html":{}}}],["task.component.ts:44",{"_index":521,"title":{},"body":{"components/CompleteTaskComponent.html":{}}}],["task.component.ts:45",{"_index":805,"title":{},"body":{"components/EditTaskComponent.html":{}}}],["task.component.ts:47",{"_index":806,"title":{},"body":{"components/EditTaskComponent.html":{}}}],["task.component.ts:48",{"_index":735,"title":{},"body":{"components/CreateTaskComponent.html":{}}}],["task.component.ts:49",{"_index":808,"title":{},"body":{"components/EditTaskComponent.html":{}}}],["task.component.ts:50",{"_index":626,"title":{},"body":{"components/ConfirmDeleteTaskComponent.html":{},"components/RecurringTaskComponent.html":{}}}],["task.component.ts:51",{"_index":811,"title":{},"body":{"components/EditTaskComponent.html":{}}}],["task.component.ts:53",{"_index":813,"title":{},"body":{"components/EditTaskComponent.html":{}}}],["task.component.ts:55",{"_index":815,"title":{},"body":{"components/EditTaskComponent.html":{}}}],["task.component.ts:57",{"_index":525,"title":{},"body":{"components/CompleteTaskComponent.html":{},"components/EditTaskComponent.html":{},"components/RecurringTaskComponent.html":{}}}],["task.component.ts:59",{"_index":807,"title":{},"body":{"components/EditTaskComponent.html":{}}}],["task.component.ts:61",{"_index":784,"title":{},"body":{"components/EditTaskComponent.html":{}}}],["task.component.ts:68",{"_index":529,"title":{},"body":{"components/CompleteTaskComponent.html":{}}}],["task.component.ts:72",{"_index":737,"title":{},"body":{"components/CreateTaskComponent.html":{}}}],["task.component.ts:75",{"_index":533,"title":{},"body":{"components/CompleteTaskComponent.html":{}}}],["task.component.ts:76",{"_index":1183,"title":{},"body":{"components/RecurringTaskComponent.html":{}}}],["task.component.ts:77",{"_index":627,"title":{},"body":{"components/ConfirmDeleteTaskComponent.html":{}}}],["task.component.ts:78",{"_index":786,"title":{},"body":{"components/EditTaskComponent.html":{}}}],["task.component.ts:84",{"_index":628,"title":{},"body":{"components/ConfirmDeleteTaskComponent.html":{}}}],["task.component.ts:88",{"_index":793,"title":{},"body":{"components/EditTaskComponent.html":{}}}],["task.component.ts:89",{"_index":736,"title":{},"body":{"components/CreateTaskComponent.html":{}}}],["task.component.ts:98",{"_index":534,"title":{},"body":{"components/CompleteTaskComponent.html":{}}}],["task.id",{"_index":578,"title":{},"body":{"components/CompleteTaskComponent.html":{},"components/EditTaskComponent.html":{}}}],["task.iscomplet",{"_index":841,"title":{},"body":{"components/EditTaskComponent.html":{}}}],["task.modul",{"_index":1283,"title":{},"body":{"modules/SidenavTasksModule.html":{},"modules/TasksDialogModule.html":{},"modules/TasksModule.html":{}}}],["task.module.t",{"_index":600,"title":{},"body":{"modules/CompleteTaskModule.html":{},"modules/ConfirmDeleteTaskModule.html":{},"modules/CreateTaskModule.html":{},"modules/EditTaskModule.html":{}}}],["task.nam",{"_index":924,"title":{},"body":{"components/EditTaskComponent.html":{}}}],["task.repeat",{"_index":847,"title":{},"body":{"components/EditTaskComponent.html":{}}}],["task/complet",{"_index":470,"title":{},"body":{"components/ButtonsComponent.html":{},"components/CompleteTaskComponent.html":{},"modules/CompleteTaskModule.html":{},"modules/TasksDialogModule.html":{},"coverage.html":{}}}],["task/confirm",{"_index":473,"title":{},"body":{"components/ButtonsComponent.html":{},"components/ConfirmDeleteTaskComponent.html":{},"modules/ConfirmDeleteTaskModule.html":{},"modules/TasksDialogModule.html":{},"coverage.html":{}}}],["task/creat",{"_index":726,"title":{},"body":{"components/CreateTaskComponent.html":{},"modules/CreateTaskModule.html":{},"components/SidenavTasksComponent.html":{},"modules/SidenavTasksModule.html":{},"coverage.html":{}}}],["taskfilt",{"_index":957,"title":{},"body":{"components/HeaderComponent.html":{},"components/TasksFilterComponent.html":{}}}],["taskfiltercompon",{"_index":984,"title":{},"body":{"components/HeaderComponent.html":{}}}],["taskfilterinput",{"_index":1414,"title":{},"body":{"components/TasksFilterComponent.html":{}}}],["taskformcompon",{"_index":266,"title":{"components/TaskFormComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ButtonBarComponent.html":{},"components/ButtonsComponent.html":{},"components/CompleteTaskComponent.html":{},"components/CompleteTasksTableComponent.html":{},"components/ConfirmDeleteTaskComponent.html":{},"components/CreateTaskComponent.html":{},"components/EditTaskComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/ListItemComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PendingTasksTableComponent.html":{},"components/RecurringTaskComponent.html":{},"components/SidenavTasksComponent.html":{},"components/TaskFormComponent.html":{},"modules/TaskFormModule.html":{},"components/TasksComponent.html":{},"components/TasksFilterComponent.html":{},"coverage.html":{},"overview.html":{}}}],["taskformmodul",{"_index":764,"title":{"modules/TaskFormModule.html":{}},"body":{"modules/CreateTaskModule.html":{},"modules/EditTaskModule.html":{},"modules/TaskFormModule.html":{},"modules/TasksDialogModule.html":{},"modules.html":{},"overview.html":{}}}],["tasks'},{'nam",{"_index":265,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ButtonBarComponent.html":{},"components/ButtonsComponent.html":{},"components/CompleteTaskComponent.html":{},"components/CompleteTasksTableComponent.html":{},"components/ConfirmDeleteTaskComponent.html":{},"components/CreateTaskComponent.html":{},"components/EditTaskComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/ListItemComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PendingTasksTableComponent.html":{},"components/RecurringTaskComponent.html":{},"components/SidenavTasksComponent.html":{},"components/TaskFormComponent.html":{},"components/TasksComponent.html":{},"components/TasksFilterComponent.html":{}}}],["tasks.compon",{"_index":1281,"title":{},"body":{"modules/SidenavTasksModule.html":{},"modules/TasksModule.html":{}}}],["tasks.component.css",{"_index":1189,"title":{},"body":{"components/SidenavTasksComponent.html":{},"components/TasksComponent.html":{}}}],["tasks.component.html",{"_index":1190,"title":{},"body":{"components/SidenavTasksComponent.html":{},"components/TasksComponent.html":{}}}],["tasks.component.t",{"_index":1188,"title":{},"body":{"components/SidenavTasksComponent.html":{},"coverage.html":{}}}],["tasks.component.ts:132",{"_index":1212,"title":{},"body":{"components/SidenavTasksComponent.html":{}}}],["tasks.component.ts:141",{"_index":1199,"title":{},"body":{"components/SidenavTasksComponent.html":{}}}],["tasks.component.ts:159",{"_index":1205,"title":{},"body":{"components/SidenavTasksComponent.html":{}}}],["tasks.component.ts:25",{"_index":1214,"title":{},"body":{"components/SidenavTasksComponent.html":{}}}],["tasks.component.ts:27",{"_index":1215,"title":{},"body":{"components/SidenavTasksComponent.html":{}}}],["tasks.component.ts:29",{"_index":1226,"title":{},"body":{"components/SidenavTasksComponent.html":{}}}],["tasks.component.ts:31",{"_index":1224,"title":{},"body":{"components/SidenavTasksComponent.html":{}}}],["tasks.component.ts:33",{"_index":1225,"title":{},"body":{"components/SidenavTasksComponent.html":{}}}],["tasks.component.ts:35",{"_index":1227,"title":{},"body":{"components/SidenavTasksComponent.html":{}}}],["tasks.component.ts:37",{"_index":1231,"title":{},"body":{"components/SidenavTasksComponent.html":{}}}],["tasks.component.ts:39",{"_index":1230,"title":{},"body":{"components/SidenavTasksComponent.html":{}}}],["tasks.component.ts:47",{"_index":1223,"title":{},"body":{"components/SidenavTasksComponent.html":{}}}],["tasks.component.ts:53",{"_index":1198,"title":{},"body":{"components/SidenavTasksComponent.html":{}}}],["tasks.component.ts:66",{"_index":1210,"title":{},"body":{"components/SidenavTasksComponent.html":{}}}],["tasks.component.ts:80",{"_index":1208,"title":{},"body":{"components/SidenavTasksComponent.html":{}}}],["tasks.component.ts:87",{"_index":1209,"title":{},"body":{"components/SidenavTasksComponent.html":{}}}],["tasks.modul",{"_index":1461,"title":{},"body":{"modules/TasksModule.html":{}}}],["tasks.module.t",{"_index":1272,"title":{},"body":{"modules/SidenavTasksModule.html":{}}}],["tasks.rout",{"_index":1458,"title":{},"body":{"modules/TasksModule.html":{}}}],["tasks/button",{"_index":819,"title":{},"body":{"components/EditTaskComponent.html":{},"modules/EditTaskModule.html":{},"modules/TasksTableModule.html":{}}}],["tasks/buttons/buttons.compon",{"_index":1401,"title":{},"body":{"modules/TasksButtonsModule.html":{}}}],["tasks/buttons/task",{"_index":1394,"title":{},"body":{"modules/TasksButtonBarModule.html":{},"modules/TasksTableModule.html":{}}}],["tasks/complet",{"_index":1229,"title":{},"body":{"components/SidenavTasksComponent.html":{}}}],["tasks/dialogs/complet",{"_index":469,"title":{},"body":{"components/ButtonsComponent.html":{},"modules/CompleteTaskModule.html":{},"modules/TasksDialogModule.html":{}}}],["tasks/dialogs/confirm",{"_index":472,"title":{},"body":{"components/ButtonsComponent.html":{},"modules/ConfirmDeleteTaskModule.html":{},"modules/TasksDialogModule.html":{}}}],["tasks/dialogs/cr",{"_index":768,"title":{},"body":{"modules/CreateTaskModule.html":{},"components/SidenavTasksComponent.html":{},"modules/SidenavTasksModule.html":{}}}],["tasks/dialogs/task",{"_index":941,"title":{},"body":{"modules/EditTaskModule.html":{},"modules/TasksTableModule.html":{}}}],["tasks/edit/edit",{"_index":1459,"title":{},"body":{"modules/TasksModule.html":{},"modules/TasksRoutingModule.html":{}}}],["tasks/filter/task",{"_index":985,"title":{},"body":{"components/HeaderComponent.html":{},"modules/HeaderModule.html":{},"modules/TasksFilterModule.html":{}}}],["tasks/form/task",{"_index":741,"title":{},"body":{"components/CreateTaskComponent.html":{},"modules/CreateTaskModule.html":{},"components/EditTaskComponent.html":{},"modules/EditTaskModule.html":{},"modules/TaskFormModule.html":{},"modules/TasksDialogModule.html":{}}}],["tasks/pend",{"_index":1228,"title":{},"body":{"components/SidenavTasksComponent.html":{}}}],["tasks/shared/models/task.model",{"_index":433,"title":{},"body":{"components/ButtonBarComponent.html":{},"components/ButtonsComponent.html":{},"components/CompleteTaskComponent.html":{},"components/ConfirmDeleteTaskComponent.html":{},"components/CreateTaskComponent.html":{},"components/EditTaskComponent.html":{},"components/RecurringTaskComponent.html":{},"components/TaskFormComponent.html":{}}}],["tasks/shared/services/task.servic",{"_index":564,"title":{},"body":{"components/CompleteTaskComponent.html":{},"components/ConfirmDeleteTaskComponent.html":{},"components/CreateTaskComponent.html":{},"components/EditTaskComponent.html":{},"components/ListItemComponent.html":{},"components/SidenavTasksComponent.html":{},"components/TasksFilterComponent.html":{},"modules/TasksModule.html":{}}}],["tasks/shared/services/utils.servic",{"_index":474,"title":{},"body":{"components/ButtonsComponent.html":{},"components/EditTaskComponent.html":{},"components/HeaderComponent.html":{},"components/SidenavTasksComponent.html":{},"components/TaskFormComponent.html":{},"components/TasksFilterComponent.html":{},"modules/TasksModule.html":{}}}],["tasks/shared/util/mat",{"_index":943,"title":{},"body":{"modules/EditTaskModule.html":{}}}],["tasks/sidenav/sidenav",{"_index":1460,"title":{},"body":{"modules/TasksModule.html":{}}}],["tasks/table/complet",{"_index":1464,"title":{},"body":{"modules/TasksRoutingModule.html":{},"modules/TasksTableModule.html":{}}}],["tasks/table/pend",{"_index":1465,"title":{},"body":{"modules/TasksRoutingModule.html":{},"modules/TasksTableModule.html":{}}}],["tasks/table/task",{"_index":620,"title":{},"body":{"components/CompleteTasksTableComponent.html":{},"components/PendingTasksTableComponent.html":{},"modules/TasksModule.html":{},"modules/TasksTableModule.html":{}}}],["tasks/tasks.compon",{"_index":1466,"title":{},"body":{"modules/TasksRoutingModule.html":{}}}],["tasks/tasks.modul",{"_index":372,"title":{},"body":{"modules/AppModule.html":{}}}],["tasks[0",{"_index":583,"title":{},"body":{"components/CompleteTaskComponent.html":{}}}],["tasksbuttonbarmodul",{"_index":930,"title":{"modules/TasksButtonBarModule.html":{}},"body":{"modules/EditTaskModule.html":{},"modules/TasksButtonBarModule.html":{},"modules/TasksTableModule.html":{},"modules.html":{},"overview.html":{}}}],["tasksbuttonsmodul",{"_index":1390,"title":{"modules/TasksButtonsModule.html":{}},"body":{"modules/TasksButtonBarModule.html":{},"modules/TasksButtonsModule.html":{},"modules/TasksTableModule.html":{},"modules.html":{},"overview.html":{}}}],["taskscompon",{"_index":268,"title":{"components/TasksComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ButtonBarComponent.html":{},"components/ButtonsComponent.html":{},"components/CompleteTaskComponent.html":{},"components/CompleteTasksTableComponent.html":{},"components/ConfirmDeleteTaskComponent.html":{},"components/CreateTaskComponent.html":{},"components/EditTaskComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/ListItemComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PendingTasksTableComponent.html":{},"components/RecurringTaskComponent.html":{},"components/SidenavTasksComponent.html":{},"components/TaskFormComponent.html":{},"components/TasksComponent.html":{},"components/TasksFilterComponent.html":{},"modules/TasksModule.html":{},"modules/TasksRoutingModule.html":{},"coverage.html":{},"overview.html":{}}}],["tasksdatasourc",{"_index":1556,"title":{},"body":{"coverage.html":{}}}],["tasksdialogmodul",{"_index":931,"title":{"modules/TasksDialogModule.html":{}},"body":{"modules/EditTaskModule.html":{},"modules/TasksDialogModule.html":{},"modules/TasksTableModule.html":{},"modules.html":{},"overview.html":{}}}],["tasksdu",{"_index":1084,"title":{},"body":{"components/ListItemComponent.html":{}}}],["taskservic",{"_index":520,"title":{},"body":{"components/CompleteTaskComponent.html":{},"components/ConfirmDeleteTaskComponent.html":{},"modules/CoreModule.html":{},"components/CreateTaskComponent.html":{},"components/EditTaskComponent.html":{},"components/ListItemComponent.html":{},"components/SidenavTasksComponent.html":{},"components/TasksFilterComponent.html":{},"modules/TasksModule.html":{},"coverage.html":{}}}],["tasksfiltercompon",{"_index":269,"title":{"components/TasksFilterComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ButtonBarComponent.html":{},"components/ButtonsComponent.html":{},"components/CompleteTaskComponent.html":{},"components/CompleteTasksTableComponent.html":{},"components/ConfirmDeleteTaskComponent.html":{},"components/CreateTaskComponent.html":{},"components/EditTaskComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/ListItemComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PendingTasksTableComponent.html":{},"components/RecurringTaskComponent.html":{},"components/SidenavTasksComponent.html":{},"components/TaskFormComponent.html":{},"components/TasksComponent.html":{},"components/TasksFilterComponent.html":{},"modules/TasksFilterModule.html":{},"coverage.html":{},"overview.html":{}}}],["tasksfiltermodul",{"_index":999,"title":{"modules/TasksFilterModule.html":{}},"body":{"modules/HeaderModule.html":{},"modules/TasksFilterModule.html":{},"modules.html":{},"overview.html":{}}}],["tasksin",{"_index":1633,"title":{},"body":{"index.html":{}}}],["tasksmodul",{"_index":357,"title":{"modules/TasksModule.html":{}},"body":{"modules/AppModule.html":{},"modules/TasksModule.html":{},"modules.html":{},"overview.html":{}}}],["tasksmodule.forroot",{"_index":374,"title":{},"body":{"modules/AppModule.html":{}}}],["tasksroutingmodul",{"_index":1455,"title":{"modules/TasksRoutingModule.html":{}},"body":{"modules/TasksModule.html":{},"modules/TasksRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["taskstablecompon",{"_index":271,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ButtonBarComponent.html":{},"components/ButtonsComponent.html":{},"components/CompleteTaskComponent.html":{},"components/CompleteTasksTableComponent.html":{},"components/ConfirmDeleteTaskComponent.html":{},"components/CreateTaskComponent.html":{},"components/EditTaskComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/ListItemComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PendingTasksTableComponent.html":{},"components/RecurringTaskComponent.html":{},"components/SidenavTasksComponent.html":{},"components/TaskFormComponent.html":{},"components/TasksComponent.html":{},"components/TasksFilterComponent.html":{},"modules/TasksTableModule.html":{},"coverage.html":{},"overview.html":{}}}],["taskstablemodul",{"_index":1456,"title":{"modules/TasksTableModule.html":{}},"body":{"modules/TasksModule.html":{},"modules/TasksTableModule.html":{},"modules.html":{},"overview.html":{}}}],["tasksub",{"_index":838,"title":{},"body":{"components/EditTaskComponent.html":{}}}],["technolog",{"_index":1756,"title":{},"body":{"index.html":{}}}],["templat",{"_index":4,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ButtonBarComponent.html":{},"components/ButtonsComponent.html":{},"components/CompleteTaskComponent.html":{},"components/CompleteTasksTableComponent.html":{},"components/ConfirmDeleteTaskComponent.html":{},"components/CreateTaskComponent.html":{},"components/EditTaskComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/ListItemComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PendingTasksTableComponent.html":{},"components/RecurringTaskComponent.html":{},"components/SidenavTasksComponent.html":{},"components/TaskFormComponent.html":{},"components/TasksComponent.html":{},"components/TasksFilterComponent.html":{}}}],["templateurl",{"_index":20,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ButtonBarComponent.html":{},"components/ButtonsComponent.html":{},"components/CompleteTaskComponent.html":{},"components/CompleteTasksTableComponent.html":{},"components/ConfirmDeleteTaskComponent.html":{},"components/CreateTaskComponent.html":{},"components/EditTaskComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/ListItemComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PendingTasksTableComponent.html":{},"components/RecurringTaskComponent.html":{},"components/SidenavTasksComponent.html":{},"components/TaskFormComponent.html":{},"components/TasksComponent.html":{},"components/TasksFilterComponent.html":{}}}],["test",{"_index":157,"title":{},"body":{"components/AboutComponent.html":{},"index.html":{}}}],["test:coveragesepar",{"_index":1711,"title":{},"body":{"index.html":{}}}],["testth",{"_index":1708,"title":{},"body":{"index.html":{}}}],["text",{"_index":542,"title":{},"body":{"components/CompleteTaskComponent.html":{},"components/ConfirmDeleteTaskComponent.html":{},"components/ListItemComponent.html":{},"injectables/MatPaginatorCustom.html":{},"components/SidenavTasksComponent.html":{},"components/TasksFilterComponent.html":{}}}],["thank",{"_index":1769,"title":{},"body":{"index.html":{}}}],["thing",{"_index":1019,"title":{},"body":{"injectables/HttpService.html":{}}}],["third",{"_index":1720,"title":{},"body":{"index.html":{}}}],["this._sidenavmenuchang",{"_index":1503,"title":{},"body":{"injectables/UtilsService.html":{}}}],["this._sidenavmenuchanges.next(ev",{"_index":1524,"title":{},"body":{"injectables/UtilsService.html":{}}}],["this.aboutelement.nativeelement.scrolltop",{"_index":106,"title":{},"body":{"components/AboutComponent.html":{}}}],["this.breakpointobserv",{"_index":1511,"title":{},"body":{"injectables/UtilsService.html":{}}}],["this.buttonbar.paginator.page.pip",{"_index":835,"title":{},"body":{"components/EditTaskComponent.html":{}}}],["this.buttonbar.paginator.pageindex",{"_index":831,"title":{},"body":{"components/EditTaskComponent.html":{}}}],["this.changedetector.detectchang",{"_index":828,"title":{},"body":{"components/EditTaskComponent.html":{}}}],["this.changedetectorref.detectchang",{"_index":346,"title":{},"body":{"components/AppComponent.html":{}}}],["this.checkformerror(this.mainpropertiesform",{"_index":1343,"title":{},"body":{"components/TaskFormComponent.html":{}}}],["this.checkformerror(this.repeatpropertiesform",{"_index":1342,"title":{},"body":{"components/TaskFormComponent.html":{}}}],["this.click",{"_index":435,"title":{},"body":{"components/ButtonBarComponent.html":{},"components/ButtonsComponent.html":{}}}],["this.click.emit(tru",{"_index":487,"title":{},"body":{"components/ButtonsComponent.html":{}}}],["this.completetask.emit(task",{"_index":595,"title":{},"body":{"components/CompleteTaskComponent.html":{}}}],["this.cont",{"_index":588,"title":{},"body":{"components/CompleteTaskComponent.html":{}}}],["this.data.task",{"_index":587,"title":{},"body":{"components/CompleteTaskComponent.html":{},"components/ConfirmDeleteTaskComponent.html":{},"components/RecurringTaskComponent.html":{}}}],["this.datecompletedform",{"_index":591,"title":{},"body":{"components/CompleteTaskComponent.html":{},"components/TaskFormComponent.html":{}}}],["this.datecompletedform.controls['datecompleted'].valu",{"_index":574,"title":{},"body":{"components/CompleteTaskComponent.html":{}}}],["this.datecompletedform.get(param).dirti",{"_index":571,"title":{},"body":{"components/CompleteTaskComponent.html":{}}}],["this.datecompletedform.get(param).invalid",{"_index":570,"title":{},"body":{"components/CompleteTaskComponent.html":{}}}],["this.datecompletedform.get(param).touch",{"_index":572,"title":{},"body":{"components/CompleteTaskComponent.html":{}}}],["this.deletetask.emit(tru",{"_index":643,"title":{},"body":{"components/ConfirmDeleteTaskComponent.html":{}}}],["this.dialog.open(completetaskcompon",{"_index":482,"title":{},"body":{"components/ButtonsComponent.html":{}}}],["this.dialog.open(confirmdeletetaskcompon",{"_index":494,"title":{},"body":{"components/ButtonsComponent.html":{}}}],["this.dialog.open(createtaskcompon",{"_index":1238,"title":{},"body":{"components/SidenavTasksComponent.html":{}}}],["this.dialog.open(recurringtaskcompon",{"_index":877,"title":{},"body":{"components/EditTaskComponent.html":{}}}],["this.dialogref.clos",{"_index":569,"title":{},"body":{"components/CompleteTaskComponent.html":{},"components/ConfirmDeleteTaskComponent.html":{},"components/CreateTaskComponent.html":{},"components/RecurringTaskComponent.html":{}}}],["this.dialogref.close(msg",{"_index":596,"title":{},"body":{"components/CompleteTaskComponent.html":{}}}],["this.dialogref.close(task",{"_index":756,"title":{},"body":{"components/CreateTaskComponent.html":{}}}],["this.dialogref.disableclos",{"_index":744,"title":{},"body":{"components/CreateTaskComponent.html":{}}}],["this.displayscrolltotop",{"_index":86,"title":{},"body":{"components/AboutComponent.html":{}}}],["this.editrecurringtaskform",{"_index":1184,"title":{},"body":{"components/RecurringTaskComponent.html":{}}}],["this.enablecreatebutton",{"_index":759,"title":{},"body":{"components/CreateTaskComponent.html":{}}}],["this.enableupdatebutton",{"_index":852,"title":{},"body":{"components/EditTaskComponent.html":{}}}],["this.filt",{"_index":1111,"title":{},"body":{"components/ListItemComponent.html":{}}}],["this.formbuilder.group",{"_index":592,"title":{},"body":{"components/CompleteTaskComponent.html":{},"components/RecurringTaskComponent.html":{},"components/TaskFormComponent.html":{}}}],["this.formvalid.emit(formsvalid",{"_index":1379,"title":{},"body":{"components/TaskFormComponent.html":{}}}],["this.getrequestoptionargs(opt",{"_index":1056,"title":{},"body":{"injectables/HttpService.html":{}}}],["this.getrouteparamsfromchild",{"_index":1255,"title":{},"body":{"components/SidenavTasksComponent.html":{}}}],["this.hidecompletebutton",{"_index":840,"title":{},"body":{"components/EditTaskComponent.html":{}}}],["this.hideload",{"_index":1069,"title":{},"body":{"injectables/HttpService.html":{}}}],["this.highlightlistitem(param",{"_index":1257,"title":{},"body":{"components/SidenavTasksComponent.html":{}}}],["this.hint",{"_index":589,"title":{},"body":{"components/CompleteTaskComponent.html":{}}}],["this.icon",{"_index":894,"title":{},"body":{"components/EditTaskComponent.html":{}}}],["this.iconclass",{"_index":883,"title":{},"body":{"components/EditTaskComponent.html":{}}}],["this.initiconclass",{"_index":842,"title":{},"body":{"components/EditTaskComponent.html":{}}}],["this.initpagin",{"_index":845,"title":{},"body":{"components/EditTaskComponent.html":{}}}],["this.intercept(this.http.delete(`${this.url}/${url",{"_index":1061,"title":{},"body":{"injectables/HttpService.html":{}}}],["this.intercept(this.http.get(`${this.url}/${url",{"_index":1055,"title":{},"body":{"injectables/HttpService.html":{}}}],["this.intercept(this.http.patch(`${this.url}/${url",{"_index":1060,"title":{},"body":{"injectables/HttpService.html":{}}}],["this.intercept(this.http.post(`${this.url}/${url",{"_index":1059,"title":{},"body":{"injectables/HttpService.html":{}}}],["this.isexpand",{"_index":1250,"title":{},"body":{"components/SidenavTasksComponent.html":{}}}],["this.ismediumscreen",{"_index":990,"title":{},"body":{"components/HeaderComponent.html":{},"components/SidenavTasksComponent.html":{},"components/TaskFormComponent.html":{},"components/TasksFilterComponent.html":{},"injectables/UtilsService.html":{}}}],["this.ismediumscreen.subscribe((ismediumscreen",{"_index":1518,"title":{},"body":{"injectables/UtilsService.html":{}}}],["this.ismediumscreensourc",{"_index":1508,"title":{},"body":{"injectables/UtilsService.html":{}}}],["this.ismediumscreensource.asobserv",{"_index":1510,"title":{},"body":{"injectables/UtilsService.html":{}}}],["this.ismediumscreensource.next(size.match",{"_index":1517,"title":{},"body":{"injectables/UtilsService.html":{}}}],["this.load",{"_index":344,"title":{},"body":{"components/AppComponent.html":{}}}],["this.loaderservice.hid",{"_index":1071,"title":{},"body":{"injectables/HttpService.html":{}}}],["this.loaderservice.loaderstate.subscribe((loaderst",{"_index":343,"title":{},"body":{"components/AppComponent.html":{}}}],["this.loaderservice.show",{"_index":1070,"title":{},"body":{"injectables/HttpService.html":{}}}],["this.loaderst",{"_index":1142,"title":{},"body":{"injectables/LoaderService.html":{},"interfaces/LoaderState.html":{}}}],["this.loadersubject",{"_index":1141,"title":{},"body":{"injectables/LoaderService.html":{},"interfaces/LoaderState.html":{}}}],["this.loadersubject.asobserv",{"_index":1143,"title":{},"body":{"injectables/LoaderService.html":{},"interfaces/LoaderState.html":{}}}],["this.loadersubject.next({show",{"_index":1144,"title":{},"body":{"injectables/LoaderService.html":{},"interfaces/LoaderState.html":{}}}],["this.loadtask(id",{"_index":874,"title":{},"body":{"components/EditTaskComponent.html":{}}}],["this.loadtask(this.tasks[this.buttonbar.paginator.pageindex].id",{"_index":836,"title":{},"body":{"components/EditTaskComponent.html":{}}}],["this.location.back",{"_index":822,"title":{},"body":{"components/EditTaskComponent.html":{}}}],["this.logger.info('confirmdeletetaskcompon",{"_index":645,"title":{},"body":{"components/ConfirmDeleteTaskComponent.html":{}}}],["this.logger.info('createtaskcompon",{"_index":755,"title":{},"body":{"components/CreateTaskComponent.html":{}}}],["this.logger.info('edittaskcompon",{"_index":922,"title":{},"body":{"components/EditTaskComponent.html":{}}}],["this.logger.info(`completetaskcompon",{"_index":594,"title":{},"body":{"components/CompleteTaskComponent.html":{}}}],["this.logger.info(`httpservic",{"_index":1057,"title":{},"body":{"injectables/HttpService.html":{}}}],["this.logger.info(`utilsservic",{"_index":1515,"title":{},"body":{"injectables/UtilsService.html":{}}}],["this.mainpropertiesform",{"_index":1362,"title":{},"body":{"components/TaskFormComponent.html":{}}}],["this.mainpropertiesform.valid",{"_index":1376,"title":{},"body":{"components/TaskFormComponent.html":{}}}],["this.maxdatecomplet",{"_index":585,"title":{},"body":{"components/CompleteTaskComponent.html":{}}}],["this.mindued",{"_index":1357,"title":{},"body":{"components/TaskFormComponent.html":{}}}],["this.notifyandclose('task",{"_index":581,"title":{},"body":{"components/CompleteTaskComponent.html":{}}}],["this.numtasksdu",{"_index":1115,"title":{},"body":{"components/ListItemComponent.html":{}}}],["this.numtasksduetoday",{"_index":1240,"title":{},"body":{"components/SidenavTasksComponent.html":{}}}],["this.numtasksduetomorrow",{"_index":1242,"title":{},"body":{"components/SidenavTasksComponent.html":{}}}],["this.numtasksoverdu",{"_index":1243,"title":{},"body":{"components/SidenavTasksComponent.html":{}}}],["this.onupdate.emit('task",{"_index":923,"title":{},"body":{"components/EditTaskComponent.html":{}}}],["this.openrecurringtaskdialog",{"_index":849,"title":{},"body":{"components/EditTaskComponent.html":{}}}],["this.prefix",{"_index":893,"title":{},"body":{"components/EditTaskComponent.html":{}}}],["this.repeatpropertiesform",{"_index":1365,"title":{},"body":{"components/TaskFormComponent.html":{}}}],["this.repeatpropertiesform.get('aft",{"_index":1366,"title":{},"body":{"components/TaskFormComponent.html":{}}}],["this.repeatpropertiesform.get('repeats').valu",{"_index":1375,"title":{},"body":{"components/TaskFormComponent.html":{}}}],["this.repeatpropertiesform.valid",{"_index":1378,"title":{},"body":{"components/TaskFormComponent.html":{}}}],["this.rout",{"_index":1260,"title":{},"body":{"components/SidenavTasksComponent.html":{}}}],["this.route.fragment.subscribe(f",{"_index":100,"title":{},"body":{"components/AboutComponent.html":{}}}],["this.route.params.subscribe(param",{"_index":861,"title":{},"body":{"components/EditTaskComponent.html":{}}}],["this.router.navigate(['/404",{"_index":873,"title":{},"body":{"components/EditTaskComponent.html":{}}}],["this.router.navigate(['task",{"_index":499,"title":{},"body":{"components/ButtonsComponent.html":{}}}],["this.router.navigate(this.sidenavroutes[index",{"_index":1259,"title":{},"body":{"components/SidenavTasksComponent.html":{}}}],["this.selectedindex",{"_index":1258,"title":{},"body":{"components/SidenavTasksComponent.html":{}}}],["this.showload",{"_index":1065,"title":{},"body":{"injectables/HttpService.html":{}}}],["this.showsearchbar",{"_index":988,"title":{},"body":{"components/HeaderComponent.html":{}}}],["this.sidenavmenust",{"_index":991,"title":{},"body":{"components/HeaderComponent.html":{}}}],["this.snackbar.open(chang",{"_index":857,"title":{},"body":{"components/EditTaskComponent.html":{}}}],["this.sub",{"_index":88,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/CompleteTaskComponent.html":{},"components/ConfirmDeleteTaskComponent.html":{},"components/CreateTaskComponent.html":{},"components/EditTaskComponent.html":{},"components/HeaderComponent.html":{},"components/ListItemComponent.html":{},"components/RecurringTaskComponent.html":{},"components/SidenavTasksComponent.html":{},"components/TaskFormComponent.html":{},"components/TasksFilterComponent.html":{}}}],["this.sub.add(pag",{"_index":837,"title":{},"body":{"components/EditTaskComponent.html":{}}}],["this.sub.add(paramssub",{"_index":875,"title":{},"body":{"components/EditTaskComponent.html":{}}}],["this.sub.add(sub",{"_index":105,"title":{},"body":{"components/AboutComponent.html":{},"components/ButtonsComponent.html":{},"components/CompleteTaskComponent.html":{},"components/ConfirmDeleteTaskComponent.html":{},"components/CreateTaskComponent.html":{},"components/EditTaskComponent.html":{},"components/HeaderComponent.html":{},"components/SidenavTasksComponent.html":{},"components/TaskFormComponent.html":{},"components/TasksFilterComponent.html":{}}}],["this.sub.add(subform",{"_index":853,"title":{},"body":{"components/EditTaskComponent.html":{}}}],["this.sub.add(subload",{"_index":347,"title":{},"body":{"components/AppComponent.html":{}}}],["this.sub.add(submenutoggl",{"_index":1251,"title":{},"body":{"components/SidenavTasksComponent.html":{}}}],["this.sub.add(suboverdu",{"_index":1117,"title":{},"body":{"components/ListItemComponent.html":{}}}],["this.sub.add(subscreens",{"_index":1254,"title":{},"body":{"components/SidenavTasksComponent.html":{}}}],["this.sub.add(subtoday",{"_index":1124,"title":{},"body":{"components/ListItemComponent.html":{}}}],["this.sub.add(subtomorrow",{"_index":1129,"title":{},"body":{"components/ListItemComponent.html":{}}}],["this.sub.add(tasksub",{"_index":854,"title":{},"body":{"components/EditTaskComponent.html":{}}}],["this.sub.unsubscrib",{"_index":87,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/CompleteTaskComponent.html":{},"components/ConfirmDeleteTaskComponent.html":{},"components/CreateTaskComponent.html":{},"components/EditTaskComponent.html":{},"components/HeaderComponent.html":{},"components/ListItemComponent.html":{},"components/RecurringTaskComponent.html":{},"components/SidenavTasksComponent.html":{},"components/TaskFormComponent.html":{},"components/TasksFilterComponent.html":{}}}],["this.task",{"_index":480,"title":{},"body":{"components/ButtonsComponent.html":{},"components/CompleteTaskComponent.html":{},"components/ConfirmDeleteTaskComponent.html":{},"components/EditTaskComponent.html":{},"components/RecurringTaskComponent.html":{},"components/TaskFormComponent.html":{}}}],["this.task.descript",{"_index":911,"title":{},"body":{"components/EditTaskComponent.html":{},"components/TaskFormComponent.html":{}}}],["this.task.dued",{"_index":913,"title":{},"body":{"components/EditTaskComponent.html":{},"components/TaskFormComponent.html":{}}}],["this.task.endsaft",{"_index":918,"title":{},"body":{"components/EditTaskComponent.html":{},"components/TaskFormComponent.html":{}}}],["this.task.id",{"_index":833,"title":{},"body":{"components/EditTaskComponent.html":{},"components/TaskFormComponent.html":{}}}],["this.task.iscomplet",{"_index":1364,"title":{},"body":{"components/TaskFormComponent.html":{}}}],["this.task.nam",{"_index":907,"title":{},"body":{"components/EditTaskComponent.html":{},"components/TaskFormComponent.html":{}}}],["this.task.prior",{"_index":909,"title":{},"body":{"components/EditTaskComponent.html":{},"components/TaskFormComponent.html":{}}}],["this.task.repeat",{"_index":916,"title":{},"body":{"components/EditTaskComponent.html":{},"components/TaskFormComponent.html":{}}}],["this.taskfilterinput.nativeelement.valu",{"_index":1434,"title":{},"body":{"components/TasksFilterComponent.html":{}}}],["this.taskformcomponent.formvalid.subscribe((en",{"_index":851,"title":{},"body":{"components/EditTaskComponent.html":{}}}],["this.taskformcomponent.formvalid.subscribe((formvalid",{"_index":757,"title":{},"body":{"components/CreateTaskComponent.html":{}}}],["this.taskformcomponent.getformdata(this.taskformcomponent.mainpropertiesform).switchmap(formdata",{"_index":906,"title":{},"body":{"components/EditTaskComponent.html":{}}}],["this.taskformcomponent.getformdata(this.taskformcomponent.repeatpropertiesform).switchmap(repeatformdata",{"_index":915,"title":{},"body":{"components/EditTaskComponent.html":{}}}],["this.taskformcomponent.mainpropertiesform.get('description').valu",{"_index":747,"title":{},"body":{"components/CreateTaskComponent.html":{}}}],["this.taskformcomponent.mainpropertiesform.get('due').valu",{"_index":749,"title":{},"body":{"components/CreateTaskComponent.html":{}}}],["this.taskformcomponent.mainpropertiesform.get('name').valu",{"_index":745,"title":{},"body":{"components/CreateTaskComponent.html":{}}}],["this.taskformcomponent.mainpropertiesform.get('priority').valu",{"_index":746,"title":{},"body":{"components/CreateTaskComponent.html":{}}}],["this.taskformcomponent.repeatpropertiesform.dis",{"_index":882,"title":{},"body":{"components/EditTaskComponent.html":{}}}],["this.taskformcomponent.repeatpropertiesform.get('after').valu",{"_index":753,"title":{},"body":{"components/CreateTaskComponent.html":{}}}],["this.taskformcomponent.repeatpropertiesform.get('repeats').valu",{"_index":751,"title":{},"body":{"components/CreateTaskComponent.html":{}}}],["this.tasks.findindex((task",{"_index":832,"title":{},"body":{"components/EditTaskComponent.html":{}}}],["this.tasks.foreach((task",{"_index":638,"title":{},"body":{"components/ConfirmDeleteTaskComponent.html":{}}}],["this.tasks.length",{"_index":642,"title":{},"body":{"components/ConfirmDeleteTaskComponent.html":{}}}],["this.tasks.map((task",{"_index":577,"title":{},"body":{"components/CompleteTaskComponent.html":{}}}],["this.tasks[0].id",{"_index":500,"title":{},"body":{"components/ButtonsComponent.html":{}}}],["this.taskservice.changes.subscribe((chang",{"_index":855,"title":{},"body":{"components/EditTaskComponent.html":{}}}],["this.taskservice.complete(this.tasks[0",{"_index":584,"title":{},"body":{"components/CompleteTaskComponent.html":{}}}],["this.taskservice.completeall(id",{"_index":579,"title":{},"body":{"components/CompleteTaskComponent.html":{}}}],["this.taskservice.completetask",{"_index":825,"title":{},"body":{"components/EditTaskComponent.html":{}}}],["this.taskservice.create(task).subscribe((task",{"_index":754,"title":{},"body":{"components/CreateTaskComponent.html":{}}}],["this.taskservice.delete(task).subscrib",{"_index":640,"title":{},"body":{"components/ConfirmDeleteTaskComponent.html":{}}}],["this.taskservice.delete(this.tasks[0]).subscribe((task",{"_index":644,"title":{},"body":{"components/ConfirmDeleteTaskComponent.html":{}}}],["this.taskservice.get(id).subscribe((task",{"_index":839,"title":{},"body":{"components/EditTaskComponent.html":{}}}],["this.taskservice.initnumtask",{"_index":1107,"title":{},"body":{"components/ListItemComponent.html":{}}}],["this.taskservice.numpendingtasks.subscribe((num",{"_index":1130,"title":{},"body":{"components/ListItemComponent.html":{}}}],["this.taskservice.numtasksduetoday",{"_index":1241,"title":{},"body":{"components/SidenavTasksComponent.html":{}}}],["this.taskservice.numtasksduetoday.subscribe((num",{"_index":1123,"title":{},"body":{"components/ListItemComponent.html":{}}}],["this.taskservice.numtasksduetomorrow.subscribe((num",{"_index":1128,"title":{},"body":{"components/ListItemComponent.html":{}}}],["this.taskservice.numtasksoverdu",{"_index":1244,"title":{},"body":{"components/SidenavTasksComponent.html":{}}}],["this.taskservice.numtasksoverdue.subscribe((num",{"_index":1114,"title":{},"body":{"components/ListItemComponent.html":{}}}],["this.taskservice.pendingtask",{"_index":826,"title":{},"body":{"components/EditTaskComponent.html":{}}}],["this.taskservice.settaskfilter(this.taskfilterinput.nativeelement.valu",{"_index":1444,"title":{},"body":{"components/TasksFilterComponent.html":{}}}],["this.taskservice.update(this.task",{"_index":920,"title":{},"body":{"components/EditTaskComponent.html":{}}}],["this.text",{"_index":646,"title":{},"body":{"components/ConfirmDeleteTaskComponent.html":{}}}],["this.titl",{"_index":590,"title":{},"body":{"components/CompleteTaskComponent.html":{}}}],["this.tooltip",{"_index":896,"title":{},"body":{"components/EditTaskComponent.html":{}}}],["this.updateal",{"_index":880,"title":{},"body":{"components/EditTaskComponent.html":{},"components/RecurringTaskComponent.html":{}}}],["this.updateall.emit(updateal",{"_index":1186,"title":{},"body":{"components/RecurringTaskComponent.html":{}}}],["this.updatetaskfilt",{"_index":1435,"title":{},"body":{"components/TasksFilterComponent.html":{}}}],["this.url}/${url",{"_index":1058,"title":{},"body":{"injectables/HttpService.html":{}}}],["this.utilsservice.fullscreendialogsub(completeselecteddialogref",{"_index":483,"title":{},"body":{"components/ButtonsComponent.html":{}}}],["this.utilsservice.fullscreendialogsub(confirmdeletedialogref",{"_index":495,"title":{},"body":{"components/ButtonsComponent.html":{}}}],["this.utilsservice.fullscreendialogsub(createdialogref",{"_index":1239,"title":{},"body":{"components/SidenavTasksComponent.html":{}}}],["this.utilsservice.fullscreendialogsub(recurringdialogref",{"_index":878,"title":{},"body":{"components/EditTaskComponent.html":{}}}],["this.utilsservice.ismediumscreen.subscribe((ismediumscreen",{"_index":989,"title":{},"body":{"components/HeaderComponent.html":{},"components/SidenavTasksComponent.html":{},"components/TaskFormComponent.html":{},"components/TasksFilterComponent.html":{}}}],["this.utilsservice.sidenavmenuchanges.pip",{"_index":1246,"title":{},"body":{"components/SidenavTasksComponent.html":{}}}],["this.utilsservice.togglesidenavmenu('collaps",{"_index":994,"title":{},"body":{"components/HeaderComponent.html":{}}}],["this.utilsservice.togglesidenavmenu('expand",{"_index":993,"title":{},"body":{"components/HeaderComponent.html":{}}}],["though",{"_index":1609,"title":{},"body":{"index.html":{}}}],["through",{"_index":153,"title":{},"body":{"components/AboutComponent.html":{},"components/ButtonBarComponent.html":{},"components/ConfirmDeleteTaskComponent.html":{},"components/EditTaskComponent.html":{},"index.html":{}}}],["throughout",{"_index":1722,"title":{},"body":{"index.html":{}}}],["throw",{"_index":715,"title":{},"body":{"modules/CoreModule.html":{}}}],["time",{"_index":188,"title":{},"body":{"components/AboutComponent.html":{},"classes/Task.html":{},"index.html":{}}}],["titl",{"_index":508,"title":{},"body":{"components/CompleteTaskComponent.html":{}}}],["today",{"_index":219,"title":{},"body":{"components/AboutComponent.html":{},"components/EditTaskComponent.html":{},"components/ListItemComponent.html":{},"components/SidenavTasksComponent.html":{},"components/TaskFormComponent.html":{},"components/TasksFilterComponent.html":{},"index.html":{}}}],["togeth",{"_index":868,"title":{},"body":{"components/EditTaskComponent.html":{},"index.html":{}}}],["togglesidenavmenu",{"_index":1487,"title":{},"body":{"injectables/UtilsService.html":{}}}],["togglesidenavmenu(ev",{"_index":1496,"title":{},"body":{"injectables/UtilsService.html":{}}}],["token",{"_index":1018,"title":{},"body":{"injectables/HttpService.html":{}}}],["tomorrow",{"_index":220,"title":{},"body":{"components/AboutComponent.html":{},"components/EditTaskComponent.html":{},"components/ListItemComponent.html":{},"components/SidenavTasksComponent.html":{},"components/TasksFilterComponent.html":{},"index.html":{}}}],["toolbar",{"_index":1078,"title":{},"body":{"components/ListItemComponent.html":{}}}],["tooltip",{"_index":776,"title":{},"body":{"components/EditTaskComponent.html":{}}}],["top",{"_index":63,"title":{},"body":{"components/AboutComponent.html":{},"components/EditTaskComponent.html":{}}}],["touch",{"_index":532,"title":{},"body":{"components/CompleteTaskComponent.html":{},"components/TaskFormComponent.html":{}}}],["track",{"_index":1499,"title":{},"body":{"injectables/UtilsService.html":{}}}],["travers",{"_index":1200,"title":{},"body":{"components/SidenavTasksComponent.html":{}}}],["treat",{"_index":869,"title":{},"body":{"components/EditTaskComponent.html":{}}}],["tree",{"_index":6,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ButtonBarComponent.html":{},"components/ButtonsComponent.html":{},"components/CompleteTaskComponent.html":{},"components/CompleteTasksTableComponent.html":{},"components/ConfirmDeleteTaskComponent.html":{},"components/CreateTaskComponent.html":{},"components/EditTaskComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/ListItemComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PendingTasksTableComponent.html":{},"components/RecurringTaskComponent.html":{},"components/SidenavTasksComponent.html":{},"components/TaskFormComponent.html":{},"components/TasksComponent.html":{},"components/TasksFilterComponent.html":{}}}],["tri",{"_index":1734,"title":{},"body":{"index.html":{}}}],["trigger",{"_index":222,"title":{},"body":{"components/AboutComponent.html":{},"injectables/HttpService.html":{}}}],["true",{"_index":108,"title":{},"body":{"components/AboutComponent.html":{},"components/CompleteTaskComponent.html":{},"components/ConfirmDeleteTaskComponent.html":{},"components/CreateTaskComponent.html":{},"components/EditTaskComponent.html":{},"components/HeaderComponent.html":{},"components/ListItemComponent.html":{},"injectables/LoaderService.html":{},"interfaces/LoaderState.html":{},"components/RecurringTaskComponent.html":{},"components/SidenavTasksComponent.html":{},"classes/Task.html":{},"components/TaskFormComponent.html":{},"components/TasksFilterComponent.html":{},"injectables/UtilsService.html":{},"miscellaneous/variables.html":{}}}],["true).isvalid",{"_index":1360,"title":{},"body":{"components/TaskFormComponent.html":{}}}],["true).utc().tod",{"_index":1361,"title":{},"body":{"components/TaskFormComponent.html":{}}}],["two",{"_index":1654,"title":{},"body":{"index.html":{}}}],["type",{"_index":41,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ButtonBarComponent.html":{},"components/ButtonsComponent.html":{},"components/CompleteTaskComponent.html":{},"components/CompleteTasksTableComponent.html":{},"components/ConfirmDeleteTaskComponent.html":{},"injectables/ConsoleLoggerService.html":{},"components/CreateTaskComponent.html":{},"components/EditTaskComponent.html":{},"components/HeaderComponent.html":{},"injectables/HttpService.html":{},"components/ListItemComponent.html":{},"injectables/LoaderService.html":{},"interfaces/LoaderState.html":{},"classes/Logger.html":{},"injectables/LoggerService.html":{},"injectables/MatPaginatorCustom.html":{},"components/PendingTasksTableComponent.html":{},"components/RecurringTaskComponent.html":{},"components/SidenavTasksComponent.html":{},"classes/Task.html":{},"components/TaskFormComponent.html":{},"components/TasksFilterComponent.html":{},"injectables/UtilsService.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["typealias",{"_index":1792,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typeorm",{"_index":1747,"title":{},"body":{"index.html":{}}}],["typescript",{"_index":1603,"title":{},"body":{"index.html":{}}}],["ui",{"_index":130,"title":{},"body":{"components/AboutComponent.html":{},"index.html":{}}}],["undefin",{"_index":689,"title":{},"body":{"injectables/ConsoleLoggerService.html":{},"miscellaneous/variables.html":{}}}],["uniqu",{"_index":1296,"title":{},"body":{"classes/Task.html":{}}}],["unit",{"_index":1620,"title":{},"body":{"index.html":{}}}],["unless",{"_index":1659,"title":{},"body":{"index.html":{}}}],["unsubscrib",{"_index":55,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/CompleteTaskComponent.html":{},"components/ConfirmDeleteTaskComponent.html":{},"components/CreateTaskComponent.html":{},"components/HeaderComponent.html":{},"components/ListItemComponent.html":{},"components/SidenavTasksComponent.html":{},"components/TaskFormComponent.html":{},"components/TasksFilterComponent.html":{}}}],["until",{"_index":1201,"title":{},"body":{"components/SidenavTasksComponent.html":{}}}],["up",{"_index":667,"title":{},"body":{"injectables/ConsoleLoggerService.html":{},"index.html":{}}}],["updat",{"_index":199,"title":{},"body":{"components/AboutComponent.html":{},"components/CompleteTaskComponent.html":{},"components/EditTaskComponent.html":{},"components/ListItemComponent.html":{},"components/RecurringTaskComponent.html":{},"components/SidenavTasksComponent.html":{},"components/TaskFormComponent.html":{},"components/TasksFilterComponent.html":{},"injectables/UtilsService.html":{},"index.html":{}}}],["update(properti",{"_index":1330,"title":{},"body":{"components/TaskFormComponent.html":{}}}],["updateal",{"_index":777,"title":{},"body":{"components/EditTaskComponent.html":{},"components/RecurringTaskComponent.html":{}}}],["updateall=tru",{"_index":1181,"title":{},"body":{"components/RecurringTaskComponent.html":{}}}],["updatetaskfilt",{"_index":1416,"title":{},"body":{"components/TasksFilterComponent.html":{}}}],["urgent",{"_index":1303,"title":{},"body":{"classes/Task.html":{},"components/TaskFormComponent.html":{},"miscellaneous/typealiases.html":{}}}],["url",{"_index":1020,"title":{},"body":{"injectables/HttpService.html":{},"components/ListItemComponent.html":{},"classes/Logger.html":{},"injectables/LoggerService.html":{},"components/SidenavTasksComponent.html":{},"index.html":{}}}],["us",{"_index":146,"title":{},"body":{"components/AboutComponent.html":{},"components/ButtonsComponent.html":{},"injectables/ConsoleLoggerService.html":{},"components/CreateTaskComponent.html":{},"components/EditTaskComponent.html":{},"components/ListItemComponent.html":{},"components/TaskFormComponent.html":{},"components/TasksFilterComponent.html":{},"index.html":{}}}],["useclass",{"_index":724,"title":{},"body":{"modules/CoreModule.html":{},"modules/EditTaskModule.html":{}}}],["user",{"_index":462,"title":{},"body":{"components/ButtonsComponent.html":{},"components/CompleteTaskComponent.html":{},"components/RecurringTaskComponent.html":{},"components/TasksFilterComponent.html":{}}}],["util",{"_index":1480,"title":{},"body":{"injectables/UtilsService.html":{},"index.html":{}}}],["utilsservic",{"_index":444,"title":{"injectables/UtilsService.html":{}},"body":{"components/ButtonsComponent.html":{},"modules/CoreModule.html":{},"components/EditTaskComponent.html":{},"components/HeaderComponent.html":{},"components/SidenavTasksComponent.html":{},"components/TaskFormComponent.html":{},"components/TasksFilterComponent.html":{},"modules/TasksModule.html":{},"injectables/UtilsService.html":{},"coverage.html":{}}}],["valid",{"_index":560,"title":{},"body":{"components/CompleteTaskComponent.html":{},"components/RecurringTaskComponent.html":{},"components/TaskFormComponent.html":{}}}],["validators.requir",{"_index":593,"title":{},"body":{"components/CompleteTaskComponent.html":{},"components/RecurringTaskComponent.html":{},"components/TaskFormComponent.html":{}}}],["valu",{"_index":337,"title":{},"body":{"components/AppComponent.html":{},"components/CompleteTaskComponent.html":{},"components/ConfirmDeleteTaskComponent.html":{},"components/CreateTaskComponent.html":{},"components/EditTaskComponent.html":{},"injectables/HttpService.html":{},"components/ListItemComponent.html":{},"injectables/MatPaginatorCustom.html":{},"components/RecurringTaskComponent.html":{},"components/SidenavTasksComponent.html":{},"classes/Task.html":{},"components/TaskFormComponent.html":{},"components/TasksFilterComponent.html":{},"injectables/UtilsService.html":{},"miscellaneous/variables.html":{}}}],["var",{"_index":234,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ButtonBarComponent.html":{},"components/ButtonsComponent.html":{},"components/CompleteTaskComponent.html":{},"components/CompleteTasksTableComponent.html":{},"components/ConfirmDeleteTaskComponent.html":{},"components/CreateTaskComponent.html":{},"components/EditTaskComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/ListItemComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PendingTasksTableComponent.html":{},"components/RecurringTaskComponent.html":{},"components/SidenavTasksComponent.html":{},"components/TaskFormComponent.html":{},"components/TasksComponent.html":{},"components/TasksFilterComponent.html":{}}}],["variabl",{"_index":1534,"title":{"miscellaneous/variables.html":{}},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["varieti",{"_index":134,"title":{},"body":{"components/AboutComponent.html":{},"index.html":{}}}],["variou",{"_index":1721,"title":{},"body":{"index.html":{}}}],["veri",{"_index":1601,"title":{},"body":{"index.html":{}}}],["version",{"_index":1645,"title":{},"body":{"index.html":{}}}],["view",{"_index":48,"title":{},"body":{"components/AboutComponent.html":{},"modules/CreateTaskModule.html":{},"modules/TasksTableModule.html":{},"index.html":{}}}],["viewchild",{"_index":66,"title":{},"body":{"components/AboutComponent.html":{},"components/ButtonBarComponent.html":{},"components/CompleteTasksTableComponent.html":{},"components/CreateTaskComponent.html":{},"components/EditTaskComponent.html":{},"components/HeaderComponent.html":{},"components/PendingTasksTableComponent.html":{},"components/TasksFilterComponent.html":{}}}],["viewchild('aboutscrol",{"_index":83,"title":{},"body":{"components/AboutComponent.html":{}}}],["viewchild('completedtask",{"_index":622,"title":{},"body":{"components/CompleteTasksTableComponent.html":{}}}],["viewchild('pendingtask",{"_index":1177,"title":{},"body":{"components/PendingTasksTableComponent.html":{}}}],["viewchild('taskfilt",{"_index":1433,"title":{},"body":{"components/TasksFilterComponent.html":{}}}],["viewchild('taskfilterlargescreen",{"_index":987,"title":{},"body":{"components/HeaderComponent.html":{}}}],["viewchild(buttonbarcompon",{"_index":821,"title":{},"body":{"components/EditTaskComponent.html":{}}}],["viewchild(matpagin",{"_index":434,"title":{},"body":{"components/ButtonBarComponent.html":{}}}],["viewchild(taskformcompon",{"_index":743,"title":{},"body":{"components/CreateTaskComponent.html":{},"components/EditTaskComponent.html":{}}}],["visibl",{"_index":213,"title":{},"body":{"components/AboutComponent.html":{},"components/ButtonBarComponent.html":{},"components/ButtonsComponent.html":{}}}],["visual",{"_index":1600,"title":{},"body":{"index.html":{}}}],["void",{"_index":53,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/CompleteTaskComponent.html":{},"components/ConfirmDeleteTaskComponent.html":{},"injectables/ConsoleLoggerService.html":{},"components/CreateTaskComponent.html":{},"components/EditTaskComponent.html":{},"components/HeaderComponent.html":{},"injectables/HttpService.html":{},"components/ListItemComponent.html":{},"injectables/LoaderService.html":{},"classes/Logger.html":{},"injectables/LoggerService.html":{},"components/RecurringTaskComponent.html":{},"components/SidenavTasksComponent.html":{},"components/TaskFormComponent.html":{},"components/TasksFilterComponent.html":{},"injectables/UtilsService.html":{}}}],["vulner",{"_index":1684,"title":{},"body":{"index.html":{}}}],["want",{"_index":648,"title":{},"body":{"components/ConfirmDeleteTaskComponent.html":{}}}],["warn",{"_index":680,"title":{},"body":{"injectables/ConsoleLoggerService.html":{},"classes/Logger.html":{},"injectables/LoggerService.html":{},"index.html":{}}}],["way",{"_index":1076,"title":{},"body":{"components/ListItemComponent.html":{},"index.html":{}}}],["web",{"_index":1664,"title":{},"body":{"index.html":{}}}],["webriv",{"_index":1732,"title":{},"body":{"index.html":{}}}],["weekli",{"_index":1288,"title":{},"body":{"classes/Task.html":{},"components/TaskFormComponent.html":{},"index.html":{}}}],["well",{"_index":867,"title":{},"body":{"components/EditTaskComponent.html":{},"index.html":{}}}],["whether",{"_index":72,"title":{},"body":{"components/AboutComponent.html":{},"components/ButtonBarComponent.html":{},"components/CreateTaskComponent.html":{},"components/EditTaskComponent.html":{},"components/HeaderComponent.html":{},"components/ListItemComponent.html":{},"injectables/LoaderService.html":{},"interfaces/LoaderState.html":{},"components/RecurringTaskComponent.html":{},"components/SidenavTasksComponent.html":{},"injectables/UtilsService.html":{}}}],["while(route.firstchild",{"_index":1261,"title":{},"body":{"components/SidenavTasksComponent.html":{}}}],["whose",{"_index":1327,"title":{},"body":{"components/TaskFormComponent.html":{}}}],["width",{"_index":1494,"title":{},"body":{"injectables/UtilsService.html":{}}}],["win70",{"_index":1648,"title":{},"body":{"index.html":{}}}],["window",{"_index":59,"title":{},"body":{"components/AboutComponent.html":{},"index.html":{}}}],["within",{"_index":315,"title":{},"body":{"modules/AboutRoutingModule.html":{},"modules/TasksRoutingModule.html":{}}}],["without",{"_index":1718,"title":{},"body":{"index.html":{}}}],["work",{"_index":133,"title":{},"body":{"components/AboutComponent.html":{},"components/EditTaskComponent.html":{},"index.html":{}}}],["wrapper",{"_index":614,"title":{},"body":{"components/CompleteTasksTableComponent.html":{},"modules/CoreModule.html":{},"components/PendingTasksTableComponent.html":{},"modules/TasksModule.html":{}}}],["ye",{"_index":676,"title":{},"body":{"injectables/ConsoleLoggerService.html":{},"injectables/HttpService.html":{},"injectables/LoggerService.html":{}}}],["yearli",{"_index":1290,"title":{},"body":{"classes/Task.html":{},"components/TaskFormComponent.html":{},"index.html":{}}}],["yellow",{"_index":902,"title":{},"body":{"components/EditTaskComponent.html":{}}}],["zone.j",{"_index":1597,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":283,"title":{},"body":{"modules/AboutModule.html":{},"modules/AppModule.html":{},"modules/CompleteTaskModule.html":{},"modules/ConfirmDeleteTaskModule.html":{},"modules/CreateTaskModule.html":{},"modules/EditTaskModule.html":{},"modules/FooterModule.html":{},"modules/HeaderModule.html":{},"modules/SidenavTasksModule.html":{},"modules/TaskFormModule.html":{},"modules/TasksButtonBarModule.html":{},"modules/TasksButtonsModule.html":{},"modules/TasksDialogModule.html":{},"modules/TasksFilterModule.html":{},"modules/TasksModule.html":{},"modules/TasksTableModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AboutComponent.html":{"url":"components/AboutComponent.html","title":"component - AboutComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AboutComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/about/about.component.ts\n\n\n    \n        Description\n    \n    \n        Creates the about page for the app.\n\n    \n\n\n    \n        Implements\n    \n    \n                AfterViewInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                about\n            \n\n            \n                styleUrls\n                about.component.css\n            \n\n\n\n            \n                templateUrl\n                ./about.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                aboutElement\n                            \n                            \n                                displayScrollToTop\n                            \n                            \n                                    Private\n                                sub\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngAfterViewInit\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                onAboutScroll\n                            \n                            \n                                scrollToTop\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(route: ActivatedRoute)\n                    \n                \n                        \n                            \n                                Defined in src/app/about/about.component.ts:21\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                    ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngAfterViewInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngAfterViewInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/about/about.component.ts:38\n                            \n                        \n\n\n                \n                    \n                            Initialize subscription for route fragment after view is initialized\nso element at fragment can be scrolled into view (if fragment present).\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnDestroy\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnDestroy()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/about/about.component.ts:30\n                            \n                        \n\n\n                \n                    \n                            Unsubscribe from any subscriptions.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            onAboutScroll\n                            \n                            \n                        \n                    \n                \n                \n                    \nonAboutScroll()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/about/about.component.ts:55\n                            \n                        \n\n\n                \n                    \n                            Handles setting displayScrollToTop on window scroll event.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            scrollToTop\n                            \n                            \n                        \n                    \n                \n                \n                    \nscrollToTop()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/about/about.component.ts:67\n                            \n                        \n\n\n                \n                    \n                            Scrolls the about div to the top.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            aboutElement\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        aboutElement:     ElementRef\n\n                    \n                \n                    \n                        \n                            Type :     ElementRef\n\n                        \n                    \n                    \n                        \n                            Decorators : ViewChild\n                        \n                    \n                        \n                            \n                                    Defined in src/app/about/about.component.ts:17\n                            \n                        \n\n                \n                    \n                        Reference to the element that scrolls in the component. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            displayScrollToTop\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        displayScrollToTop:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/about/about.component.ts:19\n                            \n                        \n\n                \n                    \n                        Boolean to indicate whether the button to scroll to top should display (defaults to false). \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            sub\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        sub:     Subscription\n\n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/about/about.component.ts:21\n                            \n                        \n\n                \n                    \n                        The subscriptions for the component. \n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { AfterViewInit, Component, ElementRef, OnDestroy, ViewChild } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { Subscription } from 'rxjs';\n\n/**\n * Creates the about page for the app.\n */\n@Component({\n    selector: 'about',\n    templateUrl: './about.component.html',\n    styleUrls: ['./about.component.css']\n})\nexport class AboutComponent implements AfterViewInit, OnDestroy {\n\n    /** Reference to the element that scrolls in the component. */\n    @ViewChild('aboutScroll') aboutElement: ElementRef;\n    /** Boolean to indicate whether the button to scroll to top should display (defaults to false). */\n    displayScrollToTop: boolean;\n    /** The subscriptions for the component. */\n    private sub: Subscription;\n\n    constructor(private route:ActivatedRoute) {\n        this.displayScrollToTop = false;\n    }\n\n    /**\n     * Unsubscribe from any subscriptions.\n     */\n    ngOnDestroy() {\n        this.sub.unsubscribe();\n    }\n\n    /**\n     * Initialize subscription for route fragment after view is initialized\n     * so element at fragment can be scrolled into view (if fragment present).\n     */\n    ngAfterViewInit() {\n        this.sub = new Subscription();\n\n        // Add support for handling anchor tags based on answers from issue below.\n        // https://github.com/angular/angular/issues/6595\n        const sub = this.route.fragment.subscribe(f => {\n            const element = document.querySelector('#' + f);\n            if(element) {\n                element.scrollIntoView({behavior:'smooth'});\n            }\n        });\n        this.sub.add(sub);\n    }\n\n    /**\n     * Handles setting displayScrollToTop on window scroll event.\n     */\n    onAboutScroll() {\n        if (this.aboutElement.nativeElement.scrollTop > 100) {\n            this.displayScrollToTop = true;\n        } \n        else if (this.aboutElement.nativeElement.scrollTop \n    \n\n    \n        \n    \n        MyTasks\n\n        TABLE OF CONTENTS\n\n        \n            Description of Application\n            Create Task\n            Complete Task\n            Delete Task\n            Filter Tasks\n        \n\n        1. Description of Application\n        \n            MyTasks is a simple application meant to create and manage Tasks. Tasks can be\n            modified, completed, and deleted. Tasks are displayed in tables and are separated \n            by state; pending or complete. By default tasks are sorted by due date in \n            ascending order.\n        \n        \n            The UI is designed to be responsive, and meant to work across a variety of devices. Some\n            of the enhanced functionality is limited on smaller devices (due to the smaller screen \n            space and lack of mouse input), so it is recommended to use a desktop or laptop if \n            available. Additionally smaller screen sizes have only been emulated through chrome \n            devtools and have not been fully tested.\n        \n        \n            *All screenshots below were taken on a desktop.\n        \n\n        2. Create Task\n\n        \n            To create a Task click the \n            button located in the sidenav menu on the left hand side of the screen. This \n            will open a modal dialog where you can enter the details for a Task. You must \n            enter a name, description, and due date as shown below.\n        \n\n        \n            \n        \n\n        \n            All Tasks will default to a \"Low\" priority, but you may modify this using the\n            \"Priority\" select drop down provided on the form. You may also create a \n            repeating Task by selecting anything other than \"Does not repeat\" in the \n            \"Repeat\" field at the bottom of the form. This will enable the \"End After\" \n            field where you can enter the number of times you would like this Task to \n            repeat. A sample repeating Task is shown below.\n        \n\n        \n            \n        \n\n        \n            Click the  \n            button once you have completely filled out the form to finish creating your Task.\n        \n\n        3. Complete Task\n\n        \n            To complete a Task click the row of the desired Task in the table to modify\n            the Task. This will open a page as seen below where you can complete and/or \n            update the the details of the Task.\n        \n\n        \n            \n        \n\n        \n            Click the  button\n            in the button bar above the Task details to open the dialog to complete a Task. \n            You must enter the date the Task is completed as displayed below. Then click the\n            \n            button to finish completing the Task.\n        \n\n        \n            \n        \n\n        \n            Additionally you may mark one or more Tasks complete from the pending Tasks table,\n            as long as they were all complete on the same date. Select the checkbox \n            of one or more Tasks to enable the  \n            button in the button bar above the table. Then click the \n            \n            button to display the same dialog as above and complete all selected Tasks.  \n        \n\n        4. Delete Task\n\n        \n            To delete a Task click the row of the desired Task in the table as in the \"Complete\n            Task\" section. Then click the \n            button in the button bar displayed above the Task details. This will open a confirmation\n            dialog as displayed below.\n        \n\n        \n            \n        \n\n        \n            You must click the  \n            button to delete the Task.\n        \n\n        \n            Additionally you may delete one or more Tasks from the table views (pending\n            or complete). Select the checkbox of one or more Tasks to enable the \n             \n            button in the button bar above the table. Click the \n            \n            button to display the same dialog as above and delete all selected Tasks.  \n        \n\n        5. Filter Tasks\n\n        \n            Tasks can be filtered using the \n             \n            input in the header. You may filter Tasks on any visible column (including due date \n            and date completed). To sort by date click the \n            \n            button to open the date picker and select the desired date. Additionally, pending \n            Tasks can be filtered using the sidenav menu items to filter Tasks over due, due \n            today, and due tomorrow. *Note the menu items are just triggering special keyword \n            filters which can also be used in the \n            \n            input. The actual filters are \"overdue\", \"today\", and \"tomorrow\". You may also\n            enter the current date in the search field and you will see the same results as\n            \"today\".\n        \n    \n \n\n    \n    \n    \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            MyTasks        TABLE OF CONTENTS                    Description of Application            Create Task            Complete Task            Delete Task            Filter Tasks                1. Description of Application                    MyTasks is a simple application meant to create and manage Tasks. Tasks can be            modified, completed, and deleted. Tasks are displayed in tables and are separated             by state; pending or complete. By default tasks are sorted by due date in             ascending order.                            The UI is designed to be responsive, and meant to work across a variety of devices. Some            of the enhanced functionality is limited on smaller devices (due to the smaller screen             space and lack of mouse input), so it is recommended to use a desktop or laptop if             available. Additionally smaller screen sizes have only been emulated through chrome             devtools and have not been fully tested.                            *All screenshots below were taken on a desktop.                2. Create Task                    To create a Task click the             button located in the sidenav menu on the left hand side of the screen. This             will open a modal dialog where you can enter the details for a Task. You must             enter a name, description, and due date as shown below.                                                        All Tasks will default to a \"Low\" priority, but you may modify this using the            \"Priority\" select drop down provided on the form. You may also create a             repeating Task by selecting anything other than \"Does not repeat\" in the             \"Repeat\" field at the bottom of the form. This will enable the \"End After\"             field where you can enter the number of times you would like this Task to             repeat. A sample repeating Task is shown below.                                                        Click the              button once you have completely filled out the form to finish creating your Task.                3. Complete Task                    To complete a Task click the row of the desired Task in the table to modify            the Task. This will open a page as seen below where you can complete and/or             update the the details of the Task.                                                        Click the  button            in the button bar above the Task details to open the dialog to complete a Task.             You must enter the date the Task is completed as displayed below. Then click the                        button to finish completing the Task.                                                        Additionally you may mark one or more Tasks complete from the pending Tasks table,            as long as they were all complete on the same date. Select the checkbox             of one or more Tasks to enable the              button in the button bar above the table. Then click the                         button to display the same dialog as above and complete all selected Tasks.                  4. Delete Task                    To delete a Task click the row of the desired Task in the table as in the \"Complete            Task\" section. Then click the             button in the button bar displayed above the Task details. This will open a confirmation            dialog as displayed below.                                                        You must click the              button to delete the Task.                            Additionally you may delete one or more Tasks from the table views (pending            or complete). Select the checkbox of one or more Tasks to enable the                          button in the button bar above the table. Click the                         button to display the same dialog as above and delete all selected Tasks.                  5. Filter Tasks                    Tasks can be filtered using the                          input in the header. You may filter Tasks on any visible column (including due date             and date completed). To sort by date click the                         button to open the date picker and select the desired date. Additionally, pending             Tasks can be filtered using the sidenav menu items to filter Tasks over due, due             today, and due tomorrow. *Note the menu items are just triggering special keyword             filters which can also be used in the                         input. The actual filters are \"overdue\", \"today\", and \"tomorrow\". You may also            enter the current date in the search field and you will see the same results as            \"today\".                         '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ButtonBarComponent', 'selector': 'button-bar'},{'name': 'ButtonsComponent', 'selector': 'buttons'},{'name': 'CompleteTaskComponent', 'selector': 'complete-task'},{'name': 'CompleteTasksTableComponent', 'selector': 'complete-tasks-table'},{'name': 'ConfirmDeleteTaskComponent', 'selector': 'confirm-delete'},{'name': 'CreateTaskComponent', 'selector': 'create-task'},{'name': 'EditTaskComponent', 'selector': 'edit-task'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'ListItemComponent', 'selector': 'list-item'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'PendingTasksTableComponent', 'selector': 'pending-tasks-table'},{'name': 'RecurringTaskComponent', 'selector': 'recurring-task'},{'name': 'SidenavTasksComponent', 'selector': 'sidenav-tasks'},{'name': 'TaskFormComponent', 'selector': 'task-form'},{'name': 'TasksComponent', 'selector': 'tasks-root'},{'name': 'TasksFilterComponent', 'selector': 'tasks-filter'},{'name': 'TasksTableComponent', 'selector': 'tasks-table'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AboutComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AboutModule.html":{"url":"modules/AboutModule.html","title":"module - AboutModule","body":"\n                   \n\n\n\n\n  Modules\n  AboutModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AboutModule\n\n\n\ncluster_AboutModule_declarations\n\n\n\ncluster_AboutModule_imports\n\n\n\n\nAboutComponent\n\nAboutComponent\n\n\n\nAboutModule\n\nAboutModule\n\nAboutModule -->\n\nAboutComponent->AboutModule\n\n\n\n\n\nAboutRoutingModule\n\nAboutRoutingModule\n\nAboutModule -->\n\nAboutRoutingModule->AboutModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/about/about.module.ts\n        \n\n\n            \n                Description\n            \n            \n                Defines the components and modules required for the about page.\n\n            \n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                AboutComponent\n                            \n                    \n                \n                \n                    EntryComponents\n                    \n                            \n                                AboutComponent\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    AboutRoutingModule\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        /* angular libraries */\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { MatButtonModule } from '@angular/material';\n\n/* fontawesome */\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\nimport { library } from '@fortawesome/fontawesome-svg-core'\nimport { faAngleUp } from '@fortawesome/free-solid-svg-icons';\n\n// Add icons to library for convenient access in components\nlibrary.add(faAngleUp);\n\n/* module */\nimport { AboutComponent } from './about.component';\nimport { AboutRoutingModule } from './about.routing';\n\n/**\n * Defines the components and modules required for the about page.\n */\n@NgModule({\n    declarations: [\n        AboutComponent\n    ],\n    imports: [\n        /* angular libraries */\n        CommonModule,\n        FlexLayoutModule,\n        MatButtonModule,\n\n        FontAwesomeModule,\n        \n        AboutRoutingModule\n    ],\n    entryComponents: [\n        AboutComponent\n    ]\n})\nexport class AboutModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AboutRoutingModule.html":{"url":"modules/AboutRoutingModule.html","title":"module - AboutRoutingModule","body":"\n                   \n\n\n\n\n  Modules\n  AboutRoutingModule\n\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/about/about.routing.ts\n        \n\n\n        \n\n        \n            \n            \n        \n    \n\n\n    \n        /* angular libraries */\nimport { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n/* About module components */\nimport { AboutComponent } from './about.component';\n\n/* The routes within the About module. Defaults to the AboutComponent. */\nconst routes: Routes = [\n    {\n        path: 'about',\n        component: AboutComponent\n    }\n];\n\n/**\n * The router module for the About module.\n */\n@NgModule({\n    imports: [RouterModule.forChild(routes)],\n    exports: [RouterModule]\n})\nexport class AboutRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n    \n        Description\n    \n    \n        Creates the main layout for the application. The main layout currently\nconsists of the header, side menu, footer, and router-outlet.\n\n    \n\n\n    \n        Implements\n    \n    \n                OnDestroy\n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                styleUrls\n                app.component.css\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                loading\n                            \n                            \n                                    Private\n                                sub\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(changeDetectorRef: ChangeDetectorRef, loaderService: LoaderService)\n                    \n                \n                        \n                            \n                                Defined in src/app/app.component.ts:22\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        changeDetectorRef\n                                                  \n                                                        \n                                                                    ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        loaderService\n                                                  \n                                                        \n                                                                    LoaderService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnDestroy\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnDestroy()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/app.component.ts:32\n                            \n                        \n\n\n                \n                    \n                            Unsubscribe from any subscriptions.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/app.component.ts:39\n                            \n                        \n\n\n                \n                    \n                            Initialize the component.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loading\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        loading:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:20\n                            \n                        \n\n                \n                    \n                        Boolean value to indicate when the application is loading something. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            sub\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        sub:     Subscription\n\n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:22\n                            \n                        \n\n                \n                    \n                        The subscriptions for the component. \n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnDestroy, OnInit, ChangeDetectorRef } from '@angular/core';\nimport { Subscription } from 'rxjs';\n\n/* app services */\nimport { LoaderService, LoaderState } from './core/services/loader.service';\n\n/**\n * Creates the main layout for the application. The main layout currently\n * consists of the header, side menu, footer, and router-outlet.\n */\n@Component({\n    selector: 'app-root',\n    templateUrl: './app.component.html',\n    styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnDestroy, OnInit {\n\n    /** Boolean value to indicate when the application is loading something. */\n    loading: boolean;\n    /** The subscriptions for the component. */\n    private sub: Subscription;\n\n    constructor(\n        private changeDetectorRef: ChangeDetectorRef,\n        private loaderService: LoaderService\n    ) {}\n\n    /**\n     * Unsubscribe from any subscriptions.\n     */\n    ngOnDestroy() {\n        this.sub.unsubscribe();\n    }\n\n    /**\n     * Initialize the component.\n     */\n    ngOnInit() {\n        this.sub = new Subscription();        \n        const subLoading = this.loaderService.loaderState.subscribe((loaderState: LoaderState) => {\n            this.loading = loaderState.show;\n            this.changeDetectorRef.detectChanges();\n        });\n        this.sub.add(subLoading);\n    }\n}\n\n    \n\n    \n        \n    \n\n\n\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ButtonBarComponent', 'selector': 'button-bar'},{'name': 'ButtonsComponent', 'selector': 'buttons'},{'name': 'CompleteTaskComponent', 'selector': 'complete-task'},{'name': 'CompleteTasksTableComponent', 'selector': 'complete-tasks-table'},{'name': 'ConfirmDeleteTaskComponent', 'selector': 'confirm-delete'},{'name': 'CreateTaskComponent', 'selector': 'create-task'},{'name': 'EditTaskComponent', 'selector': 'edit-task'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'ListItemComponent', 'selector': 'list-item'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'PendingTasksTableComponent', 'selector': 'pending-tasks-table'},{'name': 'RecurringTaskComponent', 'selector': 'recurring-task'},{'name': 'SidenavTasksComponent', 'selector': 'sidenav-tasks'},{'name': 'TaskFormComponent', 'selector': 'task-form'},{'name': 'TasksComponent', 'selector': 'tasks-root'},{'name': 'TasksFilterComponent', 'selector': 'tasks-filter'},{'name': 'TasksTableComponent', 'selector': 'tasks-table'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n  Modules\n  AppModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nPageNotFoundComponent\n\nPageNotFoundComponent\n\nAppModule -->\n\nPageNotFoundComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAboutModule\n\nAboutModule\n\nAppModule -->\n\nAboutModule->AppModule\n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nCoreModule\n\nCoreModule\n\nAppModule -->\n\nCoreModule->AppModule\n\n\n\n\n\nFooterModule\n\nFooterModule\n\nAppModule -->\n\nFooterModule->AppModule\n\n\n\n\n\nHeaderModule\n\nHeaderModule\n\nAppModule -->\n\nHeaderModule->AppModule\n\n\n\n\n\nTasksModule\n\nTasksModule\n\nAppModule -->\n\nTasksModule->AppModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                AppComponent\n                            \n                            \n                                PageNotFoundComponent\n                            \n                    \n                \n                \n                    EntryComponents\n                    \n                            \n                                PageNotFoundComponent\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    AboutModule\n                            \n                            \n                                    AppRoutingModule\n                            \n                            \n                                    CoreModule\n                            \n                            \n                                    FooterModule\n                            \n                            \n                                    HeaderModule\n                            \n                            \n                                    TasksModule\n                            \n                    \n                \n                \n                    Bootstrap\n                    \n                            \n                                AppComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        /* angular libraries */\nimport { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { MatProgressSpinnerModule } from '@angular/material';\n\n/* app components */\nimport { AppComponent } from './app.component';\nimport { AppRoutingModule } from './app.routing';\nimport { AboutModule } from './about/about.module';\nimport { PageNotFoundComponent } from './components/page-not-found/page-not-found.component';\nimport { CoreModule } from './core/core.module';\nimport { FooterModule } from './footer/footer.module';\nimport { HeaderModule } from './header/header.module';\nimport { TasksModule } from './tasks/tasks.module'; \n\n@NgModule({\n  declarations: [\n    AppComponent,\n    PageNotFoundComponent\n  ],\n  imports: [\n    /* angular libraries */\n    BrowserModule,\n    MatProgressSpinnerModule,\n\n    /* app modules */\n    AboutModule,\n    CoreModule.forRoot(),\n    FooterModule,\n    HeaderModule,\n    TasksModule.forRoot(),\n    AppRoutingModule\n  ],\n  bootstrap: [AppComponent],\n  entryComponents: [PageNotFoundComponent]\n})\nexport class AppModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppRoutingModule.html":{"url":"modules/AppRoutingModule.html","title":"module - AppRoutingModule","body":"\n                   \n\n\n\n\n  Modules\n  AppRoutingModule\n\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.routing.ts\n        \n\n\n        \n\n        \n            \n            \n        \n    \n\n\n    \n        /* angular libraries */\nimport { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n/* components */\nimport { PageNotFoundComponent } from './components/page-not-found/page-not-found.component';\n\n/* The routes for the app. Defaults to the tasks module at the root. */\nconst appRoutes: Routes = [\n    {\n        path: 'about',\n        loadChildren: './about/about.module#AboutModule'\n    },\n    {\n        path: '',\n        pathMatch: 'full',\n        redirectTo: 'tasks'\n    },\n    {\n        path: '404',\n        component: PageNotFoundComponent\n    },\n    {\n        path: '**',\n        component: PageNotFoundComponent\n    }\n];\n\n/**\n * The router module for the application.\n */\n@NgModule({\n    imports: [RouterModule.forRoot(appRoutes)],\n    exports: [RouterModule]\n})\nexport class AppRoutingModule {};\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ButtonBarComponent.html":{"url":"components/ButtonBarComponent.html","title":"component - ButtonBarComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ButtonBarComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/tasks/button-bar/button-bar.component.ts\n\n\n    \n        Description\n    \n    \n        Creates a bar that consists of the main @link{ButtonsComponent} and\na paginator to page through an array of given Tasks. The capability\nto disable and/or hide buttons on ButtonsComponent is extended through\nthe provided @Inputs that match the @Inputs in the ButtonsComponent.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                button-bar\n            \n\n            \n                styleUrls\n                button-bar.component.css\n            \n\n\n\n            \n                templateUrl\n                ./button-bar.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                paginator\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                disableCompleteButton\n                            \n                            \n                                disableDeleteButton\n                            \n                            \n                                disableEditButton\n                            \n                            \n                                hideCompleteButton\n                            \n                            \n                                hideEditButton\n                            \n                            \n                                hidePageSize\n                            \n                            \n                                length\n                            \n                            \n                                pageSize\n                            \n                            \n                                pageSizeOptions\n                            \n                            \n                                showBackButton\n                            \n                            \n                                showFirstLastButtons\n                            \n                            \n                                tasks\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                click\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/tasks/button-bar/button-bar.component.ts:48\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        disableCompleteButton\n                    \n                    \n                        Boolean to indicate if the complete button should be disabled (enabled by default). \n\n                            \n                            Type:    boolean\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/tasks/button-bar/button-bar.component.ts:22\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        disableDeleteButton\n                    \n                    \n                        Boolean to indicate if the delete button should be disabled (enabled by default). \n\n                            \n                            Type:    boolean\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/tasks/button-bar/button-bar.component.ts:24\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        disableEditButton\n                    \n                    \n                        Boolean to indicate if the edit button should be disabled (enabled by default). \n\n                            \n                            Type:    boolean\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/tasks/button-bar/button-bar.component.ts:26\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        hideCompleteButton\n                    \n                    \n                        Boolean to indicate if the complete button should be hidden (hidden by default). \n\n                            \n                            Type:    boolean\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/tasks/button-bar/button-bar.component.ts:28\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        hideEditButton\n                    \n                    \n                        Boolean to indicate if the edit button should be hidden (visible by default). \n\n                            \n                            Type:    boolean\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/tasks/button-bar/button-bar.component.ts:30\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        hidePageSize\n                    \n                    \n                        Boolean to indicate if the pageSize options in paginator should be hidden (hidden by default). \n\n                            \n                            Type:    boolean\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/tasks/button-bar/button-bar.component.ts:32\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        length\n                    \n                    \n                        The length of the paginator. \n\n                            \n                            Type:    number\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/tasks/button-bar/button-bar.component.ts:34\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        pageSize\n                    \n                    \n                        The size for the paginator. \n\n                            \n                            Type:    number\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/tasks/button-bar/button-bar.component.ts:36\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        pageSizeOptions\n                    \n                    \n                        The size options for pages. \n\n                            \n                            Type:    number[]\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/tasks/button-bar/button-bar.component.ts:38\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        showBackButton\n                    \n                    \n                        Boolean to indicate whether to show the back button (hidden by default). \n\n                            \n                            Type:    boolean\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/tasks/button-bar/button-bar.component.ts:40\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        showFirstLastButtons\n                    \n                    \n                        Boolean to indicate whether to show first and last buttons (hidden by default). \n\n                            \n                            Type:    boolean\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/tasks/button-bar/button-bar.component.ts:42\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        tasks\n                    \n                    \n                        The Task(s) being managed with the buttons. \n\n                            \n                            Type:    Task[]\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/tasks/button-bar/button-bar.component.ts:44\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        click\n                    \n                    \n                        Event emitted when one of the buttons is clicked. \n\n                        $event type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/tasks/button-bar/button-bar.component.ts:46\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            paginator\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        paginator:     MatPaginator\n\n                    \n                \n                    \n                        \n                            Type :     MatPaginator\n\n                        \n                    \n                    \n                        \n                            Decorators : ViewChild\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tasks/button-bar/button-bar.component.ts:48\n                            \n                        \n\n                \n                    \n                        The paginator component. \n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, EventEmitter, Input, Output, ViewChild } from '@angular/core';\nimport { MatPaginator } from '@angular/material';\n\n/* app */\nimport { Task } from '@tasks/shared/models/task.model';\n\n/**\n * Creates a bar that consists of the main @link{ButtonsComponent} and\n * a paginator to page through an array of given Tasks. The capability\n * to disable and/or hide buttons on ButtonsComponent is extended through\n * the provided @Inputs that match the @Inputs in the ButtonsComponent.\n */\n@Component({\n    selector: 'button-bar',\n    templateUrl: './button-bar.component.html',\n    styleUrls: ['./button-bar.component.css']\n})\nexport class ButtonBarComponent { \n\n    /** Boolean to indicate if the complete button should be disabled (enabled by default). */\n    @Input() disableCompleteButton: boolean;\n    /** Boolean to indicate if the delete button should be disabled (enabled by default). */\n    @Input() disableDeleteButton: boolean;\n    /** Boolean to indicate if the edit button should be disabled (enabled by default). */\n    @Input() disableEditButton: boolean;\n    /** Boolean to indicate if the complete button should be hidden (hidden by default). */\n    @Input() hideCompleteButton: boolean;\n    /** Boolean to indicate if the edit button should be hidden (visible by default). */\n    @Input() hideEditButton: boolean;\n    /** Boolean to indicate if the pageSize options in paginator should be hidden (hidden by default). */\n    @Input() hidePageSize: boolean;\n    /** The length of the paginator. */\n    @Input() length: number;\n    /** The size for the paginator. */\n    @Input() pageSize: number;\n    /** The size options for pages. */\n    @Input() pageSizeOptions: number[];\n    /** Boolean to indicate whether to show the back button (hidden by default). */\n    @Input() showBackButton: boolean;\n    /** Boolean to indicate whether to show first and last buttons (hidden by default). */\n    @Input() showFirstLastButtons: boolean;\n    /** The Task(s) being managed with the buttons. */\n    @Input() tasks: Task[];\n    /** Event emitted when one of the buttons is clicked. */\n    @Output() click: EventEmitter;\n    /** The paginator component. */\n    @ViewChild(MatPaginator) paginator: MatPaginator;\n\n    constructor(){\n        this.click = new EventEmitter();\n    }\n}\n\n    \n\n    \n        \n    \n         \n    \n    \n    \n    \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                             '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ButtonBarComponent', 'selector': 'button-bar'},{'name': 'ButtonsComponent', 'selector': 'buttons'},{'name': 'CompleteTaskComponent', 'selector': 'complete-task'},{'name': 'CompleteTasksTableComponent', 'selector': 'complete-tasks-table'},{'name': 'ConfirmDeleteTaskComponent', 'selector': 'confirm-delete'},{'name': 'CreateTaskComponent', 'selector': 'create-task'},{'name': 'EditTaskComponent', 'selector': 'edit-task'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'ListItemComponent', 'selector': 'list-item'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'PendingTasksTableComponent', 'selector': 'pending-tasks-table'},{'name': 'RecurringTaskComponent', 'selector': 'recurring-task'},{'name': 'SidenavTasksComponent', 'selector': 'sidenav-tasks'},{'name': 'TaskFormComponent', 'selector': 'task-form'},{'name': 'TasksComponent', 'selector': 'tasks-root'},{'name': 'TasksFilterComponent', 'selector': 'tasks-filter'},{'name': 'TasksTableComponent', 'selector': 'tasks-table'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ButtonBarComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ButtonsComponent.html":{"url":"components/ButtonsComponent.html","title":"component - ButtonsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ButtonsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/tasks/buttons/buttons.component.ts\n\n\n    \n        Description\n    \n    \n        Creates the main buttons to manage one or more Tasks. The main management\ncapabilities for Tasks include completing, deleting, and editing. Any \nbutton can be disabled and/or hidden using the provided @Inputs.\n\n    \n\n\n    \n        Implements\n    \n    \n                OnDestroy\n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                buttons\n            \n\n            \n                styleUrls\n                buttons.component.css\n            \n\n\n\n            \n                templateUrl\n                ./buttons.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                sub\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                openCompleteDialog\n                            \n                            \n                                openConfirmDeleteDialog\n                            \n                            \n                                openEditDialog\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                disableCompleteButton\n                            \n                            \n                                disableDeleteButton\n                            \n                            \n                                disableEditButton\n                            \n                            \n                                hideCompleteButton\n                            \n                            \n                                hideEditButton\n                            \n                            \n                                tasks\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                click\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dialog: MatDialog, router: Router, utilsService: UtilsService)\n                    \n                \n                        \n                            \n                                Defined in src/app/tasks/buttons/buttons.component.ts:40\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        utilsService\n                                                  \n                                                        \n                                                                    UtilsService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        disableCompleteButton\n                    \n                    \n                        Boolean to indicate if the complete button should be disabled (enabled by default). \n\n                            \n                            Type:    boolean\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/tasks/buttons/buttons.component.ts:26\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        disableDeleteButton\n                    \n                    \n                        Boolean to indicate if the delete button should be disabled (enabled by default). \n\n                            \n                            Type:    boolean\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/tasks/buttons/buttons.component.ts:28\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        disableEditButton\n                    \n                    \n                        Boolean to indicate if the edit button should be disabled (enabled by default). \n\n                            \n                            Type:    boolean\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/tasks/buttons/buttons.component.ts:30\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        hideCompleteButton\n                    \n                    \n                        Boolean to indicate if the complete button should be hidden (visible by default). \n\n                            \n                            Type:    boolean\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/tasks/buttons/buttons.component.ts:32\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        hideEditButton\n                    \n                    \n                        Boolean to indicate if the edit button should be hidden (visible by default). \n\n                            \n                            Type:    boolean\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/tasks/buttons/buttons.component.ts:34\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        tasks\n                    \n                    \n                        The Task(s) being managed with the buttons. \n\n                            \n                            Type:    Task[]\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/tasks/buttons/buttons.component.ts:36\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        click\n                    \n                    \n                        Event emitted when one of the buttons is clicked. \n\n                        $event type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/tasks/buttons/buttons.component.ts:38\n                            \n                        \n            \n        \n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnDestroy\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnDestroy()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/tasks/buttons/buttons.component.ts:111\n                            \n                        \n\n\n                \n                    \n                            Unsubscribe from any subscriptions.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/tasks/buttons/buttons.component.ts:118\n                            \n                        \n\n\n                \n                    \n                            Initialize the component.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            openCompleteDialog\n                            \n                            \n                        \n                    \n                \n                \n                    \nopenCompleteDialog(event: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/tasks/buttons/buttons.component.ts:53\n                            \n                        \n\n\n                \n                    \n                            Opens the dialog to complete the selected Task(s).\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        event\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            openConfirmDeleteDialog\n                            \n                            \n                        \n                    \n                \n                \n                    \nopenConfirmDeleteDialog(event: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/tasks/buttons/buttons.component.ts:74\n                            \n                        \n\n\n                \n                    \n                            Opens the dialog to confirm if the selected Task(s) should be deleted.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        event\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            openEditDialog\n                            \n                            \n                        \n                    \n                \n                \n                    \nopenEditDialog(event: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/tasks/buttons/buttons.component.ts:102\n                            \n                        \n\n\n                \n                    \n                            Opens the dialog to edit the selected Task. If the Task is not complete\nand it is a repeating Task, then the RecurringTaskComponent is displayed\nto determine if the user wants to edit the single selected Task or all\nremaining Tasks (including the one selected). Otherwise the basic edit\nTask dialog is rendered.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        event\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            sub\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        sub:     Subscription\n\n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tasks/buttons/buttons.component.ts:40\n                            \n                        \n\n                \n                    \n                        The subscriptions for the component. \n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, EventEmitter, OnDestroy, OnInit, Input, Output } from '@angular/core';\nimport { MatDialog, MatDialogConfig } from \"@angular/material\";\nimport { Router } from '@angular/router';\nimport { Subscription } from 'rxjs';\n\n/* app */\nimport { CompleteTaskComponent } from '@tasks/dialogs/complete-task/complete-task.component';\nimport { ConfirmDeleteTaskComponent } from '@tasks/dialogs/confirm-delete-task/confirm-delete-task.component';\nimport { Task } from '@tasks/shared/models/task.model';\nimport { UtilsService } from '@tasks/shared/services/utils.service';\n\n/**\n * Creates the main buttons to manage one or more Tasks. The main management\n * capabilities for Tasks include completing, deleting, and editing. Any \n * button can be disabled and/or hidden using the provided @Inputs.\n */\n@Component({\n    selector: 'buttons',\n    templateUrl: './buttons.component.html',\n    styleUrls: ['./buttons.component.css']\n})\nexport class ButtonsComponent implements OnDestroy, OnInit { \n\n    /** Boolean to indicate if the complete button should be disabled (enabled by default). */\n    @Input() disableCompleteButton: boolean;\n    /** Boolean to indicate if the delete button should be disabled (enabled by default). */\n    @Input() disableDeleteButton: boolean;\n    /** Boolean to indicate if the edit button should be disabled (enabled by default). */\n    @Input() disableEditButton: boolean;\n    /** Boolean to indicate if the complete button should be hidden (visible by default). */\n    @Input() hideCompleteButton: boolean;\n    /** Boolean to indicate if the edit button should be hidden (visible by default). */\n    @Input() hideEditButton: boolean;\n    /** The Task(s) being managed with the buttons. */\n    @Input() tasks: Task[];\n    /** Event emitted when one of the buttons is clicked. */\n    @Output() click: EventEmitter;\n    /** The subscriptions for the component. */\n    private sub: Subscription;\n\n    constructor(\n        private dialog: MatDialog,\n        private router: Router,\n        private utilsService: UtilsService\n    ){\n        this.click = new EventEmitter();\n    }\n\n    /**\n     * Opens the dialog to complete the selected Task(s).\n     */\n    openCompleteDialog(event) {\n        const dialogConfig = new MatDialogConfig();\n        dialogConfig.width = '50%';\n        dialogConfig.autoFocus = false;\n        dialogConfig.data = { tasks: this.tasks };\n        let completeSelectedDialogRef = this.dialog.open(CompleteTaskComponent, dialogConfig);\n        this.utilsService.fullScreenDialogSub(completeSelectedDialogRef, '50%');\n\n        // subscribe to the completeTask event from the dialog\n        const sub = completeSelectedDialogRef.componentInstance.completeTask.subscribe(() => {\n            this.click.emit(true);\n        });\n        this.sub.add(sub);\n\n        // prevent propagation so parent components do not receive the click event\n        event.stopPropagation();\n    }\n\n    /**\n     * Opens the dialog to confirm if the selected Task(s) should be deleted.\n     */\n    openConfirmDeleteDialog(event) {\n        const dialogConfig = new MatDialogConfig();\n        dialogConfig.width = '50%';\n        dialogConfig.autoFocus = false;\n        dialogConfig.data = { tasks: this.tasks };\n        let confirmDeleteDialogRef = this.dialog.open(ConfirmDeleteTaskComponent, dialogConfig);\n\n        this.utilsService.fullScreenDialogSub(confirmDeleteDialogRef);\n\n        // subscribe to the deleteTask event from the dialog\n        const sub = confirmDeleteDialogRef.componentInstance.deleteTask.subscribe(() => {\n            this.click.emit(true);\n        });\n        this.sub.add(sub);\n\n        // prevent propagation so parent components do not receive the click event\n        event.stopPropagation();\n    }\n\n    /**\n     * Opens the dialog to edit the selected Task. If the Task is not complete\n     * and it is a repeating Task, then the RecurringTaskComponent is displayed\n     * to determine if the user wants to edit the single selected Task or all\n     * remaining Tasks (including the one selected). Otherwise the basic edit\n     * Task dialog is rendered.\n     * \n     * @param event\n     */\n    openEditDialog(event) {\n        this.router.navigate(['tasks', this.tasks[0].id]);\n        // prevent propagation so parent components do not receive the click event\n        event.stopPropagation();\n    }\n\n    /**\n     * Unsubscribe from any subscriptions.\n     */\n    ngOnDestroy() {\n        this.sub.unsubscribe();\n    }\n\n    /**\n     * Initialize the component.\n     */\n    ngOnInit() {\n        this.sub = new Subscription();\n    }\n}\n\n    \n\n    \n        \n    \n    \n    \n\n\n     \n    \n    \n\n\n    \n    \n    \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                     '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ButtonBarComponent', 'selector': 'button-bar'},{'name': 'ButtonsComponent', 'selector': 'buttons'},{'name': 'CompleteTaskComponent', 'selector': 'complete-task'},{'name': 'CompleteTasksTableComponent', 'selector': 'complete-tasks-table'},{'name': 'ConfirmDeleteTaskComponent', 'selector': 'confirm-delete'},{'name': 'CreateTaskComponent', 'selector': 'create-task'},{'name': 'EditTaskComponent', 'selector': 'edit-task'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'ListItemComponent', 'selector': 'list-item'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'PendingTasksTableComponent', 'selector': 'pending-tasks-table'},{'name': 'RecurringTaskComponent', 'selector': 'recurring-task'},{'name': 'SidenavTasksComponent', 'selector': 'sidenav-tasks'},{'name': 'TaskFormComponent', 'selector': 'task-form'},{'name': 'TasksComponent', 'selector': 'tasks-root'},{'name': 'TasksFilterComponent', 'selector': 'tasks-filter'},{'name': 'TasksTableComponent', 'selector': 'tasks-table'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ButtonsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CompleteTaskComponent.html":{"url":"components/CompleteTaskComponent.html","title":"component - CompleteTaskComponent","body":"\n                   \n\n\n\n\n\n  Components\n  CompleteTaskComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/tasks/dialogs/complete-task/complete-task.component.ts\n\n\n    \n        Description\n    \n    \n        Creates a dialog to complete a Task or list of Tasks. If more than one\nTask is completed, then they will all be marked complete with the same\ndate.\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                complete-task\n            \n\n            \n                styleUrls\n                complete-task.component.css\n            \n\n\n\n            \n                templateUrl\n                ./complete-task.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                content\n                            \n                            \n                                dateCompletedForm\n                            \n                            \n                                hint\n                            \n                            \n                                maxDateCompleted\n                            \n                            \n                                    Private\n                                sub\n                            \n                            \n                                tasks\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                cancel\n                            \n                            \n                                checkError\n                            \n                            \n                                complete\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Private\n                                notifyAndClose\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                completeTask\n                            \n                        \n                    \n                \n\n                \n                    \n                        HostBindings\n                    \n                \n                \n                    \n                        \n                            \n                                class.marker-complete-task-dialog\n                            \n                        \n                    \n                \n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(data: any, dialogRef: MatDialogRef, formBuilder: FormBuilder, logger: LoggerService, taskService: TaskService)\n                    \n                \n                        \n                            \n                                Defined in src/app/tasks/dialogs/complete-task/complete-task.component.ts:44\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                    any\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialogRef\n                                                  \n                                                        \n                                                                    MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        formBuilder\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        logger\n                                                  \n                                                        \n                                                                    LoggerService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        taskService\n                                                  \n                                                        \n                                                                    TaskService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        completeTask\n                    \n                    \n                        Event emitted when the Task(s) are complete. \n\n                        $event type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/tasks/dialogs/complete-task/complete-task.component.ts:29\n                            \n                        \n            \n        \n\n    \n    HostBindings        \n            \n                \n                    \n                        \n                        \n                            \n                            class.marker-complete-task-dialog\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        class.marker-complete-task-dialog:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tasks/dialogs/complete-task/complete-task.component.ts:27\n                            \n                        \n\n\n            \n        \n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            cancel\n                            \n                            \n                        \n                    \n                \n                \n                    \ncancel()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/tasks/dialogs/complete-task/complete-task.component.ts:57\n                            \n                        \n\n\n                \n                    \n                            Cancels the Task edit and closes the dialog.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            checkError\n                            \n                            \n                        \n                    \n                \n                \n                    \ncheckError(param: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/tasks/dialogs/complete-task/complete-task.component.ts:68\n                            \n                        \n\n\n                \n                    \n                            Returns true if the form is invalid and the property of the given form is dirty or it has\nbeen touched.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        param\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            complete\n                            \n                            \n                        \n                    \n                \n                \n                    \ncomplete()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/tasks/dialogs/complete-task/complete-task.component.ts:75\n                            \n                        \n\n\n                \n                    \n                            Completes the Task(s).\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnDestroy\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnDestroy()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/tasks/dialogs/complete-task/complete-task.component.ts:98\n                            \n                        \n\n\n                \n                    \n                            Unsubscribe from any subscriptions.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/tasks/dialogs/complete-task/complete-task.component.ts:105\n                            \n                        \n\n\n                \n                    \n                            Initialize the component.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            notifyAndClose\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        notifyAndClose(msg: string, task: Task)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/tasks/dialogs/complete-task/complete-task.component.ts:137\n                            \n                        \n\n\n                \n                    \n                            Displays a snackBar with the given message, emits the given Task to this\ncomponents parent, and closes this dialog.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        msg\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                The message to display to the user.\n\n                                                        \n                                                \n                                                \n                                                        task\n                                                        \n                                                                    Task\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            content\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        content:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tasks/dialogs/complete-task/complete-task.component.ts:31\n                            \n                        \n\n                \n                    \n                        The text to display in the content along with the date completed field. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            dateCompletedForm\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        dateCompletedForm:     FormGroup\n\n                    \n                \n                    \n                        \n                            Type :     FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tasks/dialogs/complete-task/complete-task.component.ts:33\n                            \n                        \n\n                \n                    \n                        The form for the dateCompleted property. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            hint\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        hint:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tasks/dialogs/complete-task/complete-task.component.ts:35\n                            \n                        \n\n                \n                    \n                        The text to display for the dateCompleted hint. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            maxDateCompleted\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        maxDateCompleted:     Date\n\n                    \n                \n                    \n                        \n                            Type :     Date\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tasks/dialogs/complete-task/complete-task.component.ts:38\n                            \n                        \n\n                \n                    \n                        The max date a Task can be marked as complete (set to current date; it doesn't \nmake a lot of sense to allow user to mark a task complete in the future).\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            sub\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        sub:     Subscription\n\n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tasks/dialogs/complete-task/complete-task.component.ts:44\n                            \n                        \n\n                \n                    \n                        The subscriptions for the component. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            tasks\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        tasks:     Task[]\n\n                    \n                \n                    \n                        \n                            Type :     Task[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tasks/dialogs/complete-task/complete-task.component.ts:40\n                            \n                        \n\n                \n                    \n                        The Task(s) to complete. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        title:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tasks/dialogs/complete-task/complete-task.component.ts:42\n                            \n                        \n\n                \n                    \n                        The title text for the dialog. \n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import * as moment from 'moment';\n\n/* angular libraries */\nimport { Component, EventEmitter, HostBinding, Inject, OnDestroy, OnInit, Output } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\nimport { Subscription } from 'rxjs';\n\n/* app */\nimport { LoggerService } from 'app/core/services/logger.service';\nimport { Task } from '@tasks/shared/models/task.model';\nimport { TaskService} from '@tasks/shared/services/task.service';\n\n/**\n * Creates a dialog to complete a Task or list of Tasks. If more than one\n * Task is completed, then they will all be marked complete with the same\n * date.\n */\n@Component({\n    selector: 'complete-task',\n    templateUrl: './complete-task.component.html',\n    styleUrls: ['./complete-task.component.css']\n})\nexport class CompleteTaskComponent implements OnInit, OnDestroy {\n\n    @HostBinding('class.marker-complete-task-dialog') classMarker : boolean = true;\n    /** Event emitted when the Task(s) are complete. */\n    @Output() completeTask: EventEmitter = new EventEmitter();\n    /** The text to display in the content along with the date completed field. */\n    content: string;\n    /** The form for the dateCompleted property. */\n    dateCompletedForm: FormGroup;\n    /** The text to display for the dateCompleted hint. */\n    hint: string;\n    /** The max date a Task can be marked as complete (set to current date; it doesn't \n        make a lot of sense to allow user to mark a task complete in the future).*/\n    maxDateCompleted: Date;\n    /** The Task(s) to complete. */\n    tasks: Task[];\n    /** The title text for the dialog. */\n    title: string;\n    /** The subscriptions for the component. */\n    private sub: Subscription;\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private data:any,\n        private dialogRef: MatDialogRef,\n        private formBuilder: FormBuilder,\n        private logger: LoggerService,\n        private taskService: TaskService\n    ) {}\n\n    /**\n     * Cancels the Task edit and closes the dialog.\n     */\n    cancel() {\n        this.dialogRef.close();\n    }\n\n    /**\n     * Returns true if the form is invalid and the property of the given form is dirty or it has\n     * been touched.\n     * \n     * @param form The form to validate.\n     * @param property The property that was updated.\n     */\n    checkError(param: string) {\n        return this.dateCompletedForm.get(param).invalid && (this.dateCompletedForm.get(param).dirty || this.dateCompletedForm.get(param).touched);      \n    }\n\n    /**\n     * Completes the Task(s).\n     */\n    complete() {\n        let properties: Partial = {\n            dateCompleted: this.dateCompletedForm.controls['dateCompleted'].value\n        }\n\n        if(this.tasks.length > 1) {\n            let ids: number[] = this.tasks.map((task: Task) => task.id);\n            const sub = this.taskService.completeAll(ids, properties).subscribe((tasks: Task[]) => {\n                this.notifyAndClose('Tasks Completed Successfully', tasks[0]);\n            });\n            this.sub.add(sub);\n        }\n        else {\n            const sub = this.taskService.complete(this.tasks[0], properties).subscribe((task: Task) => {\n                this.notifyAndClose('Task Completed Successfully', task);\n            });\n            this.sub.add(sub);\n        }\n    }\n\n    /**\n     * Unsubscribe from any subscriptions.\n     */\n    ngOnDestroy() {\n        this.sub.unsubscribe();\n    }\n\n    /**\n     * Initialize the component.\n     */\n    ngOnInit() {\n        this.maxDateCompleted = moment().startOf('day').utc().toDate();\n        this.sub = new Subscription();\n        this.tasks = this.data.tasks;\n        if(this.tasks.length > 1) { \n            this.content = 'Enter the date the Tasks are completed. All Tasks will get the same date completed.';\n            this.hint = 'The date the tasks are completed';\n            this.title = 'Complete Tasks';\n        }\n        else {\n            this.content = 'Enter the date the Task is completed.';\n            this.hint = 'The date the task is completed';\n            this.title = 'Complete Task';\n        }\n\n        this.dateCompletedForm = this.formBuilder.group({\n            dateCompleted: [\n                {\n                    value: '',\n                    disabled: false\n                },\n                [Validators.required]\n            ]\n        });\n    }\n\n    /**\n     * Displays a snackBar with the given message, emits the given Task to this\n     * components parent, and closes this dialog.\n     * \n     * @param msg The message to display to the user.\n     */\n    private notifyAndClose(msg: string, task: Task): void {\n        this.logger.info(`CompleteTaskComponent: ${msg}`, task);\n        this.completeTask.emit(task);\n        this.dialogRef.close(msg);\n    }\n}\n\n    \n\n    \n        \n    {{title}}\n\n\n    {{content}}\n    \n        \n        \n            Date Completed\n            \n            \n            You must enter a date the task was completed\n            {{hint}}\n        \n        \n    \n\n\n    Cancel\n    \n        \n             \n            Complete\n        \n    \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    {{title}}    {{content}}                                Date Completed                                    You must enter a date the task was completed            {{hint}}                        Cancel                                     Complete            '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ButtonBarComponent', 'selector': 'button-bar'},{'name': 'ButtonsComponent', 'selector': 'buttons'},{'name': 'CompleteTaskComponent', 'selector': 'complete-task'},{'name': 'CompleteTasksTableComponent', 'selector': 'complete-tasks-table'},{'name': 'ConfirmDeleteTaskComponent', 'selector': 'confirm-delete'},{'name': 'CreateTaskComponent', 'selector': 'create-task'},{'name': 'EditTaskComponent', 'selector': 'edit-task'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'ListItemComponent', 'selector': 'list-item'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'PendingTasksTableComponent', 'selector': 'pending-tasks-table'},{'name': 'RecurringTaskComponent', 'selector': 'recurring-task'},{'name': 'SidenavTasksComponent', 'selector': 'sidenav-tasks'},{'name': 'TaskFormComponent', 'selector': 'task-form'},{'name': 'TasksComponent', 'selector': 'tasks-root'},{'name': 'TasksFilterComponent', 'selector': 'tasks-filter'},{'name': 'TasksTableComponent', 'selector': 'tasks-table'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CompleteTaskComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CompleteTaskModule.html":{"url":"modules/CompleteTaskModule.html","title":"module - CompleteTaskModule","body":"\n                   \n\n\n\n\n  Modules\n  CompleteTaskModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_CompleteTaskModule\n\n\n\ncluster_CompleteTaskModule_declarations\n\n\n\n\nCompleteTaskComponent\n\nCompleteTaskComponent\n\n\n\nCompleteTaskModule\n\nCompleteTaskModule\n\nCompleteTaskModule -->\n\nCompleteTaskComponent->CompleteTaskModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/tasks/dialogs/complete-task/complete-task.module.ts\n        \n\n\n            \n                Description\n            \n            \n                Defines the components, services, and modules required to complete Tasks.\n\n            \n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                CompleteTaskComponent\n                            \n                    \n                \n                \n                    EntryComponents\n                    \n                            \n                                CompleteTaskComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        /* angular libraries */\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatButtonModule, MatDatepickerModule, MatDialogModule, MatFormFieldModule, MatInputModule, MatNativeDateModule } from '@angular/material';\nimport { RouterModule } from '@angular/router';\n\n/* fontawesome */\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\nimport { library } from '@fortawesome/fontawesome-svg-core'\nimport { faCheckSquare } from '@fortawesome/free-regular-svg-icons';\nimport { faCheck } from '@fortawesome/free-solid-svg-icons';\n\n// Add icons to library for convenient access in components\nlibrary.add(faCheck, faCheckSquare);\n\n/* module */\nimport { CompleteTaskComponent } from '@tasks/dialogs/complete-task/complete-task.component';\n\n/**\n * Defines the components, services, and modules required to complete Tasks.\n */\n@NgModule({\n    declarations: [\n        CompleteTaskComponent,\n    ],\n    imports: [\n        /* angular libraries */\n        CommonModule,\n        FlexLayoutModule,\n        FormsModule,\n        MatButtonModule,\n        MatDatepickerModule,\n        MatDialogModule,\n        MatFormFieldModule,\n        MatInputModule,\n        MatNativeDateModule,\n        ReactiveFormsModule,\n        RouterModule,\n\n        FontAwesomeModule\n    ],\n    entryComponents: [\n        CompleteTaskComponent,\n    ]\n})\nexport class CompleteTaskModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CompleteTasksTableComponent.html":{"url":"components/CompleteTasksTableComponent.html","title":"component - CompleteTasksTableComponent","body":"\n                   \n\n\n\n\n\n  Components\n  CompleteTasksTableComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/tasks/table/complete-tasks-table.component.ts\n\n\n    \n        Description\n    \n    \n        A wrapper for the TasksTableComponent which only displays complete Tasks.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                complete-tasks-table\n            \n\n            \n                styleUrls\n                complete-tasks-table.component.css\n            \n\n\n\n            \n                templateUrl\n                ./complete-tasks-table.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                completedTasks\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            completedTasks\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        completedTasks:     TasksTableComponent\n\n                    \n                \n                    \n                        \n                            Type :     TasksTableComponent\n\n                        \n                    \n                    \n                        \n                            Decorators : ViewChild\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tasks/table/complete-tasks-table.component.ts:18\n                            \n                        \n\n                \n                    \n                        The table containing the complete Tasks. \n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, ViewChild } from '@angular/core';\n\n/* app */\nimport { TasksTableComponent } from '@tasks/table/tasks-table.component';\n\n/**\n * A wrapper for the TasksTableComponent which only displays complete Tasks.\n */\n@Component({\n    selector: 'complete-tasks-table',\n    templateUrl: './complete-tasks-table.component.html',\n    styleUrls: ['./complete-tasks-table.component.css']\n})\nexport class CompleteTasksTableComponent {\n\n    /** The table containing the complete Tasks. */\n    @ViewChild('completedTasks') completedTasks: TasksTableComponent;\n}\n\n    \n\n    \n        \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ButtonBarComponent', 'selector': 'button-bar'},{'name': 'ButtonsComponent', 'selector': 'buttons'},{'name': 'CompleteTaskComponent', 'selector': 'complete-task'},{'name': 'CompleteTasksTableComponent', 'selector': 'complete-tasks-table'},{'name': 'ConfirmDeleteTaskComponent', 'selector': 'confirm-delete'},{'name': 'CreateTaskComponent', 'selector': 'create-task'},{'name': 'EditTaskComponent', 'selector': 'edit-task'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'ListItemComponent', 'selector': 'list-item'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'PendingTasksTableComponent', 'selector': 'pending-tasks-table'},{'name': 'RecurringTaskComponent', 'selector': 'recurring-task'},{'name': 'SidenavTasksComponent', 'selector': 'sidenav-tasks'},{'name': 'TaskFormComponent', 'selector': 'task-form'},{'name': 'TasksComponent', 'selector': 'tasks-root'},{'name': 'TasksFilterComponent', 'selector': 'tasks-filter'},{'name': 'TasksTableComponent', 'selector': 'tasks-table'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CompleteTasksTableComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ConfirmDeleteTaskComponent.html":{"url":"components/ConfirmDeleteTaskComponent.html","title":"component - ConfirmDeleteTaskComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ConfirmDeleteTaskComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/tasks/dialogs/confirm-delete-task/confirm-delete-task.component.ts\n\n\n    \n        Description\n    \n    \n        Creates a confirmation dialog to delete a Task or list of Tasks.\n\n    \n\n\n    \n        Implements\n    \n    \n                OnDestroy\n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                confirm-delete\n            \n\n            \n                styleUrls\n                confirm-delete-task.component.css\n            \n\n\n\n            \n                templateUrl\n                ./confirm-delete-task.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                deleteTask\n                            \n                            \n                                sub\n                            \n                            \n                                task\n                            \n                            \n                                tasks\n                            \n                            \n                                text\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                cancel\n                            \n                            \n                                delete\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n                \n                    \n                        HostBindings\n                    \n                \n                \n                    \n                        \n                            \n                                class.marker-confirm-delete-task-dialog\n                            \n                        \n                    \n                \n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(data: any, dialogRef: MatDialogRef, logger: LoggerService, taskService: TaskService)\n                    \n                \n                        \n                            \n                                Defined in src/app/tasks/dialogs/confirm-delete-task/confirm-delete-task.component.ts:31\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                    any\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialogRef\n                                                  \n                                                        \n                                                                    MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        logger\n                                                  \n                                                        \n                                                                    LoggerService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        taskService\n                                                  \n                                                        \n                                                                    TaskService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n    \n    HostBindings        \n            \n                \n                    \n                        \n                        \n                            \n                            class.marker-confirm-delete-task-dialog\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        class.marker-confirm-delete-task-dialog:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tasks/dialogs/confirm-delete-task/confirm-delete-task.component.ts:21\n                            \n                        \n\n\n            \n        \n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            cancel\n                            \n                            \n                        \n                    \n                \n                \n                    \ncancel()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/tasks/dialogs/confirm-delete-task/confirm-delete-task.component.ts:43\n                            \n                        \n\n\n                \n                    \n                            Cancel out of delete and close this dialog\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            delete\n                            \n                            \n                        \n                    \n                \n                \n                    \ndelete()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/tasks/dialogs/confirm-delete-task/confirm-delete-task.component.ts:50\n                            \n                        \n\n\n                \n                    \n                            Delete the task\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnDestroy\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnDestroy()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/tasks/dialogs/confirm-delete-task/confirm-delete-task.component.ts:77\n                            \n                        \n\n\n                \n                    \n                            Unsubscribe from any subscriptions.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/tasks/dialogs/confirm-delete-task/confirm-delete-task.component.ts:84\n                            \n                        \n\n\n                \n                    \n                            Initialize the component.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            deleteTask\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        deleteTask:     \n\n                    \n                \n                    \n                        \n                            Default value : new EventEmitter()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tasks/dialogs/confirm-delete-task/confirm-delete-task.component.ts:29\n                            \n                        \n\n                \n                    \n                        The event emitter when the task is deleted. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sub\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        sub:     Subscription\n\n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tasks/dialogs/confirm-delete-task/confirm-delete-task.component.ts:31\n                            \n                        \n\n                \n                    \n                        The subscriptions for the component. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            task\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        task:     Task\n\n                    \n                \n                    \n                        \n                            Type :     Task\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tasks/dialogs/confirm-delete-task/confirm-delete-task.component.ts:23\n                            \n                        \n\n                \n                    \n                        The task to delete \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            tasks\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        tasks:     Task[]\n\n                    \n                \n                    \n                        \n                            Type :     Task[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tasks/dialogs/confirm-delete-task/confirm-delete-task.component.ts:25\n                            \n                        \n\n                \n                    \n                        The tasks to delete \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            text\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        text:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tasks/dialogs/confirm-delete-task/confirm-delete-task.component.ts:27\n                            \n                        \n\n                \n                    \n                        The confirmation text to display in the dialog. \n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, HostBinding, Inject, EventEmitter, OnDestroy, OnInit } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\nimport { Subscription } from 'rxjs';\n\n/* app */\nimport { LoggerService } from 'app/core/services/logger.service';\nimport { Task } from '@tasks/shared/models/task.model';\nimport { TaskService } from '@tasks/shared/services/task.service';\n\n/**\n * Creates a confirmation dialog to delete a Task or list of Tasks.\n */\n@Component({\n    selector: 'confirm-delete',\n    templateUrl: './confirm-delete-task.component.html',\n    styleUrls: ['./confirm-delete-task.component.css']\n})\nexport class ConfirmDeleteTaskComponent implements OnDestroy, OnInit {\n\n    @HostBinding('class.marker-confirm-delete-task-dialog') classMarker : boolean = true;\n    /** The task to delete */\n    task: Task;\n    /** The tasks to delete */\n    tasks: Task[];\n    /** The confirmation text to display in the dialog. */\n    text: string;\n    /** The event emitter when the task is deleted. */\n    deleteTask = new EventEmitter();\n    /** The subscriptions for the component. */\n    sub: Subscription;\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private data:any,\n        private dialogRef: MatDialogRef,\n        private logger: LoggerService,\n        private taskService: TaskService\n    ) {}\n\n    /**\n     * Cancel out of delete and close this dialog\n     */\n    cancel() {\n        this.dialogRef.close();\n    }\n\n    /**\n     * Delete the task\n     */\n    delete() {\n        if(this.tasks.length > 1) {\n            // send individual requests to delete each Task since bulk delete\n            // is not available through the API.\n            this.tasks.forEach((task: Task, index:number) => {\n                const sub = this.taskService.delete(task).subscribe(() => {\n                    if(index == this.tasks.length - 1) {\n                        this.deleteTask.emit(true);   // emit the deleteTask event to the edit-task parent component \n                        this.dialogRef.close(); // and close the this dialog\n                    }\n                });\n                this.sub.add(sub);\n            });\n        }\n        else {\n            const sub = this.taskService.delete(this.tasks[0]).subscribe((task: Task) => {\n                this.logger.info('ConfirmDeleteTaskComponent: Task deleted successfully', task);\n                this.deleteTask.emit(true);   // emit the deleteTask event to the edit-task parent component \n                this.dialogRef.close(); // and close the this dialog\n            });\n            this.sub.add(sub);\n        }\n    }\n\n    /**\n     * Unsubscribe from any subscriptions.\n     */\n    ngOnDestroy() {\n        this.sub.unsubscribe();\n    }\n\n    /**\n     * Initialize the component.\n     */\n    ngOnInit() {\n        this.sub = new Subscription();\n        this.tasks = this.data.tasks;\n        if(this.tasks.length > 1) {\n            this.text = `Are you sure you want to delete the selected ${this.tasks.length} tasks?`;\n        }\n        else {\n            this.text = 'Are you sure you want to delete the selected task?';\n        }\n    }\n}\n\n    \n\n    \n        \n    \n         \n        Delete Task\n    \n\n\n    {{text}}\n\n\n    Cancel\n    \n        \n             \n            Delete\n        \n    \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                     Delete Task        {{text}}    Cancel                                     Delete            '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ButtonBarComponent', 'selector': 'button-bar'},{'name': 'ButtonsComponent', 'selector': 'buttons'},{'name': 'CompleteTaskComponent', 'selector': 'complete-task'},{'name': 'CompleteTasksTableComponent', 'selector': 'complete-tasks-table'},{'name': 'ConfirmDeleteTaskComponent', 'selector': 'confirm-delete'},{'name': 'CreateTaskComponent', 'selector': 'create-task'},{'name': 'EditTaskComponent', 'selector': 'edit-task'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'ListItemComponent', 'selector': 'list-item'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'PendingTasksTableComponent', 'selector': 'pending-tasks-table'},{'name': 'RecurringTaskComponent', 'selector': 'recurring-task'},{'name': 'SidenavTasksComponent', 'selector': 'sidenav-tasks'},{'name': 'TaskFormComponent', 'selector': 'task-form'},{'name': 'TasksComponent', 'selector': 'tasks-root'},{'name': 'TasksFilterComponent', 'selector': 'tasks-filter'},{'name': 'TasksTableComponent', 'selector': 'tasks-table'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ConfirmDeleteTaskComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ConfirmDeleteTaskModule.html":{"url":"modules/ConfirmDeleteTaskModule.html","title":"module - ConfirmDeleteTaskModule","body":"\n                   \n\n\n\n\n  Modules\n  ConfirmDeleteTaskModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ConfirmDeleteTaskModule\n\n\n\ncluster_ConfirmDeleteTaskModule_declarations\n\n\n\n\nConfirmDeleteTaskComponent\n\nConfirmDeleteTaskComponent\n\n\n\nConfirmDeleteTaskModule\n\nConfirmDeleteTaskModule\n\nConfirmDeleteTaskModule -->\n\nConfirmDeleteTaskComponent->ConfirmDeleteTaskModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/tasks/dialogs/confirm-delete-task/confirm-delete-task.module.ts\n        \n\n\n            \n                Description\n            \n            \n                Defines the components, services, and modules required to delete Tasks.\n\n            \n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                ConfirmDeleteTaskComponent\n                            \n                    \n                \n                \n                    EntryComponents\n                    \n                            \n                                ConfirmDeleteTaskComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        /* angular libraries */\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatButtonModule, MatDialogModule } from '@angular/material';\nimport { RouterModule } from '@angular/router';\n\n/* fontawesome */\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\nimport { library } from '@fortawesome/fontawesome-svg-core'\nimport { faTrash } from '@fortawesome/free-solid-svg-icons';\n\n// Add icons to library for convenient access in components\nlibrary.add(faTrash);\n\n/* module */\nimport { ConfirmDeleteTaskComponent } from '@tasks/dialogs/confirm-delete-task/confirm-delete-task.component';\n\n/**\n * Defines the components, services, and modules required to delete Tasks.\n */\n@NgModule({\n    declarations: [\n        ConfirmDeleteTaskComponent\n    ],\n    imports: [\n        /* angular libraries */\n        CommonModule,\n        FlexLayoutModule,\n        FormsModule,\n        MatButtonModule,\n        MatDialogModule,\n        ReactiveFormsModule,\n        RouterModule,\n\n        FontAwesomeModule\n    ],\n    entryComponents: [\n        ConfirmDeleteTaskComponent\n    ]\n})\nexport class ConfirmDeleteTaskModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ConsoleLoggerService.html":{"url":"injectables/ConsoleLoggerService.html","title":"injectable - ConsoleLoggerService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  ConsoleLoggerService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/console-logger.service.ts\n        \n\n            \n                Description\n            \n            \n                Performs basic logging functions. A getter method is defined for each of the \nproperties which uses the bind() method to create a bound function. The passed\nin function is executed in the given context when the associated property is \nlooked up (so we log the correct source file name and line number).\n\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                invokeConsoleMethod\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            invokeConsoleMethod\n                            \n                            \n                        \n                    \n                \n                \n                    \ninvokeConsoleMethod(type: string, args?: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/services/console-logger.service.ts:58\n                            \n                        \n\n\n                \n                    \n                            Logs to the correct source file name and line number and passes along any\narguments.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        type\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                The console type.\n\n                                                        \n                                                \n                                                \n                                                        args\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            yes\n                                                    \n                                                    \n\n                                                        \n                                                                Any optional args.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        info\n                    \n                \n\n                \n                    \n                        getinfo()\n                    \n                \n                            \n                                \n                                    Defined in src/app/core/services/console-logger.service.ts:21\n                                \n                            \n                    \n                        \n                                Creates bound function for log messages.\n\n\n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        warn\n                    \n                \n\n                \n                    \n                        getwarn()\n                    \n                \n                            \n                                \n                                    Defined in src/app/core/services/console-logger.service.ts:32\n                                \n                            \n                    \n                        \n                                Creates bound function for warn messages.\n\n\n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        error\n                    \n                \n\n                \n                    \n                        geterror()\n                    \n                \n                            \n                                \n                                    Defined in src/app/core/services/console-logger.service.ts:43\n                                \n                            \n                    \n                        \n                                Creates bound function for error messages.\n\n\n                        \n                    \n\n            \n        \n\n    \n\n\n    \n        import { Injectable, isDevMode } from '@angular/core';\n\n/* app */\nimport { Logger } from './logger.service';\n\nconst noop = (): any => undefined;\n\n/**\n * Performs basic logging functions. A getter method is defined for each of the \n * properties which uses the bind() method to create a bound function. The passed\n * in function is executed in the given context when the associated property is \n * looked up (so we log the correct source file name and line number).\n */\n@Injectable()\nexport class ConsoleLoggerService implements Logger {\n\n    /**\n     * Creates bound function for log messages.\n     */\n    get info() {\n        if(isDevMode) {\n            return console.info.bind(console);\n        } else {\n            return noop;\n        }\n    }\n\n    /**\n     * Creates bound function for warn messages.\n     */\n    get warn() {\n        if(isDevMode) {\n            return console.warn.bind(console);\n        } else {\n            return noop;\n        }\n    }\n\n    /**\n     * Creates bound function for error messages.\n     */\n    get error() {\n        if(isDevMode) {\n            return console.error.bind(console);\n        } else {\n            return noop;\n        }\n    }\n  \n    /**\n     * Logs to the correct source file name and line number and passes along any\n     * arguments.\n     * \n     * @param type The console type.\n     * @param args Any optional args.\n     */\n    invokeConsoleMethod(type: string, args?: any): void {\n        const logFn: Function = (console)[type] || console.log || noop;\n        logFn.apply(console, [args]);\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CoreModule.html":{"url":"modules/CoreModule.html","title":"module - CoreModule","body":"\n                   \n\n\n\n\n  Modules\n  CoreModule\n\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/core/core.module.ts\n        \n\n\n            \n                Description\n            \n            \n                The CoreModule defines all the providers for the singleton services\nthat should be loaded when the app starts. This should only be imported\nat the root AppModule.\n\n            \n        \n\n        \n            \n            \n        \n    \n\n\n    \n        /* angular libraries */\nimport { ModuleWithProviders, NgModule, Optional, SkipSelf } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { HttpClientModule } from '@angular/common/http';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { MatProgressSpinnerModule, MatSidenavModule } from '@angular/material';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { RouterModule } from '@angular/router';\n\n/* services */\nimport { ConsoleLoggerService } from './services/console-logger.service';\nimport { HttpService } from './services/http.service';\nimport { LoaderService } from './services/loader.service';\nimport { LoggerService } from './services/logger.service';\n\n/**\n * The CoreModule defines all the providers for the singleton services\n * that should be loaded when the app starts. This should only be imported\n * at the root AppModule.\n */\n@NgModule({\n    imports: [\n        /* angular libraries */\n        BrowserAnimationsModule,\n        CommonModule,\n        FlexLayoutModule,\n        HttpClientModule,\n        MatProgressSpinnerModule,\n        MatSidenavModule,\n        RouterModule\n    ],\n    exports: [\n        /* angular libraries */\n        BrowserAnimationsModule,\n        CommonModule,\n        FlexLayoutModule,\n        HttpClientModule,\n        RouterModule\n    ]\n})\nexport class CoreModule {\n    \n    constructor (@Optional() @SkipSelf() parentModule: CoreModule) {\n        // make sure CoreModule is imported only by one NgModule the AppModule\n        if(parentModule) {\n            throw new Error('CoreModule is already loaded. Import only in AppModule');\n        }\n    }\n\n    /**\n     * Returns a wrapper around this module that associates it with the\n     * TaskService and UtilsService providers so a single instance of each\n     * service can be loaded and shared between any modules in the app.\n     */\n    static forRoot(): ModuleWithProviders {\n        return {\n            ngModule: CoreModule,\n            providers: [\n                HttpService,\n                LoaderService,\n                { provide: LoggerService, useClass: ConsoleLoggerService }\n            ]\n        };\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CreateTaskComponent.html":{"url":"components/CreateTaskComponent.html","title":"component - CreateTaskComponent","body":"\n                   \n\n\n\n\n\n  Components\n  CreateTaskComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/tasks/dialogs/create-task/create-task.component.ts\n\n\n    \n        Description\n    \n    \n        Creates a dialog to create a new Task. The dialog uses the TaskFormComponent\nand subscribes to it's formValid EventEmitter to enable and disable the \n\"create\" button.\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                create-task\n            \n\n            \n                styleUrls\n                create-task.component.css\n            \n\n\n\n            \n                templateUrl\n                ./create-task.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                enableCreateButton\n                            \n                            \n                                    Private\n                                sub\n                            \n                            \n                                taskFormComponent\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                cancel\n                            \n                            \n                                create\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n                \n                    \n                        HostBindings\n                    \n                \n                \n                    \n                        \n                            \n                                class.marker-create-task-dialog\n                            \n                        \n                    \n                \n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dialogRef: MatDialogRef, logger: LoggerService, taskService: TaskService)\n                    \n                \n                        \n                            \n                                Defined in src/app/tasks/dialogs/create-task/create-task.component.ts:30\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dialogRef\n                                                  \n                                                        \n                                                                    MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        logger\n                                                  \n                                                        \n                                                                    LoggerService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        taskService\n                                                  \n                                                        \n                                                                    TaskService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n    \n    HostBindings        \n            \n                \n                    \n                        \n                        \n                            \n                            class.marker-create-task-dialog\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        class.marker-create-task-dialog:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tasks/dialogs/create-task/create-task.component.ts:24\n                            \n                        \n\n\n            \n        \n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            cancel\n                            \n                            \n                        \n                    \n                \n                \n                    \ncancel()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/tasks/dialogs/create-task/create-task.component.ts:41\n                            \n                        \n\n\n                \n                    \n                            Cancels the Task creation and closes the dialog.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            create\n                            \n                            \n                        \n                    \n                \n                \n                    \ncreate()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/tasks/dialogs/create-task/create-task.component.ts:48\n                            \n                        \n\n\n                \n                    \n                            Creates a new task.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnDestroy\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnDestroy()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/tasks/dialogs/create-task/create-task.component.ts:89\n                            \n                        \n\n\n                \n                    \n                            Unsubscribe from any subscriptions.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/tasks/dialogs/create-task/create-task.component.ts:72\n                            \n                        \n\n\n                \n                    \n                            Initialize the component.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            enableCreateButton\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        enableCreateButton:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tasks/dialogs/create-task/create-task.component.ts:26\n                            \n                        \n\n                \n                    \n                        Boolean to indicate whether or not to enable the create button (true to enable button). \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            sub\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        sub:     Subscription\n\n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tasks/dialogs/create-task/create-task.component.ts:30\n                            \n                        \n\n                \n                    \n                        The subscriptions for the component. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            taskFormComponent\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        taskFormComponent:     TaskFormComponent\n\n                    \n                \n                    \n                        \n                            Type :     TaskFormComponent\n\n                        \n                    \n                    \n                        \n                            Decorators : ViewChild\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tasks/dialogs/create-task/create-task.component.ts:28\n                            \n                        \n\n                \n                    \n                        The form to create a Task. \n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, HostBinding, OnInit, OnDestroy, ViewChild } from '@angular/core';\nimport { MatDialogRef } from '@angular/material';\nimport { Subscription } from 'rxjs/Subscription';\n\n/* app */\nimport { LoggerService } from 'app/core/services/logger.service';\nimport { TaskFormComponent } from '@tasks/form/task-form.component';\nimport { Task } from '@tasks/shared/models/task.model';\nimport { TaskService } from '@tasks/shared/services/task.service';\n\n/**\n * Creates a dialog to create a new Task. The dialog uses the TaskFormComponent\n * and subscribes to it's formValid EventEmitter to enable and disable the \n * \"create\" button.\n */\n@Component({\n    selector: 'create-task',\n    templateUrl: './create-task.component.html',\n    styleUrls: ['./create-task.component.css']\n})\nexport class CreateTaskComponent implements OnInit, OnDestroy {\n    \n    @HostBinding('class.marker-create-task-dialog') classMarker : boolean = true;\n    /** Boolean to indicate whether or not to enable the create button (true to enable button). */\n    enableCreateButton: boolean = false;\n    /** The form to create a Task. */\n    @ViewChild(TaskFormComponent) taskFormComponent: TaskFormComponent;\n    /** The subscriptions for the component. */\n    private sub: Subscription;\n\n    constructor(\n        private dialogRef: MatDialogRef,\n        private logger: LoggerService,\n        private taskService: TaskService\n    ) {}\n\n    /**\n     * Cancels the Task creation and closes the dialog.\n     */\n    cancel() {\n        this.dialogRef.close();\n    }\n\n    /**\n     * Creates a new task.\n     */\n    create() {\n        this.dialogRef.disableClose = true;\n\n        // create a Task based on the values from the TaskFormComponent\n        let task: Task = {\n            name: this.taskFormComponent.mainPropertiesForm.get('name').value,\n            priority: this.taskFormComponent.mainPropertiesForm.get('priority').value,\n            description: this.taskFormComponent.mainPropertiesForm.get('description').value,\n            dueDate: this.taskFormComponent.mainPropertiesForm.get('due').value,\n            isComplete: false,\n            repeats: this.taskFormComponent.repeatPropertiesForm.get('repeats').value,\n            endsAfter: this.taskFormComponent.repeatPropertiesForm.get('after').value\n        } as Task;\n\n        const sub = this.taskService.create(task).subscribe((task: Task) => {\n            this.logger.info('CreateTaskComponent: Task created successfully', task);\n            this.dialogRef.close(task);\n        });\n        this.sub.add(sub);\n    }\n\n    /**\n     * Initialize the component.\n     */\n    ngOnInit() {\n        this.sub = new Subscription();\n\n        const sub = this.taskFormComponent.formValid.subscribe((formValid) => {\n            if(formValid) {\n                this.enableCreateButton = true;\n            }\n            else {\n                this.enableCreateButton = false;\n            }\n        });\n        this.sub.add(sub);\n    }\n\n    /**\n     * Unsubscribe from any subscriptions.\n     */\n    ngOnDestroy() {\n        this.sub.unsubscribe();\n    }\n}\n\n    \n\n    \n        \n     Create Task\n\n\n    \n\n\n    Cancel\n    \n        \n            Create\n        \n    \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '     Create Task        Cancel                        Create            '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ButtonBarComponent', 'selector': 'button-bar'},{'name': 'ButtonsComponent', 'selector': 'buttons'},{'name': 'CompleteTaskComponent', 'selector': 'complete-task'},{'name': 'CompleteTasksTableComponent', 'selector': 'complete-tasks-table'},{'name': 'ConfirmDeleteTaskComponent', 'selector': 'confirm-delete'},{'name': 'CreateTaskComponent', 'selector': 'create-task'},{'name': 'EditTaskComponent', 'selector': 'edit-task'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'ListItemComponent', 'selector': 'list-item'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'PendingTasksTableComponent', 'selector': 'pending-tasks-table'},{'name': 'RecurringTaskComponent', 'selector': 'recurring-task'},{'name': 'SidenavTasksComponent', 'selector': 'sidenav-tasks'},{'name': 'TaskFormComponent', 'selector': 'task-form'},{'name': 'TasksComponent', 'selector': 'tasks-root'},{'name': 'TasksFilterComponent', 'selector': 'tasks-filter'},{'name': 'TasksTableComponent', 'selector': 'tasks-table'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CreateTaskComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CreateTaskModule.html":{"url":"modules/CreateTaskModule.html","title":"module - CreateTaskModule","body":"\n                   \n\n\n\n\n  Modules\n  CreateTaskModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_CreateTaskModule\n\n\n\ncluster_CreateTaskModule_declarations\n\n\n\ncluster_CreateTaskModule_imports\n\n\n\n\nCreateTaskComponent\n\nCreateTaskComponent\n\n\n\nCreateTaskModule\n\nCreateTaskModule\n\nCreateTaskModule -->\n\nCreateTaskComponent->CreateTaskModule\n\n\n\n\n\nTaskFormModule\n\nTaskFormModule\n\nCreateTaskModule -->\n\nTaskFormModule->CreateTaskModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/tasks/dialogs/create-task/create-task.module.ts\n        \n\n\n            \n                Description\n            \n            \n                Defines the components, services, and modules required to manage and view\nTasks.\n\n            \n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                CreateTaskComponent\n                            \n                    \n                \n                \n                    EntryComponents\n                    \n                            \n                                CreateTaskComponent\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    TaskFormModule\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        /* angular libraries */\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatButtonModule, MatDatepickerModule, MatDialogModule, MatFormFieldModule, MatInputModule, MatNativeDateModule } from '@angular/material';\nimport { RouterModule } from '@angular/router';\n\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\nimport { library } from '@fortawesome/fontawesome-svg-core'\nimport { faPaste } from '@fortawesome/free-solid-svg-icons';\n\n// Add icons to fortawesome/fontawesome-svg-core library for convenient access in components\nlibrary.add(faPaste);\n\n/* app modules */\nimport { TaskFormModule } from '@tasks/form/task-form.module';\n\n/* Task shared components and services */\nimport { CreateTaskComponent } from '@tasks/dialogs/create-task/create-task.component';\n\n/**\n * Defines the components, services, and modules required to manage and view\n * Tasks.\n */\n@NgModule({\n    declarations: [\n        CreateTaskComponent\n    ],\n    imports: [\n        /* angular libraries */\n        CommonModule,\n        FlexLayoutModule,\n        FormsModule,\n        MatButtonModule,\n        MatDatepickerModule,\n        MatDialogModule,\n        MatFormFieldModule,\n        MatInputModule,\n        MatNativeDateModule,\n        ReactiveFormsModule,\n        RouterModule,\n\n        FontAwesomeModule,\n\n        /* app modules */\n        TaskFormModule\n    ],\n    entryComponents: [\n        CreateTaskComponent\n    ]\n})\nexport class CreateTaskModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/EditTaskComponent.html":{"url":"components/EditTaskComponent.html","title":"component - EditTaskComponent","body":"\n                   \n\n\n\n\n\n  Components\n  EditTaskComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/tasks/edit/edit-task.component.ts\n\n\n    \n        Description\n    \n    \n        Creates the page to edit an existing Task. The page uses the TaskFormComponent \nand subscribes to it's formValid EventEmitter to enable and disable the \n\"update\" button.\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                edit-task\n            \n\n            \n                styleUrls\n                edit-task.component.css\n            \n\n\n\n            \n                templateUrl\n                ./edit-task.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                buttonBar\n                            \n                            \n                                enableUpdateButton\n                            \n                            \n                                hideCompleteButton\n                            \n                            \n                                icon\n                            \n                            \n                                iconClass\n                            \n                            \n                                index\n                            \n                            \n                                onUpdate\n                            \n                            \n                                prefix\n                            \n                            \n                                    Private\n                                sub\n                            \n                            \n                                task\n                            \n                            \n                                taskFormComponent\n                            \n                            \n                                tasks\n                            \n                            \n                                tooltip\n                            \n                            \n                                updateAll\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                cancel\n                            \n                            \n                                initIconClass\n                            \n                            \n                                initPaginator\n                            \n                            \n                                loadTask\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                openRecurringTaskDialog\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n                \n                    \n                        HostBindings\n                    \n                \n                \n                    \n                        \n                            \n                                class.marker-edit-task-dialog\n                            \n                        \n                    \n                \n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(changeDetector: ChangeDetectorRef, dialog: MatDialog, location: Location, logger: LoggerService, route: ActivatedRoute, router: Router, snackBar: MatSnackBar, taskService: TaskService, utilsService: UtilsService)\n                    \n                \n                        \n                            \n                                Defined in src/app/tasks/edit/edit-task.component.ts:61\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        changeDetector\n                                                  \n                                                        \n                                                                    ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        location\n                                                  \n                                                        \n                                                                    Location\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        logger\n                                                  \n                                                        \n                                                                    LoggerService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                    ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        snackBar\n                                                  \n                                                        \n                                                                    MatSnackBar\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        taskService\n                                                  \n                                                        \n                                                                    TaskService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        utilsService\n                                                  \n                                                        \n                                                                    UtilsService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n    \n    HostBindings        \n            \n                \n                    \n                        \n                        \n                            \n                            class.marker-edit-task-dialog\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        class.marker-edit-task-dialog:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tasks/edit/edit-task.component.ts:33\n                            \n                        \n\n\n            \n        \n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            cancel\n                            \n                            \n                        \n                    \n                \n                \n                    \ncancel()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/tasks/edit/edit-task.component.ts:78\n                            \n                        \n\n\n                \n                    \n                            Cancels the Task edit and goes back to the previous page.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            initIconClass\n                            \n                            \n                        \n                    \n                \n                \n                    \ninitIconClass()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/tasks/edit/edit-task.component.ts:218\n                            \n                        \n\n\n                \n                    \n                            Initializes the icon and corresponding class for the icon based on the\nproperties of the Task being modified. Color classes are added to the \nicon using the iconClass string property for Tasks that are over due, \ndue today, or due tomorrow.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            initPaginator\n                            \n                            \n                        \n                    \n                \n                \n                    \ninitPaginator()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/tasks/edit/edit-task.component.ts:88\n                            \n                        \n\n\n                \n                    \n                            Initializes the paginator at the top of the page. The paginator pages\nthrough Tasks that are either pending or complete (based on the Task\nbeing modified). Tasks are sorted by due date in ascending order for\nthe purposes of this paginator.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loadTask\n                            \n                            \n                        \n                    \n                \n                \n                    \nloadTask(id: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/tasks/edit/edit-task.component.ts:122\n                            \n                        \n\n\n                \n                    \n                            Load the Task with the given id.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                The id of the Task to load. \n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnDestroy\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnDestroy()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/tasks/edit/edit-task.component.ts:179\n                            \n                        \n\n\n                \n                    \n                            Clean the component \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/tasks/edit/edit-task.component.ts:152\n                            \n                        \n\n\n                \n                    \n                            Initialize the component.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            openRecurringTaskDialog\n                            \n                            \n                        \n                    \n                \n                \n                    \nopenRecurringTaskDialog()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/tasks/edit/edit-task.component.ts:188\n                            \n                        \n\n\n                \n                    \n                            Opens the dialog to confirm whether to modify a single Task or the\ngiven Task and all remaining Tasks in it's sequence (if the Task is\na repeating Task).\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            update\n                            \n                            \n                        \n                    \n                \n                \n                    \nupdate()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/tasks/edit/edit-task.component.ts:258\n                            \n                        \n\n\n                \n                    \n                            Updates the Task passed into the component.  \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            buttonBar\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        buttonBar:     ButtonBarComponent\n\n                    \n                \n                    \n                        \n                            Type :     ButtonBarComponent\n\n                        \n                    \n                    \n                        \n                            Decorators : ViewChild\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tasks/edit/edit-task.component.ts:37\n                            \n                        \n\n                \n                    \n                        The buttonBar component. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            enableUpdateButton\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        enableUpdateButton:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tasks/edit/edit-task.component.ts:35\n                            \n                        \n\n                \n                    \n                        Boolean to indicate whether or not to enable the update button (true to enable button). \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            hideCompleteButton\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        hideCompleteButton:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tasks/edit/edit-task.component.ts:41\n                            \n                        \n\n                \n                    \n                        Boolean to inidicate whether to display or hide the complete button. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            icon\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        icon:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tasks/edit/edit-task.component.ts:43\n                            \n                        \n\n                \n                    \n                        The icon to display in the header. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            iconClass\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        iconClass:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tasks/edit/edit-task.component.ts:45\n                            \n                        \n\n                \n                    \n                        The class to add to the icon in the header of the component (if over due, due today, or tomorrow). \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            index\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        index:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tasks/edit/edit-task.component.ts:47\n                            \n                        \n\n                \n                    \n                        The index of the Task being editted in the list of tasks. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            onUpdate\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        onUpdate:     \n\n                    \n                \n                    \n                        \n                            Default value : new EventEmitter()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tasks/edit/edit-task.component.ts:59\n                            \n                        \n\n                \n                    \n                        Event emitted when Task is updated. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            prefix\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        prefix:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tasks/edit/edit-task.component.ts:49\n                            \n                        \n\n                \n                    \n                        The prefix for the icon to display (\"far\" or \"fas\"). \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            sub\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        sub:     Subscription\n\n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tasks/edit/edit-task.component.ts:61\n                            \n                        \n\n                \n                    \n                        The subscriptions for the component. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            task\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        task:     Task\n\n                    \n                \n                    \n                        \n                            Type :     Task\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tasks/edit/edit-task.component.ts:51\n                            \n                        \n\n                \n                    \n                        The Task to edit. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            taskFormComponent\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        taskFormComponent:     TaskFormComponent\n\n                    \n                \n                    \n                        \n                            Type :     TaskFormComponent\n\n                        \n                    \n                    \n                        \n                            Decorators : ViewChild\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tasks/edit/edit-task.component.ts:39\n                            \n                        \n\n                \n                    \n                        The form to edit a Task. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            tasks\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        tasks:     Task[]\n\n                    \n                \n                    \n                        \n                            Type :     Task[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tasks/edit/edit-task.component.ts:53\n                            \n                        \n\n                \n                    \n                        The list of Tasks the Task being editted belongs to (pending or complete). \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            tooltip\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        tooltip:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tasks/edit/edit-task.component.ts:55\n                            \n                        \n\n                \n                    \n                        The tooltip to display with the icon in the header of the component. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updateAll\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        updateAll:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tasks/edit/edit-task.component.ts:57\n                            \n                        \n\n                \n                    \n                        Boolean to indicate whether or not update this and all remaining Tasks in a sequence (if applicable).\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import * as moment from 'moment';\n\n/* angular libraries */\nimport { Location } from '@angular/common';\nimport { Component, EventEmitter, HostBinding, OnInit, OnDestroy, ViewChild, ChangeDetectorRef } from '@angular/core';\nimport { MatDialog, MatDialogConfig, MatSnackBar } from '@angular/material';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Observable, Subscription } from 'rxjs';\nimport { tap } from 'rxjs/operators';\n\n/* app */\nimport { LoggerService } from 'app/core/services/logger.service';\nimport { ButtonBarComponent } from '@tasks/button-bar/button-bar.component';\nimport { TaskFormComponent } from '@tasks/form/task-form.component';\nimport { Task } from '@tasks/shared/models/task.model';\nimport { TaskService } from '@tasks/shared/services/task.service';\nimport { UtilsService } from '@tasks/shared/services/utils.service';\nimport { RecurringTaskComponent } from './recurring-task.component';\n\n/**\n * Creates the page to edit an existing Task. The page uses the TaskFormComponent \n * and subscribes to it's formValid EventEmitter to enable and disable the \n * \"update\" button.\n */\n@Component({\n    selector: 'edit-task',\n    templateUrl: './edit-task.component.html',\n    styleUrls: ['./edit-task.component.css']\n})\nexport class EditTaskComponent implements OnInit, OnDestroy {\n    \n    @HostBinding('class.marker-edit-task-dialog') classMarker : boolean = true;\n    /** Boolean to indicate whether or not to enable the update button (true to enable button). */\n    enableUpdateButton: boolean = true;\n    /** The buttonBar component. */\n    @ViewChild(ButtonBarComponent) buttonBar: ButtonBarComponent;\n    /** The form to edit a Task. */\n    @ViewChild(TaskFormComponent) taskFormComponent: TaskFormComponent;\n    /** Boolean to inidicate whether to display or hide the complete button. */\n    hideCompleteButton: boolean;\n    /** The icon to display in the header. */\n    icon: string;\n    /** The class to add to the icon in the header of the component (if over due, due today, or tomorrow). */\n    iconClass: string;\n    /** The index of the Task being editted in the list of tasks. */\n    index: number;\n    /** The prefix for the icon to display (\"far\" or \"fas\"). */\n    prefix: string;\n    /** The Task to edit. */\n    task: Task;\n    /** The list of Tasks the Task being editted belongs to (pending or complete). */\n    tasks: Task[];\n    /** The tooltip to display with the icon in the header of the component. */\n    tooltip: string;\n    /** Boolean to indicate whether or not update this and all remaining Tasks in a sequence (if applicable).*/\n    updateAll: boolean = false;\n    /** Event emitted when Task is updated. */\n    onUpdate = new EventEmitter();\n    /** The subscriptions for the component. */\n    private sub: Subscription;\n\n    constructor(\n        private changeDetector: ChangeDetectorRef,\n        private dialog: MatDialog,\n        private location: Location,\n        private logger: LoggerService,\n        private route: ActivatedRoute,\n        private router: Router,\n        private snackBar: MatSnackBar,\n        private taskService: TaskService,\n        private utilsService: UtilsService\n    ) {}\n\n    /**\n     * Cancels the Task edit and goes back to the previous page.\n     */\n    cancel() {\n        this.location.back();\n    }\n\n    /**\n     * Initializes the paginator at the top of the page. The paginator pages\n     * through Tasks that are either pending or complete (based on the Task\n     * being modified). Tasks are sorted by due date in ascending order for\n     * the purposes of this paginator.\n     */\n    initPaginator() {\n        let obs: Observable;\n        // determine which observable to use from the TaskService based on\n        // whether the Task being modified is complete or not\n        if(this.task.isComplete) {\n            obs = this.taskService.completeTasks;\n        }\n        else {\n            obs = this.taskService.pendingTasks;\n        }\n\n        // subscribe to the observable\n        const sub = obs.subscribe((tasks: Task[]) => {\n            // the list of Tasks (pending or complete)\n            this.tasks = tasks;\n            this.changeDetector.detectChanges();\n\n            // find the index of the Task being modified in the list of Tasks found above\n            this.buttonBar.paginator.pageIndex = this.tasks.findIndex((task: Task) => { return task.id == this.task.id });\n            // subscribe to the paginator page changes\n            const page = this.buttonBar.paginator.page.pipe(\n                tap(() => {\n                    this.loadTask(this.tasks[this.buttonBar.paginator.pageIndex].id);\n                })).subscribe();\n            this.sub.add(page);\n        });\n        this.sub.add(sub);\n    }\n\n    /**\n     * Load the Task with the given id.\n     * \n     * @param id The id of the Task to load. \n     */\n    loadTask(id: number) {\n        const taskSub = this.taskService.get(id).subscribe((task: Task) => {\n            this.task = task;\n            this.hideCompleteButton = task.isComplete;\n            this.initIconClass();\n\n            // initialize the paginator if the Tasks array is null\n            if(this.tasks == null) {\n                this.initPaginator();\n            }\n            \n            // open dialog to modify just single task or all remaining tasks if task is not complete and\n            // it is repeating Task\n            if(!task.isComplete && task.repeats != null && task.repeats !== 'noRepeat') {\n                this.openRecurringTaskDialog();\n            }\n            else {\n                this.changeDetector.detectChanges();\n                const subForm = this.taskFormComponent.formValid.subscribe((enable: boolean) => {\n                    this.enableUpdateButton = enable;\n                });\n                this.sub.add(subForm);\n            }\n        });\n        this.sub.add(taskSub);\n    }\n\n    /**\n     * Initialize the component.\n     */\n    ngOnInit() {\n        this.sub = new Subscription();\n        const sub = this.taskService.changes.subscribe((changes: string) => {\n            if(changes) {\n                this.snackBar.open(changes, '', { duration: 2000 });\n            }\n        });\n        this.sub.add(sub);\n\n        const paramsSub = this.sub = this.route.params.subscribe(params => {\n            let id: number = Number(params['id']);\n            if(isNaN(id)) {\n                // redirect to 404 since id and ** don't seem to work well\n                // together in router module; any value treated as id even if\n                // not a number so need to handle error here if id is not number\n                this.router.navigate(['/404']);\n            }\n            else {\n                this.loadTask(id);\n            }\n        });\n        this.sub.add(paramsSub);\n    }\n\n    /**\n     * Clean the component \n     */\n    ngOnDestroy() {\n        this.sub.unsubscribe();\n    }\n\n    /**\n     * Opens the dialog to confirm whether to modify a single Task or the\n     * given Task and all remaining Tasks in it's sequence (if the Task is\n     * a repeating Task).\n     */\n    openRecurringTaskDialog() {\n        let dialogConfig = new MatDialogConfig();\n        dialogConfig.autoFocus = false;\n        dialogConfig.data = { task: this.task };\n        dialogConfig.width = '50%';\n        let recurringDialogRef = this.dialog.open(RecurringTaskComponent, dialogConfig);\n        this.utilsService.fullScreenDialogSub(recurringDialogRef, '50%');\n\n        let sub = recurringDialogRef.componentInstance.updateAll.subscribe((updateAll: boolean) => {\n            this.updateAll = updateAll;\n            if(!this.updateAll) {\n                this.taskFormComponent.repeatPropertiesForm.disable();\n            }\n\n            this.changeDetector.detectChanges();\n\n            const subForm = this.taskFormComponent.formValid.subscribe((enable: boolean) => {\n                this.enableUpdateButton = enable;\n            });\n            this.sub.add(subForm);\n        });\n        this.sub.add(sub);\n    }\n\n    /**\n     * Initializes the icon and corresponding class for the icon based on the\n     * properties of the Task being modified. Color classes are added to the \n     * icon using the iconClass string property for Tasks that are over due, \n     * due today, or due tomorrow.\n     */\n    initIconClass() {\n        this.iconClass = 'mat-icon-button notice';\n        if(!this.task.isComplete) {\n            let dueDate = moment(this.task.dueDate).utc();\n            let today = moment().startOf('day').utc();\n            let tomorrow = moment().startOf('day').add(1, 'days').utc();\n\n            if(dueDate.isBefore(today, 'day')) {\n                this.prefix = 'fas';\n                this.icon = 'hourglass-end';\n                this.tooltip = 'Over Due'\n                this.iconClass += ' red';\n            }\n            else if(dueDate.isSame(today, 'day')) {\n                this.prefix = 'fas';\n                this.icon = 'hourglass-half';\n                this.tooltip = 'Due Today'\n                this.iconClass += ' orange';\n            }\n            else if(dueDate.isSame(tomorrow, 'day')) {\n                this.prefix = 'fas';\n                this.icon = 'hourglass-start';\n                this.tooltip = 'Due Tomorrow'\n                this.iconClass += ' yellow';\n            }\n            else {\n                this.prefix = 'far';\n                this.icon = 'hourglass';\n                this.tooltip = `Due ${dueDate.format('MM/DD/YYYY')}`;\n            }\n        }\n        else {\n            this.icon = 'clipboard-check';\n            this.tooltip = 'Complete';\n        }\n    }\n\n    /**\n     * Updates the Task passed into the component.  \n     */\n    update() {\n        const sub = this.taskFormComponent.getFormData(this.taskFormComponent.mainPropertiesForm).switchMap(formData => {\n            this.task.name = formData.value.name;\n            this.task.priority = formData.value.priority;\n            this.task.description = formData.value.description;\n\n            // Only update the dueDate if the task is not complete\n            if(!this.task.isComplete) {\n                this.task.dueDate = formData.value.due;\n                return this.taskFormComponent.getFormData(this.taskFormComponent.repeatPropertiesForm).switchMap(repeatFormData => {\n                    this.task.repeats = repeatFormData.value.repeats;\n                    this.task.endsAfter = repeatFormData.value.after;\n                    return this.taskService.update(this.task, this.updateAll);\n                });\n            }\n            else {\n                return this.taskService.update(this.task, this.updateAll);\n            }\n        }).subscribe((task: Task) => {\n            this.logger.info('EditTaskComponent: Task updated successfully', task);\n            this.onUpdate.emit('Task Updated Successfully');\n            this.location.back();\n        });\n        this.sub.add(sub);\n    }\n}\n\n    \n\n    \n        \n\n    \n        {{task.name}}\n        \n             \n        \n    \n    \n    \n        Cancel\n        \n            \n                 \n                Update\n            \n        \n    \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            {{task.name}}                                                 Cancel                                                     Update                        '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ButtonBarComponent', 'selector': 'button-bar'},{'name': 'ButtonsComponent', 'selector': 'buttons'},{'name': 'CompleteTaskComponent', 'selector': 'complete-task'},{'name': 'CompleteTasksTableComponent', 'selector': 'complete-tasks-table'},{'name': 'ConfirmDeleteTaskComponent', 'selector': 'confirm-delete'},{'name': 'CreateTaskComponent', 'selector': 'create-task'},{'name': 'EditTaskComponent', 'selector': 'edit-task'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'ListItemComponent', 'selector': 'list-item'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'PendingTasksTableComponent', 'selector': 'pending-tasks-table'},{'name': 'RecurringTaskComponent', 'selector': 'recurring-task'},{'name': 'SidenavTasksComponent', 'selector': 'sidenav-tasks'},{'name': 'TaskFormComponent', 'selector': 'task-form'},{'name': 'TasksComponent', 'selector': 'tasks-root'},{'name': 'TasksFilterComponent', 'selector': 'tasks-filter'},{'name': 'TasksTableComponent', 'selector': 'tasks-table'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'EditTaskComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/EditTaskModule.html":{"url":"modules/EditTaskModule.html","title":"module - EditTaskModule","body":"\n                   \n\n\n\n\n  Modules\n  EditTaskModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_EditTaskModule\n\n\n\ncluster_EditTaskModule_declarations\n\n\n\ncluster_EditTaskModule_imports\n\n\n\ncluster_EditTaskModule_providers\n\n\n\n\nEditTaskComponent\n\nEditTaskComponent\n\n\n\nEditTaskModule\n\nEditTaskModule\n\nEditTaskModule -->\n\nEditTaskComponent->EditTaskModule\n\n\n\n\n\nRecurringTaskComponent\n\nRecurringTaskComponent\n\nEditTaskModule -->\n\nRecurringTaskComponent->EditTaskModule\n\n\n\n\n\nTaskFormModule\n\nTaskFormModule\n\nEditTaskModule -->\n\nTaskFormModule->EditTaskModule\n\n\n\n\n\nTasksButtonBarModule\n\nTasksButtonBarModule\n\nEditTaskModule -->\n\nTasksButtonBarModule->EditTaskModule\n\n\n\n\n\nTasksDialogModule\n\nTasksDialogModule\n\nEditTaskModule -->\n\nTasksDialogModule->EditTaskModule\n\n\n\n\n\nMatPaginatorCustom\n\nMatPaginatorCustom\n\nEditTaskModule -->\n\nMatPaginatorCustom->EditTaskModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/tasks/edit/edit-task.module.ts\n        \n\n\n            \n                Description\n            \n            \n                Defines the components, services, and modules required to edit a Task.\n\n            \n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                EditTaskComponent\n                            \n                            \n                                RecurringTaskComponent\n                            \n                    \n                \n                \n                    EntryComponents\n                    \n                            \n                                EditTaskComponent\n                            \n                            \n                                RecurringTaskComponent\n                            \n                    \n                \n                \n                    Providers\n                    \n                            \n                                     MatPaginatorCustom\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    TaskFormModule\n                            \n                            \n                                    TasksButtonBarModule\n                            \n                            \n                                    TasksDialogModule\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        /* angular libraries */\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatButtonModule, MatDatepickerModule, MatDialogModule, MatFormFieldModule, MatInputModule, MatNativeDateModule, MatPaginatorIntl, MatPaginatorModule, MatRadioModule, MatTooltipModule, MatSnackBarModule } from '@angular/material';\nimport { RouterModule } from '@angular/router';\n\n/* fontawesome */\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\nimport { library } from '@fortawesome/fontawesome-svg-core'\nimport { faCheckSquare } from '@fortawesome/free-regular-svg-icons';\nimport { faCheck, faEdit, faPaste, faTrash } from '@fortawesome/free-solid-svg-icons';\n\n// Add icons to library for convenient access in components\nlibrary.add(faCheck, faCheckSquare, faEdit, faPaste, faTrash);\n\n/* app */\nimport { EditTaskComponent } from './edit-task.component';\nimport { RecurringTaskComponent } from './recurring-task.component';\nimport { TasksButtonBarModule } from '@tasks/button-bar/tasks-button-bar.module';\nimport { TasksDialogModule } from '@tasks/dialogs/tasks-dialog.module';\nimport { TaskFormModule } from '@tasks/form/task-form.module';\nimport { MatPaginatorCustom } from '@tasks/shared/util/mat-paginator-custom';\n\n/**\n * Defines the components, services, and modules required to edit a Task.\n */\n@NgModule({\n    declarations: [\n        EditTaskComponent,\n        RecurringTaskComponent\n    ],\n    imports: [\n        /* angular libraries */\n        CommonModule,\n        FlexLayoutModule,\n        FormsModule,\n        MatButtonModule, \n        MatDatepickerModule,\n        MatDialogModule,\n        MatFormFieldModule,\n        MatInputModule,\n        MatNativeDateModule,\n        MatPaginatorModule, \n        MatRadioModule,\n        MatTooltipModule, \n        MatSnackBarModule,\n        ReactiveFormsModule,\n        RouterModule,\n\n        FontAwesomeModule,\n\n        /* Task modules */\n        TasksButtonBarModule,\n        TasksDialogModule,\n        TaskFormModule\n    ],\n    entryComponents: [\n        EditTaskComponent,\n        RecurringTaskComponent\n    ],\n    providers: [\n        MatPaginatorCustom,\n        { provide: MatPaginatorIntl, useClass: MatPaginatorCustom }\n    ]\n})\nexport class EditTaskModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FooterComponent.html":{"url":"components/FooterComponent.html","title":"component - FooterComponent","body":"\n                   \n\n\n\n\n\n  Components\n  FooterComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/footer/footer.component.ts\n\n\n    \n        Description\n    \n    \n        Creates the footer component for the app.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-footer\n            \n\n            \n                styleUrls\n                footer.component.css\n            \n\n\n\n            \n                templateUrl\n                ./footer.component.html\n            \n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n/**\n * Creates the footer component for the app.\n */\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.css']\n})\nexport class FooterComponent {}\n\n    \n\n    \n        \n    \n        About\n        © 2018\n    \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            About        © 2018    '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ButtonBarComponent', 'selector': 'button-bar'},{'name': 'ButtonsComponent', 'selector': 'buttons'},{'name': 'CompleteTaskComponent', 'selector': 'complete-task'},{'name': 'CompleteTasksTableComponent', 'selector': 'complete-tasks-table'},{'name': 'ConfirmDeleteTaskComponent', 'selector': 'confirm-delete'},{'name': 'CreateTaskComponent', 'selector': 'create-task'},{'name': 'EditTaskComponent', 'selector': 'edit-task'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'ListItemComponent', 'selector': 'list-item'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'PendingTasksTableComponent', 'selector': 'pending-tasks-table'},{'name': 'RecurringTaskComponent', 'selector': 'recurring-task'},{'name': 'SidenavTasksComponent', 'selector': 'sidenav-tasks'},{'name': 'TaskFormComponent', 'selector': 'task-form'},{'name': 'TasksComponent', 'selector': 'tasks-root'},{'name': 'TasksFilterComponent', 'selector': 'tasks-filter'},{'name': 'TasksTableComponent', 'selector': 'tasks-table'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'FooterComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/FooterModule.html":{"url":"modules/FooterModule.html","title":"module - FooterModule","body":"\n                   \n\n\n\n\n  Modules\n  FooterModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_FooterModule\n\n\n\ncluster_FooterModule_declarations\n\n\n\ncluster_FooterModule_exports\n\n\n\n\nFooterComponent\n\nFooterComponent\n\n\n\nFooterModule\n\nFooterModule\n\nFooterModule -->\n\nFooterComponent->FooterModule\n\n\n\n\n\nFooterComponent \n\nFooterComponent \n\nFooterComponent  -->\n\nFooterModule->FooterComponent \n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/footer/footer.module.ts\n        \n\n\n            \n                Description\n            \n            \n                Defines the components and modules for the footer.\n\n            \n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                FooterComponent\n                            \n                    \n                \n                \n                    EntryComponents\n                    \n                            \n                                FooterComponent\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    FooterComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        /* angular libraries */\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { RouterModule } from '@angular/router';\n\n/* module */\nimport { FooterComponent } from './footer.component';\n\n/**\n * Defines the components and modules for the footer.\n */\n@NgModule({\n    declarations: [\n        FooterComponent\n    ],\n    imports: [\n        /* angular libraries */\n        CommonModule,\n        FlexLayoutModule,\n        RouterModule\n    ],\n    exports: [\n        FooterComponent\n    ],\n    entryComponents: [\n        FooterComponent\n    ]\n})\nexport class FooterModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HeaderComponent.html":{"url":"components/HeaderComponent.html","title":"component - HeaderComponent","body":"\n                   \n\n\n\n\n\n  Components\n  HeaderComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/header/header.component.ts\n\n\n    \n        Description\n    \n    \n        Creates the main header element for the app. The header is responsive based on the size of the screen. If\nthe screen is large, then the dueButtons and taskFilter components are rendered directly in the header on\nthe right side of the screen for easy access. If the screen is medium or smaller, then the right side of\nthe header collapses into a single \"search\" icon button, which when clicked displays the taskFilter\ncomponent.\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-header\n            \n\n            \n                styleUrls\n                header.component.css\n            \n\n\n\n            \n                templateUrl\n                ./header.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                isMediumScreen\n                            \n                            \n                                showSearchBar\n                            \n                            \n                                sidenavMenuState\n                            \n                            \n                                sub\n                            \n                            \n                                taskFilter\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onSidenavMenuToggle\n                            \n                            \n                                setShowSearchBar\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(utilsService: UtilsService)\n                    \n                \n                        \n                            \n                                Defined in src/app/header/header.component.ts:32\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        utilsService\n                                                  \n                                                        \n                                                                    UtilsService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnDestroy\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnDestroy()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/header/header.component.ts:39\n                            \n                        \n\n\n                \n                    \n                            Unsubscribe from any subscriptions.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/header/header.component.ts:47\n                            \n                        \n\n\n                \n                    \n                            Initialize the component. The search bar should be hidden initially, and the sidenav menu should be set\nto 'Collapse' on medium or smaller devices and 'Expand' on larger devices.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            onSidenavMenuToggle\n                            \n                            \n                        \n                    \n                \n                \n                    \nonSidenavMenuToggle()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/header/header.component.ts:63\n                            \n                        \n\n\n                \n                    \n                            Expands and collapses the sidenav menu based on the current state of the sidenav menu. If the sidenav\nmenu is collapsed, then it is expanded. Otherwise the sidenav menu is collapsed.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            setShowSearchBar\n                            \n                            \n                        \n                    \n                \n                \n                    \nsetShowSearchBar(showSearchBar: boolean)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/header/header.component.ts:79\n                            \n                        \n\n\n                \n                    \n                            Displays or hides the search bar based on the boolean parameter passed in.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        showSearchBar\n                                                        \n                                                                    boolean\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                true if the search bar should be displayed, otherwise false. \n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isMediumScreen\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        isMediumScreen:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/header/header.component.ts:26\n                            \n                        \n\n                \n                    \n                        Boolean to indicate if the screen size is medium or smaller (true if screen is medium or smaller). \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            showSearchBar\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        showSearchBar:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/header/header.component.ts:28\n                            \n                        \n\n                \n                    \n                        Boolean to indicate whether or not to show the search bar (shows search bar if true). \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sidenavMenuState\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        sidenavMenuState:     SidenavMenuEvent\n\n                    \n                \n                    \n                        \n                            Type :     SidenavMenuEvent\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/header/header.component.ts:30\n                            \n                        \n\n                \n                    \n                        The current state of the sidenav ('Collapse' or 'Expand'). \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sub\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        sub:     Subscription\n\n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/header/header.component.ts:32\n                            \n                        \n\n                \n                    \n                        The subscriptions for the component. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            taskFilter\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        taskFilter:     TasksFilterComponent\n\n                    \n                \n                    \n                        \n                            Type :     TasksFilterComponent\n\n                        \n                    \n                    \n                        \n                            Decorators : ViewChild\n                        \n                    \n                        \n                            \n                                    Defined in src/app/header/header.component.ts:24\n                            \n                        \n\n                \n                    \n                        Reference to the TaskFilterComponent in the templateUrl. \n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnDestroy, OnInit, ViewChild } from '@angular/core';\nimport { Subscription } from 'rxjs';\n\n/* app */\nimport { TasksFilterComponent } from '@tasks/filter/tasks-filter.component';\nimport { SidenavMenuEvent, UtilsService } from '@tasks/shared/services/utils.service';\n\n/**\n * Creates the main header element for the app. The header is responsive based on the size of the screen. If\n * the screen is large, then the dueButtons and taskFilter components are rendered directly in the header on\n * the right side of the screen for easy access. If the screen is medium or smaller, then the right side of\n * the header collapses into a single \"search\" icon button, which when clicked displays the taskFilter\n * component.\n */\n@Component({\n    selector: 'app-header',\n    templateUrl: './header.component.html',\n    styleUrls: ['./header.component.css']\n})\nexport class HeaderComponent implements OnInit, OnDestroy {\n\n    /** Reference to the TaskFilterComponent in the templateUrl. */\n    @ViewChild('taskFilterLargeScreen') taskFilter: TasksFilterComponent;\n    /** Boolean to indicate if the screen size is medium or smaller (true if screen is medium or smaller). */\n    isMediumScreen: boolean;\n    /** Boolean to indicate whether or not to show the search bar (shows search bar if true). */\n    showSearchBar: boolean;\n    /** The current state of the sidenav ('Collapse' or 'Expand'). */\n    sidenavMenuState: SidenavMenuEvent;\n    /** The subscriptions for the component. */\n    sub: Subscription;\n\n    constructor(private utilsService: UtilsService) {}\n\n    /**\n     * Unsubscribe from any subscriptions.\n     */\n    ngOnDestroy() {\n        this.sub.unsubscribe();\n    }\n\n    /**\n     * Initialize the component. The search bar should be hidden initially, and the sidenav menu should be set\n     * to 'Collapse' on medium or smaller devices and 'Expand' on larger devices.\n     */\n    ngOnInit() {\n        this.showSearchBar = false;\n\n        this.sub = new Subscription();\n        const sub = this.utilsService.isMediumScreen.subscribe((isMediumScreen: boolean) => {\n            this.isMediumScreen = isMediumScreen;\n            // set to 'Collapse' on medium or smaller devices, otherwise to 'Expand'\n            this.sidenavMenuState = this.isMediumScreen ? 'Collapse' : 'Expand';\n        });\n        this.sub.add(sub);\n    }\n\n    /**\n     * Expands and collapses the sidenav menu based on the current state of the sidenav menu. If the sidenav\n     * menu is collapsed, then it is expanded. Otherwise the sidenav menu is collapsed.\n     */\n    onSidenavMenuToggle() {\n        if(this.sidenavMenuState === 'Collapse') {\n            this.sidenavMenuState = 'Expand';\n            this.utilsService.toggleSidenavMenu('Expand');\n        }\n        else {\n            this.sidenavMenuState = 'Collapse';\n            this.utilsService.toggleSidenavMenu('Collapse');\n        }\n    }\n\n    /**\n     * Displays or hides the search bar based on the boolean parameter passed in.\n     * \n     * @param showSearchBar true if the search bar should be displayed, otherwise false. \n     */\n    setShowSearchBar(showSearchBar: boolean) {\n        this.showSearchBar = showSearchBar;\n    }\n}\n\n    \n\n    \n        \n    \n        \n        \n            \n            \n            \n        \n    \n    \n        \n            \n                \n                \n                \n            \n            \n                \n                    \n                    MyTasks\n                \n                \n                \n            \n            \n            \n\n            \n            \n                \n                    \n                \n                \n                \n            \n        \n        \n            \n                \n                    \n                    \n                    \n                \n                \n                    \n                        \n                        MyTasks\n                    \n                    \n                    \n                \n                \n                \n                \n            \n        \n    \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                                                                                                                                                            MyTasks                                                                                                                                                                                                                                                                                                                                                                                                                        MyTasks                                                                                                                                                    '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ButtonBarComponent', 'selector': 'button-bar'},{'name': 'ButtonsComponent', 'selector': 'buttons'},{'name': 'CompleteTaskComponent', 'selector': 'complete-task'},{'name': 'CompleteTasksTableComponent', 'selector': 'complete-tasks-table'},{'name': 'ConfirmDeleteTaskComponent', 'selector': 'confirm-delete'},{'name': 'CreateTaskComponent', 'selector': 'create-task'},{'name': 'EditTaskComponent', 'selector': 'edit-task'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'ListItemComponent', 'selector': 'list-item'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'PendingTasksTableComponent', 'selector': 'pending-tasks-table'},{'name': 'RecurringTaskComponent', 'selector': 'recurring-task'},{'name': 'SidenavTasksComponent', 'selector': 'sidenav-tasks'},{'name': 'TaskFormComponent', 'selector': 'task-form'},{'name': 'TasksComponent', 'selector': 'tasks-root'},{'name': 'TasksFilterComponent', 'selector': 'tasks-filter'},{'name': 'TasksTableComponent', 'selector': 'tasks-table'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'HeaderComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/HeaderModule.html":{"url":"modules/HeaderModule.html","title":"module - HeaderModule","body":"\n                   \n\n\n\n\n  Modules\n  HeaderModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_HeaderModule\n\n\n\ncluster_HeaderModule_declarations\n\n\n\ncluster_HeaderModule_imports\n\n\n\ncluster_HeaderModule_exports\n\n\n\n\nHeaderComponent\n\nHeaderComponent\n\n\n\nHeaderModule\n\nHeaderModule\n\nHeaderModule -->\n\nHeaderComponent->HeaderModule\n\n\n\n\n\nHeaderComponent \n\nHeaderComponent \n\nHeaderComponent  -->\n\nHeaderModule->HeaderComponent \n\n\n\n\n\nTasksFilterModule\n\nTasksFilterModule\n\nHeaderModule -->\n\nTasksFilterModule->HeaderModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/header/header.module.ts\n        \n\n\n            \n                Description\n            \n            \n                Defines the components, services, and modules required for the header.\n\n            \n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                HeaderComponent\n                            \n                    \n                \n                \n                    EntryComponents\n                    \n                            \n                                HeaderComponent\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    TasksFilterModule\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    HeaderComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        /* angular libraries */\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { MatButtonModule, MatToolbarModule, MatTooltipModule } from '@angular/material';\nimport { RouterModule } from '@angular/router';\n\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\nimport { library } from '@fortawesome/fontawesome-svg-core'\nimport { faBars, faClipboardList } from '@fortawesome/free-solid-svg-icons';\n\n// Add icons to library for convenient access in components\nlibrary.add(faBars, faClipboardList);\n\n/* module */\nimport { HeaderComponent } from './header.component';\nimport { TasksFilterModule } from '@tasks/filter/tasks-filter.module';\n\n/**\n * Defines the components, services, and modules required for the header.\n */\n@NgModule({\n    declarations: [\n        HeaderComponent\n    ],\n    imports: [\n        /* angular libraries */\n        CommonModule,\n        FlexLayoutModule,\n        MatButtonModule, \n        MatToolbarModule, \n        MatTooltipModule,\n        RouterModule,\n\n        FontAwesomeModule,\n\n        /* app modules */\n        TasksFilterModule\n    ],\n    exports: [\n        HeaderComponent\n    ],\n    entryComponents: [\n        HeaderComponent\n    ]\n})\nexport class HeaderModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/HttpService.html":{"url":"injectables/HttpService.html","title":"injectable - HttpService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  HttpService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/http.service.ts\n        \n\n            \n                Description\n            \n            \n                Performs HTTP requests. This service is based on service from \nhttps://medium.com/beautiful-angular/angular-2-and-jwt-authentication-d30c21a2f24f\nIt is meant to perform actions like inserting custom headers requried \nin all requests. Currently this only adds simple \"Content-Type\" header, \nbut could easily be extended to add other headers (like JWT Token). It\nalso makes triggering things like loading indicator for all HTTP \nrequests easy.\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                url\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                delete\n                            \n                            \n                                get\n                            \n                            \n                                    Private\n                                getRequestOptionArgs\n                            \n                            \n                                    Private\n                                hideLoader\n                            \n                            \n                                    Private\n                                intercept\n                            \n                            \n                                patch\n                            \n                            \n                                post\n                            \n                            \n                                    Private\n                                showLoader\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient, loaderService: LoaderService, logger: LoggerService)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/services/http.service.ts:25\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        loaderService\n                                                  \n                                                        \n                                                                    LoaderService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        logger\n                                                  \n                                                        \n                                                                    LoggerService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            delete\n                            \n                            \n                        \n                    \n                \n                \n                    \ndelete(url: string, options?: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/services/http.service.ts:73\n                            \n                        \n\n\n                \n                    \n                            Performs an HTTP DELETE request.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        url\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                The URL to perform the DELETE request on. \n\n                                                        \n                                                \n                                                \n                                                        options\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            yes\n                                                    \n                                                    \n\n                                                        \n                                                                The options to include with the request.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            get\n                            \n                            \n                        \n                    \n                \n                \n                    \nget(url: string, options?: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/services/http.service.ts:39\n                            \n                        \n\n\n                \n                    \n                            Performs an HTTP GET request.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        url\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                The URL to perform the GET request on. \n\n                                                        \n                                                \n                                                \n                                                        options\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            yes\n                                                    \n                                                    \n\n                                                        \n                                                                The options to include with the request.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            getRequestOptionArgs\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getRequestOptionArgs(options?: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/services/http.service.ts:83\n                            \n                        \n\n\n                \n                    \n                            Returns request option arguments that can be included in a request.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        options\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            yes\n                                                    \n                                                    \n\n                                                        \n                                                                The options to include in the request.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            hideLoader\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        hideLoader()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/services/http.service.ts:114\n                            \n                        \n\n\n                \n                    \n                            Hide the loader.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            intercept\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        intercept(observable: Observable)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/services/http.service.ts:95\n                            \n                        \n\n\n                \n                    \n                            Intercepts the given Observable and performs any custom actions before\nand after the Observable completes (like showing and hiding the loader).\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        observable\n                                                        \n                                                                    Observable\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                The Observable to intercept. \n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            patch\n                            \n                            \n                        \n                    \n                \n                \n                    \npatch(url: string, body: any, options?: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/services/http.service.ts:62\n                            \n                        \n\n\n                \n                    \n                            Performs an HTTP PATCH request.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        url\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                The URL to perform the PATCH request on.\n\n                                                        \n                                                \n                                                \n                                                        body\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                The body of the request.\n\n                                                        \n                                                \n                                                \n                                                        options\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            yes\n                                                    \n                                                    \n\n                                                        \n                                                                The options to include with the request.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            post\n                            \n                            \n                        \n                    \n                \n                \n                    \npost(url: string, body: any, options?: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/services/http.service.ts:50\n                            \n                        \n\n\n                \n                    \n                            Performs an HTTP POST request.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        url\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                The URL to perform the POST request on. \n\n                                                        \n                                                \n                                                \n                                                        body\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                The body of the request.\n\n                                                        \n                                                \n                                                \n                                                        options\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            yes\n                                                    \n                                                    \n\n                                                        \n                                                                The options to include with the request.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            showLoader\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        showLoader()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/services/http.service.ts:107\n                            \n                        \n\n\n                \n                    \n                            Display the loader.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            url\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        url:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : 'http://localhost:3000/api'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/services/http.service.ts:25\n                            \n                        \n\n                \n                    \n                        The base URL for the API. \n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable } from 'rxjs/Observable';\nimport 'rxjs/add/operator/catch';\nimport 'rxjs/add/operator/finally';\n\n/* app */\nimport { LoaderService } from './loader.service';\nimport { LoggerService } from './logger.service';\n\n/**\n * Performs HTTP requests. This service is based on service from \n * https://medium.com/beautiful-angular/angular-2-and-jwt-authentication-d30c21a2f24f\n * It is meant to perform actions like inserting custom headers requried \n * in all requests. Currently this only adds simple \"Content-Type\" header, \n * but could easily be extended to add other headers (like JWT Token). It\n * also makes triggering things like loading indicator for all HTTP \n * requests easy.\n */\n@Injectable()\nexport class HttpService {\n\n    /** The base URL for the API. */\n    private url: string = 'http://localhost:3000/api';\n\n    constructor(\n        private http:HttpClient, \n        private loaderService:LoaderService,\n        private logger: LoggerService\n    ) {}\n \n    /**\n     * Performs an HTTP GET request.\n     * \n     * @param url The URL to perform the GET request on. \n     * @param options The options to include with the request.\n     */\n    get(url: string, options?: any): Observable {\n        return this.intercept(this.http.get(`${this.url}/${url}`, this.getRequestOptionArgs(options)));\n    }\n \n    /**\n     * Performs an HTTP POST request.\n     * \n     * @param url The URL to perform the POST request on. \n     * @param body The body of the request.\n     * @param options The options to include with the request.\n     */\n    post(url: string, body: any, options?: any): Observable { \n        this.logger.info(`HttpService: POST ${this.url}/${url}`, body);\n        return this.intercept(this.http.post(`${this.url}/${url}`, body, this.getRequestOptionArgs(options)));\n    }\n \n    /**\n     * Performs an HTTP PATCH request.\n     * \n     * @param url The URL to perform the PATCH request on.\n     * @param body The body of the request.\n     * @param options The options to include with the request.\n     */\n    patch(url: string, body: any, options?: any): Observable {\n        this.logger.info(`HttpService: PATCH ${this.url}/${url}`, body);   \n        return this.intercept(this.http.patch(`${this.url}/${url}`, body, this.getRequestOptionArgs(options)));\n    }\n \n    /**\n     * Performs an HTTP DELETE request.\n     * \n     * @param url The URL to perform the DELETE request on. \n     * @param options The options to include with the request.\n     */\n    delete(url: string, options?: any): Observable {\n        this.logger.info(`HttpService: DELETE ${this.url}/${url}`);\n        return this.intercept(this.http.delete(`${this.url}/${url}`, this.getRequestOptionArgs(options)));\n    }\n    \n    /**\n     * Returns request option arguments that can be included in a request.\n     * \n     * @param options The options to include in the request.\n     */\n    private getRequestOptionArgs(options?: any) : any {\n        options = options || {}; // define the options if none included\n        options.headers = options.headers || new HttpHeaders({ 'Content-Type': 'application/json' });\n        return options;\n    }\n \n    /**\n     * Intercepts the given Observable and performs any custom actions before\n     * and after the Observable completes (like showing and hiding the loader).\n     * \n     * @param observable The Observable to intercept. \n     */\n    private intercept(observable: Observable): Observable {\n        this.showLoader();\n        return observable.catch((err, source) => {\n            return Observable.throw(err);\n        }).finally(() => {\n            this.hideLoader();\n        });\n    }\n\n    /**\n     * Display the loader.\n     */\n    private showLoader(): void {\n        this.loaderService.show();\n    }\n\n    /**\n     * Hide the loader.\n     */\n    private hideLoader(): void {\n        this.loaderService.hide();\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ListItemComponent.html":{"url":"components/ListItemComponent.html","title":"component - ListItemComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ListItemComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/tasks/sidenav/list-item.component.ts\n\n\n    \n        Description\n    \n    \n        Creates 3 buttons meant for filtering Tasks \"Over Due\", \"Due Today\", and \"Due Tomorrow\". Allows \nfor the buttons to be styled in multiple ways so the buttons can be re-used on the header toolbar \nfor large screens as \"mat-button\" elements and in the task filter as \"mat-menu-item\" elements in \nthe dropdown menu.\n\n    \n\n\n    \n        Implements\n    \n    \n                OnDestroy\n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                list-item\n            \n\n            \n                styleUrls\n                list-item.component.css\n            \n\n\n\n            \n                templateUrl\n                ./list-item.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                filter\n                            \n                            \n                                numTasksDue\n                            \n                            \n                                params\n                            \n                            \n                                sub\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                buttonClass\n                            \n                            \n                                expand\n                            \n                            \n                                icon\n                            \n                            \n                                tasksDue\n                            \n                            \n                                text\n                            \n                            \n                                url\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(taskService: TaskService)\n                    \n                \n                        \n                            \n                                Defined in src/app/tasks/sidenav/list-item.component.ts:43\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        taskService\n                                                  \n                                                        \n                                                                    TaskService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        buttonClass\n                    \n                    \n                        The CSS class to apply to the buttons (only \"mat-button\" or \"mat-menu-item\" currently, but could use others). \n\n                            \n                            Type:    string\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/tasks/sidenav/list-item.component.ts:25\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        expand\n                    \n                    \n                        Boolean value to indicate whether the button should be displayed expanded (true if the badge should be offset to right). \n\n                            \n                            Type:    boolean\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/tasks/sidenav/list-item.component.ts:29\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        icon\n                    \n                    \n                        The icon to display in front of the button text. \n\n                            \n                            Type:    string\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/tasks/sidenav/list-item.component.ts:27\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        tasksDue\n                    \n                    \n                        The Observable that can be subscribed to (for displaying quantities in badge). \n\n                            \n                            Type:    Observable\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/tasks/sidenav/list-item.component.ts:31\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        text\n                    \n                    \n                        The text to display for the button. \n\n                            \n                            Type:    \"Over Due\" | \"Due Today\" | \"Due Tomorrow\" | \"Pending\" | \"Complete\"\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/tasks/sidenav/list-item.component.ts:33\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        url\n                    \n                    \n                        The base URL to use when list-item clicked. \n\n                            \n                            Type:    string\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/tasks/sidenav/list-item.component.ts:35\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnDestroy\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnDestroy()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/tasks/sidenav/list-item.component.ts:50\n                            \n                        \n\n\n                \n                    \n                            Unsubscribe from any subscriptions.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/tasks/sidenav/list-item.component.ts:57\n                            \n                        \n\n\n                \n                    \n                            Initialize the component.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            filter\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        filter:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tasks/sidenav/list-item.component.ts:37\n                            \n                        \n\n                \n                    \n                        The filter parameter to apply to the URL when the due button clicked. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            numTasksDue\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        numTasksDue:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tasks/sidenav/list-item.component.ts:39\n                            \n                        \n\n                \n                    \n                        The number of Tasks due. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            params\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        params:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tasks/sidenav/list-item.component.ts:41\n                            \n                        \n\n                \n                    \n                        The URL paramters. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sub\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        sub:     Subscription\n\n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tasks/sidenav/list-item.component.ts:43\n                            \n                        \n\n                \n                    \n                        The subscriptions for the component. \n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import * as moment from 'moment';\n\n/* angular libraries */\nimport { Component, Input, OnDestroy, OnInit } from '@angular/core';\nimport { Subscription, Observable } from 'rxjs';\n\n/* app */\nimport { TaskService } from '@tasks/shared/services/task.service';\n\n/**\n * Creates 3 buttons meant for filtering Tasks \"Over Due\", \"Due Today\", and \"Due Tomorrow\". Allows \n * for the buttons to be styled in multiple ways so the buttons can be re-used on the header toolbar \n * for large screens as \"mat-button\" elements and in the task filter as \"mat-menu-item\" elements in \n * the dropdown menu.\n */\n@Component({\n    selector: 'list-item',\n    templateUrl: './list-item.component.html',\n    styleUrls: ['./list-item.component.css']\n})\nexport class ListItemComponent implements OnDestroy, OnInit {\n\n    /** The CSS class to apply to the buttons (only \"mat-button\" or \"mat-menu-item\" currently, but could use others). */\n    @Input() buttonClass: string;\n    /** The icon to display in front of the button text. */\n    @Input() icon: string;\n    /** Boolean value to indicate whether the button should be displayed expanded (true if the badge should be offset to right). */\n    @Input() expand: boolean;\n    /** The Observable that can be subscribed to (for displaying quantities in badge). */\n    @Input() tasksDue: Observable;\n    /** The text to display for the button. */\n    @Input() text: 'Over Due' | 'Due Today' | 'Due Tomorrow' | 'Pending' | 'Complete';\n    /** The base URL to use when list-item clicked. */\n    @Input() url: string;\n    /** The filter parameter to apply to the URL when the due button clicked. */\n    filter: string;\n    /** The number of Tasks due. */\n    numTasksDue: string;\n    /** The URL paramters. */\n    params: string;\n    /** The subscriptions for the component. */\n    sub: Subscription;\n\n    constructor(private taskService: TaskService) {}\n\n    /**\n     * Unsubscribe from any subscriptions.\n     */\n    ngOnDestroy() {\n        this.sub.unsubscribe();\n    }\n\n    /**\n     * Initialize the component.\n     */\n    ngOnInit() {\n        // initialize the num tasks over due, due today, and due tomorrow\n        this.taskService.initNumTasks();\n\n        // create sub to maintain all subscriptions for the component (for easy unsubscribe on destory)\n        this.sub = new Subscription();\n\n        if(this.text == 'Over Due') {\n            this.filter = 'overdue';\n            // subscribe to the numTasksOverDue Observable and add it to the subscriptions for the component\n            const subOverDue = this.taskService.numTasksOverDue.subscribe((num: number) => {\n                this.numTasksDue = num.toString(); // update number of tasks over due (so badge updates)\n            });\n            this.sub.add(subOverDue);\n        }\n        else if(this.text == 'Due Today') {\n            this.filter = moment().startOf('day').utc().format('YYYY-MM-DD');\n            // subscribe to the numTasksDueToday Observable and add it to the subscriptions for the component\n            const subToday = this.taskService.numTasksDueToday.subscribe((num: number) => {\n                this.numTasksDue = num.toString(); // update number of tasks due today (so badge updates)\n            });\n            this.sub.add(subToday);\n        }\n        else if(this.text == 'Due Tomorrow'){\n            this.filter = moment().startOf('day').add(1, 'days').utc().format('YYYY-MM-DD');\n            // subscribe to the numTasksDueTomorrow Observable and add it to the subscriptions for the component\n            const subTomorrow = this.taskService.numTasksDueTomorrow.subscribe((num: number) => {\n                this.numTasksDue = num.toString(); // update number of tasks due tomorrow (so badge updates)\n            });\n            this.sub.add(subTomorrow);\n        }\n        else {\n            this.filter = '';\n            if(this.text !== 'Complete') {\n                const sub = this.taskService.numPendingTasks.subscribe((num: number) => {\n                    if(num \n    \n\n    \n        \n    \n    {{text}}\n    \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '        {{text}}    '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ButtonBarComponent', 'selector': 'button-bar'},{'name': 'ButtonsComponent', 'selector': 'buttons'},{'name': 'CompleteTaskComponent', 'selector': 'complete-task'},{'name': 'CompleteTasksTableComponent', 'selector': 'complete-tasks-table'},{'name': 'ConfirmDeleteTaskComponent', 'selector': 'confirm-delete'},{'name': 'CreateTaskComponent', 'selector': 'create-task'},{'name': 'EditTaskComponent', 'selector': 'edit-task'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'ListItemComponent', 'selector': 'list-item'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'PendingTasksTableComponent', 'selector': 'pending-tasks-table'},{'name': 'RecurringTaskComponent', 'selector': 'recurring-task'},{'name': 'SidenavTasksComponent', 'selector': 'sidenav-tasks'},{'name': 'TaskFormComponent', 'selector': 'task-form'},{'name': 'TasksComponent', 'selector': 'tasks-root'},{'name': 'TasksFilterComponent', 'selector': 'tasks-filter'},{'name': 'TasksTableComponent', 'selector': 'tasks-table'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ListItemComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LoaderService.html":{"url":"injectables/LoaderService.html","title":"injectable - LoaderService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  LoaderService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/loader.service.ts\n        \n\n            \n                Description\n            \n            \n                Handles displaying and hiding the loading spinner.\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                loaderState\n                            \n                            \n                                    Private\n                                loaderSubject\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                hide\n                            \n                            \n                                show\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/core/services/loader.service.ts:22\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            hide\n                            \n                            \n                        \n                    \n                \n                \n                    \nhide()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/services/loader.service.ts:39\n                            \n                        \n\n\n                \n                    \n                            Sets the loaderSubject to show: false to hide the loading spinner.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            show\n                            \n                            \n                        \n                    \n                \n                \n                    \nshow()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/services/loader.service.ts:32\n                            \n                        \n\n\n                \n                    \n                            Sets the loaderSubject to show: true to display the loading spinner.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loaderState\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        loaderState:     Observable\n\n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/services/loader.service.ts:20\n                            \n                        \n\n                \n                    \n                        An Observable for the state of the loader. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            loaderSubject\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        loaderSubject:     Subject\n\n                    \n                \n                    \n                        \n                            Type :     Subject\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/services/loader.service.ts:22\n                            \n                        \n\n                \n                    \n                        The state of the loader. \n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Observable, Subject } from 'rxjs';\n\n/**\n * The state of the loader.\n */\nexport interface LoaderState {\n    /** Boolean to indicate whether to show or hide the loading spinner. */\n    show: boolean;\n}\n\n/**\n * Handles displaying and hiding the loading spinner.\n */\n@Injectable()\nexport class LoaderService {\n\n    /** An Observable for the state of the loader. */\n    loaderState: Observable;\n    /** The state of the loader. */\n    private loaderSubject: Subject;\n\n    constructor() { \n        this.loaderSubject = new Subject();\n        this.loaderState = this.loaderSubject.asObservable();\n    }\n\n    /**\n     * Sets the loaderSubject to show: true to display the loading spinner.\n     */\n    show() {\n        this.loaderSubject.next({show: true});\n    }\n    \n    /**\n     * Sets the loaderSubject to show: false to hide the loading spinner.\n     */\n    hide() {\n        this.loaderSubject.next({show: false});\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/LoaderState.html":{"url":"interfaces/LoaderState.html","title":"interface - LoaderState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  LoaderState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/loader.service.ts\n        \n\n            \n                Description\n            \n            \n                The state of the loader.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        show\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        show\n                                    \n                                \n                                \n                                    \n                                        show:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Boolean to indicate whether to show or hide the loading spinner. \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Observable, Subject } from 'rxjs';\n\n/**\n * The state of the loader.\n */\nexport interface LoaderState {\n    /** Boolean to indicate whether to show or hide the loading spinner. */\n    show: boolean;\n}\n\n/**\n * Handles displaying and hiding the loading spinner.\n */\n@Injectable()\nexport class LoaderService {\n\n    /** An Observable for the state of the loader. */\n    loaderState: Observable;\n    /** The state of the loader. */\n    private loaderSubject: Subject;\n\n    constructor() { \n        this.loaderSubject = new Subject();\n        this.loaderState = this.loaderSubject.asObservable();\n    }\n\n    /**\n     * Sets the loaderSubject to show: true to display the loading spinner.\n     */\n    show() {\n        this.loaderSubject.next({show: true});\n    }\n    \n    /**\n     * Sets the loaderSubject to show: false to hide the loading spinner.\n     */\n    hide() {\n        this.loaderSubject.next({show: false});\n    }\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Logger.html":{"url":"classes/Logger.html","title":"class - Logger","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  Logger\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/logger.service.ts\n        \n\n            \n                Description\n            \n            \n                A simple logging interface.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                error\n                            \n                            \n                                info\n                            \n                            \n                                warn\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            error\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        error:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/services/logger.service.ts:13\n                            \n                        \n\n                \n                    \n                        Log error to the console. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            info\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        info:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/services/logger.service.ts:9\n                            \n                        \n\n                \n                    \n                        Log to the console. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            warn\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        warn:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/services/logger.service.ts:11\n                            \n                        \n\n                \n                    \n                        Log warning to the console. \n\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\n/**\n * A simple logging interface.\n */\nexport abstract class Logger {\n    /** Log to the console. */\n    info: any;\n    /** Log warning to the console. */\n    warn: any;\n    /** Log error to the console. */\n    error: any;\n}\n\n/**\n * Default implementation for logging. The service and Logger are taken\n * from the below URL.\n * \n * https://robferguson.org/blog/2017/09/09/a-simple-logging-service-for-angular-4/\n */\n@Injectable()\nexport class LoggerService implements Logger {\n    /** Log to the console. */\n    info: any;\n    /** Log warning to the console. */\n    warn: any;\n    /** Log error to the console. */\n    error: any;\n\n    /**\n     * Logs to the correct source file name and line number and passes along any\n     * arguments.\n     * \n     * @param type The console type.\n     * @param args Any optional args.\n     */\n    invokeConsoleMethod(type: string, args?: any): void {}  \n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LoggerService.html":{"url":"injectables/LoggerService.html","title":"injectable - LoggerService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  LoggerService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/logger.service.ts\n        \n\n            \n                Description\n            \n            \n                Default implementation for logging. The service and Logger are taken\nfrom the below URL.\nhttps://robferguson.org/blog/2017/09/09/a-simple-logging-service-for-angular-4/\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                error\n                            \n                            \n                                info\n                            \n                            \n                                warn\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                invokeConsoleMethod\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            invokeConsoleMethod\n                            \n                            \n                        \n                    \n                \n                \n                    \ninvokeConsoleMethod(type: string, args?: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/services/logger.service.ts:38\n                            \n                        \n\n\n                \n                    \n                            Logs to the correct source file name and line number and passes along any\narguments.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        type\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                The console type.\n\n                                                        \n                                                \n                                                \n                                                        args\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            yes\n                                                    \n                                                    \n\n                                                        \n                                                                Any optional args.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            error\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        error:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/services/logger.service.ts:29\n                            \n                        \n\n                \n                    \n                        Log error to the console. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            info\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        info:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/services/logger.service.ts:25\n                            \n                        \n\n                \n                    \n                        Log to the console. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            warn\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        warn:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/services/logger.service.ts:27\n                            \n                        \n\n                \n                    \n                        Log warning to the console. \n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\n/**\n * A simple logging interface.\n */\nexport abstract class Logger {\n    /** Log to the console. */\n    info: any;\n    /** Log warning to the console. */\n    warn: any;\n    /** Log error to the console. */\n    error: any;\n}\n\n/**\n * Default implementation for logging. The service and Logger are taken\n * from the below URL.\n * \n * https://robferguson.org/blog/2017/09/09/a-simple-logging-service-for-angular-4/\n */\n@Injectable()\nexport class LoggerService implements Logger {\n    /** Log to the console. */\n    info: any;\n    /** Log warning to the console. */\n    warn: any;\n    /** Log error to the console. */\n    error: any;\n\n    /**\n     * Logs to the correct source file name and line number and passes along any\n     * arguments.\n     * \n     * @param type The console type.\n     * @param args Any optional args.\n     */\n    invokeConsoleMethod(type: string, args?: any): void {}  \n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MatPaginatorCustom.html":{"url":"injectables/MatPaginatorCustom.html","title":"injectable - MatPaginatorCustom","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  MatPaginatorCustom\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/tasks/shared/util/mat-paginator-custom.ts\n        \n\n            \n                Description\n            \n            \n                Extension of MatPaginatorIntl to define custom labels and text displayed.\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                getRangeLabel\n                            \n                            \n                                nextPageLabel\n                            \n                            \n                                previousPageLabel\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getRangeLabel\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        getRangeLabel:     \n\n                    \n                \n                    \n                        \n                            Default value : function (page, pageSize, length) {\n        if (length == 0 || pageSize == 0) { \n            return `0 of ${length}`; \n        } \n        length = Math.max(length, 0); \n        const startIndex = page * pageSize; \n        const endIndex = startIndex \n                        \n                    \n                        \n                            \n                                    Defined in src/app/tasks/shared/util/mat-paginator-custom.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            nextPageLabel\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        nextPageLabel:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : 'Next Task'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tasks/shared/util/mat-paginator-custom.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            previousPageLabel\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        previousPageLabel:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : 'Previous Task'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tasks/shared/util/mat-paginator-custom.ts:11\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { MatPaginatorIntl } from '@angular/material';\n\n/**\n * Extension of MatPaginatorIntl to define custom labels and text displayed.\n */\n@Injectable()\nexport class MatPaginatorCustom extends MatPaginatorIntl {\n    nextPageLabel     = 'Next Task';\n    previousPageLabel = 'Previous Task';\n\n    getRangeLabel = function (page, pageSize, length) {\n        if (length == 0 || pageSize == 0) { \n            return `0 of ${length}`; \n        } \n        length = Math.max(length, 0); \n        const startIndex = page * pageSize; \n        const endIndex = startIndex \n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PageNotFoundComponent.html":{"url":"components/PageNotFoundComponent.html","title":"component - PageNotFoundComponent","body":"\n                   \n\n\n\n\n\n  Components\n  PageNotFoundComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/page-not-found/page-not-found.component.ts\n\n\n    \n        Description\n    \n    \n        Creates the base page not found (404) component for the app.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-page-not-found\n            \n\n            \n                styleUrls\n                page-not-found.component.css\n            \n\n\n\n            \n                templateUrl\n                ./page-not-found.component.html\n            \n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n/**\n * Creates the base page not found (404) component for the app.\n */\n@Component({\n  selector: 'app-page-not-found',\n  templateUrl: './page-not-found.component.html',\n  styleUrls: ['./page-not-found.component.css']\n})\nexport class PageNotFoundComponent {}\n\n    \n\n    \n        \n  404\n  Sorry, but it looks like the page you are looking for does not exist.\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  404  Sorry, but it looks like the page you are looking for does not exist.'\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ButtonBarComponent', 'selector': 'button-bar'},{'name': 'ButtonsComponent', 'selector': 'buttons'},{'name': 'CompleteTaskComponent', 'selector': 'complete-task'},{'name': 'CompleteTasksTableComponent', 'selector': 'complete-tasks-table'},{'name': 'ConfirmDeleteTaskComponent', 'selector': 'confirm-delete'},{'name': 'CreateTaskComponent', 'selector': 'create-task'},{'name': 'EditTaskComponent', 'selector': 'edit-task'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'ListItemComponent', 'selector': 'list-item'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'PendingTasksTableComponent', 'selector': 'pending-tasks-table'},{'name': 'RecurringTaskComponent', 'selector': 'recurring-task'},{'name': 'SidenavTasksComponent', 'selector': 'sidenav-tasks'},{'name': 'TaskFormComponent', 'selector': 'task-form'},{'name': 'TasksComponent', 'selector': 'tasks-root'},{'name': 'TasksFilterComponent', 'selector': 'tasks-filter'},{'name': 'TasksTableComponent', 'selector': 'tasks-table'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'PageNotFoundComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PendingTasksTableComponent.html":{"url":"components/PendingTasksTableComponent.html","title":"component - PendingTasksTableComponent","body":"\n                   \n\n\n\n\n\n  Components\n  PendingTasksTableComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/tasks/table/pending-tasks-table.component.ts\n\n\n    \n        Description\n    \n    \n        A wrapper for the TasksTableComponent which only displays pending Tasks.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                pending-tasks-table\n            \n\n            \n                styleUrls\n                pending-tasks-table.component.css\n            \n\n\n\n            \n                templateUrl\n                ./pending-tasks-table.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                pendingTasks\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            pendingTasks\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        pendingTasks:     TasksTableComponent\n\n                    \n                \n                    \n                        \n                            Type :     TasksTableComponent\n\n                        \n                    \n                    \n                        \n                            Decorators : ViewChild\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tasks/table/pending-tasks-table.component.ts:18\n                            \n                        \n\n                \n                    \n                        The table containing the pending Tasks. \n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, ViewChild } from '@angular/core';\n\n/* app */\nimport { TasksTableComponent } from '@tasks/table/tasks-table.component';\n\n/**\n * A wrapper for the TasksTableComponent which only displays pending Tasks.\n */\n@Component({\n    selector: 'pending-tasks-table',\n    templateUrl: './pending-tasks-table.component.html',\n    styleUrls: ['./pending-tasks-table.component.css']\n})\nexport class PendingTasksTableComponent {\n\n    /** The table containing the pending Tasks. */\n    @ViewChild('pendingTasks') pendingTasks: TasksTableComponent; \n}\n\n    \n\n    \n        \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ButtonBarComponent', 'selector': 'button-bar'},{'name': 'ButtonsComponent', 'selector': 'buttons'},{'name': 'CompleteTaskComponent', 'selector': 'complete-task'},{'name': 'CompleteTasksTableComponent', 'selector': 'complete-tasks-table'},{'name': 'ConfirmDeleteTaskComponent', 'selector': 'confirm-delete'},{'name': 'CreateTaskComponent', 'selector': 'create-task'},{'name': 'EditTaskComponent', 'selector': 'edit-task'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'ListItemComponent', 'selector': 'list-item'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'PendingTasksTableComponent', 'selector': 'pending-tasks-table'},{'name': 'RecurringTaskComponent', 'selector': 'recurring-task'},{'name': 'SidenavTasksComponent', 'selector': 'sidenav-tasks'},{'name': 'TaskFormComponent', 'selector': 'task-form'},{'name': 'TasksComponent', 'selector': 'tasks-root'},{'name': 'TasksFilterComponent', 'selector': 'tasks-filter'},{'name': 'TasksTableComponent', 'selector': 'tasks-table'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'PendingTasksTableComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/RecurringTaskComponent.html":{"url":"components/RecurringTaskComponent.html","title":"component - RecurringTaskComponent","body":"\n                   \n\n\n\n\n\n  Components\n  RecurringTaskComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/tasks/edit/recurring-task.component.ts\n\n\n    \n        Description\n    \n    \n        Creates a dialog to select whether to edit a single or all remaining Tasks\nin a sequence of Tasks. This component expects the given Task to be a \nrecurring one.\n\n    \n\n\n    \n        Implements\n    \n    \n                OnDestroy\n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                recurring-task\n            \n\n            \n                styleUrls\n                recurring-task.component.css\n            \n\n\n\n            \n                templateUrl\n                ./recurring-task.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                editRecurringTaskForm\n                            \n                            \n                                    Private\n                                sub\n                            \n                            \n                                task\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                cancel\n                            \n                            \n                                edit\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                updateAll\n                            \n                        \n                    \n                \n\n                \n                    \n                        HostBindings\n                    \n                \n                \n                    \n                        \n                            \n                                class.marker-repeating-task-dialog\n                            \n                        \n                    \n                \n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(data: any, dialogRef: MatDialogRef, formBuilder: FormBuilder)\n                    \n                \n                        \n                            \n                                Defined in src/app/tasks/edit/recurring-task.component.ts:30\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                    any\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialogRef\n                                                  \n                                                        \n                                                                    MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        formBuilder\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        updateAll\n                    \n                    \n                        Event emitted when user clicks the \"Edit\" button (emits boolean value updateAll=true if updating all Tasks). \n\n                        $event type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/tasks/edit/recurring-task.component.ts:28\n                            \n                        \n            \n        \n\n    \n    HostBindings        \n            \n                \n                    \n                        \n                        \n                            \n                            class.marker-repeating-task-dialog\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        class.marker-repeating-task-dialog:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tasks/edit/recurring-task.component.ts:22\n                            \n                        \n\n\n            \n        \n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            cancel\n                            \n                            \n                        \n                    \n                \n                \n                    \ncancel()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/tasks/edit/recurring-task.component.ts:43\n                            \n                        \n\n\n                \n                    \n                            Cancels the Task edit and closes the dialog.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            edit\n                            \n                            \n                        \n                    \n                \n                \n                    \nedit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/tasks/edit/recurring-task.component.ts:76\n                            \n                        \n\n\n                \n                    \n                            Opens the dialog to edit a Task.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnDestroy\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnDestroy()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/tasks/edit/recurring-task.component.ts:50\n                            \n                        \n\n\n                \n                    \n                            Clean the component \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/tasks/edit/recurring-task.component.ts:57\n                            \n                        \n\n\n                \n                    \n                            Initialize the component.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            editRecurringTaskForm\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        editRecurringTaskForm:     FormGroup\n\n                    \n                \n                    \n                        \n                            Type :     FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tasks/edit/recurring-task.component.ts:24\n                            \n                        \n\n                \n                    \n                        The form to select whether to edit single or all remaining Tasks. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            sub\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        sub:     Subscription\n\n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tasks/edit/recurring-task.component.ts:30\n                            \n                        \n\n                \n                    \n                        The subscriptions for the component. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            task\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        task:     Task\n\n                    \n                \n                    \n                        \n                            Type :     Task\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tasks/edit/recurring-task.component.ts:26\n                            \n                        \n\n                \n                    \n                        The recurring Task to edit. \n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, EventEmitter, HostBinding, Inject, OnDestroy, OnInit, Output } from '@angular/core';\nimport { FormGroup, Validators, FormBuilder } from '@angular/forms';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\nimport { Subscription } from 'rxjs/Subscription';\n\n/* app */\nimport { Task } from '@tasks/shared/models/task.model';\n\n/**\n * Creates a dialog to select whether to edit a single or all remaining Tasks\n * in a sequence of Tasks. This component expects the given Task to be a \n * recurring one.\n */\n@Component({\n    selector: 'recurring-task',\n    templateUrl: './recurring-task.component.html',\n    styleUrls: ['./recurring-task.component.css']\n})\nexport class RecurringTaskComponent implements OnDestroy, OnInit {\n\n    @HostBinding('class.marker-repeating-task-dialog') classMarker : boolean = true;\n    /** The form to select whether to edit single or all remaining Tasks. */\n    editRecurringTaskForm: FormGroup;\n    /** The recurring Task to edit. */\n    task: Task;\n    /** Event emitted when user clicks the \"Edit\" button (emits boolean value updateAll=true if updating all Tasks). */\n    @Output() updateAll: EventEmitter;\n    /** The subscriptions for the component. */\n    private sub: Subscription;\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private data:any,\n        private dialogRef: MatDialogRef,\n        private formBuilder: FormBuilder\n    ) {\n        this.updateAll = new EventEmitter();\n    }\n\n    /**\n     * Cancels the Task edit and closes the dialog.\n     */\n    cancel() {\n        this.dialogRef.close();\n    }\n\n    /**\n     * Clean the component \n     */\n    ngOnDestroy() {\n        this.sub.unsubscribe();\n    }\n\n    /**\n     * Initialize the component.\n     */\n    ngOnInit() {\n        this.task = this.data.task;\n\n        this.editRecurringTaskForm = this.formBuilder.group({\n            updateAll: [\n                {\n                    value: '',\n                    disabled: false\n                },\n                Validators.required\n            ]\n        });\n\n        this.sub = new Subscription();\n    }\n\n    /**\n     * Opens the dialog to edit a Task.\n     */\n    edit() {\n        let updateAll: boolean;\n        if(this.editRecurringTaskForm.get('updateAll').value == 'all') {\n            updateAll = true;\n        }\n        else {\n            updateAll = false;\n        }\n        this.updateAll.emit(updateAll);\n        this.dialogRef.close();\n    }\n}\n\n    \n\n    \n        \n    Edit Recurring Item\n\n\n    \n        \n            Just this Task\n            This and all remaining Tasks in sequence\n        \n    \n\n\n    Cancel\n    \n        \n             \n            Edit\n        \n    \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    Edit Recurring Item                        Just this Task            This and all remaining Tasks in sequence                Cancel                                     Edit            '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ButtonBarComponent', 'selector': 'button-bar'},{'name': 'ButtonsComponent', 'selector': 'buttons'},{'name': 'CompleteTaskComponent', 'selector': 'complete-task'},{'name': 'CompleteTasksTableComponent', 'selector': 'complete-tasks-table'},{'name': 'ConfirmDeleteTaskComponent', 'selector': 'confirm-delete'},{'name': 'CreateTaskComponent', 'selector': 'create-task'},{'name': 'EditTaskComponent', 'selector': 'edit-task'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'ListItemComponent', 'selector': 'list-item'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'PendingTasksTableComponent', 'selector': 'pending-tasks-table'},{'name': 'RecurringTaskComponent', 'selector': 'recurring-task'},{'name': 'SidenavTasksComponent', 'selector': 'sidenav-tasks'},{'name': 'TaskFormComponent', 'selector': 'task-form'},{'name': 'TasksComponent', 'selector': 'tasks-root'},{'name': 'TasksFilterComponent', 'selector': 'tasks-filter'},{'name': 'TasksTableComponent', 'selector': 'tasks-table'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'RecurringTaskComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SidenavTasksComponent.html":{"url":"components/SidenavTasksComponent.html","title":"component - SidenavTasksComponent","body":"\n                   \n\n\n\n\n\n  Components\n  SidenavTasksComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/tasks/sidenav/sidenav-tasks.component.ts\n\n\n    \n        Description\n    \n    \n        Creates the main layout for the application. The main layout currently\nconsists of the header, side menu, footer, and router-outlet.\n\n    \n\n\n    \n        Implements\n    \n    \n                OnDestroy\n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                sidenav-tasks\n            \n\n            \n                styleUrls\n                sidenav-tasks.component.css\n            \n\n\n\n            \n                templateUrl\n                ./sidenav-tasks.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                isExpanded\n                            \n                            \n                                isMediumScreen\n                            \n                            \n                                listItems\n                            \n                            \n                                numTasksDueToday\n                            \n                            \n                                numTasksDueTomorrow\n                            \n                            \n                                numTasksOverDue\n                            \n                            \n                                selectedIndex\n                            \n                            \n                                    Private\n                                sidenavRoutes\n                            \n                            \n                                    Private\n                                sub\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                getRouteParamsFromChild\n                            \n                            \n                                    Private\n                                highlightListItem\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                openCreateTaskDialog\n                            \n                            \n                                select\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dialog: MatDialog, route: ActivatedRoute, router: Router, taskService: TaskService, utilsService: UtilsService)\n                    \n                \n                        \n                            \n                                Defined in src/app/tasks/sidenav/sidenav-tasks.component.ts:53\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                    ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        taskService\n                                                  \n                                                        \n                                                                    TaskService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        utilsService\n                                                  \n                                                        \n                                                                    UtilsService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            getRouteParamsFromChild\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getRouteParamsFromChild()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/tasks/sidenav/sidenav-tasks.component.ts:141\n                            \n                        \n\n\n                \n                    \n                            Traverses the route in the router state tree until it has reached\nthe last URL segement and returns the params from there.\n\n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            highlightListItem\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        highlightListItem(params: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/tasks/sidenav/sidenav-tasks.component.ts:159\n                            \n                        \n\n\n                \n                    \n                            Highlights the correct listItem in the sidenav based on the given\nparams (specifically filter params). If no filter params are found, \nthen the listItem is set based on the current URL (\"complete\" or \n\"pending\"). The listItems are highlighted by setting the \nselectedIndex of the listItem from the array of listItems defined \nfor the component.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        params\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                The parameters from the URL.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnDestroy\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnDestroy()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/tasks/sidenav/sidenav-tasks.component.ts:80\n                            \n                        \n\n\n                \n                    \n                            Unsubscribe from any subscriptions.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/tasks/sidenav/sidenav-tasks.component.ts:87\n                            \n                        \n\n\n                \n                    \n                            Initialize the component.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            openCreateTaskDialog\n                            \n                            \n                        \n                    \n                \n                \n                    \nopenCreateTaskDialog()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/tasks/sidenav/sidenav-tasks.component.ts:66\n                            \n                        \n\n\n                \n                    \n                            Opens the dialog to create a Task.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            select\n                            \n                            \n                        \n                    \n                \n                \n                    \nselect(index: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/tasks/sidenav/sidenav-tasks.component.ts:132\n                            \n                        \n\n\n                \n                    \n                            Updates the selected index for the sidenav items and navigates to the\nroute at the given index.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        index\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                The index of the sidenav item that was clicked. \n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isExpanded\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        isExpanded:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tasks/sidenav/sidenav-tasks.component.ts:25\n                            \n                        \n\n                \n                    \n                        Boolean to indicate if the sidenav is expanded (true if expanded). \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isMediumScreen\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        isMediumScreen:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tasks/sidenav/sidenav-tasks.component.ts:27\n                            \n                        \n\n                \n                    \n                        Boolean to indicate if the screen size is medium or smaller (true if screen is medium or smaller). \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            listItems\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        listItems:     any[]\n\n                    \n                \n                    \n                        \n                            Type :     any[]\n\n                        \n                    \n                    \n                        \n                            Default value : [\n        { buttonClass: 'defaultBadge right', icon: 'clipboard-list', marker: 'marker-list-item-pending-tasks', text: 'Pending', routerLink: '/pending' },\n        { buttonClass: 'overDueBadge right', icon: 'hourglass-end', marker: '', text: 'Over Due', routerLink: '/pending', routeParams: {filter: 'overdue' } },\n        { buttonClass: 'dueTodayBadge right', icon: 'hourglass-half', marker: '', text: 'Due Today', routerLink: '/pending', routeParams: {filter: 'today' } },\n        { buttonClass: 'dueTomorrowBadge right', icon: 'hourglass-start', marker: '', text: 'Due Tomorrow', routerLink: '/pending', routeParams: {filter: 'tomorrow'} },\n        { icon: 'clipboard-check', marker: 'marker-list-item-complete-tasks', text: 'Complete', routerLink: '/complete', routeParams: {filter: ''} }\n    ]\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tasks/sidenav/sidenav-tasks.component.ts:47\n                            \n                        \n\n                \n                    \n                        The properties for each of the list-items in the sidenav. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            numTasksDueToday\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        numTasksDueToday:     Observable\n\n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tasks/sidenav/sidenav-tasks.component.ts:31\n                            \n                        \n\n                \n                    \n                        The number of Tasks due today. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            numTasksDueTomorrow\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        numTasksDueTomorrow:     Observable\n\n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tasks/sidenav/sidenav-tasks.component.ts:33\n                            \n                        \n\n                \n                    \n                        The number of Tasks due tomorrow. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            numTasksOverDue\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        numTasksOverDue:     Observable\n\n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tasks/sidenav/sidenav-tasks.component.ts:29\n                            \n                        \n\n                \n                    \n                        The number of over due Tasks. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selectedIndex\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        selectedIndex:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tasks/sidenav/sidenav-tasks.component.ts:35\n                            \n                        \n\n                \n                    \n                        The index of the sidenav item that is selected. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            sidenavRoutes\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        sidenavRoutes:     any[]\n\n                    \n                \n                    \n                        \n                            Type :     any[]\n\n                        \n                    \n                    \n                        \n                            Default value : [\n        ['tasks/pending'], \n        ['tasks/pending', { filter: 'overdue' }], \n        ['tasks/pending', { filter: 'today' }],\n        ['tasks/pending', { filter: 'tomorrow' }],\n        ['tasks/complete']\n    ]\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tasks/sidenav/sidenav-tasks.component.ts:39\n                            \n                        \n\n                \n                    \n                        The routes with filter parameter for the sidenav items. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            sub\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        sub:     Subscription\n\n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tasks/sidenav/sidenav-tasks.component.ts:37\n                            \n                        \n\n                \n                    \n                        The subscriptions for the component. \n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { MatDialog, MatDialogConfig } from \"@angular/material\";\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Observable, Subscription } from 'rxjs';\nimport { filter } from 'rxjs/operators';\n\n/* app */\nimport { CreateTaskComponent } from '@tasks/dialogs/create-task/create-task.component';\nimport { UtilsService } from '@tasks/shared/services/utils.service';\nimport { TaskService } from '@tasks/shared/services/task.service';\n\n/**\n * Creates the main layout for the application. The main layout currently\n * consists of the header, side menu, footer, and router-outlet.\n */\n@Component({\n    selector: 'sidenav-tasks',\n    templateUrl: './sidenav-tasks.component.html',\n    styleUrls: ['./sidenav-tasks.component.css']\n})\nexport class SidenavTasksComponent implements OnDestroy, OnInit {\n\n    /** Boolean to indicate if the sidenav is expanded (true if expanded). */\n    isExpanded: boolean;\n    /** Boolean to indicate if the screen size is medium or smaller (true if screen is medium or smaller). */\n    isMediumScreen: boolean;\n    /** The number of over due Tasks. */\n    numTasksOverDue: Observable;\n    /** The number of Tasks due today. */\n    numTasksDueToday: Observable;\n    /** The number of Tasks due tomorrow. */\n    numTasksDueTomorrow: Observable;\n    /** The index of the sidenav item that is selected. */\n    selectedIndex: number;\n    /** The subscriptions for the component. */\n    private sub: Subscription;\n    /** The routes with filter parameter for the sidenav items. */\n    private sidenavRoutes: any[] = [\n        ['tasks/pending'], \n        ['tasks/pending', { filter: 'overdue' }], \n        ['tasks/pending', { filter: 'today' }],\n        ['tasks/pending', { filter: 'tomorrow' }],\n        ['tasks/complete']\n    ];\n    /** The properties for each of the list-items in the sidenav. */\n    listItems: any[] = [\n        { buttonClass: 'defaultBadge right', icon: 'clipboard-list', marker: 'marker-list-item-pending-tasks', text: 'Pending', routerLink: '/pending' },\n        { buttonClass: 'overDueBadge right', icon: 'hourglass-end', marker: '', text: 'Over Due', routerLink: '/pending', routeParams: {filter: 'overdue' } },\n        { buttonClass: 'dueTodayBadge right', icon: 'hourglass-half', marker: '', text: 'Due Today', routerLink: '/pending', routeParams: {filter: 'today' } },\n        { buttonClass: 'dueTomorrowBadge right', icon: 'hourglass-start', marker: '', text: 'Due Tomorrow', routerLink: '/pending', routeParams: {filter: 'tomorrow'} },\n        { icon: 'clipboard-check', marker: 'marker-list-item-complete-tasks', text: 'Complete', routerLink: '/complete', routeParams: {filter: ''} }\n    ];\n\n    constructor(\n        private dialog: MatDialog,\n        private route: ActivatedRoute,\n        private router: Router,\n        private taskService: TaskService,\n        private utilsService: UtilsService\n    ) {}\n\n    /**\n     * Opens the dialog to create a Task.\n     */\n    openCreateTaskDialog() {\n        const dialogConfig = new MatDialogConfig();\n        dialogConfig.width = '70%';\n        dialogConfig.maxWidth = '100vw';\n        dialogConfig.maxHeight = '100vh';\n        dialogConfig.autoFocus = false;\n        let createDialogRef = this.dialog.open(CreateTaskComponent, dialogConfig);\n\n        this.utilsService.fullScreenDialogSub(createDialogRef);\n    }\n\n    /**\n     * Unsubscribe from any subscriptions.\n     */\n    ngOnDestroy() {\n        this.sub.unsubscribe();\n    }\n\n    /**\n     * Initialize the component.\n     */\n    ngOnInit() {\n        this.numTasksDueToday = this.taskService.numTasksDueToday;\n        this.numTasksDueTomorrow = this.taskService.numTasksDueToday;\n        this.numTasksOverDue = this.taskService.numTasksOverDue;\n\n        this.sub = new Subscription();\n        const subMenuToggle = this.utilsService.sidenavMenuChanges.pipe(\n            filter(event => event === 'Collapse' || event === 'Expand')\n        ).subscribe(next => {\n            if(next === 'Collapse') {\n                this.isExpanded = false;\n            }\n            else {\n                this.isExpanded = true;\n            }\n        });\n        this.sub.add(subMenuToggle);\n\n        const subScreenSize = this.utilsService.isMediumScreen.subscribe((isMediumScreen: boolean) => {\n            this.isMediumScreen = isMediumScreen;\n            if(this.isExpanded && this.isMediumScreen) {\n                this.isExpanded = false;\n            }\n            else {\n                // set to true on medium or smaller devices, otherwise to false\n                this.isExpanded = !this.isMediumScreen;\n            }\n        });\n        this.sub.add(subScreenSize);\n\n        // subscribe to the parameters in the route\n        const params = this.getRouteParamsFromChild();\n        const sub = params.subscribe(params => {\n            // highlight the list-item based on the route params\n            this.highlightListItem(params);\n        });\n        this.sub.add(sub);\n    }\n\n    /**\n     * Updates the selected index for the sidenav items and navigates to the\n     * route at the given index.\n     * \n     * @param index The index of the sidenav item that was clicked. \n     */\n    select(index: number) {\n        this.selectedIndex = index;\n        this.router.navigate(this.sidenavRoutes[index]);\n    }\n\n    /**\n     * Traverses the route in the router state tree until it has reached\n     * the last URL segement and returns the params from there.\n     */\n    private getRouteParamsFromChild() {\n        let route = this.route;\n        while(route.firstChild) {\n            route = route.firstChild;\n        }\n        return route.params;\n    }\n\n    /**\n     * Highlights the correct listItem in the sidenav based on the given\n     * params (specifically filter params). If no filter params are found, \n     * then the listItem is set based on the current URL (\"complete\" or \n     * \"pending\"). The listItems are highlighted by setting the \n     * selectedIndex of the listItem from the array of listItems defined \n     * for the component.\n     * \n     * @param params The parameters from the URL.\n     */\n    private highlightListItem(params: any) {\n        // set the selectedIndex based on the value of the filter param\n        let filter: string = params['filter'];\n        if(filter == 'overdue') {\n            this.selectedIndex = 1;\n        }\n        else if(filter == 'today') {\n            this.selectedIndex = 2;\n        }\n        else if(filter == 'tomorrow') {\n            this.selectedIndex = 3;\n        }\n        else {\n            // if no filter parameter is present, then set the selectedIndex\n            // based on whether 'complete' is in the URL.\n            if(this.router.url.indexOf('complete') >= 0) {\n                this.selectedIndex = 4;\n            }\n            else {\n                this.selectedIndex = 0;\n            }\n        }\n    }\n}\n\n    \n\n    \n        \n    \n    Create Task\n    \n    \n\n\n    \n        \n        \n        \n    \n\n\n    \n        \n    \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '        Create Task                                                        '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ButtonBarComponent', 'selector': 'button-bar'},{'name': 'ButtonsComponent', 'selector': 'buttons'},{'name': 'CompleteTaskComponent', 'selector': 'complete-task'},{'name': 'CompleteTasksTableComponent', 'selector': 'complete-tasks-table'},{'name': 'ConfirmDeleteTaskComponent', 'selector': 'confirm-delete'},{'name': 'CreateTaskComponent', 'selector': 'create-task'},{'name': 'EditTaskComponent', 'selector': 'edit-task'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'ListItemComponent', 'selector': 'list-item'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'PendingTasksTableComponent', 'selector': 'pending-tasks-table'},{'name': 'RecurringTaskComponent', 'selector': 'recurring-task'},{'name': 'SidenavTasksComponent', 'selector': 'sidenav-tasks'},{'name': 'TaskFormComponent', 'selector': 'task-form'},{'name': 'TasksComponent', 'selector': 'tasks-root'},{'name': 'TasksFilterComponent', 'selector': 'tasks-filter'},{'name': 'TasksTableComponent', 'selector': 'tasks-table'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SidenavTasksComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SidenavTasksModule.html":{"url":"modules/SidenavTasksModule.html","title":"module - SidenavTasksModule","body":"\n                   \n\n\n\n\n  Modules\n  SidenavTasksModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_SidenavTasksModule\n\n\n\ncluster_SidenavTasksModule_declarations\n\n\n\ncluster_SidenavTasksModule_imports\n\n\n\ncluster_SidenavTasksModule_exports\n\n\n\n\nListItemComponent\n\nListItemComponent\n\n\n\nSidenavTasksModule\n\nSidenavTasksModule\n\nSidenavTasksModule -->\n\nListItemComponent->SidenavTasksModule\n\n\n\n\n\nSidenavTasksComponent\n\nSidenavTasksComponent\n\nSidenavTasksModule -->\n\nSidenavTasksComponent->SidenavTasksModule\n\n\n\n\n\nSidenavTasksComponent \n\nSidenavTasksComponent \n\nSidenavTasksComponent  -->\n\nSidenavTasksModule->SidenavTasksComponent \n\n\n\n\n\nCreateTaskModule\n\nCreateTaskModule\n\nSidenavTasksModule -->\n\nCreateTaskModule->SidenavTasksModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/tasks/sidenav/sidenav-tasks.module.ts\n        \n\n\n            \n                Description\n            \n            \n                Defines the components, services, and modules required to for the Tasks\nsidenav.\n\n            \n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                ListItemComponent\n                            \n                            \n                                SidenavTasksComponent\n                            \n                    \n                \n                \n                    EntryComponents\n                    \n                            \n                                SidenavTasksComponent\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    CreateTaskModule\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    SidenavTasksComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        /* angular libraries */\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { MatBadgeModule, MatButtonModule, MatListModule, MatSidenavModule, MatTooltipModule } from '@angular/material';\nimport { RouterModule } from '@angular/router';\n\n/* fontawesome */\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\nimport { library } from '@fortawesome/fontawesome-svg-core'\nimport { faHourglass } from '@fortawesome/free-regular-svg-icons';\nimport { faClipboardList, faClipboardCheck, faHourglassEnd, faHourglassHalf, faHourglassStart, faPaste } from '@fortawesome/free-solid-svg-icons';\n\n// Add icons to library for convenient access in components\nlibrary.add(faClipboardList, faClipboardCheck, faHourglass, faHourglassEnd, faHourglassHalf, faHourglassStart, faPaste);\n\n/* module */\nimport { SidenavTasksComponent } from './sidenav-tasks.component';\nimport { ListItemComponent } from './list-item.component';\nimport { CreateTaskModule } from '@tasks/dialogs/create-task/create-task.module';\n\n/**\n * Defines the components, services, and modules required to for the Tasks\n * sidenav.\n */\n@NgModule({\n    declarations: [\n        ListItemComponent,\n        SidenavTasksComponent\n    ],\n    imports: [\n        /* angular libraries */\n        CommonModule,\n        FlexLayoutModule,\n        MatBadgeModule, \n        MatButtonModule,\n        MatListModule, \n        MatSidenavModule, \n        MatTooltipModule,\n        RouterModule,\n\n        FontAwesomeModule,\n\n        /* app modules */\n        CreateTaskModule\n    ],\n    exports: [\n        SidenavTasksComponent\n    ],\n    entryComponents: [\n        SidenavTasksComponent\n    ]\n})\nexport class SidenavTasksModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Task.html":{"url":"classes/Task.html","title":"class - Task","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  Task\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/tasks/shared/models/task.model.ts\n        \n\n            \n                Description\n            \n            \n                A Task to be completed. A Task requires a name, description, and due date.\nBy default Tasks are marked pending (isComplete=false). Tasks can also have\na priority, a frequency that they repeat (daily, weekly, monthly, yearly), and\nthe number of times they repeat (if it repeats).\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                dateCompleted\n                            \n                            \n                                description\n                            \n                            \n                                dueDate\n                            \n                            \n                                endsAfter\n                            \n                            \n                                id\n                            \n                            \n                                isComplete\n                            \n                            \n                                name\n                            \n                            \n                                priority\n                            \n                            \n                                    Optional\n                                repeats\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            dateCompleted\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        dateCompleted:     Date\n\n                    \n                \n                    \n                        \n                            Type :     Date\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tasks/shared/models/task.model.ts:20\n                            \n                        \n\n                \n                    \n                        The date the Task is completed. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            description\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        description:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tasks/shared/models/task.model.ts:16\n                            \n                        \n\n                \n                    \n                        The description of the Task.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            dueDate\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        dueDate:     Date\n\n                    \n                \n                    \n                        \n                            Type :     Date\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tasks/shared/models/task.model.ts:18\n                            \n                        \n\n                \n                    \n                        The date the Task is due. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            endsAfter\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        endsAfter:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tasks/shared/models/task.model.ts:28\n                            \n                        \n\n                \n                    \n                        The number of times the Task will repeat (if it repeats). \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        id:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tasks/shared/models/task.model.ts:12\n                            \n                        \n\n                \n                    \n                        The unique identifier of the Task. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isComplete\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        isComplete:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tasks/shared/models/task.model.ts:22\n                            \n                        \n\n                \n                    \n                        Set to true if the Task is complete, false if it is pending. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        name:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tasks/shared/models/task.model.ts:14\n                            \n                        \n\n                \n                    \n                        The name of the Task. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            priority\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        priority:     PriorityTypes\n\n                    \n                \n                    \n                        \n                            Type :     PriorityTypes\n\n                        \n                    \n                    \n                        \n                            Default value : 'Low'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tasks/shared/models/task.model.ts:24\n                            \n                        \n\n                \n                    \n                        The priority of the Task (Low, Medium, High, or Urgent). \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            repeats\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        repeats:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : 'noRepeat'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tasks/shared/models/task.model.ts:26\n                            \n                        \n\n                \n                    \n                        The frequency the Task repeats: 'noRepeat', 'daily', 'weekly', 'monthly', 'yearly'. \n\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export type PriorityTypes = \"Low\" | \"Medium\" | \"High\" | \"Urgent\";\n\n/**\n * A Task to be completed. A Task requires a name, description, and due date.\n * By default Tasks are marked pending (isComplete=false). Tasks can also have\n * a priority, a frequency that they repeat (daily, weekly, monthly, yearly), and\n * the number of times they repeat (if it repeats).\n */\nexport class Task {\n    /** The unique identifier of the Task. */\n    id: number;\n    /** The name of the Task. */\n    name: string;\n    /** The description of the Task.*/\n    description: string;\n    /** The date the Task is due. */\n    dueDate: Date;\n    /** The date the Task is completed. */\n    dateCompleted: Date;\n    /** Set to true if the Task is complete, false if it is pending. */\n    isComplete: boolean = false;\n    /** The priority of the Task (Low, Medium, High, or Urgent). */\n    priority: PriorityTypes = 'Low';\n    /** The frequency the Task repeats: 'noRepeat', 'daily', 'weekly', 'monthly', 'yearly'. */\n    repeats?: string = 'noRepeat';\n    /** The number of times the Task will repeat (if it repeats). */\n    endsAfter: number = 0;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TaskFormComponent.html":{"url":"components/TaskFormComponent.html","title":"component - TaskFormComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TaskFormComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/tasks/form/task-form.component.ts\n\n\n    \n        Description\n    \n    \n        Creates the form to create or modify a Task. A Task is required in the @Input property if modifying a\nTask (no Task required when creating a Task). Complete and Pending Tasks can be modified using this form.\nThe following example is used to create a Task:\n\nThe following example is used to modify a Task:\n\n\n    \n\n\n    \n        Implements\n    \n    \n                OnDestroy\n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                task-form\n            \n\n            \n                styleUrls\n                task-form.component.css\n            \n\n\n\n            \n                templateUrl\n                ./task-form.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                dateCompletedForm\n                            \n                            \n                                isMediumScreen\n                            \n                            \n                                mainPropertiesForm\n                            \n                            \n                                minDueDate\n                            \n                            \n                                repeatPropertiesForm\n                            \n                            \n                                sub\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                checkError\n                            \n                            \n                                    Private\n                                checkFormError\n                            \n                            \n                                getFormData\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                task\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                formValid\n                            \n                        \n                    \n                \n\n                \n                    \n                        HostBindings\n                    \n                \n                \n                    \n                        \n                            \n                                class.marker-task-form\n                            \n                        \n                    \n                \n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(formBuilder: FormBuilder, utilsService: UtilsService)\n                    \n                \n                        \n                            \n                                Defined in src/app/tasks/form/task-form.component.ts:50\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        formBuilder\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        utilsService\n                                                  \n                                                        \n                                                                    UtilsService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        task\n                    \n                    \n                        The Task to edit. \n\n                            \n                            Type:    Task\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/tasks/form/task-form.component.ts:36\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        formValid\n                    \n                    \n                        Event emitted when form is checked\n\n                        $event type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/tasks/form/task-form.component.ts:38\n                            \n                        \n            \n        \n\n    \n    HostBindings        \n            \n                \n                    \n                        \n                        \n                            \n                            class.marker-task-form\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        class.marker-task-form:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tasks/form/task-form.component.ts:34\n                            \n                        \n\n\n            \n        \n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            checkError\n                            \n                            \n                        \n                    \n                \n                \n                    \ncheckError(property: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/tasks/form/task-form.component.ts:63\n                            \n                        \n\n\n                \n                    \n                            Checks the form for errors based on the given property when the property is updated on the\nform.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        property\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                The property to check for error.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            checkFormError\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        checkFormError(form: FormGroup, property: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/tasks/form/task-form.component.ts:81\n                            \n                        \n\n\n                \n                    \n                            Returns true if the form is invalid and the property of the given form is dirty or it has\nbeen touched.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        form\n                                                        \n                                                                    FormGroup\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                The form to validate.\n\n                                                        \n                                                \n                                                \n                                                        property\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                The property that was updated.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getFormData\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetFormData(form: FormGroup)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/tasks/form/task-form.component.ts:90\n                            \n                        \n\n\n                \n                    \n                            Returns the form data as an Observable from the given formGroup.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        form\n                                                        \n                                                                    FormGroup\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                The from whose data should be returned. \n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnDestroy\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnDestroy()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/tasks/form/task-form.component.ts:106\n                            \n                        \n\n\n                \n                    \n                            Unsubscribe from any subscriptions.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/tasks/form/task-form.component.ts:113\n                            \n                        \n\n\n                \n                    \n                            Initialize the component. Creates the formGroups required for the component.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            update\n                            \n                            \n                        \n                    \n                \n                \n                    \nupdate(property: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/tasks/form/task-form.component.ts:197\n                            \n                        \n\n\n                \n                    \n                            Handles updating the form validity when a property is updated on the form and emits the formValid\nevent.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        property\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            dateCompletedForm\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        dateCompletedForm:     FormGroup\n\n                    \n                \n                    \n                        \n                            Type :     FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tasks/form/task-form.component.ts:40\n                            \n                        \n\n                \n                    \n                        The form for the dateCompleted property. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isMediumScreen\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        isMediumScreen:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tasks/form/task-form.component.ts:46\n                            \n                        \n\n                \n                    \n                        Boolean to indicate if the screen size is medium or smaller (true if screen is medium or smaller). \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            mainPropertiesForm\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        mainPropertiesForm:     FormGroup\n\n                    \n                \n                    \n                        \n                            Type :     FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tasks/form/task-form.component.ts:42\n                            \n                        \n\n                \n                    \n                        The form for the main properties (name, priority, description, and dueDate). \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            minDueDate\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        minDueDate:     Date\n\n                    \n                \n                    \n                        \n                            Type :     Date\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tasks/form/task-form.component.ts:48\n                            \n                        \n\n                \n                    \n                        The minimum date the Task can be marked due (defaults to todays date if Task creating Task). \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            repeatPropertiesForm\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        repeatPropertiesForm:     FormGroup\n\n                    \n                \n                    \n                        \n                            Type :     FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tasks/form/task-form.component.ts:44\n                            \n                        \n\n                \n                    \n                        The form for the repeat properties (repeats, after). \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sub\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        sub:     Subscription\n\n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tasks/form/task-form.component.ts:50\n                            \n                        \n\n                \n                    \n                        The subscriptions for the component. \n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import * as moment from 'moment';\n\n/* angular libraries */\nimport { Component, EventEmitter, HostBinding, Input, OnDestroy, OnInit, Output } from '@angular/core';\nimport { FormGroup, Validators, FormBuilder } from '@angular/forms';\nimport { Observable, Subscription } from 'rxjs';\nimport 'rxjs/add/observable/of';\nimport 'rxjs/add/operator/map';\nimport 'rxjs/add/operator/switchMap';\n\n/* app */\nimport { Task } from '@tasks/shared/models/task.model';\nimport { UtilsService } from '@tasks/shared/services/utils.service';\n\n/**\n * Creates the form to create or modify a Task. A Task is required in the @Input property if modifying a\n * Task (no Task required when creating a Task). Complete and Pending Tasks can be modified using this form.\n * The following example is used to create a Task:\n * \n * \n * \n * The following example is used to modify a Task:\n * \n * \n */\n@Component({\n    selector: 'task-form',\n    templateUrl: './task-form.component.html',\n    styleUrls: ['./task-form.component.css']\n})\nexport class TaskFormComponent implements OnDestroy, OnInit {\n    \n    @HostBinding('class.marker-task-form') classMarker : boolean = true;\n    /** The Task to edit. */\n    @Input() task: Task;\n    /** Event emitted when form is checked*/\n    @Output() formValid: EventEmitter = new EventEmitter();\n    /** The form for the dateCompleted property. */\n    dateCompletedForm: FormGroup;\n    /** The form for the main properties (name, priority, description, and dueDate). */\n    mainPropertiesForm: FormGroup;\n    /** The form for the repeat properties (repeats, after). */\n    repeatPropertiesForm: FormGroup;\n    /** Boolean to indicate if the screen size is medium or smaller (true if screen is medium or smaller). */\n    isMediumScreen: boolean;\n    /** The minimum date the Task can be marked due (defaults to todays date if Task creating Task). */\n    minDueDate: Date;\n    /** The subscriptions for the component. */\n    sub: Subscription;\n\n    constructor(\n        private formBuilder: FormBuilder,\n        private utilsService: UtilsService\n    ) {}\n\n    /**\n     * Checks the form for errors based on the given property when the property is updated on the\n     * form.\n     * \n     * @param property The property to check for error.\n     */\n    checkError(property: string) {\n        if(property == 'repeats' || property == 'after') {\n            // if the given property is \"repeats\" or \"after\" then check the repeatPropertiesForm\n            return this.checkFormError(this.repeatPropertiesForm, property);\n        }\n        else {\n            // else check the mainPropertiesForm\n            return this.checkFormError(this.mainPropertiesForm, property);\n        }        \n    }\n\n    /**\n     * Returns true if the form is invalid and the property of the given form is dirty or it has\n     * been touched.\n     * \n     * @param form The form to validate.\n     * @param property The property that was updated.\n     */\n    private checkFormError(form: FormGroup, property: string): boolean {\n        return form.get(property).invalid && (form.get(property).dirty || form.get(property).touched);\n    }\n\n    /**\n     * Returns the form data as an Observable from the given formGroup.\n     * \n     * @param form The from whose data should be returned. \n     */\n    getFormData(form: FormGroup): Observable {\n        return Observable.of(form.value)\n            .switchMap(formData => \n                Observable.of(formData)\n                .map((formData) => {\n                    return {\n                        value: formData,\n                        status: formData.status\n                    } as any\n                })\n            );\n    }\n\n    /**\n     * Unsubscribe from any subscriptions.\n     */\n    ngOnDestroy() {\n        this.sub.unsubscribe();\n    }\n\n    /**\n     * Initialize the component. Creates the formGroups required for the component.\n     */\n    ngOnInit() {\n        if(!this.task) {\n            // if the @Input task is not defined then create a dummy task to initialize the form data\n            this.task = new Task();\n            // and set the minDueDate to todays date (not sure it makes sense to allow due dates in past)\n            this.minDueDate = new Date();\n        }\n        else {\n            // otherwise set the minDueDate to the dueDate for the Task\n            this.minDueDate = this.task.dueDate;\n        }\n\n        // initialize the form with the dateCompleted property\n        this.dateCompletedForm = this.formBuilder.group({\n            dateCompleted: [\n                {\n                    value: moment(this.task.dateCompleted, moment.ISO_8601, true).isValid() ? moment(this.task.dateCompleted, moment.ISO_8601, true).utc().toDate() : null,\n                    disabled: true\n                }\n            ]\n        })\n\n        // initialize the form with the main properties (name, priority, description, and dueDate)\n        this.mainPropertiesForm = this.formBuilder.group({\n            name: [\n                {\n                    value: this.task.name, \n                    disabled: false\n                }, \n                [Validators.required]\n            ],\n            priority : [\n                {\n                    value: this.task.priority || 'Low',\n                    disabled: false\n                },\n                [Validators.required]\n            ],\n            description: [\n                {\n                    value: this.task.description, \n                    disabled: false\n                }, \n                [Validators.required]\n            ],\n            due: [\n                {\n                    value: moment(this.task.dueDate, moment.ISO_8601, true).isValid() ? moment(this.task.dueDate, moment.ISO_8601, true).utc().toDate() : null, \n                    disabled: this.task.isComplete\n                },\n                [Validators.required]\n            ]\n        });\n\n        // initialize the form with the repeat properties (repeats and after)\n        this.repeatPropertiesForm = this.formBuilder.group({\n            repeats: [\n                {\n                    value: this.task.repeats || 'noRepeat',\n                    disabled: this.task.id != null && (this.task.repeats == null || this.task.repeats == 'noRepeat')\n                },\n                [Validators.required]\n            ],\n            after: [\n                {\n                    value: this.task.endsAfter || '',\n                    disabled: this.task.repeats === 'noRepeat'\n                }\n            ]\n        });\n\n        this.sub = new Subscription();\n        const sub = this.utilsService.isMediumScreen.subscribe((isMediumScreen: boolean) => {\n            this.isMediumScreen = isMediumScreen;\n        });\n        this.sub.add(sub);\n    }\n\n    /**\n     * Handles updating the form validity when a property is updated on the form and emits the formValid\n     * event.\n     * \n     * @property property The form field that was updated\n     */\n    update(property: string) {\n        if(property == 'repeats') {\n            // enable or disable the repeatPropertiesForm based on the repeats value\n            let after = this.repeatPropertiesForm.get('after');\n            if(this.repeatPropertiesForm.get(property).value === 'noRepeat') {\n                // disable the repeatPropertiesForm if the repeats value is \"noRepeat\"\n                after.disable();\n                after.clearValidators();\n                after.updateValueAndValidity();\n            }\n            else {\n                // otherwise enable the repeatProperties form\n                after.enable();\n                after.setValidators([Validators.required]);\n                after.updateValueAndValidity();\n            }\n        }\n\n        // update the form validity and emit the formValid event\n        let formsValid: boolean;\n        if(this.task.isComplete || (!this.task.isComplete && this.repeatPropertiesForm.get('repeats').value == 'noRepeat')) {\n            // only need to check mainPropertiesForm is valid when task is complete or it does not repeat\n            formsValid = this.mainPropertiesForm.valid;\n        }\n        else {\n            // otherwise check both the mainPropertiesForm and repeatPropertiesForm\n            formsValid = this.mainPropertiesForm.valid && this.repeatPropertiesForm.valid;\n        }\n        this.formValid.emit(formsValid);\n    }\n}\n\n    \n\n    \n        \n    \n        Task Name\n        \n        You must enter a name   \n    \n    \n        Priority\n        \n            Low\n            Medium\n            High\n            Urgent\n        \n    \n    \n        Description\n        \n        You must enter a description   \n    \n    \n        Due Date\n        \n        \n        You must enter a due date\n        The date the task is due\n    \n    \n\n    \n    \n        \n        \n            Date Completed\n            \n            \n            The date the task is completed\n        \n        \n    \n\n    \n    \n        \n        \n            \n                Repeat\n                \n                    Does not repeat\n                    Daily\n                    Weekly\n                    Monthly\n                    Yearly\n                \n            \n            \n                End After\n                \n                Number of occurrences\n                You must enter a number\n            \n        \n    \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            Task Name                You must enter a name                   Priority                    Low            Medium            High            Urgent                        Description                You must enter a description                   Due Date                        You must enter a due date        The date the task is due                                            Date Completed                                    The date the task is completed                                                                        Repeat                                    Does not repeat                    Daily                    Weekly                    Monthly                    Yearly                                                        End After                                Number of occurrences                You must enter a number                        '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ButtonBarComponent', 'selector': 'button-bar'},{'name': 'ButtonsComponent', 'selector': 'buttons'},{'name': 'CompleteTaskComponent', 'selector': 'complete-task'},{'name': 'CompleteTasksTableComponent', 'selector': 'complete-tasks-table'},{'name': 'ConfirmDeleteTaskComponent', 'selector': 'confirm-delete'},{'name': 'CreateTaskComponent', 'selector': 'create-task'},{'name': 'EditTaskComponent', 'selector': 'edit-task'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'ListItemComponent', 'selector': 'list-item'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'PendingTasksTableComponent', 'selector': 'pending-tasks-table'},{'name': 'RecurringTaskComponent', 'selector': 'recurring-task'},{'name': 'SidenavTasksComponent', 'selector': 'sidenav-tasks'},{'name': 'TaskFormComponent', 'selector': 'task-form'},{'name': 'TasksComponent', 'selector': 'tasks-root'},{'name': 'TasksFilterComponent', 'selector': 'tasks-filter'},{'name': 'TasksTableComponent', 'selector': 'tasks-table'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TaskFormComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TaskFormModule.html":{"url":"modules/TaskFormModule.html","title":"module - TaskFormModule","body":"\n                   \n\n\n\n\n  Modules\n  TaskFormModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_TaskFormModule\n\n\n\ncluster_TaskFormModule_declarations\n\n\n\ncluster_TaskFormModule_exports\n\n\n\n\nTaskFormComponent\n\nTaskFormComponent\n\n\n\nTaskFormModule\n\nTaskFormModule\n\nTaskFormModule -->\n\nTaskFormComponent->TaskFormModule\n\n\n\n\n\nTaskFormComponent \n\nTaskFormComponent \n\nTaskFormComponent  -->\n\nTaskFormModule->TaskFormComponent \n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/tasks/form/task-form.module.ts\n        \n\n\n            \n                Description\n            \n            \n                Defines the components, services, and modules required for the Task form.\n\n            \n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                TaskFormComponent\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    TaskFormComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        /* angular libraries */\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatDatepickerModule, MatFormFieldModule, MatInputModule, MatNativeDateModule, MatSelectModule } from '@angular/material';\n\n/* module */\nimport { TaskFormComponent } from '@tasks/form/task-form.component';\n\n/**\n * Defines the components, services, and modules required for the Task form.\n */\n@NgModule({\n    declarations: [\n        TaskFormComponent\n    ],\n    imports: [\n        /* angular libraries */\n        CommonModule,\n        FlexLayoutModule,\n        FormsModule,\n        MatDatepickerModule,\n        MatFormFieldModule,\n        MatInputModule, \n        MatNativeDateModule,\n        MatSelectModule, \n        ReactiveFormsModule\n    ],\n    exports : [\n        TaskFormComponent\n    ]\n})\nexport class TaskFormModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TasksButtonBarModule.html":{"url":"modules/TasksButtonBarModule.html","title":"module - TasksButtonBarModule","body":"\n                   \n\n\n\n\n  Modules\n  TasksButtonBarModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_TasksButtonBarModule\n\n\n\ncluster_TasksButtonBarModule_declarations\n\n\n\ncluster_TasksButtonBarModule_imports\n\n\n\ncluster_TasksButtonBarModule_exports\n\n\n\n\nButtonBarComponent\n\nButtonBarComponent\n\n\n\nTasksButtonBarModule\n\nTasksButtonBarModule\n\nTasksButtonBarModule -->\n\nButtonBarComponent->TasksButtonBarModule\n\n\n\n\n\nButtonBarComponent \n\nButtonBarComponent \n\nButtonBarComponent  -->\n\nTasksButtonBarModule->ButtonBarComponent \n\n\n\n\n\nTasksButtonsModule\n\nTasksButtonsModule\n\nTasksButtonBarModule -->\n\nTasksButtonsModule->TasksButtonBarModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/tasks/button-bar/tasks-button-bar.module.ts\n        \n\n\n            \n                Description\n            \n            \n                Defines the components, services, and modules required for the button\nbar.\n\n            \n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                ButtonBarComponent\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    TasksButtonsModule\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    ButtonBarComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        /* angular libraries */\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { MatButtonModule, MatDialogModule, MatPaginatorModule } from '@angular/material';\nimport { RouterModule } from '@angular/router';\n\n/* fontawesome */\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\nimport { library } from '@fortawesome/fontawesome-svg-core'\nimport { faCheckSquare } from '@fortawesome/free-regular-svg-icons';\nimport { faArrowLeft, faCheck, faEdit, faPaste, faTrash } from '@fortawesome/free-solid-svg-icons';\n\n// Add icons to library for convenient access in components\nlibrary.add(faArrowLeft, faCheck, faCheckSquare, faEdit, faPaste, faTrash);\n\n/* module */\nimport { ButtonBarComponent } from './button-bar.component';\nimport { TasksButtonsModule } from '@tasks/buttons/tasks-buttons.module'; \n\n/**\n * Defines the components, services, and modules required for the button\n * bar.\n */\n@NgModule({\n    declarations: [\n        ButtonBarComponent\n    ],\n    imports: [\n        /* angular libraries */\n        CommonModule,\n        FlexLayoutModule,\n        MatButtonModule,\n        MatDialogModule,\n        MatPaginatorModule,\n        RouterModule,\n\n        FontAwesomeModule,\n        \n        TasksButtonsModule\n    ],\n    exports : [\n        ButtonBarComponent\n    ]\n})\nexport class TasksButtonBarModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TasksButtonsModule.html":{"url":"modules/TasksButtonsModule.html","title":"module - TasksButtonsModule","body":"\n                   \n\n\n\n\n  Modules\n  TasksButtonsModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_TasksButtonsModule\n\n\n\ncluster_TasksButtonsModule_declarations\n\n\n\ncluster_TasksButtonsModule_exports\n\n\n\n\nButtonsComponent\n\nButtonsComponent\n\n\n\nTasksButtonsModule\n\nTasksButtonsModule\n\nTasksButtonsModule -->\n\nButtonsComponent->TasksButtonsModule\n\n\n\n\n\nButtonsComponent \n\nButtonsComponent \n\nButtonsComponent  -->\n\nTasksButtonsModule->ButtonsComponent \n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/tasks/buttons/tasks-buttons.module.ts\n        \n\n\n            \n                Description\n            \n            \n                Defines the components, services, and modules required for main buttons\nto manage one or more Tasks. The main management capabilities for Tasks \ninclude completing, deleting, and editing.\n\n            \n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                ButtonsComponent\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    ButtonsComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        /* angular libraries */\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { MatButtonModule, MatDialogModule } from '@angular/material';\nimport { RouterModule } from '@angular/router';\n\n/* fontawesome */\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\nimport { library } from '@fortawesome/fontawesome-svg-core'\nimport { faCheckSquare } from '@fortawesome/free-regular-svg-icons';\nimport { faArrowLeft, faCheck, faEdit, faPaste, faTrash } from '@fortawesome/free-solid-svg-icons';\n\n// Add icons to library for convenient access in components\nlibrary.add(faArrowLeft, faCheck, faCheckSquare, faEdit, faPaste, faTrash);\n\n/* app */\nimport { ButtonsComponent } from '@tasks/buttons/buttons.component';\n\n/**\n * Defines the components, services, and modules required for main buttons\n * to manage one or more Tasks. The main management capabilities for Tasks \n * include completing, deleting, and editing.\n */\n@NgModule({\n    declarations: [\n        ButtonsComponent\n    ],\n    imports: [\n        /* angular libraries */\n        CommonModule,\n        FlexLayoutModule,\n        MatButtonModule,\n        MatDialogModule,\n        RouterModule,\n\n        FontAwesomeModule\n    ],\n    exports : [\n        ButtonsComponent\n    ]\n})\nexport class TasksButtonsModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TasksComponent.html":{"url":"components/TasksComponent.html","title":"component - TasksComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TasksComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/tasks/tasks.component.ts\n\n\n    \n        Description\n    \n    \n        Creates the main layout for Tasks. The main layout currently\nconsists of the side menu and router-outlet.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                tasks-root\n            \n\n            \n                styleUrls\n                tasks.component.css\n            \n\n\n\n            \n                templateUrl\n                ./tasks.component.html\n            \n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n/**\n * Creates the main layout for Tasks. The main layout currently\n * consists of the side menu and router-outlet.\n */\n@Component({\n    selector: 'tasks-root',\n    templateUrl: './tasks.component.html',\n    styleUrls: ['./tasks.component.css']\n})\nexport class TasksComponent {}\n\n    \n\n    \n        \n    \n        \n    \n    \n        \n    \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ButtonBarComponent', 'selector': 'button-bar'},{'name': 'ButtonsComponent', 'selector': 'buttons'},{'name': 'CompleteTaskComponent', 'selector': 'complete-task'},{'name': 'CompleteTasksTableComponent', 'selector': 'complete-tasks-table'},{'name': 'ConfirmDeleteTaskComponent', 'selector': 'confirm-delete'},{'name': 'CreateTaskComponent', 'selector': 'create-task'},{'name': 'EditTaskComponent', 'selector': 'edit-task'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'ListItemComponent', 'selector': 'list-item'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'PendingTasksTableComponent', 'selector': 'pending-tasks-table'},{'name': 'RecurringTaskComponent', 'selector': 'recurring-task'},{'name': 'SidenavTasksComponent', 'selector': 'sidenav-tasks'},{'name': 'TaskFormComponent', 'selector': 'task-form'},{'name': 'TasksComponent', 'selector': 'tasks-root'},{'name': 'TasksFilterComponent', 'selector': 'tasks-filter'},{'name': 'TasksTableComponent', 'selector': 'tasks-table'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TasksComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TasksDialogModule.html":{"url":"modules/TasksDialogModule.html","title":"module - TasksDialogModule","body":"\n                   \n\n\n\n\n  Modules\n  TasksDialogModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_TasksDialogModule\n\n\n\ncluster_TasksDialogModule_imports\n\n\n\n\nCompleteTaskModule\n\nCompleteTaskModule\n\n\n\nTasksDialogModule\n\nTasksDialogModule\n\nTasksDialogModule -->\n\nCompleteTaskModule->TasksDialogModule\n\n\n\n\n\nConfirmDeleteTaskModule\n\nConfirmDeleteTaskModule\n\nTasksDialogModule -->\n\nConfirmDeleteTaskModule->TasksDialogModule\n\n\n\n\n\nTaskFormModule\n\nTaskFormModule\n\nTasksDialogModule -->\n\nTaskFormModule->TasksDialogModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/tasks/dialogs/tasks-dialog.module.ts\n        \n\n\n            \n                Description\n            \n            \n                Defines the components, services, and modules required for dialogs.\n\n            \n        \n\n        \n            \n                \n                    Imports\n                    \n                            \n                                    CompleteTaskModule\n                            \n                            \n                                    ConfirmDeleteTaskModule\n                            \n                            \n                                    TaskFormModule\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        /* angular libraries */\nimport { NgModule } from '@angular/core';\n\n/* module */\nimport { CompleteTaskModule } from '@tasks/dialogs/complete-task/complete-task.module';\nimport { ConfirmDeleteTaskModule } from '@tasks/dialogs/confirm-delete-task/confirm-delete-task.module';\nimport { TaskFormModule } from '@tasks/form/task-form.module';\n\n/**\n * Defines the components, services, and modules required for dialogs.\n */\n@NgModule({\n    imports: [\n        /* app modules */\n        CompleteTaskModule,\n        ConfirmDeleteTaskModule,\n        TaskFormModule\n    ]\n})\nexport class TasksDialogModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TasksFilterComponent.html":{"url":"components/TasksFilterComponent.html","title":"component - TasksFilterComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TasksFilterComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/tasks/filter/tasks-filter.component.ts\n\n\n    \n        Description\n    \n    \n        Creates a small form with a single input element that contains a datepicker and\ncustom \"select\" functionality using a dropdown menu. The input element allows\nthe user to enter text or dates from the datepicker, and select a value from \nthe dropdown menu (over due, due today, or due tomorrow) to filter/search Tasks.\n\n    \n\n\n    \n        Implements\n    \n    \n                AfterViewInit\n                OnDestroy\n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                tasks-filter\n            \n\n            \n                styleUrls\n                tasks-filter.component.css\n            \n\n\n\n            \n                templateUrl\n                ./tasks-filter.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                isMediumScreen\n                            \n                            \n                                sub\n                            \n                            \n                                taskFilterInput\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                clear\n                            \n                            \n                                ngAfterViewInit\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                updateTaskFilter\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(taskService: TaskService, utilsService: UtilsService)\n                    \n                \n                        \n                            \n                                Defined in src/app/tasks/filter/tasks-filter.component.ts:28\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        taskService\n                                                  \n                                                        \n                                                                    TaskService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        utilsService\n                                                  \n                                                        \n                                                                    UtilsService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            clear\n                            \n                            \n                        \n                    \n                \n                \n                    \nclear()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/tasks/filter/tasks-filter.component.ts:38\n                            \n                        \n\n\n                \n                    \n                            Clears the the input and the Task filter in the TaskService.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngAfterViewInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngAfterViewInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/tasks/filter/tasks-filter.component.ts:66\n                            \n                        \n\n\n                \n                    \n                            Creates observables for taskFilterInput \"keyup\" event (when user is typing \ninto input element) and dueButtons \"click\" EventEmitter after the \ncomponent has been fully initialized. \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnDestroy\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnDestroy()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/tasks/filter/tasks-filter.component.ts:46\n                            \n                        \n\n\n                \n                    \n                            Unsubscribe from any subscriptions.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/tasks/filter/tasks-filter.component.ts:53\n                            \n                        \n\n\n                \n                    \n                            Initialize the component\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updateTaskFilter\n                            \n                            \n                        \n                    \n                \n                \n                    \nupdateTaskFilter()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/tasks/filter/tasks-filter.component.ts:86\n                            \n                        \n\n\n                \n                    \n                            Updates the taskFilter observable in the TaskService so that any elements\nlistening for a change to the filter can react accordingly. This method \nis used by the dateChange EventEmitter from the datepicker and the \"keyup\" \nevent defined for the taskFilterInput element. \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isMediumScreen\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        isMediumScreen:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tasks/filter/tasks-filter.component.ts:26\n                            \n                        \n\n                \n                    \n                        Boolean to indicate if the screen size is medium or smaller (true if screen is medium or smaller). \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sub\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        sub:     Subscription\n\n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tasks/filter/tasks-filter.component.ts:28\n                            \n                        \n\n                \n                    \n                        The subscriptions for the component. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            taskFilterInput\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        taskFilterInput:     ElementRef\n\n                    \n                \n                    \n                        \n                            Type :     ElementRef\n\n                        \n                    \n                    \n                        \n                            Decorators : ViewChild\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tasks/filter/tasks-filter.component.ts:24\n                            \n                        \n\n                \n                    \n                        The input element to filter Tasks. \n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { AfterViewInit, Component, ElementRef, OnDestroy, OnInit, ViewChild } from '@angular/core';\nimport { fromEvent, Subscription } from 'rxjs';\nimport { debounceTime, distinctUntilChanged } from 'rxjs/operators';\n\n/* app */\nimport { TaskService } from '@tasks/shared/services/task.service';\nimport { UtilsService } from '@tasks/shared/services/utils.service';\n\n/**\n * Creates a small form with a single input element that contains a datepicker and\n * custom \"select\" functionality using a dropdown menu. The input element allows\n * the user to enter text or dates from the datepicker, and select a value from \n * the dropdown menu (over due, due today, or due tomorrow) to filter/search Tasks.\n */\n@Component({\n    selector: 'tasks-filter',\n    templateUrl: './tasks-filter.component.html',\n    styleUrls: ['./tasks-filter.component.css']\n})\nexport class TasksFilterComponent implements AfterViewInit, OnDestroy, OnInit {\n\n    /** The input element to filter Tasks. */\n    @ViewChild('taskFilter') taskFilterInput: ElementRef;\n    /** Boolean to indicate if the screen size is medium or smaller (true if screen is medium or smaller). */\n    isMediumScreen: boolean;\n    /** The subscriptions for the component. */\n    sub: Subscription;\n\n    constructor(\n        private taskService: TaskService,\n        private utilsService: UtilsService\n    ) {}\n\n    /**\n     * Clears the the input and the Task filter in the TaskService.\n     */\n    clear() {\n        this.taskFilterInput.nativeElement.value = '';\n        this.updateTaskFilter();\n    }\n\n    /**\n     * Unsubscribe from any subscriptions.\n     */\n    ngOnDestroy() {\n        this.sub.unsubscribe();\n    }\n\n    /**\n     * Initialize the component\n     */\n    ngOnInit() {\n        this.sub = new Subscription();\n        const sub = this.utilsService.isMediumScreen.subscribe((isMediumScreen: boolean) => {\n            this.isMediumScreen = isMediumScreen;\n        });\n        this.sub.add(sub);\n    }\n\n    /**\n     * Creates observables for taskFilterInput \"keyup\" event (when user is typing \n     * into input element) and dueButtons \"click\" EventEmitter after the \n     * component has been fully initialized. \n     */\n    ngAfterViewInit() {\n        // create observable for the \"keyup\" event on the main input element but\n        // delay values emitted to prevent server overload (with debouceTime) and\n        // only emit when the current value is different from the last\n        fromEvent(this.taskFilterInput.nativeElement,'keyup')\n            .pipe(\n                debounceTime(150),\n                distinctUntilChanged()\n            ).subscribe(() => {\n                // update task filter observable in TaskService\n                this.updateTaskFilter();\n            });\n    }\n\n    /**\n     * Updates the taskFilter observable in the TaskService so that any elements\n     * listening for a change to the filter can react accordingly. This method \n     * is used by the dateChange EventEmitter from the datepicker and the \"keyup\" \n     * event defined for the taskFilterInput element. \n     */\n    updateTaskFilter() {\n        this.taskService.setTaskFilter(this.taskFilterInput.nativeElement.value);\n    }\n}\n\n    \n\n    \n        \n    \n         Search tasks \n          \n        \n        \n            \n        \n    \n      \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '             Search tasks                                                         '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ButtonBarComponent', 'selector': 'button-bar'},{'name': 'ButtonsComponent', 'selector': 'buttons'},{'name': 'CompleteTaskComponent', 'selector': 'complete-task'},{'name': 'CompleteTasksTableComponent', 'selector': 'complete-tasks-table'},{'name': 'ConfirmDeleteTaskComponent', 'selector': 'confirm-delete'},{'name': 'CreateTaskComponent', 'selector': 'create-task'},{'name': 'EditTaskComponent', 'selector': 'edit-task'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'ListItemComponent', 'selector': 'list-item'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'PendingTasksTableComponent', 'selector': 'pending-tasks-table'},{'name': 'RecurringTaskComponent', 'selector': 'recurring-task'},{'name': 'SidenavTasksComponent', 'selector': 'sidenav-tasks'},{'name': 'TaskFormComponent', 'selector': 'task-form'},{'name': 'TasksComponent', 'selector': 'tasks-root'},{'name': 'TasksFilterComponent', 'selector': 'tasks-filter'},{'name': 'TasksTableComponent', 'selector': 'tasks-table'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TasksFilterComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TasksFilterModule.html":{"url":"modules/TasksFilterModule.html","title":"module - TasksFilterModule","body":"\n                   \n\n\n\n\n  Modules\n  TasksFilterModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_TasksFilterModule\n\n\n\ncluster_TasksFilterModule_declarations\n\n\n\ncluster_TasksFilterModule_exports\n\n\n\n\nTasksFilterComponent\n\nTasksFilterComponent\n\n\n\nTasksFilterModule\n\nTasksFilterModule\n\nTasksFilterModule -->\n\nTasksFilterComponent->TasksFilterModule\n\n\n\n\n\nTasksFilterComponent \n\nTasksFilterComponent \n\nTasksFilterComponent  -->\n\nTasksFilterModule->TasksFilterComponent \n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/tasks/filter/tasks-filter.module.ts\n        \n\n\n            \n                Description\n            \n            \n                Defines the components, services, and modules required to filter Tasks.\n\n            \n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                TasksFilterComponent\n                            \n                    \n                \n                \n                    EntryComponents\n                    \n                            \n                                TasksFilterComponent\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    TasksFilterComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        /* angular libraries */\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { MatButtonModule, MatDatepickerModule, MatFormFieldModule, MatInputModule, MatNativeDateModule, MatTooltipModule } from '@angular/material';\n\n/* fontawesome */\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\nimport { library } from '@fortawesome/fontawesome-svg-core'\nimport { faSearch, faTimes } from '@fortawesome/free-solid-svg-icons';\n\n// Add icons to library for convenient access in components\nlibrary.add(faSearch, faTimes);\n\n/* module */\nimport { TasksFilterComponent } from '@tasks/filter/tasks-filter.component';\n\n/**\n * Defines the components, services, and modules required to filter Tasks.\n */\n@NgModule({\n    declarations: [\n        TasksFilterComponent\n    ],\n    imports: [\n        /* angular libraries */\n        CommonModule,\n        FlexLayoutModule,\n        MatButtonModule, \n        MatDatepickerModule, \n        MatFormFieldModule,\n        MatInputModule, \n        MatNativeDateModule,\n        MatTooltipModule, \n\n        FontAwesomeModule\n    ],\n    exports: [\n        TasksFilterComponent\n    ],\n    entryComponents: [\n        TasksFilterComponent\n    ]\n})\nexport class TasksFilterModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TasksModule.html":{"url":"modules/TasksModule.html","title":"module - TasksModule","body":"\n                   \n\n\n\n\n  Modules\n  TasksModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_TasksModule\n\n\n\ncluster_TasksModule_declarations\n\n\n\ncluster_TasksModule_imports\n\n\n\n\nTasksComponent\n\nTasksComponent\n\n\n\nTasksModule\n\nTasksModule\n\nTasksModule -->\n\nTasksComponent->TasksModule\n\n\n\n\n\nEditTaskModule\n\nEditTaskModule\n\nTasksModule -->\n\nEditTaskModule->TasksModule\n\n\n\n\n\nSidenavTasksModule\n\nSidenavTasksModule\n\nTasksModule -->\n\nSidenavTasksModule->TasksModule\n\n\n\n\n\nTasksRoutingModule\n\nTasksRoutingModule\n\nTasksModule -->\n\nTasksRoutingModule->TasksModule\n\n\n\n\n\nTasksTableModule\n\nTasksTableModule\n\nTasksModule -->\n\nTasksTableModule->TasksModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/tasks/tasks.module.ts\n        \n\n\n            \n                Description\n            \n            \n                Defines the components, services, and modules required to create and\nmanage Tasks.\n\n            \n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                TasksComponent\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    EditTaskModule\n                            \n                            \n                                    SidenavTasksModule\n                            \n                            \n                                    TasksRoutingModule\n                            \n                            \n                                    TasksTableModule\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        /* angular libraries */\nimport { CommonModule } from '@angular/common';\nimport { ModuleWithProviders, NgModule } from '@angular/core';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatSidenavModule } from '@angular/material';\nimport { RouterModule } from '@angular/router';\n\n/* module */\nimport { TasksComponent } from './tasks.component';\nimport { TasksRoutingModule } from './tasks.routing';\nimport { EditTaskModule } from '@tasks/edit/edit-task.module';\nimport { TaskService } from '@tasks/shared/services/task.service';\nimport { UtilsService } from '@tasks/shared/services/utils.service';\nimport { SidenavTasksModule } from '@tasks/sidenav/sidenav-tasks.module';\nimport { TasksTableModule } from '@tasks/table/tasks-table.module';\n\n/**\n * Defines the components, services, and modules required to create and\n * manage Tasks.\n */\n@NgModule({\n    declarations: [\n        TasksComponent\n    ],\n    imports: [\n        /* angular libraries */\n        CommonModule,\n        FlexLayoutModule,\n        FormsModule,\n        MatSidenavModule,\n        ReactiveFormsModule,\n        RouterModule,\n\n        /* Task modules */\n        EditTaskModule,\n        TasksRoutingModule,\n        TasksTableModule,\n        SidenavTasksModule,\n    ]\n})\nexport class TasksModule {\n\n    /**\n     * Returns a wrapper around this module that associates it with the\n     * TaskService and UtilsService providers so a single instance of each\n     * service can be loaded and shared between any modules in the app.\n     */\n    static forRoot(): ModuleWithProviders {\n        return {\n            ngModule: TasksModule,\n            providers: [\n                TaskService,\n                UtilsService\n            ]\n        };\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TasksRoutingModule.html":{"url":"modules/TasksRoutingModule.html","title":"module - TasksRoutingModule","body":"\n                   \n\n\n\n\n  Modules\n  TasksRoutingModule\n\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/tasks/tasks.routing.ts\n        \n\n\n        \n\n        \n            \n            \n        \n    \n\n\n    \n        /* angular libraries */\nimport { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n/* Task module components */\nimport { EditTaskComponent } from '@tasks/edit/edit-task.component';\nimport { CompleteTasksTableComponent } from '@tasks/table/complete-tasks-table.component';\nimport { PendingTasksTableComponent } from '@tasks/table/pending-tasks-table.component';\nimport { TasksComponent } from '@tasks/tasks.component';\n\n/* The routes within the Tasks module. Defaults to the PendingTasksTableComponent. */\nconst routes: Routes = [\n    {\n        path: 'tasks',\n        component: TasksComponent,\n        children: [\n            {\n                path:'pending',\n                component: PendingTasksTableComponent\n            },\n            {\n                path:'complete',\n                component: CompleteTasksTableComponent\n            },\n            {\n                path: '',\n                pathMatch: 'full',\n                redirectTo: 'pending'\n            },\n            {\n                path:':id',\n                component: EditTaskComponent,              \n            }\n        ]\n    }\n];\n\n/**\n * The router module for the Tasks module.\n */\n@NgModule({\n    imports: [RouterModule.forChild(routes)],\n    exports: [RouterModule]\n})\nexport class TasksRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TasksTableModule.html":{"url":"modules/TasksTableModule.html","title":"module - TasksTableModule","body":"\n                   \n\n\n\n\n  Modules\n  TasksTableModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_TasksTableModule\n\n\n\ncluster_TasksTableModule_declarations\n\n\n\ncluster_TasksTableModule_imports\n\n\n\n\nCompleteTasksTableComponent\n\nCompleteTasksTableComponent\n\n\n\nTasksTableModule\n\nTasksTableModule\n\nTasksTableModule -->\n\nCompleteTasksTableComponent->TasksTableModule\n\n\n\n\n\nPendingTasksTableComponent\n\nPendingTasksTableComponent\n\nTasksTableModule -->\n\nPendingTasksTableComponent->TasksTableModule\n\n\n\n\n\nTasksTableComponent\n\nTasksTableComponent\n\nTasksTableModule -->\n\nTasksTableComponent->TasksTableModule\n\n\n\n\n\nTasksButtonBarModule\n\nTasksButtonBarModule\n\nTasksTableModule -->\n\nTasksButtonBarModule->TasksTableModule\n\n\n\n\n\nTasksButtonsModule\n\nTasksButtonsModule\n\nTasksTableModule -->\n\nTasksButtonsModule->TasksTableModule\n\n\n\n\n\nTasksDialogModule\n\nTasksDialogModule\n\nTasksTableModule -->\n\nTasksDialogModule->TasksTableModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/tasks/table/tasks-table.module.ts\n        \n\n\n            \n                Description\n            \n            \n                Defines the components, services, and modules required to manage and view\nTasks.\n\n            \n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                CompleteTasksTableComponent\n                            \n                            \n                                PendingTasksTableComponent\n                            \n                            \n                                TasksTableComponent\n                            \n                    \n                \n                \n                    EntryComponents\n                    \n                            \n                                CompleteTasksTableComponent\n                            \n                            \n                                PendingTasksTableComponent\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    TasksButtonBarModule\n                            \n                            \n                                    TasksButtonsModule\n                            \n                            \n                                    TasksDialogModule\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        /* angular libraries */\nimport { CommonModule } from '@angular/common';\nimport { ModuleWithProviders, NgModule } from '@angular/core';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatButtonModule, MatCheckboxModule, MatPaginatorModule, MatProgressSpinnerModule, MatSortModule, MatTableModule, MatSnackBarModule } from '@angular/material';\nimport { RouterModule } from '@angular/router';\n\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\nimport { library } from '@fortawesome/fontawesome-svg-core'\nimport { faCheckSquare } from '@fortawesome/free-regular-svg-icons';\nimport { faAngleUp, faCheck, faEdit, faTrash } from '@fortawesome/free-solid-svg-icons';\n\n// Add icons to fortawesome/fontawesome-svg-core library for convenient access in components\nlibrary.add(faAngleUp, faCheck, faCheckSquare, faEdit, faTrash);\n\n/* components */\nimport { CompleteTasksTableComponent } from '@tasks/table/complete-tasks-table.component';\nimport { PendingTasksTableComponent } from '@tasks/table/pending-tasks-table.component';\nimport { TasksTableComponent } from '@tasks/table/tasks-table.component';\n\n/* Task modules */\nimport { TasksButtonBarModule } from '@tasks/button-bar/tasks-button-bar.module';\nimport { TasksButtonsModule } from '@tasks/buttons/tasks-buttons.module';\nimport { TasksDialogModule } from '@tasks/dialogs/tasks-dialog.module';\n\n/**\n * Defines the components, services, and modules required to manage and view\n * Tasks.\n */\n@NgModule({\n    declarations: [\n        CompleteTasksTableComponent,\n        PendingTasksTableComponent,\n        TasksTableComponent\n    ],\n    imports: [\n        /* angular libraries */\n        CommonModule,\n        FlexLayoutModule,\n        FormsModule,\n        MatButtonModule, \n        MatCheckboxModule,\n        MatPaginatorModule, \n        MatProgressSpinnerModule, \n        MatSortModule, \n        MatTableModule, \n        MatSnackBarModule,\n        ReactiveFormsModule,\n        RouterModule,\n\n        FontAwesomeModule,\n\n        /* Task modules */\n        TasksButtonBarModule,\n        TasksButtonsModule,\n        TasksDialogModule\n    ],\n    entryComponents: [\n        CompleteTasksTableComponent,\n        PendingTasksTableComponent,\n    ]\n})\nexport class TasksTableModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UtilsService.html":{"url":"injectables/UtilsService.html","title":"injectable - UtilsService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  UtilsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/tasks/shared/services/utils.service.ts\n        \n\n            \n                Description\n            \n            \n                Manages utility methods that can be shared across components.\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                _sidenavMenuChanges\n                            \n                            \n                                    Readonly\n                                isMediumScreen\n                            \n                            \n                                    Protected\n                                isMediumScreenSource\n                            \n                            \n                                    Readonly\n                                sidenavMenuChanges\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                fullScreenDialogSub\n                            \n                            \n                                toggleSidenavMenu\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(breakpointObserver: BreakpointObserver, logger: LoggerService)\n                    \n                \n                        \n                            \n                                Defined in src/app/tasks/shared/services/utils.service.ts:26\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        breakpointObserver\n                                                  \n                                                        \n                                                                    BreakpointObserver\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        logger\n                                                  \n                                                        \n                                                                    LoggerService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            fullScreenDialogSub\n                            \n                            \n                        \n                    \n                \n                \n                    \nfullScreenDialogSub(dialogRef: MatDialogRef, largeSize: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/tasks/shared/services/utils.service.ts:48\n                            \n                        \n\n\n                \n                    \n                            Sets the given dialog to full screen on medium or small devices.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        dialogRef\n                                                        \n                                                                    MatDialogRef\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                        \n                                                                The dialog to update. \n\n                                                        \n                                                \n                                                \n                                                        largeSize\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                '70%'\n                                                        \n\n                                                        \n                                                                The width and height to set for large screens.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            toggleSidenavMenu\n                            \n                            \n                        \n                    \n                \n                \n                    \ntoggleSidenavMenu(event: SidenavMenuEvent)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/tasks/shared/services/utils.service.ts:68\n                            \n                        \n\n\n                \n                    \n                            Updates the sidenav menu state.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        event\n                                                        \n                                                                    SidenavMenuEvent\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                The state to set the sidenav menu to. \n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            _sidenavMenuChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _sidenavMenuChanges:     \n\n                    \n                \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tasks/shared/services/utils.service.ts:22\n                            \n                        \n\n                \n                    \n                        Tracks the state of the sidenav menu (Collapse or Expand). \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            isMediumScreen\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        isMediumScreen:     Observable\n\n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tasks/shared/services/utils.service.ts:24\n                            \n                        \n\n                \n                    \n                        Observable for whether the screen is medium or smaller (true if medium or smaller, otherwise false). \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            isMediumScreenSource\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        isMediumScreenSource:     BehaviorSubject\n\n                    \n                \n                    \n                        \n                            Type :     BehaviorSubject\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tasks/shared/services/utils.service.ts:20\n                            \n                        \n\n                \n                    \n                        Tracks whether the screen is medium or smaller. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            sidenavMenuChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        sidenavMenuChanges:     Observable\n\n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                    \n                        \n                            Default value : this._sidenavMenuChanges\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tasks/shared/services/utils.service.ts:26\n                            \n                        \n\n                \n                    \n                        Observale for changes to the sidenav. \n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Breakpoints, BreakpointObserver, BreakpointState } from '@angular/cdk/layout';\nimport { MatDialogRef } from '@angular/material';\nimport { BehaviorSubject, Observable, Subject, Subscription } from 'rxjs';\n\n/* app */\nimport { LoggerService } from 'app/core/services/logger.service';\n\n/* The optional states of the sidenav. */\nexport type SidenavMenuEvent = \"Collapse\" | \"Expand\"\n\n/**\n * Manages utility methods that can be shared across components.\n */\n@Injectable()\nexport class UtilsService {\n\n    /** Tracks whether the screen is medium or smaller. */\n    protected isMediumScreenSource: BehaviorSubject;\n    /** Tracks the state of the sidenav menu (Collapse or Expand). */\n    protected _sidenavMenuChanges = new Subject();\n    /** Observable for whether the screen is medium or smaller (true if medium or smaller, otherwise false). */\n    readonly isMediumScreen: Observable;\n    /** Observale for changes to the sidenav. */\n    readonly sidenavMenuChanges: Observable = this._sidenavMenuChanges;\n\n    constructor(private breakpointObserver: BreakpointObserver, private logger: LoggerService) {\n        this.isMediumScreenSource = new BehaviorSubject(false);\n        this.isMediumScreen = this.isMediumScreenSource.asObservable();\n        \n        // add a subscription to the breakpointObserver so the isMediumScreenSource\n        // can be updated when the screen size changes.\n        this.breakpointObserver\n            .observe([Breakpoints.Handset, Breakpoints.Small])\n            .subscribe((size: BreakpointState) => {\n                this.logger.info(`UtilsService: screen size ${ size.matches ? 'small to medium' : 'large' }`);\n                this.isMediumScreenSource.next(size.matches);\n            });\n    }\n\n    /**\n     * Sets the given dialog to full screen on medium or small devices.\n     * \n     * @param dialogRef The dialog to update. \n     * @param largeSize The width and height to set for large screens.\n     */\n    fullScreenDialogSub(dialogRef: MatDialogRef, largeSize: string = '70%'): void {\n        const sub: Subscription = this.isMediumScreen.subscribe((isMediumScreen: boolean) => {\n            if(isMediumScreen) {\n                dialogRef.updateSize('100%', '100%');\n            }\n            else {\n                dialogRef.updateSize(largeSize);\n            }\n        });\n\n        dialogRef.afterClosed().subscribe(() => {\n            sub.unsubscribe();\n        });\n    }\n\n    /**\n     * Updates the sidenav menu state.\n     * \n     * @param event The state to set the sidenav menu to. \n     */\n    toggleSidenavMenu(event: SidenavMenuEvent) {\n        this._sidenavMenuChanges.next(event);\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                    src/app/about/about.component.ts\n            \n            \n                component\n            \n            \n                AboutComponent\n            \n            \n                88 %\n                (8/9)\n            \n        \n        \n            \n                \n                    src/app/app.component.ts\n            \n            \n                component\n            \n            \n                AppComponent\n            \n            \n                83 %\n                (5/6)\n            \n        \n        \n            \n                \n                    src/app/components/page-not-found/page-not-found.component.ts\n            \n            \n                component\n            \n            \n                PageNotFoundComponent\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    src/app/core/services/console-logger.service.ts\n            \n            \n                injectable\n            \n            \n                ConsoleLoggerService\n            \n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                    src/app/core/services/console-logger.service.ts\n            \n            \n                variable\n            \n            \n                noop\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/app/core/services/http.service.ts\n            \n            \n                injectable\n            \n            \n                HttpService\n            \n            \n                90 %\n                (10/11)\n            \n        \n        \n            \n                \n                    src/app/core/services/loader.service.ts\n            \n            \n                injectable\n            \n            \n                LoaderService\n            \n            \n                83 %\n                (5/6)\n            \n        \n        \n            \n                \n                    src/app/core/services/loader.service.ts\n            \n            \n                interface\n            \n            \n                LoaderState\n            \n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                    src/app/core/services/logger.service.ts\n            \n            \n                class\n            \n            \n                Logger\n            \n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                    src/app/core/services/logger.service.ts\n            \n            \n                injectable\n            \n            \n                LoggerService\n            \n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                    src/app/footer/footer.component.ts\n            \n            \n                component\n            \n            \n                FooterComponent\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    src/app/header/header.component.ts\n            \n            \n                component\n            \n            \n                HeaderComponent\n            \n            \n                90 %\n                (10/11)\n            \n        \n        \n            \n                \n                    src/app/tasks/button-bar/button-bar.component.ts\n            \n            \n                component\n            \n            \n                ButtonBarComponent\n            \n            \n                93 %\n                (15/16)\n            \n        \n        \n            \n                \n                    src/app/tasks/buttons/buttons.component.ts\n            \n            \n                component\n            \n            \n                ButtonsComponent\n            \n            \n                93 %\n                (14/15)\n            \n        \n        \n            \n                \n                    src/app/tasks/dialogs/complete-task/complete-task.component.ts\n            \n            \n                component\n            \n            \n                CompleteTaskComponent\n            \n            \n                88 %\n                (15/17)\n            \n        \n        \n            \n                \n                    src/app/tasks/dialogs/confirm-delete-task/confirm-delete-task.component.ts\n            \n            \n                component\n            \n            \n                ConfirmDeleteTaskComponent\n            \n            \n                83 %\n                (10/12)\n            \n        \n        \n            \n                \n                    src/app/tasks/dialogs/create-task/create-task.component.ts\n            \n            \n                component\n            \n            \n                CreateTaskComponent\n            \n            \n                80 %\n                (8/10)\n            \n        \n        \n            \n                \n                    src/app/tasks/edit/edit-task.component.ts\n            \n            \n                component\n            \n            \n                EditTaskComponent\n            \n            \n                92 %\n                (23/25)\n            \n        \n        \n            \n                \n                    src/app/tasks/edit/recurring-task.component.ts\n            \n            \n                component\n            \n            \n                RecurringTaskComponent\n            \n            \n                81 %\n                (9/11)\n            \n        \n        \n            \n                \n                    src/app/tasks/filter/tasks-filter.component.ts\n            \n            \n                component\n            \n            \n                TasksFilterComponent\n            \n            \n                90 %\n                (9/10)\n            \n        \n        \n            \n                \n                    src/app/tasks/form/task-form.component.ts\n            \n            \n                component\n            \n            \n                TaskFormComponent\n            \n            \n                88 %\n                (15/17)\n            \n        \n        \n            \n                \n                    src/app/tasks/shared/models/task.model.ts\n            \n            \n                class\n            \n            \n                Task\n            \n            \n                100 %\n                (10/10)\n            \n        \n        \n            \n                \n                    src/app/tasks/shared/services/task.service.ts\n            \n            \n                injectable\n            \n            \n                TaskService\n            \n            \n                100 %\n                (31/31)\n            \n        \n        \n            \n                \n                    src/app/tasks/shared/services/tasks.datasource.ts\n            \n            \n                class\n            \n            \n                TasksDataSource\n            \n            \n                86 %\n                (13/15)\n            \n        \n        \n            \n                \n                    src/app/tasks/shared/services/utils.service.ts\n            \n            \n                injectable\n            \n            \n                UtilsService\n            \n            \n                87 %\n                (7/8)\n            \n        \n        \n            \n                \n                    src/app/tasks/shared/util/mat-paginator-custom.ts\n            \n            \n                injectable\n            \n            \n                MatPaginatorCustom\n            \n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                \n                    src/app/tasks/sidenav/list-item.component.ts\n            \n            \n                component\n            \n            \n                ListItemComponent\n            \n            \n                92 %\n                (13/14)\n            \n        \n        \n            \n                \n                    src/app/tasks/sidenav/sidenav-tasks.component.ts\n            \n            \n                component\n            \n            \n                SidenavTasksComponent\n            \n            \n                94 %\n                (16/17)\n            \n        \n        \n            \n                \n                    src/app/tasks/table/complete-tasks-table.component.ts\n            \n            \n                component\n            \n            \n                CompleteTasksTableComponent\n            \n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                    src/app/tasks/table/pending-tasks-table.component.ts\n            \n            \n                component\n            \n            \n                PendingTasksTableComponent\n            \n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                    src/app/tasks/table/tasks-table.component.ts\n            \n            \n                component\n            \n            \n                TasksTableComponent\n            \n            \n                96 %\n                (32/33)\n            \n        \n        \n            \n                \n                    src/app/tasks/tasks.component.ts\n            \n            \n                component\n            \n            \n                TasksComponent\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    src/environments/environment.prod.ts\n            \n            \n                variable\n            \n            \n                environment\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/environments/environment.ts\n            \n            \n                variable\n            \n            \n                environment\n            \n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^6.0.9\n        \n            @angular/cdk : ^6.4.0\n        \n            @angular/common : ^6.0.9\n        \n            @angular/compiler : ^6.0.9\n        \n            @angular/core : ^6.0.9\n        \n            @angular/flex-layout : ^6.0.0-beta.16\n        \n            @angular/forms : ^6.0.9\n        \n            @angular/http : ^6.0.9\n        \n            @angular/material : ^6.4.0\n        \n            @angular/material-moment-adapter : ^6.4.0\n        \n            @angular/platform-browser : ^6.0.9\n        \n            @angular/platform-browser-dynamic : ^6.0.9\n        \n            @angular/router : ^6.0.9\n        \n            @fortawesome/angular-fontawesome : 0.1.0-10\n        \n            @fortawesome/fontawesome-svg-core : ^1.2.1\n        \n            @fortawesome/free-regular-svg-icons : ^5.1.1\n        \n            @fortawesome/free-solid-svg-icons : ^5.1.1\n        \n            core-js : ^2.5.7\n        \n            font-awesome : ^4.7.0\n        \n            hammerjs : ^2.0.8\n        \n            moment : ^2.22.2\n        \n            rxjs : ^6.2.2\n        \n            rxjs-compat : ^6.2.2\n        \n            zone.js : ^0.8.26\n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nMyTasks\n\n\nMyTasks is a simple application meant to create and manage Tasks. Tasks are displayed in tables, separated by state (pending or complete), and can be filtered by name, description, priority, due date, and date completed (if complete). Pending tasks also have keyword filters and visual indicators for tasks over due (tasks with due date before todays date), tasks due today, and tasks due tomorrow. Tasks have a very simple repeating capability; they can repeat daily, weekly, monthly, or yearly.\nThe application is a full stack TypeScript app divided into an Angular client, Express API server, and SQLite database. The UI is designed to be responsive, and meant to work across a variety of devices. Smaller screen sizes have only been emulated through chrome devtools and have not been fully tested though. See the Built With section for more details on the client, server, and database. \nTable of Contents\n\nGetting Started\nPrerequisites\nBuild and Run\nDocker Compose Setup\nNode Setup\nDevelopment Mode\n\n\n\n\nAccessing the App\nRunning the Tests\nUnit Tests\ne2e Tests\n\n\nDocumentation\nBuilt With\nAuthors\nAcknowledgements\n\nGetting Started\nRun the following command to clone a copy of the repository into your current working directory.\ngit clone https://github.com/Jonathan-S-Phillips/my-tasksIn case you don't have GIT installed and configured on your machine a few helpful links are included below.\n\nGIT - Setup GIT\nClone Repo - Additional details on cloning GIT repo\n\nPrerequisites\nIn order to run the application you need to either have Docker Compose or Node installed and configured. Installing and configuring Docker Compose and Node are outside the scope of this document but a few helpful links are included below.\n\nDocker Compose - Install Docker Compose\nNode - Install Node\n\nThe app was built on Windows using the following setup:\n\nDocker version 18.06.0-ce-win70 (19075)\nCompose 1.22.0\nNode version 8.9.1\nNPM version 6.2.0 \n\nBuild and Run\nOnce you have successfully cloned the repository you can build and run the MyTasks application one of the following two ways.\n\nDocker Compose Setup; or \nNode Setup \n\nDocker Compose Setup\nIf you have Docker Compose configured for your system, then you can use the following command from the root or base directory of the application to build and run both the server and client containers for the app.\ndocker-compose up --buildThats it! The above command will initialize the full stack application with an empty database. The next time you start the app you may omit the \"--build\" option (unless you have made changes or update the node_modules). Any Tasks created and updated will be persisted if you restart the containers. Once the application is up and running you may access the client through a web browser at http://localhost:4200. More details on accessing the application and the API server are available here. \nIt may take some time to setup and configure the containers depending on your connection speed. You may also see some warnings about npm packages, but they will not prevent the app from starting.\n**Side Note: I did have to run the below command at some point when I was building the app to sync the time between my host machine and the containers because of time drift.\ndocker run --rm --privileged mytasks_angular-client hwclock -s\ndocker run --rm --privileged mytasks_server hwclock -sNode Setup\nIf you have Node configured for your system, then you can use the npm scripts included at the root directory to build and run the application. You can build each part of the app separately, but I have included scripts at the root to run both the server and client together. The first step to build and run the application directly in your environment is to install dependencies. You can use the following command from the root of the application to install all required dependencies for both the client and server.\nnpm run install:allIf you are running npm version 6, then you will see a few vulnerabilities from the dependencies for the client. You can run the following command from the base of the client app to fix one of the vulnerabilities.\nnpm audit fixThe remaining fixes include breaking changes, which have not been tested.\nOnce the dependencies are installed you can use the following command (again from the root of the application) which will build and run both the client and server together.\nnpm startOnce the application is up and running you may access the client through a web browser at http://localhost:4200. More details on accessing the application and the API server are available here.\nDevelopment Mode\nContinuing with the Node configuration, a script is included to start the application in development mode, which uses an in-memory version of the SQLite DB instead of persisting the DB to disk. The code is automatically set up to insert seed data from a JSON array into the DB when running the in-memory version. Run the following command to run the application in development mode.\nnpm run start:devAll e2e tests use the in-memory version of the SQLite DB, and the unit tests use the same JSON array data inserted into the in-memory DB.\nAccessing the App\nOnce the application is up and running you may access the client through a web browser at http://localhost:4200. The server is setup to listen on port 3000 and the main Tasks API is available at http://localhost:3000/api/tasks.\nRunning the Tests\nThe application has both unit and e2e tests. Currently the only way to run the tests is if you have Node configured. The client is using karma, and the server is using mocha and chai for unit tests. The e2e tests use protractor.\nUnit Tests\nThe unit tests for both the client and server can be run using the following command from the root of the application.\nnpm testThe server tests should run first followed by the client tests. A script is also included to generate coverage reports with the unit tests. Running the following command will run the unit tests and generate coverage reports as well.\nnpm run test:coverageSeparate coverage reports are generated for the client and the server using Istanbul Code Coverage. A coverage directory is added to both the client and server directories and the reports are added there. To view the reports browse to either the client or server, select the corresponding coverage directory, and open the index.html file found using your favorite browser.\ne2e Tests\nThe e2e tests can be run using the following command from the root of the application.\nnpm run e2eThis command will initialize the server and client, and execute the e2e tests against the app using the chrome browser. You may also run the e2e tests without a browser using the following command.\nnpm run e2e:headlessA third e2e test script is included which is meant to take screenshots of the application and various elements throughout the app for use in the AboutComponent of the app. The Microsoft Edge browser is the only browser that seems to work to take screenshots of individual elements, so the script uses Edge for the tests. To set up the Edge browser for e2e tests you must manually download the MicrosoftWebDriver, which is available here. Once you have downloaded the driver you must add it to the following angular-client directory.\n angular-client/node_modules/protractor/node_modules/webdriver-manager/selenium**Note you may have to remove and re-add this file if you update the node_modules. Once you have your system set up with the Edge webriver, then you may run the following command to take screenshots while the e2e tests are running.\nnpm run e2e:screenshotsIf you try to run the above command without setting up the Edge browser with protractor, then the script will fail. Also I have not tested this on a machine the does not already have Edge installed, so if you are running a machine that does not have Edge installed then you may run into issues.\nDocumentation\nDocumentation for the client code and web API are included and available at the below URLs.\n\nAngular Client\nAPI\n\nDocumentation for the client was built using Compodoc and documentation for the web API was built using apiDoc. Scripts are included to generate the documentation locally as well. You can run the following command which will update the docs directory with the latest changes from the source.\nnpm run docBuilt With\nThe client is built using Angular 6, and leverages Angular Material 2 for most of the UI components. The UI is designed to be responsive, and meant to work across a variety of devices. Breakpoints from the angular CDK layout (Handset and Small) are used to determine what features are available on the screen. Some of the enhanced functionality is limited on smaller devices, due to the smaller screen space and lack of mouse input. Additionally, smaller screen sizes have only been emulated through chrome devtools and have not been fully tested. \nThe Express API server utilizes the TypeORM package to handle storing data in a SQLite database. The database only contains a single table for Tasks. To implement the repeating capability an optional one-to-one relationship is used to represent the relation from one Task to the next in the sequence, through the nextId property. A simple Entity Relationship (ER) diagram is included below\n\nBelow is a list of the main technologies and dependencies used to build the the app and links to their home or github pages.\n\nTypeScript\nAngular - UI Components\nAngular Material 2 - Material Design components\nFont-Awesome - Icons\nExpress - web framework\nTypeORM - ORM for TypeScript\nSQLite - DB driver\nCompodoc - Angular project documentation\napiDoc - API documentation\n\nFurther details about the technologies and dependencies used can be found by examining the dependencies in the package.json files located in both the angular-client and server directories. Additionally you may review a handy online version of the depdendencies included in the angular-client thanks to Compodoc here.\nAuthors\n\n[Jonathan Phillips] - (https://github.com/Jonathan-S-Phillips)\n\nAcknowledgments\nPrior to developing this app I had only worked with Angular, so it was an exciting challenge to learn how to set up and configure an Express API server. I also enjoyed learning about Docker containers and how to use Compose to define and run a multi-container Docker app. Also even though I have worked with Angular before, I was using a mix of Typescript, jQuery, and the Bootstrap UI framework. For the purposes of this app I decided to go with a solution built entirely in TypeScript, which also gave me an opportunity to dive into Angular Material 2.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AboutModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AboutRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CompleteTaskModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ConfirmDeleteTaskModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CoreModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CreateTaskModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        EditTaskModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        FooterModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        HeaderModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SidenavTasksModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TaskFormModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TasksButtonBarModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TasksButtonsModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TasksDialogModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TasksFilterModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TasksModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TasksRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TasksTableModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n            \n                \n                    \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AboutModule\n\n\n\ncluster_AboutModule_declarations\n\n\n\ncluster_AboutModule_imports\n\n\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_CompleteTaskModule\n\n\n\ncluster_CompleteTaskModule_declarations\n\n\n\ncluster_ConfirmDeleteTaskModule\n\n\n\ncluster_ConfirmDeleteTaskModule_declarations\n\n\n\ncluster_CreateTaskModule\n\n\n\ncluster_CreateTaskModule_declarations\n\n\n\ncluster_CreateTaskModule_imports\n\n\n\ncluster_EditTaskModule\n\n\n\ncluster_EditTaskModule_declarations\n\n\n\ncluster_EditTaskModule_imports\n\n\n\ncluster_EditTaskModule_providers\n\n\n\ncluster_FooterModule\n\n\n\ncluster_FooterModule_declarations\n\n\n\ncluster_FooterModule_exports\n\n\n\ncluster_HeaderModule\n\n\n\ncluster_HeaderModule_declarations\n\n\n\ncluster_HeaderModule_imports\n\n\n\ncluster_HeaderModule_exports\n\n\n\ncluster_SidenavTasksModule\n\n\n\ncluster_SidenavTasksModule_declarations\n\n\n\ncluster_SidenavTasksModule_exports\n\n\n\ncluster_TaskFormModule\n\n\n\ncluster_TaskFormModule_declarations\n\n\n\ncluster_TaskFormModule_exports\n\n\n\ncluster_TasksButtonBarModule\n\n\n\ncluster_TasksButtonBarModule_declarations\n\n\n\ncluster_TasksButtonBarModule_imports\n\n\n\ncluster_TasksButtonBarModule_exports\n\n\n\ncluster_TasksButtonsModule\n\n\n\ncluster_TasksButtonsModule_declarations\n\n\n\ncluster_TasksButtonsModule_exports\n\n\n\ncluster_TasksFilterModule\n\n\n\ncluster_TasksFilterModule_declarations\n\n\n\ncluster_TasksFilterModule_exports\n\n\n\ncluster_TasksModule\n\n\n\ncluster_TasksModule_declarations\n\n\n\ncluster_TasksModule_imports\n\n\n\ncluster_TasksTableModule\n\n\n\ncluster_TasksTableModule_declarations\n\n\n\n\nAboutComponent\n\nAboutComponent\n\n\n\nAboutModule\n\nAboutModule\n\nAboutModule -->\n\nAboutComponent->AboutModule\n\n\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAboutModule->AppModule\n\n\n\n\n\nAboutRoutingModule\n\nAboutRoutingModule\n\nAboutModule -->\n\nAboutRoutingModule->AboutModule\n\n\n\n\n\nAppComponent\n\nAppComponent\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nPageNotFoundComponent\n\nPageNotFoundComponent\n\nAppModule -->\n\nPageNotFoundComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nCoreModule\n\nCoreModule\n\nAppModule -->\n\nCoreModule->AppModule\n\n\n\n\n\nFooterModule\n\nFooterModule\n\nAppModule -->\n\nFooterModule->AppModule\n\n\n\n\n\nFooterComponent \n\nFooterComponent \n\nFooterComponent  -->\n\nFooterModule->FooterComponent \n\n\n\n\n\nHeaderModule\n\nHeaderModule\n\nAppModule -->\n\nHeaderModule->AppModule\n\n\n\n\n\nHeaderComponent \n\nHeaderComponent \n\nHeaderComponent  -->\n\nHeaderModule->HeaderComponent \n\n\n\n\n\nTasksModule\n\nTasksModule\n\nAppModule -->\n\nTasksModule->AppModule\n\n\n\n\n\nCompleteTaskComponent\n\nCompleteTaskComponent\n\n\n\nCompleteTaskModule\n\nCompleteTaskModule\n\nCompleteTaskModule -->\n\nCompleteTaskComponent->CompleteTaskModule\n\n\n\n\n\nTasksDialogModule\n\nTasksDialogModule\n\nTasksDialogModule -->\n\nCompleteTaskModule->TasksDialogModule\n\n\n\n\n\nConfirmDeleteTaskComponent\n\nConfirmDeleteTaskComponent\n\n\n\nConfirmDeleteTaskModule\n\nConfirmDeleteTaskModule\n\nConfirmDeleteTaskModule -->\n\nConfirmDeleteTaskComponent->ConfirmDeleteTaskModule\n\n\n\nTasksDialogModule -->\n\nConfirmDeleteTaskModule->TasksDialogModule\n\n\n\n\n\nCreateTaskComponent\n\nCreateTaskComponent\n\n\n\nCreateTaskModule\n\nCreateTaskModule\n\nCreateTaskModule -->\n\nCreateTaskComponent->CreateTaskModule\n\n\n\n\n\nSidenavTasksModule\n\nSidenavTasksModule\n\nSidenavTasksModule -->\n\nCreateTaskModule->SidenavTasksModule\n\n\n\n\n\nTaskFormModule\n\nTaskFormModule\n\nCreateTaskModule -->\n\nTaskFormModule->CreateTaskModule\n\n\n\n\n\nEditTaskModule\n\nEditTaskModule\n\nEditTaskModule -->\n\nTaskFormModule->EditTaskModule\n\n\n\nTasksDialogModule -->\n\nTaskFormModule->TasksDialogModule\n\n\n\n\n\nTaskFormComponent \n\nTaskFormComponent \n\nTaskFormComponent  -->\n\nTaskFormModule->TaskFormComponent \n\n\n\n\n\nEditTaskComponent\n\nEditTaskComponent\n\nEditTaskModule -->\n\nEditTaskComponent->EditTaskModule\n\n\n\n\n\nRecurringTaskComponent\n\nRecurringTaskComponent\n\nEditTaskModule -->\n\nRecurringTaskComponent->EditTaskModule\n\n\n\nTasksModule -->\n\nEditTaskModule->TasksModule\n\n\n\n\n\nTasksButtonBarModule\n\nTasksButtonBarModule\n\nEditTaskModule -->\n\nTasksButtonBarModule->EditTaskModule\n\n\n\n\n\nButtonBarComponent \n\nButtonBarComponent \n\nButtonBarComponent  -->\n\nTasksButtonBarModule->ButtonBarComponent \n\n\n\n\n\nTasksTableModule\n\nTasksTableModule\n\nTasksTableModule -->\n\nTasksButtonBarModule->TasksTableModule\n\n\n\nEditTaskModule -->\n\nTasksDialogModule->EditTaskModule\n\n\n\nTasksTableModule -->\n\nTasksDialogModule->TasksTableModule\n\n\n\n\n\nMatPaginatorCustom\n\nMatPaginatorCustom\n\nEditTaskModule -->\n\nMatPaginatorCustom->EditTaskModule\n\n\n\n\n\nFooterComponent\n\nFooterComponent\n\nFooterModule -->\n\nFooterComponent->FooterModule\n\n\n\n\n\nHeaderComponent\n\nHeaderComponent\n\nHeaderModule -->\n\nHeaderComponent->HeaderModule\n\n\n\n\n\nTasksFilterModule\n\nTasksFilterModule\n\nHeaderModule -->\n\nTasksFilterModule->HeaderModule\n\n\n\n\n\nTasksFilterComponent \n\nTasksFilterComponent \n\nTasksFilterComponent  -->\n\nTasksFilterModule->TasksFilterComponent \n\n\n\n\n\nListItemComponent\n\nListItemComponent\n\nSidenavTasksModule -->\n\nListItemComponent->SidenavTasksModule\n\n\n\n\n\nSidenavTasksComponent\n\nSidenavTasksComponent\n\nSidenavTasksModule -->\n\nSidenavTasksComponent->SidenavTasksModule\n\n\n\nTasksModule -->\n\nSidenavTasksModule->TasksModule\n\n\n\n\n\nSidenavTasksComponent \n\nSidenavTasksComponent \n\nSidenavTasksComponent  -->\n\nSidenavTasksModule->SidenavTasksComponent \n\n\n\n\n\nTaskFormComponent\n\nTaskFormComponent\n\nTaskFormModule -->\n\nTaskFormComponent->TaskFormModule\n\n\n\n\n\nButtonBarComponent\n\nButtonBarComponent\n\nTasksButtonBarModule -->\n\nButtonBarComponent->TasksButtonBarModule\n\n\n\n\n\nTasksButtonsModule\n\nTasksButtonsModule\n\nTasksButtonBarModule -->\n\nTasksButtonsModule->TasksButtonBarModule\n\n\n\n\n\nButtonsComponent \n\nButtonsComponent \n\nButtonsComponent  -->\n\nTasksButtonsModule->ButtonsComponent \n\n\n\nTasksTableModule -->\n\nTasksButtonsModule->TasksTableModule\n\n\n\n\n\nButtonsComponent\n\nButtonsComponent\n\nTasksButtonsModule -->\n\nButtonsComponent->TasksButtonsModule\n\n\n\n\n\nTasksFilterComponent\n\nTasksFilterComponent\n\nTasksFilterModule -->\n\nTasksFilterComponent->TasksFilterModule\n\n\n\n\n\nTasksComponent\n\nTasksComponent\n\nTasksModule -->\n\nTasksComponent->TasksModule\n\n\n\n\n\nTasksRoutingModule\n\nTasksRoutingModule\n\nTasksModule -->\n\nTasksRoutingModule->TasksModule\n\n\n\nTasksModule -->\n\nTasksTableModule->TasksModule\n\n\n\n\n\nCompleteTasksTableComponent\n\nCompleteTasksTableComponent\n\nTasksTableModule -->\n\nCompleteTasksTableComponent->TasksTableModule\n\n\n\n\n\nPendingTasksTableComponent\n\nPendingTasksTableComponent\n\nTasksTableModule -->\n\nPendingTasksTableComponent->TasksTableModule\n\n\n\n\n\nTasksTableComponent\n\nTasksTableComponent\n\nTasksTableModule -->\n\nTasksTableComponent->TasksTableModule\n\n\n\n\n\n\n                \n                \n                \n                    Zoom in\n                    Reset\n                    Zoom out\n                \n            \n\n    \n            \n                \n                    \n                        \n                        \n                            20 modules\n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                        20 components\n                    \n                \n            \n            \n                \n                    \n                        \n                        7 injectables\n                    \n                \n            \n            \n                \n                    \n                        \n                        3 classes\n                    \n                \n            \n            \n                \n                    \n                        \n                        1 interface\n                    \n                \n            \n            \n                \n                    \n                        \n                        \n                            10 routes\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            PriorityTypes   (src/.../task.model.ts)\n                        \n                        \n                            SidenavMenuEvent   (src/.../utils.service.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/tasks/shared/models/task.model.ts\n    \n        \n            \n                \n                    \n                        \n                        PriorityTypes\n                    \n                \n                    \n                        \n                            The priority types available for a Task. \n\n                        \n                    \n                \n                    \n                        PriorityTypes:     \"Low\" | \"Medium\" | \"High\" | \"Urgent\"\n\n                    \n                \n            \n        \n\n    src/app/tasks/shared/services/utils.service.ts\n    \n        \n            \n                \n                    \n                        \n                        SidenavMenuEvent\n                    \n                \n                \n                    \n                        SidenavMenuEvent:     \"Collapse\" | \"Expand\"\n\n                    \n                \n            \n        \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            environment   (src/.../environment.prod.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                        \n                            noop   (src/.../console-logger.service.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/environments/environment.prod.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        environment:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: true\n}\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        environment:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: false\n}\n                        \n                    \n\n\n            \n        \n\n    src/app/core/services/console-logger.service.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            noop\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        noop:     \n\n                    \n                \n                    \n                        \n                            Default value : (): any => undefined\n                        \n                    \n\n\n            \n        \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
