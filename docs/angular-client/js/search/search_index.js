var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.2.0","fields":["title","body"],"fieldVectors":[["title/components/AboutComponent.html",[0,0.072,1,0.816]],["body/components/AboutComponent.html",[0,0.116,1,1.001,2,0.087,3,0.076,4,0.58,5,0.58,6,0.58,7,0.065,8,1.69,9,0.345,10,1.698,11,1.267,12,0.774,13,1.025,14,3.4,15,1.566,16,0.58,17,2.071,18,0.931,19,3.157,20,0.931,21,3.157,22,0.375,23,0.665,24,4.528,25,5.294,26,1.416,27,1.866,28,0.977,29,3.892,30,1.793,31,4.528,32,3.956,33,0.58,34,1.967,35,3.034,36,0.505,37,3.157,38,0.638,39,0.019,40,1.044,41,0.863,42,0.503,43,1.948,44,1.967,45,1.704,46,2.355,47,5.294,48,3.695,49,1.564,50,5.968,51,2.714,52,1.214,53,1.335,54,1.967,55,1.389,56,1.967,57,2.361,58,1.468,59,2.714,60,1.389,61,1.967,62,1.967,63,3.4,64,3.892,65,1.029,66,1.652,67,1.967,68,2.714,69,1.534,70,1.967,71,1.13,72,1.389,73,1.783,74,2.47,75,1.488,76,1.489,77,0.198,78,0.087,79,0.553,80,0.704,81,0.076,82,0.044,83,1.967,84,1.373,85,1.967,86,3.157,87,0.779,88,0.779,89,0.553,90,0.638,91,1.69,92,1.967,93,1.967,94,0.915,95,1.967,96,1.69,97,4.519,98,1.967,99,0.977,100,1.967,101,1.967,102,1.967,103,1.967,104,1.967,105,0.915,106,3.157,107,1.509,108,0.67,109,3.473,110,1.817,111,2.204,112,3.16,113,0.891,114,1.704,115,3.233,116,4.008,117,2.03,118,2.03,119,3.161,120,1.555,121,4.061,122,2.714,123,1.76,124,1.525,125,3.892,126,3.434,127,3.868,128,2.714,129,2.422,130,2.714,131,2.714,132,2.422,133,2.422,134,2.714,135,2.911,136,3.157,137,2.204,138,3.157,139,2.952,140,2.77,141,3.157,142,3.157,143,3.157,144,3.16,145,3.157,146,3.016,147,4.528,148,3.157,149,2.03,150,5.784,151,1.652,152,2.714,153,2.03,154,2.714,155,2.714,156,2.422,157,2.714,158,2.714,159,2.422,160,2.204,161,3.674,162,2.714,163,1.329,164,2.77,165,3.157,166,3.157,167,1.885,168,3.655,169,3.157,170,2.848,171,4.274,172,4.972,173,4.528,174,2.204,175,2.703,176,3.66,177,3.157,178,3.157,179,0.846,180,2.77,181,3.203,182,3.157,183,4.061,184,3.157,185,3.16,186,2.204,187,1.389,188,2.422,189,3.157,190,2.714,191,3.157,192,0.931,193,4.528,194,2.204,195,4.528,196,5.294,197,3.157,198,2.422,199,1.468,200,4.037,201,4.888,202,2.204,203,3.026,204,3.718,205,3.157,206,4.437,207,4.528,208,2.204,209,2.714,210,1.166,211,3.157,212,1.652,213,2.422,214,3.157,215,2.03,216,3.157,217,3.161,218,1.885,219,2.952,220,2.703,221,2.714,222,2.714,223,3.157,224,2.714,225,3.157,226,2.422,227,1.468,228,2.422,229,2.714,230,0.011,231,0.241,232,0.931,233,0.931,234,1.335,235,0.58,236,0.58,237,0.479,238,0.931,239,0.479,240,0.58,241,0.479,242,0.58,243,0.479,244,1.335,245,0.457,246,0.931,247,0.479,248,0.58,249,0.479,250,0.457,251,0.527,252,0.479,253,0.58,254,0.479,255,0.58,256,0.479,257,0.527,258,0.58,259,0.457,260,0.58,261,0.457,262,0.479,263,0.553,264,0.479,265,0.58,266,0.479,267,0.58,268,0.457,269,0.479,270,0.58,271,0.503,272,0.58,273,0.008]],["title/modules/AboutModule.html",[274,0.251,275,2.372]],["body/modules/AboutModule.html",[0,0.126,1,1.63,2,0.21,3,0.184,7,0.158,9,0.294,11,1.522,36,0.52,39,0.019,77,0.378,78,0.21,81,0.231,82,0.107,90,1.539,179,1.271,192,1.398,230,0.014,231,0.581,273,0.014,274,0.479,275,4.737,276,1.333,277,2.113,278,1.467,279,4.076,280,4.076,281,4.076,282,4.615,283,1.933,284,1.539,285,4.742,286,1.933,287,2.62,288,1.193,289,1.585,290,2.132,291,1.539,292,1.674,293,2.132,294,1.616,295,1.333,296,2.62,297,0.998,298,2.484,299,2.62,300,1.978,301,1.978,302,2.358,303,1.978,304,4.076,305,1.978,306,1.978,307,1.933,308,2.086,309,1.877,310,4.076,311,4.076,312,4.742]],["title/modules/AboutRoutingModule.html",[274,0.251,282,2.372]],["body/modules/AboutRoutingModule.html",[0,0.125,1,1.527,2,0.241,3,0.21,7,0.18,39,0.019,43,3.522,75,1.524,77,0.358,78,0.241,79,1.524,81,0.251,82,0.123,99,1.677,230,0.016,273,0.016,274,0.497,282,4.154,288,1.086,289,1.258,292,1.817,311,4.659,313,5.42,314,2.314,315,4.659,316,4.158,317,2.835,318,4.659]],["title/components/AppComponent.html",[0,0.072,237,0.899]],["body/components/AppComponent.html",[0,0.138,1,0.831,2,0.167,3,0.146,4,1.108,5,1.108,6,1.108,7,0.125,9,0.233,10,1.485,11,0.96,12,1.007,13,1.66,15,2.302,16,1.108,17,2.244,18,1.508,20,1.508,22,0.716,23,1.077,26,2.337,27,2.348,28,1.582,30,2.471,33,1.508,36,0.569,38,1.22,39,0.019,40,1.224,41,1.108,42,0.96,45,1.924,46,2.676,49,1.437,52,1.37,53,1.508,55,2.25,69,2.019,71,1.83,73,0.915,77,0.291,78,0.167,80,1.345,81,0.146,82,0.085,87,1.488,88,1.488,89,1.056,99,1.162,110,1.007,112,3.724,113,0.775,114,1.187,124,0.96,163,1.007,164,2.675,167,3.052,210,1.108,212,2.675,227,2.378,230,0.012,231,0.46,232,1.508,233,1.508,234,1.84,235,1.108,236,1.108,237,1.52,238,1.508,239,0.915,240,1.108,241,0.915,242,1.108,243,0.915,244,1.84,245,0.872,246,1.508,247,0.915,248,1.108,249,0.915,250,0.872,251,1.007,252,0.915,253,1.108,254,0.915,255,1.108,256,0.915,257,1.007,258,1.108,259,0.872,260,1.108,261,0.872,262,0.915,263,1.056,264,0.915,265,1.108,266,0.915,267,1.108,268,0.872,269,0.915,270,1.108,271,0.96,272,1.108,273,0.012,295,1.754,317,2.675,319,3.229,320,2.902,321,3.569,322,3.569,323,3.922,324,2.425,325,3.287,326,5.113,327,5.113,328,3.755,329,2.603,330,3.757,331,5.788,332,3.842,333,5.113,334,3.757,335,3.757,336,3.757,337,1.83,338,5.113,339,1.162,340,3.287,341,3.757,342,3.757,343,3.757,344,3.757,345,3.757,346,3.757,347,3.757]],["title/modules/AppModule.html",[274,0.251,348,2.372]],["body/modules/AppModule.html",[0,0.087,2,0.198,3,0.173,7,0.149,12,0.838,39,0.019,77,0.378,78,0.198,81,0.222,82,0.101,179,1.197,192,1.317,230,0.014,231,0.547,237,1.829,259,1.69,273,0.014,274,0.431,275,4.544,276,1.255,277,2.055,278,1.958,283,1.861,284,1.45,287,2.522,288,1.149,289,1.331,292,1.611,297,0.94,348,4.957,349,3.838,350,3.838,351,3.838,352,3.838,353,4.544,354,4.441,355,4.544,356,4.544,357,4.441,358,4.465,359,5.732,360,3.425,361,3.117,362,4.397,363,4.465,364,4.465,365,4.465,366,3.838,367,3.117,368,3.838,369,4.465,370,4.465,371,4.465,372,4.465,373,4.465,374,4.465]],["title/modules/AppRoutingModule.html",[274,0.251,353,2.372]],["body/modules/AppRoutingModule.html",[0,0.132,2,0.232,3,0.203,7,0.174,12,0.765,39,0.019,43,3.351,75,1.472,77,0.354,78,0.232,79,1.472,81,0.245,82,0.118,99,1.619,112,3.125,113,0.729,230,0.015,259,1.579,273,0.015,274,0.463,288,1.049,289,1.215,292,1.779,314,2.266,316,5.422,317,2.739,325,3.365,353,4.069,366,4.5,367,3.654,368,4.5,375,5.235,376,5.235,377,5.235,378,5.235,379,4.5,380,3.654,381,4.5,382,4.016,383,5.235]],["title/components/ButtonBarComponent.html",[0,0.072,239,0.899]],["body/components/ButtonBarComponent.html",[0,0.124,1,0.64,2,0.128,3,0.112,4,0.853,5,0.853,6,0.853,7,0.096,9,0.179,10,1.287,11,1.511,12,0.864,16,0.853,17,2.184,18,1.253,20,1.253,22,0.551,23,0.895,33,1.485,36,0.625,39,0.019,40,0.895,41,1.354,42,1.418,49,1.195,60,2.216,65,1.513,66,2.223,69,2.346,71,2.58,72,2.443,73,1.83,75,2.026,77,0.252,78,0.128,81,0.112,82,0.065,89,0.813,110,0.775,113,0.818,114,1.435,115,2.093,120,2.093,124,0.739,144,4.37,151,2.904,153,3.568,161,3.094,163,0.775,179,1.139,185,3.69,187,2.721,198,3.259,200,3.875,203,2.223,210,0.853,213,3.259,230,0.01,231,0.354,232,1.253,233,1.253,234,1.637,235,0.853,236,0.853,237,0.705,238,1.253,239,1.352,240,0.853,241,1.44,242,0.853,243,0.705,244,1.637,245,0.671,246,1.253,247,0.705,248,0.853,249,0.705,250,0.671,251,1.585,252,0.705,253,0.853,254,0.705,255,0.853,256,0.705,257,0.775,258,0.853,259,0.671,260,0.853,261,0.671,262,0.705,263,0.813,264,0.705,265,0.853,266,0.705,267,0.853,268,0.671,269,0.705,270,0.853,271,0.739,272,0.853,273,0.013,297,0.609,320,1.976,321,2.966,384,5.528,385,5.528,386,2.486,387,4.249,388,4.568,389,2.966,390,2.093,391,2.966,392,3.655,393,2.536,394,3.259,395,4.249,396,4.249,397,4.329,398,4.329,399,4.329,400,3.864,401,4.329,402,5.037,403,5.083,404,5.083,405,5.037,406,5.037,407,5.037,408,3.568,409,4.249,410,2.893,411,2.893,412,2.893,413,5.451,414,2.893,415,2.893,416,2.893,417,2.893,418,2.893,419,2.893,420,3.568,421,3.653,422,2.893,423,3.653,424,3.259,425,2.893,426,3.259,427,3.259,428,2.893,429,2.223,430,2.734,431,2.893,432,5.551,433,1.513,434,2.893,435,2.486]],["title/components/ButtonsComponent.html",[0,0.072,241,0.899]],["body/components/ButtonsComponent.html",[0,0.131,1,0.55,2,0.11,3,0.096,4,0.733,5,0.733,6,0.733,7,0.083,9,0.154,10,1.175,11,0.635,12,0.81,13,1.231,15,1.821,16,0.733,17,2.144,18,1.119,20,1.119,22,0.474,23,0.799,26,2.091,27,2.198,28,1.174,30,2.038,33,1.119,36,0.603,38,1.671,39,0.019,40,1.23,41,1.223,42,1.315,45,1.428,46,2.416,49,1.066,52,1.486,53,1.634,55,1.669,60,2.972,69,2.228,71,2.345,73,1.763,74,1.428,75,1.841,76,1.428,77,0.314,78,0.11,79,0.699,80,0.89,81,0.096,82,0.056,87,0.984,88,0.984,89,1.447,99,1.592,105,1.764,110,0.666,113,0.858,114,1.568,115,3.086,120,2.878,124,0.635,144,3.975,146,1.869,161,3.277,163,0.666,168,3.487,170,3.141,176,3.652,179,1.017,181,1.985,185,3.487,198,2.91,203,3.056,204,2.439,210,1.356,213,3.948,215,3.309,230,0.009,231,0.305,232,1.119,233,1.119,234,1.518,235,0.733,236,0.733,237,0.606,238,1.119,239,0.606,240,0.733,241,1.254,242,0.733,243,0.924,244,1.518,245,0.577,246,1.119,247,0.924,248,0.733,249,0.606,250,0.577,251,1.832,252,0.606,253,0.733,254,0.606,255,0.733,256,0.606,257,0.666,258,0.733,259,0.577,260,0.733,261,0.577,262,1.12,263,0.699,264,0.606,265,0.733,266,0.606,267,0.733,268,0.577,269,0.606,270,0.733,271,0.635,272,0.733,273,0.009,297,0.523,317,3.179,320,2.394,324,1.919,329,2.147,391,2.648,392,3.493,397,3.954,398,3.954,399,3.954,400,3.529,401,3.954,408,3.309,413,4.481,426,4.481,427,2.91,429,1.985,430,2.535,433,1.301,435,2.137,436,2.137,437,3.794,438,3.794,439,3.794,440,3.794,441,3.794,442,2.137,443,3.948,444,2.674,445,3.794,446,2.486,447,2.486,448,2.486,449,2.486,450,2.486,451,2.486,452,2.486,453,2.486,454,2.486,455,3.794,456,2.486,457,3.794,458,2.486,459,3.794,460,2.486,461,2.91,462,2.648,463,1.985,464,2.648,465,2.439,466,3.261,467,3.261,468,3.529,469,1.907,470,1.598,471,1.985,472,1.907,473,1.598,474,1.386,475,3.948,476,2.91,477,3.954,478,2.91,479,3.261,480,2.264,481,2.486,482,2.486,483,2.486,484,2.264,485,2.137,486,2.486,487,3.794,488,3.529,489,4.6,490,3.529,491,4.6,492,4.6,493,2.486,494,2.486,495,2.486,496,2.137,497,2.486,498,1.037,499,2.486,500,2.486]],["title/components/CompleteTaskComponent.html",[0,0.072,243,0.899]],["body/components/CompleteTaskComponent.html",[0,0.126,1,0.501,2,0.101,3,0.088,4,0.668,5,0.668,6,0.668,7,0.075,9,0.219,10,1.108,11,0.579,12,0.776,13,1.146,15,1.718,16,0.668,17,2.116,18,1.041,20,1.041,22,0.431,23,1.315,26,2.328,27,2.117,28,1.092,30,1.94,33,1.041,36,0.603,38,1.408,39,0.019,40,1.118,41,1.259,42,1.108,45,1.328,46,2.35,49,0.992,52,1.674,53,1.659,55,1.553,58,1.641,60,1.909,69,1.342,73,0.551,74,2.287,75,0.636,76,0.852,77,0.305,78,0.101,80,0.81,81,0.088,82,0.051,87,0.896,88,0.896,89,0.992,99,1.092,105,1.641,108,1.669,110,0.607,111,4.242,113,0.88,114,1.766,117,2.269,124,0.579,127,3.96,163,0.607,170,3.073,171,3.419,180,3.179,183,2.707,187,0.996,199,1.053,202,3.927,203,1.846,204,2.269,206,3.327,210,0.668,227,1.641,230,0.009,231,0.277,232,1.041,233,1.041,234,1.444,235,0.668,236,0.668,237,0.551,238,1.041,239,0.551,240,0.668,241,0.551,242,0.668,243,1.193,244,1.444,245,0.526,246,1.041,247,0.551,248,0.668,249,0.551,250,0.526,251,1.163,252,0.551,253,0.668,254,0.551,255,0.668,256,0.551,257,1.163,258,0.668,259,0.526,260,0.668,261,0.526,262,0.551,263,0.636,264,0.551,265,0.668,266,0.551,267,0.668,268,0.526,269,0.551,270,0.668,271,0.579,272,0.668,273,0.009,288,0.454,289,0.526,297,0.477,324,1.809,329,2.043,337,1.264,390,2.771,392,1.262,408,3.149,426,4.316,429,2.563,430,2.413,433,1.184,462,3.419,470,4.477,480,1.351,485,3.729,490,2.707,498,2.043,501,5.342,502,1.351,503,2.269,504,2.269,505,4.211,506,6.077,507,4.899,508,6.077,509,3.907,510,3.034,511,3.529,512,2.589,513,2.589,514,1.737,515,2.788,516,3.149,517,4.507,518,1.909,519,2.156,520,2.732,521,3.529,522,1.455,523,1.946,524,1.946,525,1.737,526,3.419,527,3.529,528,2.711,529,2.264,530,3.034,531,3.034,532,3.034,533,2.264,534,2.264,535,2.264,536,3.529,537,2.264,538,3.034,539,4.211,540,4.338,541,1.946,542,3.358,543,2.464,544,3.758,545,1.946,546,4.316,547,1.946,548,2.264,549,3.529,550,3.529,551,2.464,552,3.529,553,3.034,554,2.464,555,3.529,556,2.264,557,2.264,558,2.269,559,0.668,560,2.707,561,0.996,562,1.737,563,1.455,564,1.184,565,1.351,566,1.351,567,1.737,568,1.737,569,1.58,570,2.264,571,2.264,572,2.264,573,2.264,574,2.264,575,3.034,576,1.737,577,2.264,578,1.946,579,2.264,580,3.529,581,3.529,582,2.269,583,2.264,584,2.264,585,2.264,586,2.264,587,1.737,588,3.529,589,3.529,590,3.529,591,1.946,592,1.737,593,1.737,594,2.264,595,2.264,596,2.264]],["title/modules/CompleteTaskModule.html",[274,0.251,597,2.372]],["body/modules/CompleteTaskModule.html",[0,0.124,2,0.203,3,0.177,7,0.152,9,0.283,36,0.507,39,0.019,77,0.377,78,0.203,79,1.284,81,0.226,82,0.103,90,1.482,113,0.669,114,1.35,179,1.224,192,1.347,230,0.014,231,0.56,243,1.782,273,0.014,274,0.473,276,1.284,277,2.077,278,1.413,283,1.888,284,1.482,286,1.888,287,2.559,288,1.165,289,1.564,290,2.082,291,1.482,292,1.635,293,2.082,294,1.556,295,1.284,296,2.559,297,0.962,298,2.426,299,2.559,300,1.905,301,1.905,302,2.533,303,1.905,305,2.426,306,1.905,307,2.077,308,2.01,309,1.808,314,2.082,339,1.799,469,3.503,470,3.738,471,2.389,501,3.503,561,2.01,597,4.571,598,3.925,599,3.925,600,3.187,601,3.242,602,3.242,603,3.738,604,3.471,605,3.738,606,3.738,607,3.738,608,3.738,609,2.546,610,2.936,611,3.925]],["title/components/CompleteTasksTableComponent.html",[0,0.072,245,0.856]],["body/components/CompleteTasksTableComponent.html",[0,0.133,1,0.967,2,0.194,3,0.17,4,1.29,5,1.29,6,1.29,7,0.146,9,0.271,10,1.118,11,1.118,12,1.003,16,1.29,17,2.274,18,1.668,20,1.668,22,0.834,23,1.191,36,0.382,39,0.019,40,1.191,41,0.834,49,1.59,65,2.288,66,2.959,73,1.066,74,2.129,77,0.284,78,0.194,81,0.17,82,0.099,110,1.84,113,0.881,114,1.738,124,1.118,163,1.172,210,1.29,230,0.014,231,0.536,232,1.668,233,1.668,234,1.954,235,1.29,236,1.29,237,1.066,238,1.668,239,1.066,240,1.29,241,1.066,242,1.29,243,1.066,244,1.954,245,1.539,246,1.668,247,1.066,248,1.29,249,1.066,250,1.015,251,1.172,252,1.066,253,1.29,254,1.066,255,1.29,256,1.066,257,1.172,258,1.29,259,1.015,260,1.29,261,1.015,262,1.066,263,1.23,264,1.066,265,1.29,266,1.066,267,1.29,268,1.015,269,1.066,270,1.29,271,1.828,272,1.29,273,0.014,612,4.862,613,3.355,614,3.948,615,4.862,616,4.862,617,6.628,618,3.76,619,3.948,620,3.053,621,3.053,622,4.374]],["title/components/ConfirmDeleteTaskComponent.html",[0,0.072,247,0.899]],["body/components/ConfirmDeleteTaskComponent.html",[0,0.133,1,0.614,2,0.123,3,0.108,4,0.819,5,0.819,6,0.819,7,0.092,9,0.172,10,1.257,11,0.71,12,0.85,13,1.339,15,1.948,16,0.819,17,2.174,18,1.216,20,1.216,22,0.529,23,0.868,26,1.949,27,2.293,28,1.276,30,2.155,33,1.216,36,0.596,38,0.902,39,0.019,40,1.036,41,1.161,42,0.71,45,1.552,46,2.491,49,1.159,52,1.459,53,1.605,55,1.815,60,2.395,69,1.522,73,0.677,74,1.552,75,1.159,77,0.305,78,0.123,80,0.994,81,0.108,82,0.063,87,1.1,88,1.1,89,1.383,99,1.276,105,1.918,108,1.405,110,0.745,113,0.886,114,0.957,115,3.82,117,3.162,124,0.71,149,1.786,153,1.786,163,0.745,170,3.217,176,2.299,192,1.216,210,2.097,230,0.01,231,0.34,232,1.216,233,1.216,234,1.605,235,0.819,236,0.819,237,0.677,238,1.216,239,0.677,240,0.819,241,0.677,242,0.819,243,0.677,244,1.605,245,0.645,246,1.216,247,1.326,248,0.819,249,0.677,250,0.645,251,1.318,252,0.677,253,0.819,254,0.677,255,0.819,256,0.677,257,1.318,258,0.819,259,0.645,260,0.819,261,0.645,262,0.677,263,0.781,264,0.677,265,0.819,266,0.677,267,0.819,268,0.645,269,0.677,270,0.819,271,0.71,272,0.819,273,0.01,297,0.585,324,2.052,329,2.27,337,1.476,429,2.157,430,2.423,433,1.453,473,4.447,480,1.658,490,3.163,496,5.237,502,1.658,503,2.651,504,2.651,509,4.165,512,2.936,513,2.936,514,2.131,515,3.162,516,3.499,518,2.164,519,2.395,520,2.933,522,1.786,523,2.388,524,2.388,526,3.799,528,1.948,541,3.545,542,3.867,559,0.819,562,2.131,563,1.786,564,1.453,565,1.658,566,1.658,567,2.131,568,2.131,569,3.433,575,3.545,582,1.786,587,2.131,623,5.307,624,2.778,625,2.131,626,2.388,627,2.778,628,2.778,629,4.124,630,2.778,631,2.778,632,2.778,633,2.388,634,2.388,635,1.658,636,2.778,637,2.131,638,2.778,639,2.778,640,2.778,641,2.778,642,4.124,643,4.124,644,2.778,645,2.778,646,4.124,647,3.163,648,4.124]],["title/modules/ConfirmDeleteTaskModule.html",[274,0.251,649,2.372]],["body/modules/ConfirmDeleteTaskModule.html",[0,0.125,2,0.207,3,0.18,7,0.155,9,0.288,36,0.513,39,0.019,77,0.376,78,0.207,79,1.308,81,0.228,82,0.105,90,1.51,113,0.677,115,3.519,179,1.247,192,1.372,230,0.014,231,0.57,247,1.788,273,0.014,274,0.476,276,1.308,277,2.095,278,1.439,283,1.91,284,1.51,286,1.91,287,2.589,288,1.179,289,1.574,290,2.106,291,1.51,292,1.654,293,2.106,294,1.586,295,1.308,296,2.589,297,0.98,298,2.454,299,2.589,300,1.941,301,1.941,302,2.33,303,1.941,305,1.941,306,1.941,307,1.91,308,2.047,309,1.842,314,2.106,339,1.82,471,2.434,472,3.569,473,3.782,561,2.047,600,3.247,601,3.281,602,3.281,604,3.512,623,3.569,649,4.593,650,3.999,651,3.999,652,2.991,653,4.652]],["title/injectables/ConsoleLoggerService.html",[559,1.088,654,2.575]],["body/injectables/ConsoleLoggerService.html",[2,0.267,3,0.259,7,0.222,9,0.331,10,1.818,12,0.585,13,1.3,22,0.763,23,1.348,28,2.122,36,0.599,38,1.3,39,0.019,40,1.405,41,1.271,42,1.534,52,1.877,53,1.574,77,0.268,78,0.178,81,0.155,82,0.091,99,1.651,137,5.187,146,2.629,187,2.818,230,0.013,273,0.013,390,2.629,466,4.588,498,2.227,518,2.349,528,2.377,539,5.897,543,3.726,559,1.771,635,3.186,654,3.726,655,5.117,656,3.072,657,4.588,658,5.457,659,5.338,660,5.338,661,7.115,662,4.117,663,4.588,664,5.338,665,4.094,666,4.588,667,4.588,668,4.47,669,4.912,670,4.588,671,4.094,672,5.372,673,4.004,674,3.726,675,4.094,676,3.072,677,4.004,678,4.004,679,4.004,680,4.47,681,4.004,682,4.004,683,4.117,684,4.004,685,4.004,686,4.004,687,3.072,688,5.117,689,3.442,690,6.004,691,4.004,692,4.004,693,4.004,694,4.004,695,4.004,696,4.004,697,4.004]],["title/modules/CoreModule.html",[274,0.251,354,2.372]],["body/modules/CoreModule.html",[2,0.195,3,0.17,7,0.146,9,0.272,12,0.918,33,1.295,36,0.495,39,0.019,42,1.449,52,1.52,77,0.382,78,0.195,79,1.235,81,0.22,82,0.099,89,1.235,179,1.842,203,2.298,230,0.014,273,0.014,274,0.427,288,1.259,289,1.458,290,2.249,291,1.426,292,1.866,293,2.249,294,1.497,295,1.235,297,0.925,314,2.249,325,3.646,328,3.701,332,3.162,339,2.054,348,4.267,354,4.604,360,3.369,362,4.351,444,1.933,463,2.298,519,2.496,520,2.043,551,3.066,614,3.066,635,2.622,647,3.369,654,3.959,665,3.369,687,3.369,698,4.392,699,5.672,700,3.646,701,4.351,702,5.672,703,6.282,704,3.775,705,4.351,706,6.282,707,4.392,708,4.392,709,3.959,710,4.392,711,4.392,712,4.392,713,4.392,714,4.392,715,4.392,716,4.392,717,3.775,718,3.775,719,3.775,720,3.066,721,3.369,722,3.775,723,3.775,724,3.775]],["title/components/CreateTaskComponent.html",[0,0.072,249,0.899]],["body/components/CreateTaskComponent.html",[0,0.131,1,0.657,2,0.132,3,0.115,4,0.876,5,0.876,6,0.876,7,0.099,9,0.268,10,1.945,11,0.759,12,0.873,13,1.406,15,2.025,16,0.876,17,2.191,18,1.277,20,1.277,22,0.566,23,0.912,26,2.234,27,2.348,28,1.34,30,2.226,33,1.277,36,0.588,38,0.964,39,0.019,40,1.184,41,1.139,42,0.759,45,1.63,46,2.534,49,1.218,52,1.507,53,1.658,55,1.906,65,1.554,66,2.266,69,2.043,71,1.551,72,1.906,73,1.569,75,1.218,76,2.115,77,0.323,78,0.132,81,0.115,82,0.067,87,1.176,88,1.176,89,1.68,94,1.381,99,1.34,105,2.015,108,2.127,110,0.796,113,0.872,114,1.006,124,0.759,146,2.134,163,0.796,170,3.182,175,1.773,180,2.266,181,1.554,185,3.725,210,0.876,230,0.01,231,0.364,232,1.277,233,1.277,234,1.658,235,0.876,236,0.876,237,0.723,238,1.277,239,0.723,240,0.876,241,0.723,242,0.876,243,0.723,244,1.658,245,0.689,246,1.277,247,0.723,248,0.876,249,1.369,250,0.689,251,0.796,252,0.723,253,0.876,254,0.723,255,0.876,256,0.723,257,0.796,258,0.876,259,0.689,260,0.876,261,0.689,262,0.723,263,0.835,264,0.723,265,0.876,266,1.708,267,0.876,268,0.689,269,0.723,270,0.876,271,0.759,272,0.876,273,0.01,297,0.625,324,2.133,329,2.345,337,1.831,392,2.415,430,2.134,433,1.554,484,2.586,502,1.773,503,2.785,504,2.785,509,4.245,512,3.053,513,3.053,515,2.785,516,3.613,518,2.25,519,2.474,520,2.996,526,3.024,563,1.909,564,1.554,565,1.773,566,1.773,569,2.073,582,1.909,725,5.249,726,4.399,727,3.724,728,3.323,729,5.621,730,2.97,731,3.724,732,2.553,733,2.553,734,4.332,735,2.97,736,2.97,737,2.97,738,2.553,739,2.553,740,2.553,741,1.773,742,2.278,743,2.553,744,2.97,745,2.97,746,2.97,747,2.97,748,2.073,749,2.97,750,2.553,751,2.97,752,2.553,753,2.97,754,2.97,755,2.97,756,2.97,757,2.97,758,2.97,759,4.332]],["title/modules/CreateTaskModule.html",[274,0.251,760,2.372]],["body/modules/CreateTaskModule.html",[0,0.129,2,0.197,3,0.172,7,0.148,9,0.275,12,0.834,36,0.498,39,0.019,48,3.983,77,0.378,78,0.197,79,1.247,81,0.221,82,0.1,90,1.44,113,0.726,120,2.811,179,1.189,192,1.308,230,0.014,231,0.543,249,1.771,273,0.014,274,0.48,276,1.247,277,2.048,278,1.372,283,1.853,284,1.44,286,1.853,287,2.511,288,1.143,289,1.547,290,2.043,291,1.44,292,1.604,293,2.043,294,1.511,295,1.247,296,2.511,297,0.934,298,1.85,299,2.511,300,1.85,301,2.38,302,2.499,303,2.38,305,1.85,306,1.85,307,1.853,308,1.951,309,1.756,314,2.043,339,1.952,471,2.32,561,1.951,600,3.095,601,3.182,602,3.182,603,3.668,604,3.406,605,3.668,606,3.668,607,3.668,720,3.095,725,3.402,726,3.668,741,2.647,760,4.674,761,3.812,762,3.812,763,3.812,764,3.934,765,2.851,766,4.435,767,3.402,768,3.402]],["title/components/EditTaskComponent.html",[0,0.072,250,0.856]],["body/components/EditTaskComponent.html",[0,0.128,1,0.35,2,0.07,3,0.061,4,0.467,5,0.467,6,0.467,7,0.053,9,0.164,10,0.87,11,1.559,12,0.646,13,0.858,15,1.348,16,0.467,17,1.993,18,0.78,20,0.78,22,1.012,23,1.006,26,2.141,27,1.999,28,0.818,30,1.574,33,0.78,35,3.049,36,0.597,38,0.858,39,0.019,40,0.837,41,1.217,42,0.676,43,1.677,45,1.907,46,1.907,49,0.743,52,1.603,53,1.566,57,0.945,60,1.163,63,2.273,65,1.383,66,1.781,69,2.075,71,1.423,72,2.428,73,1.387,74,1.999,75,1.117,76,1.281,77,0.311,78,0.07,79,0.445,80,0.567,81,0.061,82,0.115,87,0.627,88,1.047,89,1.117,90,0.858,94,2.055,99,1.643,105,1.848,108,1.628,110,0.424,112,1.578,113,0.882,114,1.416,121,4.232,124,1.22,125,2.273,126,3.34,127,1.474,128,2.273,129,2.028,133,1.215,146,2.177,153,1.7,162,4.356,163,0.424,168,2.032,170,2.648,180,1.383,181,1.781,185,3.17,186,1.105,187,2.428,199,3.067,201,1.215,210,1.004,212,2.499,218,2.638,219,2.663,220,2.851,230,0.006,231,0.194,232,0.78,233,0.78,234,1.172,235,0.467,236,0.467,237,0.386,238,0.78,239,1.077,240,0.467,241,0.386,242,0.467,243,0.386,244,1.172,245,0.368,246,0.78,247,0.386,248,0.467,249,0.386,250,0.923,251,1.824,252,0.386,253,0.467,254,0.386,255,0.467,256,0.386,257,1.358,258,0.467,259,0.368,260,0.467,261,0.368,262,0.644,263,0.743,264,0.386,265,0.467,266,1.424,267,0.467,268,0.368,269,0.386,270,0.467,271,0.405,272,0.467,273,0.006,274,0.108,288,0.317,289,0.368,291,0.514,297,0.333,307,2.141,317,2.779,324,1.42,328,2.216,329,1.658,331,3.417,337,1.582,382,1.215,385,1.215,388,3.414,389,1.105,390,1.958,392,1.474,393,1.578,400,3.049,421,2.273,427,4.368,429,1.383,430,2.177,433,0.828,443,3.049,444,2.23,461,1.215,463,1.781,464,3.085,468,2.028,471,0.828,474,0.883,475,2.028,476,1.215,477,2.273,478,1.215,479,1.361,480,2.032,484,2.638,498,0.661,502,0.945,503,1.7,504,1.7,509,3.414,512,2.032,513,2.032,518,1.498,519,1.749,520,2.47,525,1.215,528,2.495,538,2.926,545,1.361,547,1.361,558,1.7,563,1.018,564,0.828,565,0.945,566,0.945,576,4.368,578,1.361,582,1.7,625,1.215,662,1.7,683,1.018,700,1.018,727,3.417,728,2.028,733,1.361,741,0.945,742,1.215,743,1.361,748,1.845,769,5.282,770,2.273,771,4.776,772,3.975,773,4.776,774,3.975,775,4.776,776,4.776,777,3.799,778,3.975,779,3.975,780,2.644,781,3.975,782,1.584,783,3.975,784,2.644,785,2.644,786,1.584,787,2.644,788,2.273,789,1.584,790,2.273,791,2.644,792,2.273,793,1.584,794,2.273,795,2.644,796,1.584,797,1.584,798,2.273,799,1.584,800,1.584,801,3.049,802,1.584,803,1.584,804,2.644,805,1.584,806,1.584,807,1.584,808,1.584,809,3.404,810,4.42,811,1.584,812,1.584,813,1.584,814,2.644,815,1.584,816,1.958,817,2.644,818,1.215,819,1.215,820,1.361,821,1.584,822,2.644,823,3.404,824,1.361,825,1.584,826,1.584,827,1.584,828,3.404,829,1.584,830,1.105,831,1.584,832,1.584,833,1.361,834,1.105,835,1.584,836,1.584,837,1.584,838,1.584,839,1.584,840,1.584,841,1.584,842,1.584,843,2.926,844,1.584,845,1.584,846,1.584,847,2.644,848,1.215,849,1.584,850,2.644,851,2.644,852,2.644,853,2.644,854,1.584,855,1.584,856,1.584,857,1.584,858,1.584,859,1.584,860,1.584,861,1.584,862,1.584,863,1.584,864,1.584,865,1.361,866,1.361,867,1.361,868,1.361,869,1.584,870,1.361,871,1.215,872,1.361,873,1.584,874,1.584,875,1.584,876,1.584,877,1.584,878,1.584,879,1.584,880,2.926,881,1.584,882,1.584,883,3.975,884,1.361,885,1.584,886,2.644,887,1.584,888,1.584,889,1.361,890,1.584,891,1.584,892,3.404,893,3.975,894,4.42,895,3.417,896,4.42,897,1.584,898,1.584,899,1.361,900,1.584,901,1.584,902,1.584,903,1.584,904,1.361,905,1.215,906,1.584,907,1.361,908,1.584,909,1.361,910,1.584,911,1.361,912,1.584,913,1.361,914,1.584,915,1.584,916,1.361,917,1.584,918,1.361,919,1.584,920,2.644,921,1.584,922,1.584,923,1.584,924,2.644]],["title/modules/EditTaskModule.html",[274,0.251,925,2.372]],["body/modules/EditTaskModule.html",[0,0.116,2,0.176,3,0.154,7,0.132,9,0.246,12,0.581,36,0.463,39,0.019,73,0.968,77,0.38,78,0.176,79,1.117,81,0.206,82,0.09,90,1.29,113,0.689,179,1.711,192,1.172,230,0.013,231,0.487,250,1.649,251,1.603,262,1.73,263,1.117,273,0.013,274,0.453,276,1.117,277,1.942,278,1.23,283,1.724,284,1.29,286,1.724,287,2.337,288,1.064,289,1.482,290,1.901,291,1.29,292,1.493,293,1.901,294,1.355,295,1.117,296,2.337,297,0.837,298,2.215,299,2.337,300,1.658,301,1.658,302,2.369,303,1.658,305,2.215,306,1.658,307,1.942,308,1.749,309,1.574,314,1.901,339,1.643,388,2.555,471,2.779,561,1.749,600,2.774,601,2.961,602,2.961,603,3.414,604,3.17,605,3.414,606,3.414,607,3.414,608,3.414,609,2.216,610,2.555,611,3.416,652,3.414,724,3.416,741,2.372,764,3.817,765,3.414,767,3.049,769,3.049,819,3.049,925,4.838,926,3.416,927,3.416,928,3.416,929,3.416,930,4.087,931,4.087,932,4.494,933,4.565,934,4.074,935,5.311,936,3.707,937,4.565,938,3.707,939,3.049,940,3.416,941,3.416,942,3.416,943,3.975,944,2.774]],["title/components/FooterComponent.html",[0,0.072,252,0.899]],["body/components/FooterComponent.html",[0,0.141,1,1.038,2,0.208,3,0.182,4,1.384,5,1.384,6,1.384,7,0.156,9,0.291,10,1.656,11,1.199,12,1.075,16,1.384,17,2.287,18,1.745,20,1.745,39,0.019,40,1.246,49,1.663,73,1.143,77,0.235,78,0.208,81,0.182,82,0.106,110,1.258,113,0.824,114,1.373,124,1.199,163,1.258,210,1.384,230,0.014,231,0.575,232,1.745,233,1.745,234,2.006,235,1.384,236,1.384,237,1.143,238,1.745,239,1.143,240,1.384,241,1.143,242,1.384,243,1.143,244,2.006,245,1.089,246,1.745,247,1.143,248,1.384,249,1.143,250,1.089,251,1.258,252,1.657,253,1.384,254,1.143,255,1.384,256,1.143,257,1.258,258,1.384,259,1.089,260,1.384,261,1.089,262,1.143,263,1.319,264,1.143,265,1.384,266,1.143,267,1.384,268,1.089,269,1.143,270,1.384,271,1.199,272,1.384,273,0.014,322,4.749,945,4.034,946,5.917,947,5.917,948,5.917]],["title/modules/FooterModule.html",[274,0.251,355,2.372]],["body/modules/FooterModule.html",[0,0.12,2,0.223,3,0.194,7,0.167,9,0.311,36,0.538,39,0.019,77,0.365,78,0.223,79,1.41,81,0.27,82,0.113,179,1.344,192,1.479,230,0.015,231,0.614,252,1.87,273,0.015,274,0.487,276,1.41,277,2.167,278,1.551,283,2.002,284,1.628,287,2.713,288,1.235,289,1.431,290,2.207,291,1.628,292,1.733,293,2.207,294,1.709,295,1.41,314,2.207,322,4.304,355,4.741,949,4.311,950,4.311,951,4.311,952,5.015,953,5.015]],["title/components/HeaderComponent.html",[0,0.072,254,0.899]],["body/components/HeaderComponent.html",[0,0.136,1,0.613,2,0.123,3,0.108,4,0.818,5,0.818,6,0.818,7,0.092,9,0.255,10,1.256,11,0.709,12,0.967,13,1.337,15,1.946,16,0.818,17,2.173,18,1.215,20,1.604,22,0.528,23,0.867,27,2.187,28,1.274,30,2.153,33,0.818,36,0.587,38,1.765,39,0.019,40,1.145,41,1.201,42,1.052,45,2.047,46,2.49,49,1.529,52,1.458,53,1.604,55,1.812,58,2.285,65,1.451,66,2.155,68,3.54,69,2.215,71,1.947,72,1.812,73,1.197,74,2.291,76,1.849,77,0.273,78,0.123,80,0.993,81,0.108,82,0.063,84,1.935,87,1.098,88,1.098,89,0.78,94,2.832,99,0.858,105,1.29,108,2.075,109,4.172,110,0.743,113,0.701,114,0.956,123,3.032,124,0.709,132,3.159,135,3.735,139,3.689,140,3.618,151,2.845,161,2.155,163,1.873,164,3.522,167,3.246,200,4.699,210,0.818,212,3.522,227,2.529,228,5.305,230,0.01,231,0.34,232,1.215,233,1.215,234,1.604,235,0.818,236,0.818,237,0.675,238,1.215,239,0.675,240,0.818,241,0.675,242,0.818,243,0.675,244,1.604,245,0.644,246,1.215,247,0.675,248,0.818,249,0.675,250,0.644,251,0.743,252,0.675,253,0.818,254,1.325,255,0.818,256,0.675,257,0.743,258,0.818,259,0.644,260,0.818,261,0.644,262,0.675,263,0.78,264,0.675,265,0.818,266,0.675,267,0.818,268,0.644,269,1.415,270,0.818,271,0.709,272,0.818,273,0.01,307,1.337,309,1.631,320,1.915,324,2.05,329,2.269,393,2.458,413,3.159,420,3.496,444,2.679,463,2.155,465,3.735,467,3.54,474,1.546,498,1.157,662,2.648,954,2.384,955,3.159,956,3.54,957,5.567,958,3.54,959,4.172,960,3.159,961,3.689,962,4.997,963,4.119,964,4.119,965,3.735,966,6.304,967,5.439,968,5.439,969,4.119,970,2.773,971,4.119,972,2.773,973,2.773,974,4.391,975,4.119,976,2.773,977,4.119,978,2.773,979,2.773,980,2.773,981,4.172,982,2.773,983,2.773,984,4.119,985,2.127,986,2.384,987,2.773,988,4.119,989,1.935,990,2.648,991,4.914,992,2.773,993,2.773,994,2.773]],["title/modules/HeaderModule.html",[274,0.251,356,2.372]],["body/modules/HeaderModule.html",[0,0.124,2,0.202,3,0.176,7,0.151,9,0.282,12,0.664,36,0.506,39,0.019,77,0.377,78,0.202,79,1.278,81,0.261,82,0.103,90,1.476,179,1.219,192,1.341,212,3.034,230,0.014,231,0.557,254,1.849,273,0.014,274,0.483,276,1.278,277,2.073,278,1.407,283,1.883,284,1.476,286,1.883,287,2.552,288,1.162,289,1.561,290,2.076,291,1.476,292,1.63,293,2.076,294,1.55,295,1.278,296,2.552,297,0.957,298,1.897,299,2.552,300,1.897,301,1.897,302,2.296,303,1.897,305,1.897,306,1.897,307,1.883,308,2.001,309,1.801,314,2.076,339,1.794,356,4.744,936,4.048,985,3.488,995,3.909,996,3.909,997,3.909,998,3.909,999,4.566,1000,4.547,1001,5.799,1002,4.547,1003,4.985,1004,4.547,1005,4.547,1006,4.547]],["title/injectables/HttpService.html",[559,1.088,709,2.575]],["body/injectables/HttpService.html",[2,0.12,3,0.157,7,0.09,9,0.388,12,0.396,22,0.517,23,0.853,26,2.585,28,1.253,33,1.195,36,0.593,38,2.032,39,0.019,40,1.318,41,1.295,42,1.952,52,1.924,53,1.586,71,1.45,74,1.525,75,0.762,77,0.314,78,0.12,81,0.105,82,0.061,89,0.762,90,1.746,94,2.502,111,3.385,114,0.94,115,3.083,118,2.604,119,2.828,160,2.828,212,3.159,215,4.473,222,3.482,227,1.884,230,0.01,273,0.01,328,2.259,332,3.21,337,0.971,339,1.664,390,1.996,393,3.211,394,3.108,420,2.604,498,2.871,518,2.134,519,2.367,528,2.804,551,2.828,559,1.43,634,6.559,637,3.108,657,6.319,674,2.828,676,4.416,687,2.08,704,2.331,709,2.828,816,3.621,944,3.755,960,3.108,1007,2.331,1008,6.959,1009,4.051,1010,4.051,1011,5.379,1012,4.051,1013,4.051,1014,5.379,1015,3.482,1016,4.051,1017,4.051,1018,4.051,1019,4.051,1020,4.388,1021,4.051,1022,5.379,1023,6.039,1024,6.259,1025,6.259,1026,5.379,1027,2.712,1028,4.85,1029,4.051,1030,4.051,1031,2.712,1032,4.051,1033,2.712,1034,4.051,1035,2.712,1036,2.712,1037,4.633,1038,4.051,1039,2.712,1040,3.482,1041,4.051,1042,7.133,1043,2.712,1044,4.051,1045,2.712,1046,2.712,1047,4.051,1048,4.051,1049,2.712,1050,2.712,1051,2.712,1052,2.712,1053,2.712,1054,2.712,1055,2.712,1056,5.379,1057,4.85,1058,4.85,1059,2.712,1060,2.712,1061,2.712,1062,2.712,1063,4.051,1064,2.712,1065,2.712,1066,2.712,1067,2.712,1068,2.712,1069,2.712,1070,2.712,1071,2.712]],["title/components/ListItemComponent.html",[0,0.072,256,0.899]],["body/components/ListItemComponent.html",[0,0.133,1,0.565,2,0.113,3,0.099,4,0.753,5,0.753,6,0.753,7,0.085,9,0.158,10,1.333,11,0.652,12,0.819,13,1.257,15,1.851,16,0.753,17,2.151,18,1.142,20,1.142,22,0.486,23,0.815,27,2.221,28,1.198,30,2.066,33,0.753,36,0.6,38,1.518,39,0.019,40,0.985,41,1.277,42,0.652,45,1.76,46,2.587,49,1.659,52,1.038,53,1.142,55,2.058,69,1.614,71,1.386,72,1.703,73,1.769,74,2.377,77,0.262,78,0.113,80,0.914,81,0.099,82,0.106,84,1.782,87,1.011,88,1.011,89,0.718,90,1.518,94,1.8,99,1.614,108,1.319,110,0.684,113,0.813,114,1.302,116,3.936,119,2.702,124,1.195,126,3.857,140,2.025,144,3.861,146,2.908,161,2.73,163,0.684,164,3.088,187,2.846,194,2.702,199,2.745,210,0.753,212,2.025,217,4.409,218,3.661,219,3.419,220,3.661,226,1.958,227,1.8,230,0.009,231,0.313,232,1.142,233,1.142,234,1.539,235,0.753,236,0.753,237,0.622,238,1.142,239,0.622,240,0.753,241,0.622,242,0.753,243,0.622,244,1.539,245,0.593,246,1.142,247,0.622,248,0.753,249,0.622,250,0.593,251,0.684,252,0.622,253,0.753,254,0.622,255,0.753,256,1.271,257,1.734,258,0.753,259,0.593,260,0.753,261,0.593,262,0.622,263,0.718,264,0.622,265,0.753,266,0.622,267,0.753,268,0.593,269,0.622,270,0.753,271,0.652,272,0.753,273,0.009,288,0.512,289,0.593,307,1.821,324,1.95,329,2.177,337,1.386,484,3.348,498,2.177,520,2.745,528,2.774,542,3.861,554,2.702,558,2.488,564,1.336,816,3.112,884,5.43,889,2.195,955,2.969,959,2.969,960,1.958,974,3.605,1020,3.861,1072,5.969,1073,2.195,1074,3.871,1075,3.871,1076,3.328,1077,3.328,1078,3.871,1079,3.328,1080,3.871,1081,3.871,1082,5.218,1083,4.019,1084,4.676,1085,2.195,1086,3.871,1087,3.871,1088,5.218,1089,3.871,1090,2.553,1091,6.133,1092,3.871,1093,2.553,1094,3.871,1095,2.553,1096,3.871,1097,2.553,1098,2.553,1099,2.553,1100,2.553,1101,2.553,1102,2.553,1103,2.553,1104,2.553,1105,3.871,1106,2.553,1107,2.553,1108,2.553,1109,2.553,1110,5.218,1111,5.218,1112,2.195,1113,2.553,1114,2.553,1115,4.676,1116,4.676,1117,2.553,1118,2.553,1119,3.871,1120,3.871,1121,2.195,1122,2.553,1123,2.553,1124,2.553,1125,2.553,1126,2.195,1127,2.553,1128,2.553,1129,2.553,1130,2.553,1131,2.553]],["title/injectables/LoaderService.html",[332,2.057,559,1.088]],["body/injectables/LoaderService.html",[2,0.203,3,0.177,7,0.152,9,0.283,22,0.87,23,1.224,26,2.29,28,1.799,33,1.887,36,0.607,39,0.019,41,1.108,52,1.559,53,1.715,57,3.471,58,3.132,69,1.799,71,1.635,72,2.01,74,2.535,76,2.408,77,0.291,78,0.203,80,1.635,81,0.226,82,0.103,89,1.284,108,2.18,123,3.878,230,0.014,273,0.014,328,4.029,332,3.242,340,4.471,393,4.408,420,4.784,559,1.887,816,3.503,1037,5.336,1132,3.503,1133,6.211,1134,6.288,1135,5.815,1136,4.567,1137,4.567,1138,4.567,1139,5.336,1140,2.546,1141,3.925,1142,3.925,1143,3.925,1144,4.998]],["title/interfaces/LoaderState.html",[340,2.372,1140,2.057]],["body/interfaces/LoaderState.html",[2,0.218,3,0.191,7,0.164,9,0.304,22,0.937,23,1.282,26,1.76,33,1.449,39,0.019,41,0.937,57,2.934,58,2.832,69,2.199,71,2.18,72,2.68,74,2.292,76,2.292,77,0.305,78,0.218,80,1.76,81,0.236,82,0.111,89,1.382,108,2.075,123,3.856,230,0.015,273,0.015,328,3.964,332,2.741,340,4.254,393,4.244,420,4.809,559,1.796,816,3.259,1037,5.306,1132,3.77,1133,6.111,1134,5.688,1139,5.076,1140,3.396,1141,4.225,1142,4.225,1143,4.225,1144,5.235]],["title/classes/Logger.html",[82,0.083,518,1.624]],["body/classes/Logger.html",[2,0.319,3,0.231,7,0.198,9,0.293,13,1.931,22,0.902,23,1.253,36,0.568,39,0.019,40,0.997,41,1.34,42,1.21,53,1.396,75,1.331,77,0.237,78,0.21,81,0.231,82,0.147,97,3.305,118,4.182,159,3.632,187,2.083,208,3.305,230,0.014,273,0.014,288,0.949,339,1.84,498,2.482,518,3.003,519,2.083,528,1.875,543,3.305,559,1.754,658,5.85,662,3.043,668,3.305,669,3.632,671,3.632,672,4.99,674,3.305,675,5.742,680,5.142,683,4.736,1020,2.826,1140,3.317,1145,3.632,1146,4.735,1147,4.735,1148,4.735,1149,4.07,1150,4.07]],["title/injectables/LoggerService.html",[519,1.624,559,1.088]],["body/injectables/LoggerService.html",[2,0.313,3,0.245,7,0.21,9,0.353,13,2.047,22,0.844,23,1.201,28,1.764,36,0.581,38,1.438,39,0.019,40,1.328,41,1.385,42,1.611,52,1.187,53,1.681,75,1.603,77,0.222,78,0.197,81,0.221,82,0.129,97,3.98,118,4.054,159,4.374,187,2.509,208,3.98,230,0.014,273,0.014,288,1.142,339,2.06,498,2.378,518,2.93,519,2.509,528,2.497,543,3.98,559,1.86,658,5.844,662,3.665,668,3.98,669,4.374,670,4.901,671,4.374,672,5.411,674,3.98,675,5.719,676,3.397,680,5.074,683,4.673,1020,3.403,1140,2.469,1145,3.397,1149,3.807,1150,4.901,1151,4.428,1152,4.428,1153,4.428,1154,4.428]],["title/injectables/MatPaginatorCustom.html",[559,1.088,932,2.372]],["body/injectables/MatPaginatorCustom.html",[2,0.207,3,0.181,7,0.156,9,0.289,11,1.736,22,0.89,23,1.242,36,0.611,39,0.019,41,1.124,52,1.581,74,2.22,75,1.818,77,0.296,78,0.207,81,0.181,82,0.106,99,2.101,113,0.782,137,4.118,230,0.014,273,0.014,297,0.984,337,2.315,388,4.366,394,3.584,403,6.316,404,6.149,528,2.69,542,3.522,559,1.907,788,5.072,932,3.793,933,5.839,944,4.118,1155,5.839,1156,4.017,1157,5.9,1158,5.9,1159,6.793,1160,6.793,1161,6.793,1162,5.129,1163,5.9,1164,6.793,1165,5.9,1166,4.673,1167,5.072,1168,4.673,1169,4.673]],["title/components/PageNotFoundComponent.html",[0,0.072,259,0.856]],["body/components/PageNotFoundComponent.html",[0,0.14,1,1.007,2,0.202,3,0.177,4,1.343,5,1.343,6,1.343,7,0.152,9,0.282,10,1.633,11,1.913,12,1.068,16,1.343,17,2.281,18,1.712,20,1.712,39,0.018,40,1.222,49,1.632,73,1.109,77,0.228,78,0.202,81,0.177,82,0.103,94,2.699,110,1.221,113,0.818,114,1.347,124,1.164,163,1.221,210,1.343,230,0.014,231,0.558,232,1.712,233,1.712,234,1.984,235,1.343,236,1.343,237,1.109,238,1.712,239,1.109,240,1.343,241,1.109,242,1.343,243,1.109,244,1.984,245,1.057,246,1.712,247,1.109,248,1.343,249,1.109,250,1.057,251,1.221,252,1.109,253,1.343,254,1.109,255,1.343,256,1.109,257,1.221,258,1.343,259,1.562,260,1.343,261,1.057,262,1.109,263,1.28,264,1.109,265,1.343,266,1.109,267,1.343,268,1.057,269,1.109,270,1.343,271,1.164,272,1.343,273,0.014,367,3.178,382,5.161,666,5.784,770,4.989,830,4.696,1170,3.914,1171,3.914,1172,5.805,1173,5.805,1174,5.805]],["title/components/PendingTasksTableComponent.html",[0,0.072,261,0.856]],["body/components/PendingTasksTableComponent.html",[0,0.133,1,0.967,2,0.194,3,0.17,4,1.29,5,1.29,6,1.29,7,0.146,9,0.271,10,1.118,11,1.118,12,1.003,16,1.29,17,2.274,18,1.668,20,1.668,22,0.834,23,1.191,36,0.382,39,0.019,40,1.191,41,0.834,49,1.59,65,2.288,66,2.959,73,1.066,74,2.129,77,0.284,78,0.194,81,0.17,82,0.099,110,1.84,113,0.881,114,1.313,124,1.902,163,1.172,210,1.29,230,0.014,231,0.536,232,1.668,233,1.668,234,1.954,235,1.29,236,1.29,237,1.066,238,1.668,239,1.066,240,1.29,241,1.066,242,1.29,243,1.066,244,1.954,245,1.015,246,1.668,247,1.066,248,1.29,249,1.066,250,1.015,251,1.172,252,1.066,253,1.29,254,1.066,255,1.29,256,1.066,257,1.172,258,1.29,259,1.015,260,1.29,261,1.539,262,1.066,263,1.23,264,1.066,265,1.29,266,1.066,267,1.29,268,1.015,269,1.066,270,1.29,271,1.828,272,1.29,273,0.014,613,3.355,614,3.948,615,4.862,616,4.862,618,3.76,619,3.948,620,3.053,621,3.053,1175,4.862,1176,6.628,1177,4.374]],["title/components/RecurringTaskComponent.html",[0,0.072,262,0.899]],["body/components/RecurringTaskComponent.html",[0,0.138,1,0.66,2,0.133,3,0.116,4,0.881,5,0.881,6,0.881,7,0.099,9,0.185,10,1.311,11,0.763,12,0.875,13,1.412,15,2.031,16,0.881,17,2.192,18,1.283,20,1.283,22,0.569,23,0.916,26,2.238,27,2.121,28,1.346,30,2.232,33,1.283,36,0.598,38,0.969,39,0.019,40,1.08,41,1.191,42,0.763,45,1.637,46,2.429,49,1.223,52,1.511,53,1.662,60,2.258,69,1.934,72,2.48,73,1.25,75,0.84,76,1.637,77,0.3,78,0.133,81,0.116,82,0.068,87,1.183,88,1.183,89,1.223,108,1.748,110,0.8,113,0.884,114,1.01,124,0.763,161,2.276,163,0.8,168,2.596,170,3.186,176,3.142,180,2.276,181,2.948,199,2.023,203,2.276,210,0.881,217,3.036,230,0.011,231,0.366,232,1.283,233,1.283,234,1.662,235,0.881,236,0.881,237,0.727,238,1.283,239,0.727,240,0.881,241,0.727,242,0.881,243,0.727,244,1.662,245,0.693,246,1.283,247,0.727,248,0.881,249,0.727,250,0.693,251,1.986,252,0.727,253,0.881,254,0.727,255,0.881,256,0.727,257,0.8,258,0.881,259,0.693,260,0.881,261,0.693,262,1.373,263,1.992,264,0.727,265,0.881,266,0.727,267,0.881,268,0.693,269,0.727,270,0.881,271,0.763,272,0.881,273,0.011,297,0.629,324,2.14,329,2.351,337,2.018,390,2.143,392,1.665,408,3.623,429,2.948,430,2.776,433,1.562,462,3.036,463,2.948,464,4.364,480,1.783,502,1.783,503,2.796,504,2.796,509,4.252,512,3.062,513,3.062,514,2.291,515,3.298,516,3.623,517,4.951,522,1.92,525,2.291,526,3.036,544,4.323,559,0.881,560,2.291,561,1.314,562,2.291,565,1.783,566,1.783,567,2.291,568,2.291,569,3.036,587,2.291,592,2.291,593,2.291,625,2.291,626,2.567,731,3.739,732,2.567,738,2.567,739,2.567,740,2.567,777,5.548,798,3.739,801,4.323,880,2.567,1178,5.968,1179,4.35,1180,5.636,1181,4.35,1182,2.986,1183,2.986,1184,2.986,1185,2.986,1186,2.986]],["title/components/SidenavTasksComponent.html",[0,0.072,264,0.899]],["body/components/SidenavTasksComponent.html",[0,0.12,1,0.414,2,0.083,3,0.073,4,0.552,5,0.552,6,1.129,7,0.062,9,0.237,10,1.393,11,0.479,12,0.707,13,0.985,15,1.515,16,0.552,17,2.054,18,0.895,20,0.895,22,1.198,23,0.927,26,2.402,27,1.82,28,0.939,30,1.743,33,0.895,35,3.376,36,0.591,38,1.905,39,0.019,40,1.018,41,1.198,42,0.978,43,3.149,45,1.142,46,2.208,49,0.853,51,1.61,52,1.573,53,1.426,55,1.336,58,2.536,60,1.336,69,1.908,71,1.576,72,0.824,73,0.456,75,0.853,76,1.656,77,0.285,78,0.083,79,0.527,80,0.67,81,0.073,82,0.042,87,0.742,88,0.742,89,0.853,94,2.536,99,1.496,105,0.871,108,1.765,110,0.502,112,1.812,113,0.802,114,1.432,116,4.203,117,1.204,123,1.692,124,1.679,126,3.289,135,1.204,139,2.697,140,2.303,151,1.588,160,1.307,161,1.588,163,1.856,164,1.588,167,1.812,168,1.812,170,2.047,176,2.887,186,2.119,187,2.767,194,1.307,199,1.412,208,1.307,210,0.552,212,1.588,217,4.585,218,2.627,219,3.272,220,3.503,226,3.71,227,2.047,230,0.007,231,0.229,232,0.895,233,0.895,234,1.298,235,0.552,236,0.552,237,0.456,238,0.895,239,0.456,240,0.552,241,0.456,242,0.552,243,0.456,244,1.298,245,0.435,246,0.895,247,0.456,248,0.552,249,0.739,250,0.435,251,0.502,252,0.456,253,0.552,254,0.456,255,0.552,256,0.456,257,1.616,258,0.552,259,0.435,260,0.552,261,0.435,262,0.456,263,0.527,264,1.072,265,0.552,266,0.456,267,0.552,268,0.435,269,0.456,270,0.552,271,0.479,272,0.552,273,0.007,295,1.237,297,0.394,307,1.957,317,3.227,320,2.047,321,2.119,322,2.119,323,2.328,324,1.596,329,1.836,337,1.37,389,2.119,390,2.168,424,2.328,442,1.61,443,3.376,444,2.4,465,1.204,468,2.328,471,0.98,474,1.044,475,2.328,476,1.437,478,1.437,484,1.118,498,2.74,520,2.536,528,0.742,542,3.599,564,0.98,635,1.812,668,2.119,700,1.951,726,1.204,768,1.437,816,2.97,818,1.437,830,2.119,895,4.451,899,2.609,904,3.783,905,2.328,959,4.356,961,2.697,962,2.119,965,3.109,974,3.109,989,1.307,990,2.46,1020,3.255,1083,4.882,1112,3.783,1121,3.783,1126,3.783,1162,2.119,1187,5.148,1188,1.61,1189,2.609,1190,2.609,1191,4.401,1192,6.486,1193,5.679,1194,4.401,1195,4.401,1196,3.035,1197,4.401,1198,1.873,1199,1.873,1200,3.035,1201,3.035,1202,3.035,1203,3.035,1204,3.035,1205,1.873,1206,4.837,1207,3.035,1208,1.873,1209,1.873,1210,1.873,1211,3.035,1212,1.873,1213,3.035,1214,1.873,1215,1.873,1216,3.035,1217,6.486,1218,6.029,1219,3.035,1220,5.679,1221,3.035,1222,3.035,1223,1.873,1224,1.873,1225,1.873,1226,1.873,1227,1.873,1228,5.679,1229,3.035,1230,1.873,1231,1.873,1232,1.61,1233,1.873,1234,1.873,1235,1.873,1236,1.873,1237,1.873,1238,1.873,1239,1.873,1240,1.873,1241,3.035,1242,1.873,1243,1.873,1244,1.873,1245,1.873,1246,1.873,1247,1.873,1248,1.873,1249,1.873,1250,4.401,1251,1.873,1252,1.873,1253,1.873,1254,1.873,1255,1.873,1256,1.873,1257,1.873,1258,5.178,1259,1.873,1260,1.873,1261,1.873,1262,1.873,1263,1.873,1264,1.873,1265,3.827,1266,1.873]],["title/modules/SidenavTasksModule.html",[274,0.251,1267,2.372]],["body/modules/SidenavTasksModule.html",[0,0.12,2,0.19,3,0.166,7,0.143,9,0.265,12,0.626,36,0.487,39,0.019,77,0.378,78,0.19,79,1.204,81,0.255,82,0.097,90,1.39,113,0.642,163,1.663,179,1.148,192,1.262,230,0.014,231,0.525,256,1.703,257,1.148,264,1.835,273,0.014,274,0.476,276,1.204,277,2.014,278,1.324,283,1.811,284,1.39,286,1.811,287,2.455,288,1.118,289,1.526,290,1.997,291,1.39,292,1.568,293,1.997,294,1.459,295,1.204,296,2.455,297,0.901,298,2.327,299,2.455,300,1.786,301,1.786,302,2.457,303,1.786,305,2.327,306,1.786,307,2.014,308,1.884,309,1.695,314,1.997,339,1.726,609,2.387,705,4.279,726,2.752,760,4.493,765,3.586,768,3.284,936,3.894,1003,3.68,1187,3.284,1267,4.768,1268,3.68,1269,3.68,1270,4.281,1271,3.68,1272,4.281,1273,5.578,1274,5.578,1275,5.578,1276,5.578,1277,5.578,1278,5.578,1279,5.578,1280,4.281,1281,3.68,1282,4.281,1283,3.284]],["title/classes/Task.html",[82,0.083,113,0.425]],["body/classes/Task.html",[2,0.172,3,0.151,7,0.129,9,0.443,22,0.74,23,1.101,36,0.625,39,0.019,40,1.488,41,1.379,42,1.336,58,2.432,69,1.829,75,1.912,76,2.38,81,0.203,82,0.118,108,1.782,113,0.888,114,1.579,124,1.616,126,3.309,127,4.1,174,4.608,175,4.218,181,3.926,187,3.184,188,4.852,202,3.65,230,0.013,273,0.013,286,1.698,337,2.264,528,2.835,546,4.852,576,4.852,748,4.415,750,5.437,752,5.437,848,4.852,961,3.296,1162,3.65,1284,2.979,1285,5.229,1286,6.325,1287,4.852,1288,4.852,1289,4.852,1290,4.852,1291,3.884,1292,3.884,1293,3.884,1294,3.884,1295,3.884,1296,5.229,1297,4.495,1298,3.884,1299,3.884,1300,5.437,1301,3.884,1302,4.535,1303,4.535,1304,3.884]],["title/components/TaskFormComponent.html",[0,0.072,266,0.899]],["body/components/TaskFormComponent.html",[0,0.12,1,0.412,2,0.083,3,0.072,4,0.549,5,0.549,6,0.549,7,0.062,9,0.389,10,1.655,11,0.476,12,0.705,13,0.981,15,1.509,16,0.549,17,2.052,18,0.891,20,0.891,22,0.355,23,1.55,26,1.726,27,1.815,28,0.935,30,1.737,33,0.891,36,0.585,38,1.565,39,0.019,40,1.381,41,1.234,42,1.232,45,1.943,46,2.204,49,0.849,52,1.796,53,1.124,55,1.329,57,1.803,58,1.405,60,2.272,69,1.975,71,1.082,73,0.454,75,1.072,76,1.435,77,0.294,78,0.083,80,0.667,81,0.072,82,0.042,87,0.737,88,0.737,89,1.233,94,1.773,99,0.576,105,0.866,108,1.854,110,0.499,113,0.871,114,1.359,121,4.347,124,0.974,126,3.148,127,3.83,139,2.446,140,2.295,144,3.247,146,2.544,151,1.58,163,0.499,171,3.955,174,2.661,175,3.082,180,3.901,181,3.506,183,1.428,185,1.803,186,2.109,187,1.93,199,2.919,202,2.109,210,0.549,219,2.125,230,0.007,231,0.228,232,0.891,233,0.891,234,1.293,235,0.549,236,0.549,237,0.454,238,0.891,239,0.454,240,0.549,241,0.454,242,0.549,243,0.454,244,1.293,245,0.432,246,0.891,247,0.454,248,0.549,249,0.454,250,0.432,251,1.022,252,0.454,253,0.549,254,0.454,255,0.549,256,0.454,257,0.499,258,0.549,259,0.432,260,0.549,261,0.432,262,0.454,263,0.523,264,0.454,265,0.549,266,1.068,267,0.549,268,0.432,269,0.454,270,0.549,271,0.476,272,0.549,273,0.007,286,1.676,288,0.373,289,0.432,320,1.773,324,1.59,329,1.83,337,2.204,390,2.679,392,3.265,408,2.82,429,2.523,430,2.161,433,0.974,444,2.394,465,2.45,474,1.038,480,1.111,498,1.83,505,3.77,510,2.597,512,2.275,513,2.275,517,3.961,522,3.1,528,2.319,530,2.597,531,2.597,532,2.597,544,5.27,546,3.365,551,1.3,553,1.601,554,1.3,558,1.942,560,4.173,561,0.819,565,1.111,566,1.111,591,1.601,592,2.924,593,3.699,647,1.428,683,2.82,728,3.961,748,3.062,816,2.375,824,1.601,833,1.601,843,3.77,848,3.961,871,1.428,905,4.616,907,1.601,909,1.601,911,1.601,913,1.601,916,3.77,918,1.601,961,2.879,965,3.1,989,1.3,990,1.197,1287,2.317,1288,2.317,1289,2.317,1290,2.317,1302,2.317,1303,2.317,1305,5.141,1306,1.601,1307,3.77,1308,4.386,1309,3.021,1310,3.021,1311,5.44,1312,5.164,1313,5.667,1314,3.021,1315,3.021,1316,1.862,1317,3.021,1318,1.862,1319,1.862,1320,1.862,1321,3.021,1322,1.862,1323,3.021,1324,1.862,1325,3.021,1326,1.862,1327,3.021,1328,1.862,1329,1.862,1330,3.021,1331,1.862,1332,1.862,1333,1.862,1334,1.862,1335,1.862,1336,3.021,1337,1.862,1338,1.862,1339,1.862,1340,1.862,1341,3.021,1342,1.862,1343,1.862,1344,1.862,1345,1.862,1346,1.862,1347,1.862,1348,1.862,1349,1.862,1350,1.862,1351,1.862,1352,1.862,1353,1.862,1354,1.862,1355,1.862,1356,1.862,1357,3.021,1358,3.021,1359,4.386,1360,3.021,1361,3.021,1362,1.862,1363,3.021,1364,3.021,1365,1.862,1366,1.862,1367,1.862,1368,1.862,1369,1.862,1370,3.021,1371,1.862,1372,1.862,1373,1.862,1374,3.812,1375,1.862,1376,3.021,1377,1.601,1378,1.862,1379,1.862,1380,3.021]],["title/modules/TaskFormModule.html",[274,0.251,764,2.057]],["body/modules/TaskFormModule.html",[0,0.118,2,0.216,3,0.189,7,0.162,9,0.302,36,0.528,39,0.019,77,0.367,78,0.216,81,0.267,82,0.11,113,0.697,179,1.306,180,3.168,192,1.436,230,0.015,231,0.597,266,1.85,273,0.015,274,0.483,276,1.369,277,2.139,278,1.507,283,1.966,284,1.581,286,1.966,288,1.213,289,1.406,290,2.168,291,1.581,292,1.702,293,2.168,294,1.66,295,1.369,297,1.026,339,1.873,561,2.143,601,3.376,602,3.376,603,3.893,605,3.893,606,3.893,607,3.893,741,2.907,742,3.736,764,4.087,1305,3.736,1381,4.187,1382,4.187,1383,4.187,1384,4.871,1385,6.056]],["title/modules/TasksButtonBarModule.html",[274,0.251,930,2.202]],["body/modules/TasksButtonBarModule.html",[0,0.123,2,0.197,3,0.172,7,0.148,9,0.275,36,0.499,39,0.019,73,1.625,77,0.378,78,0.197,79,1.25,81,0.259,82,0.101,90,1.444,179,1.192,192,1.311,200,3.99,230,0.014,231,0.545,239,1.828,273,0.014,274,0.47,276,1.25,277,2.051,278,1.376,283,1.856,284,1.444,286,1.856,288,1.146,289,1.548,290,2.047,291,1.444,292,1.607,293,2.047,294,1.515,295,1.25,296,2.516,297,0.936,298,2.385,299,2.516,300,1.855,301,1.855,302,2.502,303,1.855,305,2.385,306,1.855,307,2.051,308,1.957,309,1.761,314,2.047,339,1.769,384,3.411,604,3.412,608,3.675,609,2.479,610,3.675,652,3.675,765,3.675,820,3.822,930,4.387,934,4.385,938,3.99,939,3.411,1386,3.822,1387,3.822,1388,3.822,1389,3.822,1390,4.215,1391,4.447,1392,3.822,1393,3.822,1394,3.822,1395,3.822]],["title/modules/TasksButtonsModule.html",[274,0.251,1390,2.202]],["body/modules/TasksButtonsModule.html",[0,0.122,2,0.196,3,0.172,7,0.147,9,0.274,12,0.646,36,0.497,39,0.019,73,1.388,77,0.374,78,0.196,79,1.243,81,0.258,82,0.1,90,1.436,113,0.766,114,1.322,115,2.806,120,3.278,179,1.185,192,1.304,203,2.98,204,3.662,215,3.662,230,0.014,231,0.542,241,1.826,251,1.527,273,0.014,274,0.453,276,1.243,277,2.046,278,1.368,283,1.849,284,1.436,286,1.849,288,1.141,289,1.545,290,2.039,291,1.436,292,1.601,293,2.039,294,1.507,295,1.243,296,2.507,297,0.931,298,2.376,299,2.507,300,1.845,301,1.845,302,2.495,303,1.845,305,2.376,306,1.845,307,2.046,308,1.946,309,1.751,314,2.039,320,3.095,339,1.762,391,3.976,604,3.4,608,3.662,609,2.466,610,3.662,652,3.662,765,3.662,938,3.976,1390,4.282,1392,3.801,1393,3.801,1396,3.801,1397,3.801,1398,3.801,1399,4.422,1400,4.422,1401,4.422]],["title/components/TasksComponent.html",[0,0.072,268,0.856]],["body/components/TasksComponent.html",[0,0.135,1,1.018,2,0.204,3,0.179,4,1.358,5,1.358,6,1.358,7,0.153,9,0.285,10,1.641,11,1.177,12,0.987,16,1.358,17,2.283,18,1.724,20,1.724,39,0.019,40,1.231,49,1.644,73,1.122,77,0.231,78,0.204,81,0.179,82,0.104,110,1.235,113,0.858,114,1.357,124,1.177,163,1.235,164,3.059,167,3.49,210,1.358,227,2.719,230,0.014,231,0.564,232,1.724,233,1.724,234,1.992,235,1.358,236,1.358,237,1.122,238,1.724,239,1.122,240,1.358,241,1.122,242,1.358,243,1.122,244,1.992,245,1.069,246,1.724,247,1.122,248,1.358,249,1.122,250,1.069,251,1.235,252,1.122,253,1.358,254,1.122,255,1.358,256,1.122,257,1.235,258,1.358,259,1.069,260,1.358,261,1.069,262,1.122,263,1.295,264,1.122,265,1.358,266,1.122,267,1.358,268,1.568,269,1.122,270,1.358,271,1.177,272,1.358,273,0.014,295,1.9,317,3.059,320,3.142,321,4.081,323,4.485,325,3.758,1189,5.026,1190,5.026,1402,3.959]],["title/modules/TasksDialogModule.html",[274,0.251,931,2.202]],["body/modules/TasksDialogModule.html",[0,0.12,2,0.224,3,0.195,7,0.168,9,0.312,12,0.736,36,0.539,39,0.019,77,0.365,78,0.224,81,0.24,82,0.114,115,3.046,170,2.876,179,1.35,192,1.486,230,0.015,231,0.617,273,0.015,274,0.496,276,1.416,277,1.636,278,1.559,283,2.007,284,1.636,286,2.007,288,1.01,289,1.17,292,1.738,339,1.913,469,3.865,470,3.239,472,3.865,473,3.239,597,4.685,649,4.685,741,3.007,764,4.063,767,3.865,931,4.511,1283,4.743,1403,5.038,1404,5.038,1405,5.038,1406,5.038]],["title/components/TasksFilterComponent.html",[0,0.072,269,0.899]],["body/components/TasksFilterComponent.html",[0,0.133,1,0.631,2,0.127,3,0.111,4,0.841,5,0.841,6,0.841,7,0.095,9,0.177,10,1.572,11,0.729,12,0.859,13,1.365,14,4.294,15,1.978,16,0.841,17,2.181,18,1.24,20,1.24,22,0.543,23,0.885,26,1.505,27,2.212,28,1.705,29,4.739,30,2.183,33,1.24,36,0.6,38,0.926,39,0.019,40,1.052,41,1.172,42,0.729,45,2.075,46,2.508,49,2.008,52,1.576,53,1.734,55,1.85,60,2.587,64,4.739,65,1.492,66,2.2,69,1.903,71,1.505,73,0.695,77,0.295,78,0.127,80,1.021,81,0.111,82,0.064,87,1.129,88,1.129,89,0.802,99,0.882,105,1.326,108,1.433,110,0.764,113,0.848,114,0.976,116,3.978,124,0.729,126,3.218,127,2.344,137,2.935,139,3.074,140,2.884,144,4.103,146,2.716,151,2.2,156,3.225,161,2.2,163,0.764,164,2.884,171,2.935,176,3.074,180,2.2,199,2.323,210,0.841,218,2.51,219,2.344,220,2.51,227,1.326,228,3.225,230,0.01,231,0.349,232,1.24,233,1.24,234,1.626,235,0.841,236,0.841,237,0.695,238,1.24,239,0.695,240,0.841,241,0.695,242,0.841,243,0.695,244,1.626,245,0.662,246,1.24,247,0.695,248,0.841,249,0.695,250,0.662,251,0.764,252,0.695,253,0.841,254,0.695,255,0.841,256,0.695,257,0.764,258,0.841,259,0.662,260,0.841,261,0.662,262,0.695,263,0.802,264,0.695,265,0.841,266,0.695,267,0.841,268,0.662,269,1.343,270,0.841,271,0.729,272,0.841,273,0.01,320,1.326,324,2.084,329,2.3,337,1.974,424,2.187,429,2.2,430,2.716,444,2.799,462,3.848,463,2.2,474,1.59,484,1.702,488,2.187,520,3.197,542,2.51,554,2.935,564,1.492,619,2.935,816,3.03,818,2.187,834,2.935,944,2.935,956,3.614,957,3.614,961,3.074,965,3.779,989,1.99,990,1.833,1079,4.739,1085,2.451,1407,5.199,1408,2.451,1409,3.225,1410,6.151,1411,4.205,1412,4.205,1413,4.205,1414,6.529,1415,6.151,1416,5.513,1417,4.205,1418,2.852,1419,2.852,1420,5.879,1421,2.852,1422,2.852,1423,2.852,1424,3.614,1425,4.205,1426,4.205,1427,4.205,1428,2.852,1429,2.852,1430,2.852,1431,2.852,1432,4.205,1433,2.852,1434,2.852,1435,4.205,1436,2.852,1437,2.451,1438,2.852,1439,2.852,1440,2.852,1441,2.852,1442,2.852,1443,2.852,1444,2.852]],["title/modules/TasksFilterModule.html",[274,0.251,999,2.372]],["body/modules/TasksFilterModule.html",[0,0.125,2,0.206,3,0.18,7,0.154,9,0.287,36,0.512,39,0.019,77,0.371,78,0.206,81,0.263,82,0.105,90,1.504,113,0.675,116,3.503,179,1.242,192,1.366,230,0.014,231,0.568,269,1.853,273,0.014,274,0.475,276,1.302,277,2.091,278,1.433,283,1.905,284,1.504,286,1.905,287,2.582,288,1.176,289,1.572,290,2.101,291,1.504,292,1.65,293,2.101,294,1.579,295,1.302,296,2.582,297,0.975,298,2.448,299,2.582,300,1.932,301,1.932,302,2.324,303,1.932,305,1.932,306,1.932,307,1.905,308,2.038,309,1.834,339,1.815,603,3.772,605,3.772,606,3.772,607,3.772,936,4.096,985,3.553,986,3.982,999,4.66,1407,3.553,1445,3.982,1446,3.982,1447,3.982,1448,4.632,1449,4.632,1450,5.868,1451,4.632]],["title/modules/TasksModule.html",[274,0.251,357,2.372]],["body/modules/TasksModule.html",[0,0.108,2,0.189,3,0.165,7,0.142,9,0.264,10,1.421,12,0.622,36,0.485,39,0.019,52,1.49,77,0.379,78,0.189,79,1.197,81,0.216,82,0.096,113,0.712,120,2.738,179,1.659,192,1.256,230,0.013,231,0.522,268,1.62,273,0.013,274,0.491,276,1.197,277,2.009,278,1.317,283,1.805,284,1.382,286,1.805,288,1.114,289,1.29,290,1.99,291,1.382,292,1.74,293,1.99,294,1.451,295,1.197,297,0.897,314,1.99,328,2.374,339,1.915,357,4.859,444,2.723,463,2.228,474,2.374,520,2.878,561,1.874,564,2.228,601,3.099,602,3.099,614,2.972,620,2.972,635,2.542,665,3.267,701,4.264,705,4.264,718,3.661,719,3.661,720,2.972,721,3.267,722,3.661,723,3.661,925,4.487,1267,4.487,1281,3.661,1283,3.267,1452,3.661,1453,3.661,1454,3.661,1455,4.487,1456,4.487,1457,4.259,1458,4.259,1459,3.661,1460,4.259,1461,4.259,1462,4.259]],["title/modules/TasksRoutingModule.html",[274,0.251,1455,2.372]],["body/modules/TasksRoutingModule.html",[0,0.139,2,0.222,3,0.194,7,0.166,39,0.019,43,3.427,75,1.405,77,0.369,78,0.222,79,1.405,81,0.239,82,0.113,99,1.547,113,0.837,124,1.277,230,0.015,245,1.429,250,1.429,261,1.548,268,1.429,273,0.015,274,0.486,288,1.002,289,1.16,292,1.73,314,2.203,315,4.297,316,4.721,317,2.615,318,4.297,379,4.297,380,3.489,381,4.297,471,2.615,621,4.295,1455,3.956,1459,4.297,1463,4.999,1464,4.297,1465,4.297,1466,4.999,1467,4.999,1468,4.999,1469,4.999,1470,4.999]],["title/modules/TasksTableModule.html",[274,0.251,1456,2.372]],["body/modules/TasksTableModule.html",[0,0.125,2,0.178,3,0.156,7,0.134,9,0.249,36,0.467,39,0.019,48,3.735,73,0.979,77,0.38,78,0.178,79,1.13,81,0.208,82,0.091,90,1.305,113,0.791,120,2.636,179,1.077,192,1.185,230,0.013,231,0.493,245,1.653,261,1.653,271,1.755,273,0.013,274,0.467,276,1.13,277,1.953,278,1.243,283,1.737,284,1.305,286,1.737,287,2.355,288,1.072,289,1.489,290,1.916,291,1.305,292,1.504,293,1.916,294,1.37,295,1.13,296,2.355,297,0.846,298,1.677,299,2.355,300,1.677,301,2.232,302,2.54,303,2.232,304,3.455,305,2.232,306,1.677,307,1.953,308,1.769,309,1.592,310,3.455,314,1.916,339,1.655,362,4.105,561,1.769,601,2.984,602,2.984,608,3.44,609,2.241,610,3.44,620,2.805,621,4.199,652,3.44,701,3.083,819,3.083,930,4.1,931,4.1,934,4.105,937,4.6,938,3.735,939,3.083,940,3.455,941,3.455,942,3.455,1390,4.1,1394,3.455,1395,3.455,1456,4.844,1464,3.455,1465,3.455,1471,3.455,1472,3.455,1473,4.019,1474,3.455,1475,4.019,1476,5.351,1477,5.351,1478,5.351]],["title/injectables/UtilsService.html",[444,1.624,559,1.088]],["body/injectables/UtilsService.html",[0,0.094,2,0.154,3,0.135,7,0.116,9,0.346,12,0.507,22,0.662,23,1.02,26,1.243,27,1.307,28,1.867,33,1.024,36,0.589,38,1.811,39,0.019,40,1.174,41,1.285,42,1.542,46,2.099,52,1.298,53,1.645,58,3.057,60,2.132,69,1.074,72,2.656,75,1.568,76,1.823,77,0.318,78,0.154,80,1.243,81,0.188,82,0.079,84,2.424,89,1.568,90,1.127,99,1.074,107,2.664,108,1.651,120,2.386,123,3.761,135,3.114,139,3.665,140,3.704,151,2.534,163,1.873,164,3.439,170,2.807,199,2.952,230,0.012,273,0.012,297,0.731,337,1.997,380,3.381,390,2.386,444,2.132,465,3.114,498,2.327,515,3.114,516,3.879,518,2.454,519,2.656,528,2.209,559,1.645,563,2.232,720,3.381,816,3.443,834,3.893,955,4.279,961,3.897,962,3.893,965,3.879,974,3.585,981,4.629,990,2.232,1139,4.279,1232,4.164,1409,4.279,1479,2.664,1480,4.164,1481,6.574,1482,6.035,1483,6.574,1484,6.347,1485,6.035,1486,4.844,1487,4.844,1488,3.473,1489,6.746,1490,4.844,1491,4.844,1492,6.035,1493,3.473,1494,4.844,1495,4.844,1496,4.844,1497,3.473,1498,3.473,1499,6.035,1500,3.473,1501,6.035,1502,3.473,1503,4.844,1504,4.844,1505,2.985,1506,4.844,1507,3.473,1508,3.473,1509,3.473,1510,3.473,1511,3.473,1512,3.473,1513,3.473,1514,3.473,1515,3.473,1516,3.473,1517,3.473,1518,3.473,1519,3.473,1520,3.473,1521,3.473,1522,3.473,1523,3.473,1524,3.473]],["title/coverage.html",[1525,3.874]],["body/coverage.html",[0,0.149,1,0.926,7,0.139,8,3.599,39,0.019,41,0.798,82,0.139,89,1.177,107,5.669,110,1.122,113,0.707,115,2.708,230,0.013,237,1.02,239,1.02,241,1.02,243,1.02,245,0.972,247,1.02,249,1.02,250,0.972,252,1.02,254,1.02,256,1.02,259,0.972,261,0.972,262,1.02,264,1.02,266,1.02,268,0.972,269,1.02,271,1.07,273,0.013,319,3.599,332,2.334,340,2.691,367,2.922,384,3.211,385,3.211,386,3.599,388,2.691,436,3.599,444,1.842,470,2.691,473,2.691,501,3.211,502,4.04,518,1.842,519,1.842,520,1.947,559,2.088,612,3.599,613,4.708,623,3.211,654,2.922,655,4.217,656,4.217,688,3.211,709,2.922,725,3.211,726,2.691,769,3.211,932,2.691,945,3.599,954,3.599,1007,3.599,1072,3.599,1073,3.599,1132,4.217,1140,2.334,1145,4.217,1155,3.599,1156,3.599,1162,4.284,1170,3.599,1171,3.599,1175,3.599,1178,3.599,1187,3.211,1188,3.599,1284,3.211,1297,3.599,1305,3.211,1306,3.599,1402,3.599,1407,3.211,1408,3.599,1474,3.599,1479,3.211,1525,3.211,1526,3.599,1527,4.187,1528,6.138,1529,4.187,1530,6.138,1531,5.497,1532,6.138,1533,6.517,1534,4.708,1535,6.138,1536,6.138,1537,5.497,1538,4.187,1539,4.187,1540,5.497,1541,4.187,1542,4.187,1543,5.497,1544,4.187,1545,4.187,1546,4.187,1547,5.497,1548,4.187,1549,4.187,1550,4.187,1551,4.187,1552,4.187,1553,4.187,1554,4.187,1555,4.187,1556,4.187,1557,4.187,1558,4.187,1559,4.187,1560,4.187,1561,4.187,1562,4.187,1563,4.187,1564,4.187,1565,4.187,1566,4.187,1567,4.187,1568,3.599,1569,4.217,1570,3.599,1571,4.187]],["title/dependencies.html",[276,1.249,1572,2.642]],["body/dependencies.html",[39,0.019,78,0.23,79,1.455,80,2.25,230,0.015,273,0.015,276,1.455,291,1.68,294,1.764,295,1.455,297,1.324,298,2.159,300,2.159,301,2.159,302,2.681,303,2.622,305,2.622,306,2.159,307,2.041,360,4.822,361,4.388,558,4.041,561,2.278,609,2.886,1573,5.176,1574,7.545,1575,5.176,1576,6.77,1577,5.176,1578,5.176,1579,5.176,1580,5.176,1581,5.176,1582,5.176,1583,5.176,1584,4.449,1585,5.176,1586,6.286,1587,5.176,1588,5.176,1589,4.449,1590,4.449,1591,5.176,1592,5.176,1593,5.176,1594,5.176,1595,6.286,1596,5.176,1597,5.176,1598,5.176]],["title/index.html",[22,0.586,700,1.976,1599,2.642]],["body/index.html",[0,0.081,1,0.473,3,0.083,7,0.112,9,0.133,10,0.863,11,0.547,12,1.007,13,0.695,23,0.451,36,0.187,39,0.01,40,0.451,42,0.863,45,1.271,48,1.494,49,0.95,57,1.278,58,2.405,59,1.84,71,0.766,74,0.806,90,1.096,94,1.571,96,1.84,97,3.835,109,3.209,110,1.121,111,1.494,112,4.226,113,0.75,114,1.103,116,2.016,118,2.689,119,2.92,120,1.054,122,2.903,123,1.193,124,0.863,126,2.705,127,2.649,129,1.642,130,4.083,131,2.903,132,1.642,133,3.966,134,1.84,135,1.376,139,1.193,140,1.767,146,3.579,149,3.532,151,1.12,152,1.84,153,3.324,154,2.903,155,1.84,156,1.642,157,6.245,158,3.596,160,2.92,167,1.278,168,1.278,172,4.083,175,1.278,176,1.193,181,2.189,188,3.644,190,4.723,199,2.209,201,2.591,203,2.705,204,2.689,206,1.642,209,1.84,215,4.119,218,1.278,219,1.883,220,1.278,221,1.84,224,1.84,227,1.571,229,3.596,230,0.008,257,0.574,273,0.008,276,1.454,278,0.662,286,0.695,288,1.324,295,0.602,307,0.695,309,2.278,320,0.995,325,3.698,361,4.385,380,2.358,389,2.358,391,2.358,423,2.903,461,1.642,463,1.12,464,1.494,488,1.642,522,2.689,582,1.376,619,4.015,633,1.84,635,1.278,637,4.819,663,1.84,667,5.274,680,1.494,700,3.324,717,1.84,721,1.642,790,1.84,792,2.903,794,1.84,801,1.642,830,1.494,834,2.92,865,1.84,866,1.84,867,2.903,868,2.903,870,1.84,871,1.642,872,3.596,958,1.84,1015,2.903,1020,1.278,1040,2.903,1076,2.903,1077,1.84,1167,2.903,1287,1.642,1288,1.642,1289,1.642,1290,1.642,1307,5.874,1377,4.944,1409,1.642,1424,1.84,1437,5.97,1480,1.84,1505,1.84,1525,4.215,1526,5.274,1569,1.642,1572,2.903,1589,1.84,1590,1.84,1599,2.903,1600,2.141,1601,2.141,1602,3.378,1603,5.171,1604,2.141,1605,7.183,1606,4.75,1607,5.171,1608,5.171,1609,5.752,1610,3.378,1611,6.407,1612,7.534,1613,6.693,1614,6.407,1615,6.282,1616,6.282,1617,5.171,1618,4.75,1619,5.962,1620,6.407,1621,3.378,1622,3.378,1623,6.833,1624,5.171,1625,2.141,1626,3.378,1627,5.962,1628,5.171,1629,3.378,1630,4.184,1631,2.141,1632,2.141,1633,2.141,1634,6.407,1635,6.136,1636,4.75,1637,4.184,1638,3.378,1639,4.184,1640,3.378,1641,2.141,1642,2.141,1643,2.141,1644,5.752,1645,2.141,1646,2.141,1647,2.141,1648,2.141,1649,2.141,1650,2.141,1651,6.693,1652,2.141,1653,2.141,1654,4.184,1655,2.141,1656,2.141,1657,2.141,1658,2.141,1659,2.141,1660,3.378,1661,3.378,1662,2.141,1663,5.495,1664,4.184,1665,4.75,1666,2.141,1667,2.141,1668,2.141,1669,2.141,1670,2.141,1671,2.141,1672,3.378,1673,3.378,1674,2.141,1675,3.378,1676,2.141,1677,2.141,1678,5.962,1679,2.141,1680,2.141,1681,2.141,1682,3.378,1683,3.378,1684,3.378,1685,2.141,1686,2.141,1687,2.141,1688,2.141,1689,2.141,1690,2.141,1691,4.75,1692,5.495,1693,2.141,1694,2.141,1695,4.184,1696,2.141,1697,2.141,1698,3.378,1699,2.141,1700,2.141,1701,2.141,1702,2.141,1703,2.141,1704,2.141,1705,2.141,1706,3.378,1707,2.141,1708,4.75,1709,5.171,1710,2.141,1711,2.141,1712,1.84,1713,2.141,1714,2.141,1715,2.141,1716,2.141,1717,3.378,1718,2.141,1719,2.141,1720,2.141,1721,2.141,1722,2.141,1723,5.752,1724,2.141,1725,3.378,1726,2.141,1727,3.378,1728,2.141,1729,2.141,1730,2.141,1731,2.141,1732,2.141,1733,2.141,1734,2.141,1735,3.378,1736,3.378,1737,2.141,1738,2.141,1739,2.141,1740,2.141,1741,2.141,1742,4.75,1743,2.141,1744,2.141,1745,2.141,1746,3.378,1747,3.378,1748,2.141,1749,3.378,1750,2.141,1751,2.141,1752,2.141,1753,2.141,1754,2.141,1755,2.141,1756,2.141,1757,2.141,1758,2.141,1759,3.378,1760,2.141,1761,2.141,1762,2.141,1763,3.378,1764,2.141,1765,2.141,1766,2.141,1767,3.378,1768,2.141,1769,2.141,1770,2.141,1771,2.141,1772,2.141,1773,2.141,1774,2.141,1775,2.141,1776,2.141,1777,2.141,1778,2.141]],["title/modules.html",[274,0.344]],["body/modules.html",[39,0.015,91,6.648,149,4.516,230,0.015,273,0.015,274,0.35,275,3.306,282,3.306,302,3.062,348,3.306,353,3.306,354,3.306,355,3.306,356,3.306,357,3.306,361,5.398,597,3.306,649,3.306,760,3.306,764,2.867,925,3.306,930,3.07,931,3.07,999,3.306,1267,3.306,1390,3.07,1455,3.306,1456,3.306,1712,6.693,1779,7.026]],["title/overview.html",[1780,4.341]],["body/overview.html",[0,0.069,1,1.246,39,0.019,43,1.745,81,0.137,82,0.08,117,2.277,179,0.949,192,1.044,194,2.472,230,0.012,231,0.434,237,1.652,239,1.652,241,1.652,243,1.373,245,1.308,247,1.373,249,1.373,250,1.308,252,1.652,254,1.652,256,1.373,259,1.308,261,1.308,262,1.373,264,1.652,266,1.652,268,1.308,269,1.652,271,1.44,273,0.012,274,0.334,275,4.36,276,0.996,277,1.15,278,1.096,279,3.044,280,3.044,281,3.044,282,3.623,283,1.594,284,1.15,348,4.824,349,3.044,350,3.044,351,3.044,352,3.044,353,3.623,354,3.623,355,4.252,356,4.445,357,4.69,559,1.044,597,4.109,598,3.044,599,3.044,649,4.109,650,3.044,651,3.044,760,4.36,761,3.044,762,3.044,763,3.044,764,3.855,925,4.746,926,3.044,927,3.044,928,3.044,929,3.044,930,4.19,931,4.242,932,3.623,949,3.044,950,3.044,951,3.044,995,3.044,996,3.044,997,3.044,998,3.044,999,4.252,1140,1.975,1267,4.569,1268,3.044,1269,3.044,1271,3.044,1381,3.044,1382,3.044,1383,3.044,1386,3.044,1387,3.044,1388,3.044,1389,3.044,1390,4.048,1396,3.044,1397,3.044,1398,3.044,1445,3.044,1446,3.044,1447,3.044,1452,3.044,1453,3.044,1454,3.044,1455,3.623,1456,4.746,1471,3.044,1472,3.044,1584,3.044,1780,3.044,1781,4.91,1782,3.542]],["title/routes.html",[43,2.488]],["body/routes.html",[39,0.017,43,2.992,230,0.017,273,0.017]],["title/miscellaneous/typealiases.html",[1783,2.146,1784,4.442]],["body/miscellaneous/typealiases.html",[22,1.101,39,0.018,41,1.279,113,0.665,149,3.716,174,4.034,175,3.45,230,0.016,273,0.016,961,3.223,962,4.034,974,3.716,981,5.441,1284,4.434,1300,6.097,1302,4.434,1303,4.434,1479,4.434,1783,4.034,1785,5.78,1786,5.78,1787,5.78]],["title/miscellaneous/variables.html",[1534,3.407,1783,2.146]],["body/miscellaneous/variables.html",[22,1.063,39,0.019,41,1.253,75,1.965,76,2.1,108,1.902,230,0.016,273,0.016,337,2.503,655,4.28,656,5.044,688,5.362,689,4.796,1534,4.28,1568,4.796,1569,5.724,1570,4.796,1783,3.895,1788,5.58,1789,5.58,1790,5.58,1791,7.219,1792,6.575]]],"invertedIndex":[["",{"_index":39,"title":{},"body":{"components/AboutComponent.html":{},"modules/AboutModule.html":{},"modules/AboutRoutingModule.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ButtonBarComponent.html":{},"components/ButtonsComponent.html":{},"components/CompleteTaskComponent.html":{},"modules/CompleteTaskModule.html":{},"components/CompleteTasksTableComponent.html":{},"components/ConfirmDeleteTaskComponent.html":{},"modules/ConfirmDeleteTaskModule.html":{},"injectables/ConsoleLoggerService.html":{},"modules/CoreModule.html":{},"components/CreateTaskComponent.html":{},"modules/CreateTaskModule.html":{},"components/EditTaskComponent.html":{},"modules/EditTaskModule.html":{},"components/FooterComponent.html":{},"modules/FooterModule.html":{},"components/HeaderComponent.html":{},"modules/HeaderModule.html":{},"injectables/HttpService.html":{},"components/ListItemComponent.html":{},"injectables/LoaderService.html":{},"interfaces/LoaderState.html":{},"classes/Logger.html":{},"injectables/LoggerService.html":{},"injectables/MatPaginatorCustom.html":{},"components/PageNotFoundComponent.html":{},"components/PendingTasksTableComponent.html":{},"components/RecurringTaskComponent.html":{},"components/SidenavTasksComponent.html":{},"modules/SidenavTasksModule.html":{},"classes/Task.html":{},"components/TaskFormComponent.html":{},"modules/TaskFormModule.html":{},"modules/TasksButtonBarModule.html":{},"modules/TasksButtonsModule.html":{},"components/TasksComponent.html":{},"modules/TasksDialogModule.html":{},"components/TasksFilterComponent.html":{},"modules/TasksFilterModule.html":{},"modules/TasksModule.html":{},"modules/TasksRoutingModule.html":{},"modules/TasksTableModule.html":{},"injectables/UtilsService.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":1162,"title":{},"body":{"injectables/MatPaginatorCustom.html":{},"components/SidenavTasksComponent.html":{},"classes/Task.html":{},"coverage.html":{}}}],["0.1.0",{"_index":1583,"title":{},"body":{"dependencies.html":{}}}],["0.8.26",{"_index":1598,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":1535,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":117,"title":{},"body":{"components/AboutComponent.html":{},"components/CompleteTaskComponent.html":{},"components/ConfirmDeleteTaskComponent.html":{},"components/SidenavTasksComponent.html":{},"overview.html":{}}}],["1.2.1",{"_index":1585,"title":{},"body":{"dependencies.html":{}}}],["1.22.0",{"_index":1649,"title":{},"body":{"index.html":{}}}],["1/1",{"_index":1532,"title":{},"body":{"coverage.html":{}}}],["1/4",{"_index":1562,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":1584,"title":{},"body":{"dependencies.html":{},"overview.html":{}}}],["10/10",{"_index":1552,"title":{},"body":{"coverage.html":{}}}],["10/11",{"_index":1537,"title":{},"body":{"coverage.html":{}}}],["10/12",{"_index":1544,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":107,"title":{},"body":{"components/AboutComponent.html":{},"injectables/UtilsService.html":{},"coverage.html":{}}}],["100vh",{"_index":1236,"title":{},"body":{"components/SidenavTasksComponent.html":{}}}],["100vw",{"_index":1234,"title":{},"body":{"components/SidenavTasksComponent.html":{}}}],["13/14",{"_index":1563,"title":{},"body":{"coverage.html":{}}}],["13/15",{"_index":1558,"title":{},"body":{"coverage.html":{}}}],["14/15",{"_index":1542,"title":{},"body":{"coverage.html":{}}}],["15/16",{"_index":1541,"title":{},"body":{"coverage.html":{}}}],["15/17",{"_index":1543,"title":{},"body":{"coverage.html":{}}}],["16/17",{"_index":1565,"title":{},"body":{"coverage.html":{}}}],["18.06.0",{"_index":1645,"title":{},"body":{"index.html":{}}}],["19075",{"_index":1648,"title":{},"body":{"index.html":{}}}],["2",{"_index":160,"title":{},"body":{"components/AboutComponent.html":{},"injectables/HttpService.html":{},"components/SidenavTasksComponent.html":{},"index.html":{}}}],["2.0.8",{"_index":1593,"title":{},"body":{"dependencies.html":{}}}],["2.22.2",{"_index":1594,"title":{},"body":{"dependencies.html":{}}}],["2.5.7",{"_index":1588,"title":{},"body":{"dependencies.html":{}}}],["2/2",{"_index":1533,"title":{},"body":{"coverage.html":{}}}],["20",{"_index":1781,"title":{},"body":{"overview.html":{}}}],["2000",{"_index":859,"title":{},"body":{"components/EditTaskComponent.html":{}}}],["2018",{"_index":948,"title":{},"body":{"components/FooterComponent.html":{}}}],["23/25",{"_index":1548,"title":{},"body":{"coverage.html":{}}}],["25",{"_index":1561,"title":{},"body":{"coverage.html":{}}}],["3",{"_index":194,"title":{},"body":{"components/AboutComponent.html":{},"components/ListItemComponent.html":{},"components/SidenavTasksComponent.html":{},"overview.html":{}}}],["3000",{"_index":1701,"title":{},"body":{"index.html":{}}}],["31/31",{"_index":1554,"title":{},"body":{"coverage.html":{}}}],["32/33",{"_index":1567,"title":{},"body":{"coverage.html":{}}}],["4",{"_index":208,"title":{},"body":{"components/AboutComponent.html":{},"classes/Logger.html":{},"injectables/LoggerService.html":{},"components/SidenavTasksComponent.html":{}}}],["4.7.0",{"_index":1591,"title":{},"body":{"dependencies.html":{}}}],["4/4",{"_index":1538,"title":{},"body":{"coverage.html":{}}}],["404",{"_index":382,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/EditTaskComponent.html":{},"components/PageNotFoundComponent.html":{}}}],["5",{"_index":211,"title":{},"body":{"components/AboutComponent.html":{}}}],["5.1.1",{"_index":1586,"title":{},"body":{"dependencies.html":{}}}],["5/5",{"_index":1539,"title":{},"body":{"coverage.html":{}}}],["5/6",{"_index":1531,"title":{},"body":{"coverage.html":{}}}],["50",{"_index":477,"title":{},"body":{"components/ButtonsComponent.html":{},"components/EditTaskComponent.html":{}}}],["6",{"_index":1682,"title":{},"body":{"index.html":{}}}],["6.0.0",{"_index":1578,"title":{},"body":{"dependencies.html":{}}}],["6.0.9",{"_index":1574,"title":{},"body":{"dependencies.html":{}}}],["6.2.0",{"_index":1652,"title":{},"body":{"index.html":{}}}],["6.2.2",{"_index":1595,"title":{},"body":{"dependencies.html":{}}}],["6.4.0",{"_index":1576,"title":{},"body":{"dependencies.html":{}}}],["7",{"_index":1782,"title":{},"body":{"overview.html":{}}}],["7/8",{"_index":1560,"title":{},"body":{"coverage.html":{}}}],["70",{"_index":1232,"title":{},"body":{"components/SidenavTasksComponent.html":{},"injectables/UtilsService.html":{}}}],["8.9.1",{"_index":1650,"title":{},"body":{"index.html":{}}}],["8/10",{"_index":1546,"title":{},"body":{"coverage.html":{}}}],["8/9",{"_index":1529,"title":{},"body":{"coverage.html":{}}}],["80",{"_index":1545,"title":{},"body":{"coverage.html":{}}}],["81",{"_index":1549,"title":{},"body":{"coverage.html":{}}}],["83",{"_index":1530,"title":{},"body":{"coverage.html":{}}}],["86",{"_index":1557,"title":{},"body":{"coverage.html":{}}}],["87",{"_index":1559,"title":{},"body":{"coverage.html":{}}}],["88",{"_index":1528,"title":{},"body":{"coverage.html":{}}}],["9/10",{"_index":1551,"title":{},"body":{"coverage.html":{}}}],["9/11",{"_index":1550,"title":{},"body":{"coverage.html":{}}}],["90",{"_index":1536,"title":{},"body":{"coverage.html":{}}}],["92",{"_index":1547,"title":{},"body":{"coverage.html":{}}}],["93",{"_index":1540,"title":{},"body":{"coverage.html":{}}}],["94",{"_index":1564,"title":{},"body":{"coverage.html":{}}}],["96",{"_index":1566,"title":{},"body":{"coverage.html":{}}}],["_sidenavmenuchang",{"_index":1482,"title":{},"body":{"injectables/UtilsService.html":{}}}],["about'},{'nam",{"_index":236,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ButtonBarComponent.html":{},"components/ButtonsComponent.html":{},"components/CompleteTaskComponent.html":{},"components/CompleteTasksTableComponent.html":{},"components/ConfirmDeleteTaskComponent.html":{},"components/CreateTaskComponent.html":{},"components/EditTaskComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/ListItemComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PendingTasksTableComponent.html":{},"components/RecurringTaskComponent.html":{},"components/SidenavTasksComponent.html":{},"components/TaskFormComponent.html":{},"components/TasksComponent.html":{},"components/TasksFilterComponent.html":{}}}],["about.compon",{"_index":311,"title":{},"body":{"modules/AboutModule.html":{},"modules/AboutRoutingModule.html":{}}}],["about.component.css",{"_index":19,"title":{},"body":{"components/AboutComponent.html":{}}}],["about.component.html",{"_index":21,"title":{},"body":{"components/AboutComponent.html":{}}}],["about.rout",{"_index":312,"title":{},"body":{"modules/AboutModule.html":{}}}],["about/about.modul",{"_index":365,"title":{},"body":{"modules/AppModule.html":{}}}],["about/about.module#aboutmodul",{"_index":378,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["aboutcompon",{"_index":1,"title":{"components/AboutComponent.html":{}},"body":{"components/AboutComponent.html":{},"modules/AboutModule.html":{},"modules/AboutRoutingModule.html":{},"components/AppComponent.html":{},"components/ButtonBarComponent.html":{},"components/ButtonsComponent.html":{},"components/CompleteTaskComponent.html":{},"components/CompleteTasksTableComponent.html":{},"components/ConfirmDeleteTaskComponent.html":{},"components/CreateTaskComponent.html":{},"components/EditTaskComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/ListItemComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PendingTasksTableComponent.html":{},"components/RecurringTaskComponent.html":{},"components/SidenavTasksComponent.html":{},"components/TaskFormComponent.html":{},"components/TasksComponent.html":{},"components/TasksFilterComponent.html":{},"coverage.html":{},"index.html":{},"overview.html":{}}}],["aboutel",{"_index":24,"title":{},"body":{"components/AboutComponent.html":{}}}],["aboutmodul",{"_index":275,"title":{"modules/AboutModule.html":{}},"body":{"modules/AboutModule.html":{},"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["aboutroutingmodul",{"_index":282,"title":{"modules/AboutRoutingModule.html":{}},"body":{"modules/AboutModule.html":{},"modules/AboutRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["abov",{"_index":201,"title":{},"body":{"components/AboutComponent.html":{},"components/EditTaskComponent.html":{},"index.html":{}}}],["abstract",{"_index":1149,"title":{},"body":{"classes/Logger.html":{},"injectables/LoggerService.html":{}}}],["access",{"_index":309,"title":{},"body":{"modules/AboutModule.html":{},"modules/CompleteTaskModule.html":{},"modules/ConfirmDeleteTaskModule.html":{},"modules/CreateTaskModule.html":{},"modules/EditTaskModule.html":{},"components/HeaderComponent.html":{},"modules/HeaderModule.html":{},"modules/SidenavTasksModule.html":{},"modules/TasksButtonBarModule.html":{},"modules/TasksButtonsModule.html":{},"modules/TasksFilterModule.html":{},"modules/TasksTableModule.html":{},"index.html":{}}}],["accessor",{"_index":677,"title":{},"body":{"injectables/ConsoleLoggerService.html":{}}}],["accordingli",{"_index":1426,"title":{},"body":{"components/TasksFilterComponent.html":{}}}],["acknowledg",{"_index":1622,"title":{},"body":{"index.html":{}}}],["action",{"_index":1014,"title":{},"body":{"injectables/HttpService.html":{}}}],["activatedrout",{"_index":35,"title":{},"body":{"components/AboutComponent.html":{},"components/EditTaskComponent.html":{},"components/SidenavTasksComponent.html":{}}}],["actual",{"_index":225,"title":{},"body":{"components/AboutComponent.html":{}}}],["actual_compon",{"_index":272,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ButtonBarComponent.html":{},"components/ButtonsComponent.html":{},"components/CompleteTaskComponent.html":{},"components/CompleteTasksTableComponent.html":{},"components/ConfirmDeleteTaskComponent.html":{},"components/CreateTaskComponent.html":{},"components/EditTaskComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/ListItemComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PendingTasksTableComponent.html":{},"components/RecurringTaskComponent.html":{},"components/SidenavTasksComponent.html":{},"components/TaskFormComponent.html":{},"components/TasksComponent.html":{},"components/TasksFilterComponent.html":{}}}],["ad",{"_index":792,"title":{},"body":{"components/EditTaskComponent.html":{},"index.html":{}}}],["adapt",{"_index":1581,"title":{},"body":{"dependencies.html":{}}}],["add",{"_index":90,"title":{},"body":{"components/AboutComponent.html":{},"modules/AboutModule.html":{},"modules/CompleteTaskModule.html":{},"modules/ConfirmDeleteTaskModule.html":{},"modules/CreateTaskModule.html":{},"components/EditTaskComponent.html":{},"modules/EditTaskModule.html":{},"modules/HeaderModule.html":{},"injectables/HttpService.html":{},"components/ListItemComponent.html":{},"modules/SidenavTasksModule.html":{},"modules/TasksButtonBarModule.html":{},"modules/TasksButtonsModule.html":{},"modules/TasksFilterModule.html":{},"modules/TasksTableModule.html":{},"injectables/UtilsService.html":{},"index.html":{}}}],["addit",{"_index":1641,"title":{},"body":{"index.html":{}}}],["addition",{"_index":150,"title":{},"body":{"components/AboutComponent.html":{}}}],["after.clearvalid",{"_index":1369,"title":{},"body":{"components/TaskFormComponent.html":{}}}],["after.dis",{"_index":1368,"title":{},"body":{"components/TaskFormComponent.html":{}}}],["after.en",{"_index":1372,"title":{},"body":{"components/TaskFormComponent.html":{}}}],["after.setvalidators([validators.requir",{"_index":1373,"title":{},"body":{"components/TaskFormComponent.html":{}}}],["after.updatevalueandvalid",{"_index":1370,"title":{},"body":{"components/TaskFormComponent.html":{}}}],["afterviewinit",{"_index":14,"title":{},"body":{"components/AboutComponent.html":{},"components/TasksFilterComponent.html":{}}}],["again",{"_index":1688,"title":{},"body":{"index.html":{}}}],["against",{"_index":1716,"title":{},"body":{"index.html":{}}}],["alias",{"_index":1785,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["allif",{"_index":1681,"title":{},"body":{"index.html":{}}}],["allow",{"_index":554,"title":{},"body":{"components/CompleteTaskComponent.html":{},"components/ListItemComponent.html":{},"components/TaskFormComponent.html":{},"components/TasksFilterComponent.html":{}}}],["along",{"_index":543,"title":{},"body":{"components/CompleteTaskComponent.html":{},"injectables/ConsoleLoggerService.html":{},"classes/Logger.html":{},"injectables/LoggerService.html":{}}}],["alreadi",{"_index":717,"title":{},"body":{"modules/CoreModule.html":{},"index.html":{}}}],["anchor",{"_index":92,"title":{},"body":{"components/AboutComponent.html":{}}}],["and/or",{"_index":198,"title":{},"body":{"components/AboutComponent.html":{},"components/ButtonBarComponent.html":{},"components/ButtonsComponent.html":{}}}],["angular",{"_index":288,"title":{},"body":{"modules/AboutModule.html":{},"modules/AboutRoutingModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CompleteTaskComponent.html":{},"modules/CompleteTaskModule.html":{},"modules/ConfirmDeleteTaskModule.html":{},"modules/CoreModule.html":{},"modules/CreateTaskModule.html":{},"components/EditTaskComponent.html":{},"modules/EditTaskModule.html":{},"modules/FooterModule.html":{},"modules/HeaderModule.html":{},"components/ListItemComponent.html":{},"classes/Logger.html":{},"injectables/LoggerService.html":{},"modules/SidenavTasksModule.html":{},"components/TaskFormComponent.html":{},"modules/TaskFormModule.html":{},"modules/TasksButtonBarModule.html":{},"modules/TasksButtonsModule.html":{},"modules/TasksDialogModule.html":{},"modules/TasksFilterModule.html":{},"modules/TasksModule.html":{},"modules/TasksRoutingModule.html":{},"modules/TasksTableModule.html":{},"index.html":{}}}],["angular/angular",{"_index":1010,"title":{},"body":{"injectables/HttpService.html":{}}}],["angular/anim",{"_index":1573,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":1575,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk/layout",{"_index":1507,"title":{},"body":{"injectables/UtilsService.html":{}}}],["angular/common",{"_index":291,"title":{},"body":{"modules/AboutModule.html":{},"modules/CompleteTaskModule.html":{},"modules/ConfirmDeleteTaskModule.html":{},"modules/CoreModule.html":{},"modules/CreateTaskModule.html":{},"components/EditTaskComponent.html":{},"modules/EditTaskModule.html":{},"modules/FooterModule.html":{},"modules/HeaderModule.html":{},"modules/SidenavTasksModule.html":{},"modules/TaskFormModule.html":{},"modules/TasksButtonBarModule.html":{},"modules/TasksButtonsModule.html":{},"modules/TasksFilterModule.html":{},"modules/TasksModule.html":{},"modules/TasksTableModule.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":704,"title":{},"body":{"modules/CoreModule.html":{},"injectables/HttpService.html":{}}}],["angular/compil",{"_index":1577,"title":{},"body":{"dependencies.html":{}}}],["angular/cor",{"_index":78,"title":{},"body":{"components/AboutComponent.html":{},"modules/AboutModule.html":{},"modules/AboutRoutingModule.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ButtonBarComponent.html":{},"components/ButtonsComponent.html":{},"components/CompleteTaskComponent.html":{},"modules/CompleteTaskModule.html":{},"components/CompleteTasksTableComponent.html":{},"components/ConfirmDeleteTaskComponent.html":{},"modules/ConfirmDeleteTaskModule.html":{},"injectables/ConsoleLoggerService.html":{},"modules/CoreModule.html":{},"components/CreateTaskComponent.html":{},"modules/CreateTaskModule.html":{},"components/EditTaskComponent.html":{},"modules/EditTaskModule.html":{},"components/FooterComponent.html":{},"modules/FooterModule.html":{},"components/HeaderComponent.html":{},"modules/HeaderModule.html":{},"injectables/HttpService.html":{},"components/ListItemComponent.html":{},"injectables/LoaderService.html":{},"interfaces/LoaderState.html":{},"classes/Logger.html":{},"injectables/LoggerService.html":{},"injectables/MatPaginatorCustom.html":{},"components/PageNotFoundComponent.html":{},"components/PendingTasksTableComponent.html":{},"components/RecurringTaskComponent.html":{},"components/SidenavTasksComponent.html":{},"modules/SidenavTasksModule.html":{},"components/TaskFormComponent.html":{},"modules/TaskFormModule.html":{},"modules/TasksButtonBarModule.html":{},"modules/TasksButtonsModule.html":{},"components/TasksComponent.html":{},"modules/TasksDialogModule.html":{},"components/TasksFilterComponent.html":{},"modules/TasksFilterModule.html":{},"modules/TasksModule.html":{},"modules/TasksRoutingModule.html":{},"modules/TasksTableModule.html":{},"injectables/UtilsService.html":{},"dependencies.html":{}}}],["angular/flex",{"_index":294,"title":{},"body":{"modules/AboutModule.html":{},"modules/CompleteTaskModule.html":{},"modules/ConfirmDeleteTaskModule.html":{},"modules/CoreModule.html":{},"modules/CreateTaskModule.html":{},"modules/EditTaskModule.html":{},"modules/FooterModule.html":{},"modules/HeaderModule.html":{},"modules/SidenavTasksModule.html":{},"modules/TaskFormModule.html":{},"modules/TasksButtonBarModule.html":{},"modules/TasksButtonsModule.html":{},"modules/TasksFilterModule.html":{},"modules/TasksModule.html":{},"modules/TasksTableModule.html":{},"dependencies.html":{}}}],["angular/form",{"_index":561,"title":{},"body":{"components/CompleteTaskComponent.html":{},"modules/CompleteTaskModule.html":{},"modules/ConfirmDeleteTaskModule.html":{},"modules/CreateTaskModule.html":{},"modules/EditTaskModule.html":{},"components/RecurringTaskComponent.html":{},"components/TaskFormComponent.html":{},"modules/TaskFormModule.html":{},"modules/TasksModule.html":{},"modules/TasksTableModule.html":{},"dependencies.html":{}}}],["angular/http",{"_index":1580,"title":{},"body":{"dependencies.html":{}}}],["angular/materi",{"_index":297,"title":{},"body":{"modules/AboutModule.html":{},"modules/AppModule.html":{},"components/ButtonBarComponent.html":{},"components/ButtonsComponent.html":{},"components/CompleteTaskComponent.html":{},"modules/CompleteTaskModule.html":{},"components/ConfirmDeleteTaskComponent.html":{},"modules/ConfirmDeleteTaskModule.html":{},"modules/CoreModule.html":{},"components/CreateTaskComponent.html":{},"modules/CreateTaskModule.html":{},"components/EditTaskComponent.html":{},"modules/EditTaskModule.html":{},"modules/HeaderModule.html":{},"injectables/MatPaginatorCustom.html":{},"components/RecurringTaskComponent.html":{},"components/SidenavTasksComponent.html":{},"modules/SidenavTasksModule.html":{},"modules/TaskFormModule.html":{},"modules/TasksButtonBarModule.html":{},"modules/TasksButtonsModule.html":{},"modules/TasksFilterModule.html":{},"modules/TasksModule.html":{},"modules/TasksTableModule.html":{},"injectables/UtilsService.html":{},"dependencies.html":{}}}],["angular/platform",{"_index":360,"title":{},"body":{"modules/AppModule.html":{},"modules/CoreModule.html":{},"dependencies.html":{}}}],["angular/rout",{"_index":79,"title":{},"body":{"components/AboutComponent.html":{},"modules/AboutRoutingModule.html":{},"modules/AppRoutingModule.html":{},"components/ButtonsComponent.html":{},"modules/CompleteTaskModule.html":{},"modules/ConfirmDeleteTaskModule.html":{},"modules/CoreModule.html":{},"modules/CreateTaskModule.html":{},"components/EditTaskComponent.html":{},"modules/EditTaskModule.html":{},"modules/FooterModule.html":{},"modules/HeaderModule.html":{},"components/SidenavTasksComponent.html":{},"modules/SidenavTasksModule.html":{},"modules/TasksButtonBarModule.html":{},"modules/TasksButtonsModule.html":{},"modules/TasksModule.html":{},"modules/TasksRoutingModule.html":{},"modules/TasksTableModule.html":{},"dependencies.html":{}}}],["answer",{"_index":95,"title":{},"body":{"components/AboutComponent.html":{}}}],["anyth",{"_index":182,"title":{},"body":{"components/AboutComponent.html":{}}}],["api",{"_index":637,"title":{},"body":{"components/ConfirmDeleteTaskComponent.html":{},"injectables/HttpService.html":{},"index.html":{}}}],["apidoc",{"_index":1736,"title":{},"body":{"index.html":{}}}],["app",{"_index":12,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ButtonBarComponent.html":{},"components/ButtonsComponent.html":{},"components/CompleteTaskComponent.html":{},"components/CompleteTasksTableComponent.html":{},"components/ConfirmDeleteTaskComponent.html":{},"injectables/ConsoleLoggerService.html":{},"modules/CoreModule.html":{},"components/CreateTaskComponent.html":{},"modules/CreateTaskModule.html":{},"components/EditTaskComponent.html":{},"modules/EditTaskModule.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"modules/HeaderModule.html":{},"injectables/HttpService.html":{},"components/ListItemComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PendingTasksTableComponent.html":{},"components/RecurringTaskComponent.html":{},"components/SidenavTasksComponent.html":{},"modules/SidenavTasksModule.html":{},"components/TaskFormComponent.html":{},"modules/TasksButtonsModule.html":{},"components/TasksComponent.html":{},"modules/TasksDialogModule.html":{},"components/TasksFilterComponent.html":{},"modules/TasksModule.html":{},"injectables/UtilsService.html":{},"index.html":{}}}],["app.compon",{"_index":363,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.css",{"_index":326,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.html",{"_index":327,"title":{},"body":{"components/AppComponent.html":{}}}],["app.rout",{"_index":364,"title":{},"body":{"modules/AppModule.html":{}}}],["app/core/services/logger.servic",{"_index":563,"title":{},"body":{"components/CompleteTaskComponent.html":{},"components/ConfirmDeleteTaskComponent.html":{},"components/CreateTaskComponent.html":{},"components/EditTaskComponent.html":{},"injectables/UtilsService.html":{}}}],["appcompon",{"_index":237,"title":{"components/AppComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ButtonBarComponent.html":{},"components/ButtonsComponent.html":{},"components/CompleteTaskComponent.html":{},"components/CompleteTasksTableComponent.html":{},"components/ConfirmDeleteTaskComponent.html":{},"components/CreateTaskComponent.html":{},"components/EditTaskComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/ListItemComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PendingTasksTableComponent.html":{},"components/RecurringTaskComponent.html":{},"components/SidenavTasksComponent.html":{},"components/TaskFormComponent.html":{},"components/TasksComponent.html":{},"components/TasksFilterComponent.html":{},"coverage.html":{},"overview.html":{}}}],["appli",{"_index":1088,"title":{},"body":{"components/ListItemComponent.html":{}}}],["applic",{"_index":112,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/EditTaskComponent.html":{},"components/SidenavTasksComponent.html":{},"index.html":{}}}],["application/json",{"_index":1064,"title":{},"body":{"injectables/HttpService.html":{}}}],["appmodul",{"_index":348,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules/CoreModule.html":{},"modules.html":{},"overview.html":{}}}],["approut",{"_index":376,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["approutingmodul",{"_index":353,"title":{"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["arg",{"_index":672,"title":{},"body":{"injectables/ConsoleLoggerService.html":{},"classes/Logger.html":{},"injectables/LoggerService.html":{}}}],["argument",{"_index":674,"title":{},"body":{"injectables/ConsoleLoggerService.html":{},"injectables/HttpService.html":{},"classes/Logger.html":{},"injectables/LoggerService.html":{}}}],["around",{"_index":718,"title":{},"body":{"modules/CoreModule.html":{},"modules/TasksModule.html":{}}}],["array",{"_index":389,"title":{},"body":{"components/ButtonBarComponent.html":{},"components/EditTaskComponent.html":{},"components/SidenavTasksComponent.html":{},"index.html":{}}}],["ascend",{"_index":128,"title":{},"body":{"components/AboutComponent.html":{},"components/EditTaskComponent.html":{}}}],["associ",{"_index":665,"title":{},"body":{"injectables/ConsoleLoggerService.html":{},"modules/CoreModule.html":{},"modules/TasksModule.html":{}}}],["audit",{"_index":1685,"title":{},"body":{"index.html":{}}}],["authent",{"_index":1012,"title":{},"body":{"injectables/HttpService.html":{}}}],["author",{"_index":1621,"title":{},"body":{"index.html":{}}}],["automat",{"_index":1696,"title":{},"body":{"index.html":{}}}],["avail",{"_index":149,"title":{},"body":{"components/AboutComponent.html":{},"components/ConfirmDeleteTaskComponent.html":{},"index.html":{},"modules.html":{},"miscellaneous/typealiases.html":{}}}],["awesom",{"_index":1590,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["back",{"_index":421,"title":{},"body":{"components/ButtonBarComponent.html":{},"components/EditTaskComponent.html":{}}}],["badg",{"_index":1091,"title":{},"body":{"components/ListItemComponent.html":{}}}],["bar",{"_index":200,"title":{},"body":{"components/AboutComponent.html":{},"components/ButtonBarComponent.html":{},"components/HeaderComponent.html":{},"modules/TasksButtonBarModule.html":{}}}],["bar'},{'nam",{"_index":240,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ButtonBarComponent.html":{},"components/ButtonsComponent.html":{},"components/CompleteTaskComponent.html":{},"components/CompleteTasksTableComponent.html":{},"components/ConfirmDeleteTaskComponent.html":{},"components/CreateTaskComponent.html":{},"components/EditTaskComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/ListItemComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PendingTasksTableComponent.html":{},"components/RecurringTaskComponent.html":{},"components/SidenavTasksComponent.html":{},"components/TaskFormComponent.html":{},"components/TasksComponent.html":{},"components/TasksFilterComponent.html":{}}}],["bar.compon",{"_index":820,"title":{},"body":{"components/EditTaskComponent.html":{},"modules/TasksButtonBarModule.html":{}}}],["bar.component.css",{"_index":395,"title":{},"body":{"components/ButtonBarComponent.html":{}}}],["bar.component.html",{"_index":396,"title":{},"body":{"components/ButtonBarComponent.html":{}}}],["bar.component.t",{"_index":386,"title":{},"body":{"components/ButtonBarComponent.html":{},"coverage.html":{}}}],["bar.component.ts:22",{"_index":410,"title":{},"body":{"components/ButtonBarComponent.html":{}}}],["bar.component.ts:24",{"_index":411,"title":{},"body":{"components/ButtonBarComponent.html":{}}}],["bar.component.ts:26",{"_index":412,"title":{},"body":{"components/ButtonBarComponent.html":{}}}],["bar.component.ts:28",{"_index":414,"title":{},"body":{"components/ButtonBarComponent.html":{}}}],["bar.component.ts:30",{"_index":415,"title":{},"body":{"components/ButtonBarComponent.html":{}}}],["bar.component.ts:32",{"_index":416,"title":{},"body":{"components/ButtonBarComponent.html":{}}}],["bar.component.ts:34",{"_index":417,"title":{},"body":{"components/ButtonBarComponent.html":{}}}],["bar.component.ts:36",{"_index":418,"title":{},"body":{"components/ButtonBarComponent.html":{}}}],["bar.component.ts:38",{"_index":419,"title":{},"body":{"components/ButtonBarComponent.html":{}}}],["bar.component.ts:40",{"_index":422,"title":{},"body":{"components/ButtonBarComponent.html":{}}}],["bar.component.ts:42",{"_index":425,"title":{},"body":{"components/ButtonBarComponent.html":{}}}],["bar.component.ts:44",{"_index":428,"title":{},"body":{"components/ButtonBarComponent.html":{}}}],["bar.component.ts:46",{"_index":431,"title":{},"body":{"components/ButtonBarComponent.html":{}}}],["bar.component.ts:48",{"_index":409,"title":{},"body":{"components/ButtonBarComponent.html":{}}}],["bar.modul",{"_index":940,"title":{},"body":{"modules/EditTaskModule.html":{},"modules/TasksTableModule.html":{}}}],["bar.module.t",{"_index":1391,"title":{},"body":{"modules/TasksButtonBarModule.html":{}}}],["bar/button",{"_index":385,"title":{},"body":{"components/ButtonBarComponent.html":{},"components/EditTaskComponent.html":{},"coverage.html":{}}}],["bar/task",{"_index":939,"title":{},"body":{"modules/EditTaskModule.html":{},"modules/TasksButtonBarModule.html":{},"modules/TasksTableModule.html":{}}}],["base",{"_index":94,"title":{},"body":{"components/AboutComponent.html":{},"components/CreateTaskComponent.html":{},"components/EditTaskComponent.html":{},"components/HeaderComponent.html":{},"injectables/HttpService.html":{},"components/ListItemComponent.html":{},"components/PageNotFoundComponent.html":{},"components/SidenavTasksComponent.html":{},"components/TaskFormComponent.html":{},"index.html":{}}}],["basic",{"_index":466,"title":{},"body":{"components/ButtonsComponent.html":{},"injectables/ConsoleLoggerService.html":{}}}],["be",{"_index":427,"title":{},"body":{"components/ButtonBarComponent.html":{},"components/ButtonsComponent.html":{},"components/EditTaskComponent.html":{}}}],["befor",{"_index":1040,"title":{},"body":{"injectables/HttpService.html":{},"index.html":{}}}],["behaviorsubject",{"_index":1501,"title":{},"body":{"injectables/UtilsService.html":{}}}],["behaviorsubject(fals",{"_index":1509,"title":{},"body":{"injectables/UtilsService.html":{}}}],["belong",{"_index":814,"title":{},"body":{"components/EditTaskComponent.html":{}}}],["below",{"_index":97,"title":{},"body":{"components/AboutComponent.html":{},"classes/Logger.html":{},"injectables/LoggerService.html":{},"index.html":{}}}],["beta.16",{"_index":1579,"title":{},"body":{"dependencies.html":{}}}],["between",{"_index":721,"title":{},"body":{"modules/CoreModule.html":{},"modules/TasksModule.html":{},"index.html":{}}}],["bind",{"_index":660,"title":{},"body":{"injectables/ConsoleLoggerService.html":{}}}],["bodi",{"_index":1042,"title":{},"body":{"injectables/HttpService.html":{}}}],["boolean",{"_index":69,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ButtonBarComponent.html":{},"components/ButtonsComponent.html":{},"components/CompleteTaskComponent.html":{},"components/ConfirmDeleteTaskComponent.html":{},"components/CreateTaskComponent.html":{},"components/EditTaskComponent.html":{},"components/HeaderComponent.html":{},"components/ListItemComponent.html":{},"injectables/LoaderService.html":{},"interfaces/LoaderState.html":{},"components/RecurringTaskComponent.html":{},"components/SidenavTasksComponent.html":{},"classes/Task.html":{},"components/TaskFormComponent.html":{},"components/TasksFilterComponent.html":{},"injectables/UtilsService.html":{}}}],["bootstrap",{"_index":278,"title":{},"body":{"modules/AboutModule.html":{},"modules/AppModule.html":{},"modules/CompleteTaskModule.html":{},"modules/ConfirmDeleteTaskModule.html":{},"modules/CreateTaskModule.html":{},"modules/EditTaskModule.html":{},"modules/FooterModule.html":{},"modules/HeaderModule.html":{},"modules/SidenavTasksModule.html":{},"modules/TaskFormModule.html":{},"modules/TasksButtonBarModule.html":{},"modules/TasksButtonsModule.html":{},"modules/TasksDialogModule.html":{},"modules/TasksFilterModule.html":{},"modules/TasksModule.html":{},"modules/TasksTableModule.html":{},"index.html":{},"overview.html":{}}}],["both",{"_index":1377,"title":{},"body":{"components/TaskFormComponent.html":{},"index.html":{}}}],["bottom",{"_index":184,"title":{},"body":{"components/AboutComponent.html":{}}}],["bound",{"_index":661,"title":{},"body":{"injectables/ConsoleLoggerService.html":{}}}],["break",{"_index":1687,"title":{},"body":{"index.html":{}}}],["breakpoint",{"_index":1505,"title":{},"body":{"injectables/UtilsService.html":{},"index.html":{}}}],["breakpointobserv",{"_index":1489,"title":{},"body":{"injectables/UtilsService.html":{}}}],["breakpoints.smal",{"_index":1513,"title":{},"body":{"injectables/UtilsService.html":{}}}],["breakpointst",{"_index":1506,"title":{},"body":{"injectables/UtilsService.html":{}}}],["brows",{"_index":1712,"title":{},"body":{"index.html":{},"modules.html":{}}}],["browser",{"_index":361,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"index.html":{},"modules.html":{}}}],["browser/anim",{"_index":707,"title":{},"body":{"modules/CoreModule.html":{}}}],["browseranimationsmodul",{"_index":706,"title":{},"body":{"modules/CoreModule.html":{}}}],["browsermodul",{"_index":359,"title":{},"body":{"modules/AppModule.html":{}}}],["build",{"_index":1611,"title":{},"body":{"index.html":{}}}],["buildthat",{"_index":1655,"title":{},"body":{"index.html":{}}}],["built",{"_index":1609,"title":{},"body":{"index.html":{}}}],["bulk",{"_index":636,"title":{},"body":{"components/ConfirmDeleteTaskComponent.html":{}}}],["button",{"_index":73,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ButtonBarComponent.html":{},"components/ButtonsComponent.html":{},"components/CompleteTaskComponent.html":{},"components/CompleteTasksTableComponent.html":{},"components/ConfirmDeleteTaskComponent.html":{},"components/CreateTaskComponent.html":{},"components/EditTaskComponent.html":{},"modules/EditTaskModule.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/ListItemComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PendingTasksTableComponent.html":{},"components/RecurringTaskComponent.html":{},"components/SidenavTasksComponent.html":{},"components/TaskFormComponent.html":{},"modules/TasksButtonBarModule.html":{},"modules/TasksButtonsModule.html":{},"components/TasksComponent.html":{},"components/TasksFilterComponent.html":{},"modules/TasksTableModule.html":{}}}],["buttonbar",{"_index":771,"title":{},"body":{"components/EditTaskComponent.html":{}}}],["buttonbarcompon",{"_index":239,"title":{"components/ButtonBarComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ButtonBarComponent.html":{},"components/ButtonsComponent.html":{},"components/CompleteTaskComponent.html":{},"components/CompleteTasksTableComponent.html":{},"components/ConfirmDeleteTaskComponent.html":{},"components/CreateTaskComponent.html":{},"components/EditTaskComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/ListItemComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PendingTasksTableComponent.html":{},"components/RecurringTaskComponent.html":{},"components/SidenavTasksComponent.html":{},"components/TaskFormComponent.html":{},"modules/TasksButtonBarModule.html":{},"components/TasksComponent.html":{},"components/TasksFilterComponent.html":{},"coverage.html":{},"overview.html":{}}}],["buttonclass",{"_index":1083,"title":{},"body":{"components/ListItemComponent.html":{},"components/SidenavTasksComponent.html":{}}}],["buttons'},{'nam",{"_index":242,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ButtonBarComponent.html":{},"components/ButtonsComponent.html":{},"components/CompleteTaskComponent.html":{},"components/CompleteTasksTableComponent.html":{},"components/ConfirmDeleteTaskComponent.html":{},"components/CreateTaskComponent.html":{},"components/EditTaskComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/ListItemComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PendingTasksTableComponent.html":{},"components/RecurringTaskComponent.html":{},"components/SidenavTasksComponent.html":{},"components/TaskFormComponent.html":{},"components/TasksComponent.html":{},"components/TasksFilterComponent.html":{}}}],["buttons.component.css",{"_index":437,"title":{},"body":{"components/ButtonsComponent.html":{}}}],["buttons.component.html",{"_index":438,"title":{},"body":{"components/ButtonsComponent.html":{}}}],["buttons.modul",{"_index":1395,"title":{},"body":{"modules/TasksButtonBarModule.html":{},"modules/TasksTableModule.html":{}}}],["buttons.module.t",{"_index":1400,"title":{},"body":{"modules/TasksButtonsModule.html":{}}}],["buttonscompon",{"_index":241,"title":{"components/ButtonsComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ButtonBarComponent.html":{},"components/ButtonsComponent.html":{},"components/CompleteTaskComponent.html":{},"components/CompleteTasksTableComponent.html":{},"components/ConfirmDeleteTaskComponent.html":{},"components/CreateTaskComponent.html":{},"components/EditTaskComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/ListItemComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PendingTasksTableComponent.html":{},"components/RecurringTaskComponent.html":{},"components/SidenavTasksComponent.html":{},"components/TaskFormComponent.html":{},"modules/TasksButtonsModule.html":{},"components/TasksComponent.html":{},"components/TasksFilterComponent.html":{},"coverage.html":{},"overview.html":{}}}],["cancel",{"_index":509,"title":{},"body":{"components/CompleteTaskComponent.html":{},"components/ConfirmDeleteTaskComponent.html":{},"components/CreateTaskComponent.html":{},"components/EditTaskComponent.html":{},"components/RecurringTaskComponent.html":{}}}],["capabl",{"_index":391,"title":{},"body":{"components/ButtonBarComponent.html":{},"components/ButtonsComponent.html":{},"modules/TasksButtonsModule.html":{},"index.html":{}}}],["case",{"_index":1633,"title":{},"body":{"index.html":{}}}],["cdk",{"_index":1743,"title":{},"body":{"index.html":{}}}],["ce",{"_index":1646,"title":{},"body":{"index.html":{}}}],["chai",{"_index":1705,"title":{},"body":{"index.html":{}}}],["challeng",{"_index":1766,"title":{},"body":{"index.html":{}}}],["chang",{"_index":834,"title":{},"body":{"components/EditTaskComponent.html":{},"components/TasksFilterComponent.html":{},"injectables/UtilsService.html":{},"index.html":{}}}],["changedetector",{"_index":785,"title":{},"body":{"components/EditTaskComponent.html":{}}}],["changedetectorref",{"_index":331,"title":{},"body":{"components/AppComponent.html":{},"components/EditTaskComponent.html":{}}}],["check",{"_index":905,"title":{},"body":{"components/EditTaskComponent.html":{},"components/SidenavTasksComponent.html":{},"components/TaskFormComponent.html":{}}}],["checkbox",{"_index":207,"title":{},"body":{"components/AboutComponent.html":{}}}],["checkerror",{"_index":510,"title":{},"body":{"components/CompleteTaskComponent.html":{},"components/TaskFormComponent.html":{}}}],["checkerror(param",{"_index":527,"title":{},"body":{"components/CompleteTaskComponent.html":{}}}],["checkerror(properti",{"_index":1321,"title":{},"body":{"components/TaskFormComponent.html":{}}}],["checkformerror",{"_index":1314,"title":{},"body":{"components/TaskFormComponent.html":{}}}],["checkformerror(form",{"_index":1323,"title":{},"body":{"components/TaskFormComponent.html":{}}}],["children",{"_index":1467,"title":{},"body":{"modules/TasksRoutingModule.html":{}}}],["chrome",{"_index":154,"title":{},"body":{"components/AboutComponent.html":{},"index.html":{}}}],["class",{"_index":82,"title":{"classes/Logger.html":{},"classes/Task.html":{}},"body":{"components/AboutComponent.html":{},"modules/AboutModule.html":{},"modules/AboutRoutingModule.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ButtonBarComponent.html":{},"components/ButtonsComponent.html":{},"components/CompleteTaskComponent.html":{},"modules/CompleteTaskModule.html":{},"components/CompleteTasksTableComponent.html":{},"components/ConfirmDeleteTaskComponent.html":{},"modules/ConfirmDeleteTaskModule.html":{},"injectables/ConsoleLoggerService.html":{},"modules/CoreModule.html":{},"components/CreateTaskComponent.html":{},"modules/CreateTaskModule.html":{},"components/EditTaskComponent.html":{},"modules/EditTaskModule.html":{},"components/FooterComponent.html":{},"modules/FooterModule.html":{},"components/HeaderComponent.html":{},"modules/HeaderModule.html":{},"injectables/HttpService.html":{},"components/ListItemComponent.html":{},"injectables/LoaderService.html":{},"interfaces/LoaderState.html":{},"classes/Logger.html":{},"injectables/LoggerService.html":{},"injectables/MatPaginatorCustom.html":{},"components/PageNotFoundComponent.html":{},"components/PendingTasksTableComponent.html":{},"components/RecurringTaskComponent.html":{},"components/SidenavTasksComponent.html":{},"modules/SidenavTasksModule.html":{},"classes/Task.html":{},"components/TaskFormComponent.html":{},"modules/TaskFormModule.html":{},"modules/TasksButtonBarModule.html":{},"modules/TasksButtonsModule.html":{},"components/TasksComponent.html":{},"modules/TasksDialogModule.html":{},"components/TasksFilterComponent.html":{},"modules/TasksFilterModule.html":{},"modules/TasksModule.html":{},"modules/TasksRoutingModule.html":{},"modules/TasksTableModule.html":{},"injectables/UtilsService.html":{},"coverage.html":{},"overview.html":{}}}],["class.mark",{"_index":513,"title":{},"body":{"components/CompleteTaskComponent.html":{},"components/ConfirmDeleteTaskComponent.html":{},"components/CreateTaskComponent.html":{},"components/EditTaskComponent.html":{},"components/RecurringTaskComponent.html":{},"components/TaskFormComponent.html":{}}}],["classmark",{"_index":566,"title":{},"body":{"components/CompleteTaskComponent.html":{},"components/ConfirmDeleteTaskComponent.html":{},"components/CreateTaskComponent.html":{},"components/EditTaskComponent.html":{},"components/RecurringTaskComponent.html":{},"components/TaskFormComponent.html":{}}}],["clean",{"_index":798,"title":{},"body":{"components/EditTaskComponent.html":{},"components/RecurringTaskComponent.html":{}}}],["clear",{"_index":1415,"title":{},"body":{"components/TasksFilterComponent.html":{}}}],["click",{"_index":161,"title":{},"body":{"components/AboutComponent.html":{},"components/ButtonBarComponent.html":{},"components/ButtonsComponent.html":{},"components/HeaderComponent.html":{},"components/ListItemComponent.html":{},"components/RecurringTaskComponent.html":{},"components/SidenavTasksComponent.html":{},"components/TasksFilterComponent.html":{}}}],["client",{"_index":1605,"title":{},"body":{"index.html":{}}}],["client/node_modules/protractor/node_modules/webdriv",{"_index":1728,"title":{},"body":{"index.html":{}}}],["clipboard",{"_index":904,"title":{},"body":{"components/EditTaskComponent.html":{},"components/SidenavTasksComponent.html":{}}}],["clone",{"_index":1624,"title":{},"body":{"index.html":{}}}],["close",{"_index":526,"title":{},"body":{"components/CompleteTaskComponent.html":{},"components/ConfirmDeleteTaskComponent.html":{},"components/CreateTaskComponent.html":{},"components/RecurringTaskComponent.html":{}}}],["cluster_aboutmodul",{"_index":279,"title":{},"body":{"modules/AboutModule.html":{},"overview.html":{}}}],["cluster_aboutmodule_declar",{"_index":280,"title":{},"body":{"modules/AboutModule.html":{},"overview.html":{}}}],["cluster_aboutmodule_import",{"_index":281,"title":{},"body":{"modules/AboutModule.html":{},"overview.html":{}}}],["cluster_appmodul",{"_index":349,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":352,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declar",{"_index":350,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_import",{"_index":351,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_completetaskmodul",{"_index":598,"title":{},"body":{"modules/CompleteTaskModule.html":{},"overview.html":{}}}],["cluster_completetaskmodule_declar",{"_index":599,"title":{},"body":{"modules/CompleteTaskModule.html":{},"overview.html":{}}}],["cluster_confirmdeletetaskmodul",{"_index":650,"title":{},"body":{"modules/ConfirmDeleteTaskModule.html":{},"overview.html":{}}}],["cluster_confirmdeletetaskmodule_declar",{"_index":651,"title":{},"body":{"modules/ConfirmDeleteTaskModule.html":{},"overview.html":{}}}],["cluster_createtaskmodul",{"_index":761,"title":{},"body":{"modules/CreateTaskModule.html":{},"overview.html":{}}}],["cluster_createtaskmodule_declar",{"_index":762,"title":{},"body":{"modules/CreateTaskModule.html":{},"overview.html":{}}}],["cluster_createtaskmodule_import",{"_index":763,"title":{},"body":{"modules/CreateTaskModule.html":{},"overview.html":{}}}],["cluster_edittaskmodul",{"_index":926,"title":{},"body":{"modules/EditTaskModule.html":{},"overview.html":{}}}],["cluster_edittaskmodule_declar",{"_index":927,"title":{},"body":{"modules/EditTaskModule.html":{},"overview.html":{}}}],["cluster_edittaskmodule_import",{"_index":928,"title":{},"body":{"modules/EditTaskModule.html":{},"overview.html":{}}}],["cluster_edittaskmodule_provid",{"_index":929,"title":{},"body":{"modules/EditTaskModule.html":{},"overview.html":{}}}],["cluster_footermodul",{"_index":949,"title":{},"body":{"modules/FooterModule.html":{},"overview.html":{}}}],["cluster_footermodule_declar",{"_index":950,"title":{},"body":{"modules/FooterModule.html":{},"overview.html":{}}}],["cluster_footermodule_export",{"_index":951,"title":{},"body":{"modules/FooterModule.html":{},"overview.html":{}}}],["cluster_headermodul",{"_index":995,"title":{},"body":{"modules/HeaderModule.html":{},"overview.html":{}}}],["cluster_headermodule_declar",{"_index":996,"title":{},"body":{"modules/HeaderModule.html":{},"overview.html":{}}}],["cluster_headermodule_export",{"_index":998,"title":{},"body":{"modules/HeaderModule.html":{},"overview.html":{}}}],["cluster_headermodule_import",{"_index":997,"title":{},"body":{"modules/HeaderModule.html":{},"overview.html":{}}}],["cluster_sidenavtasksmodul",{"_index":1268,"title":{},"body":{"modules/SidenavTasksModule.html":{},"overview.html":{}}}],["cluster_sidenavtasksmodule_declar",{"_index":1269,"title":{},"body":{"modules/SidenavTasksModule.html":{},"overview.html":{}}}],["cluster_sidenavtasksmodule_export",{"_index":1271,"title":{},"body":{"modules/SidenavTasksModule.html":{},"overview.html":{}}}],["cluster_sidenavtasksmodule_import",{"_index":1270,"title":{},"body":{"modules/SidenavTasksModule.html":{}}}],["cluster_taskformmodul",{"_index":1381,"title":{},"body":{"modules/TaskFormModule.html":{},"overview.html":{}}}],["cluster_taskformmodule_declar",{"_index":1382,"title":{},"body":{"modules/TaskFormModule.html":{},"overview.html":{}}}],["cluster_taskformmodule_export",{"_index":1383,"title":{},"body":{"modules/TaskFormModule.html":{},"overview.html":{}}}],["cluster_tasksbuttonbarmodul",{"_index":1386,"title":{},"body":{"modules/TasksButtonBarModule.html":{},"overview.html":{}}}],["cluster_tasksbuttonbarmodule_declar",{"_index":1387,"title":{},"body":{"modules/TasksButtonBarModule.html":{},"overview.html":{}}}],["cluster_tasksbuttonbarmodule_export",{"_index":1389,"title":{},"body":{"modules/TasksButtonBarModule.html":{},"overview.html":{}}}],["cluster_tasksbuttonbarmodule_import",{"_index":1388,"title":{},"body":{"modules/TasksButtonBarModule.html":{},"overview.html":{}}}],["cluster_tasksbuttonsmodul",{"_index":1396,"title":{},"body":{"modules/TasksButtonsModule.html":{},"overview.html":{}}}],["cluster_tasksbuttonsmodule_declar",{"_index":1397,"title":{},"body":{"modules/TasksButtonsModule.html":{},"overview.html":{}}}],["cluster_tasksbuttonsmodule_export",{"_index":1398,"title":{},"body":{"modules/TasksButtonsModule.html":{},"overview.html":{}}}],["cluster_tasksdialogmodul",{"_index":1403,"title":{},"body":{"modules/TasksDialogModule.html":{}}}],["cluster_tasksdialogmodule_import",{"_index":1404,"title":{},"body":{"modules/TasksDialogModule.html":{}}}],["cluster_tasksfiltermodul",{"_index":1445,"title":{},"body":{"modules/TasksFilterModule.html":{},"overview.html":{}}}],["cluster_tasksfiltermodule_declar",{"_index":1446,"title":{},"body":{"modules/TasksFilterModule.html":{},"overview.html":{}}}],["cluster_tasksfiltermodule_export",{"_index":1447,"title":{},"body":{"modules/TasksFilterModule.html":{},"overview.html":{}}}],["cluster_tasksmodul",{"_index":1452,"title":{},"body":{"modules/TasksModule.html":{},"overview.html":{}}}],["cluster_tasksmodule_declar",{"_index":1453,"title":{},"body":{"modules/TasksModule.html":{},"overview.html":{}}}],["cluster_tasksmodule_import",{"_index":1454,"title":{},"body":{"modules/TasksModule.html":{},"overview.html":{}}}],["cluster_taskstablemodul",{"_index":1471,"title":{},"body":{"modules/TasksTableModule.html":{},"overview.html":{}}}],["cluster_taskstablemodule_declar",{"_index":1472,"title":{},"body":{"modules/TasksTableModule.html":{},"overview.html":{}}}],["cluster_taskstablemodule_import",{"_index":1473,"title":{},"body":{"modules/TasksTableModule.html":{}}}],["code",{"_index":1695,"title":{},"body":{"index.html":{}}}],["collaps",{"_index":962,"title":{},"body":{"components/HeaderComponent.html":{},"components/SidenavTasksComponent.html":{},"injectables/UtilsService.html":{},"miscellaneous/typealiases.html":{}}}],["color",{"_index":791,"title":{},"body":{"components/EditTaskComponent.html":{}}}],["column",{"_index":214,"title":{},"body":{"components/AboutComponent.html":{}}}],["command",{"_index":1623,"title":{},"body":{"index.html":{}}}],["commonmodul",{"_index":290,"title":{},"body":{"modules/AboutModule.html":{},"modules/CompleteTaskModule.html":{},"modules/ConfirmDeleteTaskModule.html":{},"modules/CoreModule.html":{},"modules/CreateTaskModule.html":{},"modules/EditTaskModule.html":{},"modules/FooterModule.html":{},"modules/HeaderModule.html":{},"modules/SidenavTasksModule.html":{},"modules/TaskFormModule.html":{},"modules/TasksButtonBarModule.html":{},"modules/TasksButtonsModule.html":{},"modules/TasksFilterModule.html":{},"modules/TasksModule.html":{},"modules/TasksTableModule.html":{}}}],["compat",{"_index":1596,"title":{},"body":{"dependencies.html":{}}}],["complet",{"_index":114,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ButtonBarComponent.html":{},"components/ButtonsComponent.html":{},"components/CompleteTaskComponent.html":{},"modules/CompleteTaskModule.html":{},"components/CompleteTasksTableComponent.html":{},"components/ConfirmDeleteTaskComponent.html":{},"components/CreateTaskComponent.html":{},"components/EditTaskComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"injectables/HttpService.html":{},"components/ListItemComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PendingTasksTableComponent.html":{},"components/RecurringTaskComponent.html":{},"components/SidenavTasksComponent.html":{},"classes/Task.html":{},"components/TaskFormComponent.html":{},"modules/TasksButtonsModule.html":{},"components/TasksComponent.html":{},"components/TasksFilterComponent.html":{},"index.html":{}}}],["completedtask",{"_index":617,"title":{},"body":{"components/CompleteTasksTableComponent.html":{}}}],["completeselecteddialogref",{"_index":481,"title":{},"body":{"components/ButtonsComponent.html":{}}}],["completeselecteddialogref.componentinstance.completetask.subscrib",{"_index":486,"title":{},"body":{"components/ButtonsComponent.html":{}}}],["completetask",{"_index":485,"title":{},"body":{"components/ButtonsComponent.html":{},"components/CompleteTaskComponent.html":{}}}],["completetaskcompon",{"_index":243,"title":{"components/CompleteTaskComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ButtonBarComponent.html":{},"components/ButtonsComponent.html":{},"components/CompleteTaskComponent.html":{},"modules/CompleteTaskModule.html":{},"components/CompleteTasksTableComponent.html":{},"components/ConfirmDeleteTaskComponent.html":{},"components/CreateTaskComponent.html":{},"components/EditTaskComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/ListItemComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PendingTasksTableComponent.html":{},"components/RecurringTaskComponent.html":{},"components/SidenavTasksComponent.html":{},"components/TaskFormComponent.html":{},"components/TasksComponent.html":{},"components/TasksFilterComponent.html":{},"coverage.html":{},"overview.html":{}}}],["completetaskmodul",{"_index":597,"title":{"modules/CompleteTaskModule.html":{}},"body":{"modules/CompleteTaskModule.html":{},"modules/TasksDialogModule.html":{},"modules.html":{},"overview.html":{}}}],["completetaskstablecompon",{"_index":245,"title":{"components/CompleteTasksTableComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ButtonBarComponent.html":{},"components/ButtonsComponent.html":{},"components/CompleteTaskComponent.html":{},"components/CompleteTasksTableComponent.html":{},"components/ConfirmDeleteTaskComponent.html":{},"components/CreateTaskComponent.html":{},"components/EditTaskComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/ListItemComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PendingTasksTableComponent.html":{},"components/RecurringTaskComponent.html":{},"components/SidenavTasksComponent.html":{},"components/TaskFormComponent.html":{},"components/TasksComponent.html":{},"components/TasksFilterComponent.html":{},"modules/TasksRoutingModule.html":{},"modules/TasksTableModule.html":{},"coverage.html":{},"overview.html":{}}}],["compodoc",{"_index":1735,"title":{},"body":{"index.html":{}}}],["compon",{"_index":0,"title":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ButtonBarComponent.html":{},"components/ButtonsComponent.html":{},"components/CompleteTaskComponent.html":{},"components/CompleteTasksTableComponent.html":{},"components/ConfirmDeleteTaskComponent.html":{},"components/CreateTaskComponent.html":{},"components/EditTaskComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/ListItemComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PendingTasksTableComponent.html":{},"components/RecurringTaskComponent.html":{},"components/SidenavTasksComponent.html":{},"components/TaskFormComponent.html":{},"components/TasksComponent.html":{},"components/TasksFilterComponent.html":{}},"body":{"components/AboutComponent.html":{},"modules/AboutModule.html":{},"modules/AboutRoutingModule.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ButtonBarComponent.html":{},"components/ButtonsComponent.html":{},"components/CompleteTaskComponent.html":{},"modules/CompleteTaskModule.html":{},"components/CompleteTasksTableComponent.html":{},"components/ConfirmDeleteTaskComponent.html":{},"modules/ConfirmDeleteTaskModule.html":{},"components/CreateTaskComponent.html":{},"modules/CreateTaskModule.html":{},"components/EditTaskComponent.html":{},"modules/EditTaskModule.html":{},"components/FooterComponent.html":{},"modules/FooterModule.html":{},"components/HeaderComponent.html":{},"modules/HeaderModule.html":{},"components/ListItemComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PendingTasksTableComponent.html":{},"components/RecurringTaskComponent.html":{},"components/SidenavTasksComponent.html":{},"modules/SidenavTasksModule.html":{},"components/TaskFormComponent.html":{},"modules/TaskFormModule.html":{},"modules/TasksButtonBarModule.html":{},"modules/TasksButtonsModule.html":{},"components/TasksComponent.html":{},"modules/TasksDialogModule.html":{},"components/TasksFilterComponent.html":{},"modules/TasksFilterModule.html":{},"modules/TasksModule.html":{},"modules/TasksRoutingModule.html":{},"modules/TasksTableModule.html":{},"injectables/UtilsService.html":{},"coverage.html":{},"index.html":{},"overview.html":{}}}],["component_templ",{"_index":235,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ButtonBarComponent.html":{},"components/ButtonsComponent.html":{},"components/CompleteTaskComponent.html":{},"components/CompleteTasksTableComponent.html":{},"components/ConfirmDeleteTaskComponent.html":{},"components/CreateTaskComponent.html":{},"components/EditTaskComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/ListItemComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PendingTasksTableComponent.html":{},"components/RecurringTaskComponent.html":{},"components/SidenavTasksComponent.html":{},"components/TaskFormComponent.html":{},"components/TasksComponent.html":{},"components/TasksFilterComponent.html":{}}}],["components/pag",{"_index":366,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["compos",{"_index":1614,"title":{},"body":{"index.html":{}}}],["configur",{"_index":1635,"title":{},"body":{"index.html":{}}}],["confirm",{"_index":210,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ButtonBarComponent.html":{},"components/ButtonsComponent.html":{},"components/CompleteTaskComponent.html":{},"components/CompleteTasksTableComponent.html":{},"components/ConfirmDeleteTaskComponent.html":{},"components/CreateTaskComponent.html":{},"components/EditTaskComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/ListItemComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PendingTasksTableComponent.html":{},"components/RecurringTaskComponent.html":{},"components/SidenavTasksComponent.html":{},"components/TaskFormComponent.html":{},"components/TasksComponent.html":{},"components/TasksFilterComponent.html":{}}}],["confirmdeletedialogref",{"_index":493,"title":{},"body":{"components/ButtonsComponent.html":{}}}],["confirmdeletedialogref.componentinstance.deletetask.subscrib",{"_index":497,"title":{},"body":{"components/ButtonsComponent.html":{}}}],["confirmdeletetaskcompon",{"_index":247,"title":{"components/ConfirmDeleteTaskComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ButtonBarComponent.html":{},"components/ButtonsComponent.html":{},"components/CompleteTaskComponent.html":{},"components/CompleteTasksTableComponent.html":{},"components/ConfirmDeleteTaskComponent.html":{},"modules/ConfirmDeleteTaskModule.html":{},"components/CreateTaskComponent.html":{},"components/EditTaskComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/ListItemComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PendingTasksTableComponent.html":{},"components/RecurringTaskComponent.html":{},"components/SidenavTasksComponent.html":{},"components/TaskFormComponent.html":{},"components/TasksComponent.html":{},"components/TasksFilterComponent.html":{},"coverage.html":{},"overview.html":{}}}],["confirmdeletetaskmodul",{"_index":649,"title":{"modules/ConfirmDeleteTaskModule.html":{}},"body":{"modules/ConfirmDeleteTaskModule.html":{},"modules/TasksDialogModule.html":{},"modules.html":{},"overview.html":{}}}],["connect",{"_index":1666,"title":{},"body":{"index.html":{}}}],["consist",{"_index":321,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonBarComponent.html":{},"components/SidenavTasksComponent.html":{},"components/TasksComponent.html":{}}}],["consol",{"_index":675,"title":{},"body":{"injectables/ConsoleLoggerService.html":{},"classes/Logger.html":{},"injectables/LoggerService.html":{}}}],["console)[typ",{"_index":695,"title":{},"body":{"injectables/ConsoleLoggerService.html":{}}}],["console.error.bind(consol",{"_index":693,"title":{},"body":{"injectables/ConsoleLoggerService.html":{}}}],["console.info.bind(consol",{"_index":691,"title":{},"body":{"injectables/ConsoleLoggerService.html":{}}}],["console.log",{"_index":696,"title":{},"body":{"injectables/ConsoleLoggerService.html":{}}}],["console.warn.bind(consol",{"_index":692,"title":{},"body":{"injectables/ConsoleLoggerService.html":{}}}],["consoleloggerservic",{"_index":654,"title":{"injectables/ConsoleLoggerService.html":{}},"body":{"injectables/ConsoleLoggerService.html":{},"modules/CoreModule.html":{},"coverage.html":{}}}],["const",{"_index":99,"title":{},"body":{"components/AboutComponent.html":{},"modules/AboutRoutingModule.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/ButtonsComponent.html":{},"components/CompleteTaskComponent.html":{},"components/ConfirmDeleteTaskComponent.html":{},"injectables/ConsoleLoggerService.html":{},"components/CreateTaskComponent.html":{},"components/EditTaskComponent.html":{},"components/HeaderComponent.html":{},"components/ListItemComponent.html":{},"injectables/MatPaginatorCustom.html":{},"components/SidenavTasksComponent.html":{},"components/TaskFormComponent.html":{},"components/TasksFilterComponent.html":{},"modules/TasksRoutingModule.html":{},"injectables/UtilsService.html":{}}}],["constructor",{"_index":33,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ButtonBarComponent.html":{},"components/ButtonsComponent.html":{},"components/CompleteTaskComponent.html":{},"components/ConfirmDeleteTaskComponent.html":{},"modules/CoreModule.html":{},"components/CreateTaskComponent.html":{},"components/EditTaskComponent.html":{},"components/HeaderComponent.html":{},"injectables/HttpService.html":{},"components/ListItemComponent.html":{},"injectables/LoaderService.html":{},"interfaces/LoaderState.html":{},"components/RecurringTaskComponent.html":{},"components/SidenavTasksComponent.html":{},"components/TaskFormComponent.html":{},"components/TasksFilterComponent.html":{},"injectables/UtilsService.html":{}}}],["constructor(breakpointobserv",{"_index":1488,"title":{},"body":{"injectables/UtilsService.html":{}}}],["constructor(changedetector",{"_index":782,"title":{},"body":{"components/EditTaskComponent.html":{}}}],["constructor(changedetectorref",{"_index":330,"title":{},"body":{"components/AppComponent.html":{}}}],["constructor(data",{"_index":514,"title":{},"body":{"components/CompleteTaskComponent.html":{},"components/ConfirmDeleteTaskComponent.html":{},"components/RecurringTaskComponent.html":{}}}],["constructor(dialog",{"_index":442,"title":{},"body":{"components/ButtonsComponent.html":{},"components/SidenavTasksComponent.html":{}}}],["constructor(dialogref",{"_index":730,"title":{},"body":{"components/CreateTaskComponent.html":{}}}],["constructor(formbuild",{"_index":1316,"title":{},"body":{"components/TaskFormComponent.html":{}}}],["constructor(http",{"_index":1027,"title":{},"body":{"injectables/HttpService.html":{}}}],["constructor(priv",{"_index":84,"title":{},"body":{"components/AboutComponent.html":{},"components/HeaderComponent.html":{},"components/ListItemComponent.html":{},"injectables/UtilsService.html":{}}}],["constructor(rout",{"_index":34,"title":{},"body":{"components/AboutComponent.html":{}}}],["constructor(taskservic",{"_index":1085,"title":{},"body":{"components/ListItemComponent.html":{},"components/TasksFilterComponent.html":{}}}],["constructor(utilsservic",{"_index":970,"title":{},"body":{"components/HeaderComponent.html":{}}}],["contain",{"_index":619,"title":{},"body":{"components/CompleteTasksTableComponent.html":{},"components/PendingTasksTableComponent.html":{},"components/TasksFilterComponent.html":{},"index.html":{}}}],["content",{"_index":111,"title":{},"body":{"components/AboutComponent.html":{},"components/CompleteTaskComponent.html":{},"injectables/HttpService.html":{},"index.html":{}}}],["context",{"_index":664,"title":{},"body":{"injectables/ConsoleLoggerService.html":{}}}],["continu",{"_index":1690,"title":{},"body":{"index.html":{}}}],["conveni",{"_index":308,"title":{},"body":{"modules/AboutModule.html":{},"modules/CompleteTaskModule.html":{},"modules/ConfirmDeleteTaskModule.html":{},"modules/CreateTaskModule.html":{},"modules/EditTaskModule.html":{},"modules/HeaderModule.html":{},"modules/SidenavTasksModule.html":{},"modules/TasksButtonBarModule.html":{},"modules/TasksButtonsModule.html":{},"modules/TasksFilterModule.html":{},"modules/TasksTableModule.html":{}}}],["copi",{"_index":1625,"title":{},"body":{"index.html":{}}}],["core",{"_index":303,"title":{},"body":{"modules/AboutModule.html":{},"modules/CompleteTaskModule.html":{},"modules/ConfirmDeleteTaskModule.html":{},"modules/CreateTaskModule.html":{},"modules/EditTaskModule.html":{},"modules/HeaderModule.html":{},"modules/SidenavTasksModule.html":{},"modules/TasksButtonBarModule.html":{},"modules/TasksButtonsModule.html":{},"modules/TasksFilterModule.html":{},"modules/TasksTableModule.html":{},"dependencies.html":{}}}],["core/core.modul",{"_index":369,"title":{},"body":{"modules/AppModule.html":{}}}],["core/services/loader.servic",{"_index":341,"title":{},"body":{"components/AppComponent.html":{}}}],["coremodul",{"_index":354,"title":{"modules/CoreModule.html":{}},"body":{"modules/AppModule.html":{},"modules/CoreModule.html":{},"modules.html":{},"overview.html":{}}}],["coremodule.forroot",{"_index":373,"title":{},"body":{"modules/AppModule.html":{}}}],["correct",{"_index":668,"title":{},"body":{"injectables/ConsoleLoggerService.html":{},"classes/Logger.html":{},"injectables/LoggerService.html":{},"components/SidenavTasksComponent.html":{}}}],["correspond",{"_index":790,"title":{},"body":{"components/EditTaskComponent.html":{},"index.html":{}}}],["coverag",{"_index":1525,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["creat",{"_index":10,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ButtonBarComponent.html":{},"components/ButtonsComponent.html":{},"components/CompleteTaskComponent.html":{},"components/CompleteTasksTableComponent.html":{},"components/ConfirmDeleteTaskComponent.html":{},"injectables/ConsoleLoggerService.html":{},"components/CreateTaskComponent.html":{},"components/EditTaskComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/ListItemComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PendingTasksTableComponent.html":{},"components/RecurringTaskComponent.html":{},"components/SidenavTasksComponent.html":{},"components/TaskFormComponent.html":{},"components/TasksComponent.html":{},"components/TasksFilterComponent.html":{},"modules/TasksModule.html":{},"index.html":{}}}],["createdialogref",{"_index":1237,"title":{},"body":{"components/SidenavTasksComponent.html":{}}}],["createtaskcompon",{"_index":249,"title":{"components/CreateTaskComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ButtonBarComponent.html":{},"components/ButtonsComponent.html":{},"components/CompleteTaskComponent.html":{},"components/CompleteTasksTableComponent.html":{},"components/ConfirmDeleteTaskComponent.html":{},"components/CreateTaskComponent.html":{},"modules/CreateTaskModule.html":{},"components/EditTaskComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/ListItemComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PendingTasksTableComponent.html":{},"components/RecurringTaskComponent.html":{},"components/SidenavTasksComponent.html":{},"components/TaskFormComponent.html":{},"components/TasksComponent.html":{},"components/TasksFilterComponent.html":{},"coverage.html":{},"overview.html":{}}}],["createtaskmodul",{"_index":760,"title":{"modules/CreateTaskModule.html":{}},"body":{"modules/CreateTaskModule.html":{},"modules/SidenavTasksModule.html":{},"modules.html":{},"overview.html":{}}}],["creation",{"_index":734,"title":{},"body":{"components/CreateTaskComponent.html":{}}}],["css",{"_index":1087,"title":{},"body":{"components/ListItemComponent.html":{}}}],["current",{"_index":227,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/CompleteTaskComponent.html":{},"components/HeaderComponent.html":{},"injectables/HttpService.html":{},"components/ListItemComponent.html":{},"components/SidenavTasksComponent.html":{},"components/TasksComponent.html":{},"components/TasksFilterComponent.html":{},"index.html":{}}}],["custom",{"_index":944,"title":{},"body":{"modules/EditTaskModule.html":{},"injectables/HttpService.html":{},"injectables/MatPaginatorCustom.html":{},"components/TasksFilterComponent.html":{}}}],["custom.t",{"_index":1156,"title":{},"body":{"injectables/MatPaginatorCustom.html":{},"coverage.html":{}}}],["custom.ts:10",{"_index":1168,"title":{},"body":{"injectables/MatPaginatorCustom.html":{}}}],["custom.ts:11",{"_index":1169,"title":{},"body":{"injectables/MatPaginatorCustom.html":{}}}],["custom.ts:13",{"_index":1166,"title":{},"body":{"injectables/MatPaginatorCustom.html":{}}}],["d30c21a2f24f",{"_index":1013,"title":{},"body":{"injectables/HttpService.html":{}}}],["daili",{"_index":1287,"title":{},"body":{"classes/Task.html":{},"components/TaskFormComponent.html":{},"index.html":{}}}],["data",{"_index":522,"title":{},"body":{"components/CompleteTaskComponent.html":{},"components/ConfirmDeleteTaskComponent.html":{},"components/RecurringTaskComponent.html":{},"components/TaskFormComponent.html":{},"index.html":{}}}],["data:ani",{"_index":568,"title":{},"body":{"components/CompleteTaskComponent.html":{},"components/ConfirmDeleteTaskComponent.html":{},"components/RecurringTaskComponent.html":{}}}],["databas",{"_index":1608,"title":{},"body":{"index.html":{}}}],["date",{"_index":127,"title":{},"body":{"components/AboutComponent.html":{},"components/CompleteTaskComponent.html":{},"components/EditTaskComponent.html":{},"classes/Task.html":{},"components/TaskFormComponent.html":{},"components/TasksFilterComponent.html":{},"index.html":{}}}],["datechang",{"_index":1427,"title":{},"body":{"components/TasksFilterComponent.html":{}}}],["datecomplet",{"_index":546,"title":{},"body":{"components/CompleteTaskComponent.html":{},"classes/Task.html":{},"components/TaskFormComponent.html":{}}}],["datecompletedform",{"_index":505,"title":{},"body":{"components/CompleteTaskComponent.html":{},"components/TaskFormComponent.html":{}}}],["datepick",{"_index":1410,"title":{},"body":{"components/TasksFilterComponent.html":{}}}],["day",{"_index":892,"title":{},"body":{"components/EditTaskComponent.html":{}}}],["days').utc",{"_index":890,"title":{},"body":{"components/EditTaskComponent.html":{}}}],["days').utc().format('yyyi",{"_index":1125,"title":{},"body":{"components/ListItemComponent.html":{}}}],["db",{"_index":1692,"title":{},"body":{"index.html":{}}}],["dd",{"_index":1120,"title":{},"body":{"components/ListItemComponent.html":{}}}],["deboucetim",{"_index":1439,"title":{},"body":{"components/TasksFilterComponent.html":{}}}],["debouncetim",{"_index":1431,"title":{},"body":{"components/TasksFilterComponent.html":{}}}],["debouncetime(150",{"_index":1443,"title":{},"body":{"components/TasksFilterComponent.html":{}}}],["decid",{"_index":1772,"title":{},"body":{"index.html":{}}}],["declar",{"_index":277,"title":{},"body":{"modules/AboutModule.html":{},"modules/AppModule.html":{},"modules/CompleteTaskModule.html":{},"modules/ConfirmDeleteTaskModule.html":{},"modules/CreateTaskModule.html":{},"modules/EditTaskModule.html":{},"modules/FooterModule.html":{},"modules/HeaderModule.html":{},"modules/SidenavTasksModule.html":{},"modules/TaskFormModule.html":{},"modules/TasksButtonBarModule.html":{},"modules/TasksButtonsModule.html":{},"modules/TasksDialogModule.html":{},"modules/TasksFilterModule.html":{},"modules/TasksModule.html":{},"modules/TasksTableModule.html":{},"overview.html":{}}}],["decor",{"_index":65,"title":{},"body":{"components/AboutComponent.html":{},"components/ButtonBarComponent.html":{},"components/CompleteTasksTableComponent.html":{},"components/CreateTaskComponent.html":{},"components/EditTaskComponent.html":{},"components/HeaderComponent.html":{},"components/PendingTasksTableComponent.html":{},"components/TasksFilterComponent.html":{}}}],["default",{"_index":75,"title":{},"body":{"components/AboutComponent.html":{},"modules/AboutRoutingModule.html":{},"modules/AppRoutingModule.html":{},"components/ButtonBarComponent.html":{},"components/ButtonsComponent.html":{},"components/CompleteTaskComponent.html":{},"components/ConfirmDeleteTaskComponent.html":{},"components/CreateTaskComponent.html":{},"components/EditTaskComponent.html":{},"injectables/HttpService.html":{},"classes/Logger.html":{},"injectables/LoggerService.html":{},"injectables/MatPaginatorCustom.html":{},"components/RecurringTaskComponent.html":{},"components/SidenavTasksComponent.html":{},"classes/Task.html":{},"components/TaskFormComponent.html":{},"modules/TasksRoutingModule.html":{},"injectables/UtilsService.html":{},"miscellaneous/variables.html":{}}}],["defaultbadg",{"_index":1216,"title":{},"body":{"components/SidenavTasksComponent.html":{}}}],["defin",{"_index":36,"title":{},"body":{"components/AboutComponent.html":{},"modules/AboutModule.html":{},"components/AppComponent.html":{},"components/ButtonBarComponent.html":{},"components/ButtonsComponent.html":{},"components/CompleteTaskComponent.html":{},"modules/CompleteTaskModule.html":{},"components/CompleteTasksTableComponent.html":{},"components/ConfirmDeleteTaskComponent.html":{},"modules/ConfirmDeleteTaskModule.html":{},"injectables/ConsoleLoggerService.html":{},"modules/CoreModule.html":{},"components/CreateTaskComponent.html":{},"modules/CreateTaskModule.html":{},"components/EditTaskComponent.html":{},"modules/EditTaskModule.html":{},"modules/FooterModule.html":{},"components/HeaderComponent.html":{},"modules/HeaderModule.html":{},"injectables/HttpService.html":{},"components/ListItemComponent.html":{},"injectables/LoaderService.html":{},"classes/Logger.html":{},"injectables/LoggerService.html":{},"injectables/MatPaginatorCustom.html":{},"components/PendingTasksTableComponent.html":{},"components/RecurringTaskComponent.html":{},"components/SidenavTasksComponent.html":{},"modules/SidenavTasksModule.html":{},"classes/Task.html":{},"components/TaskFormComponent.html":{},"modules/TaskFormModule.html":{},"modules/TasksButtonBarModule.html":{},"modules/TasksButtonsModule.html":{},"modules/TasksDialogModule.html":{},"components/TasksFilterComponent.html":{},"modules/TasksFilterModule.html":{},"modules/TasksModule.html":{},"modules/TasksTableModule.html":{},"injectables/UtilsService.html":{},"index.html":{}}}],["delay",{"_index":1436,"title":{},"body":{"components/TasksFilterComponent.html":{}}}],["delet",{"_index":115,"title":{},"body":{"components/AboutComponent.html":{},"components/ButtonBarComponent.html":{},"components/ButtonsComponent.html":{},"components/ConfirmDeleteTaskComponent.html":{},"modules/ConfirmDeleteTaskModule.html":{},"injectables/HttpService.html":{},"modules/TasksButtonsModule.html":{},"modules/TasksDialogModule.html":{},"coverage.html":{}}}],["delete'},{'nam",{"_index":248,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ButtonBarComponent.html":{},"components/ButtonsComponent.html":{},"components/CompleteTaskComponent.html":{},"components/CompleteTasksTableComponent.html":{},"components/ConfirmDeleteTaskComponent.html":{},"components/CreateTaskComponent.html":{},"components/EditTaskComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/ListItemComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PendingTasksTableComponent.html":{},"components/RecurringTaskComponent.html":{},"components/SidenavTasksComponent.html":{},"components/TaskFormComponent.html":{},"components/TasksComponent.html":{},"components/TasksFilterComponent.html":{}}}],["delete(url",{"_index":1030,"title":{},"body":{"injectables/HttpService.html":{}}}],["deletetask",{"_index":496,"title":{},"body":{"components/ButtonsComponent.html":{},"components/ConfirmDeleteTaskComponent.html":{}}}],["depend",{"_index":276,"title":{"dependencies.html":{}},"body":{"modules/AboutModule.html":{},"modules/AppModule.html":{},"modules/CompleteTaskModule.html":{},"modules/ConfirmDeleteTaskModule.html":{},"modules/CreateTaskModule.html":{},"modules/EditTaskModule.html":{},"modules/FooterModule.html":{},"modules/HeaderModule.html":{},"modules/SidenavTasksModule.html":{},"modules/TaskFormModule.html":{},"modules/TasksButtonBarModule.html":{},"modules/TasksButtonsModule.html":{},"modules/TasksDialogModule.html":{},"modules/TasksFilterModule.html":{},"modules/TasksModule.html":{},"modules/TasksTableModule.html":{},"dependencies.html":{},"index.html":{},"overview.html":{}}}],["descript",{"_index":9,"title":{},"body":{"components/AboutComponent.html":{},"modules/AboutModule.html":{},"components/AppComponent.html":{},"components/ButtonBarComponent.html":{},"components/ButtonsComponent.html":{},"components/CompleteTaskComponent.html":{},"modules/CompleteTaskModule.html":{},"components/CompleteTasksTableComponent.html":{},"components/ConfirmDeleteTaskComponent.html":{},"modules/ConfirmDeleteTaskModule.html":{},"injectables/ConsoleLoggerService.html":{},"modules/CoreModule.html":{},"components/CreateTaskComponent.html":{},"modules/CreateTaskModule.html":{},"components/EditTaskComponent.html":{},"modules/EditTaskModule.html":{},"components/FooterComponent.html":{},"modules/FooterModule.html":{},"components/HeaderComponent.html":{},"modules/HeaderModule.html":{},"injectables/HttpService.html":{},"components/ListItemComponent.html":{},"injectables/LoaderService.html":{},"interfaces/LoaderState.html":{},"classes/Logger.html":{},"injectables/LoggerService.html":{},"injectables/MatPaginatorCustom.html":{},"components/PageNotFoundComponent.html":{},"components/PendingTasksTableComponent.html":{},"components/RecurringTaskComponent.html":{},"components/SidenavTasksComponent.html":{},"modules/SidenavTasksModule.html":{},"classes/Task.html":{},"components/TaskFormComponent.html":{},"modules/TaskFormModule.html":{},"modules/TasksButtonBarModule.html":{},"modules/TasksButtonsModule.html":{},"components/TasksComponent.html":{},"modules/TasksDialogModule.html":{},"components/TasksFilterComponent.html":{},"modules/TasksFilterModule.html":{},"modules/TasksModule.html":{},"modules/TasksTableModule.html":{},"injectables/UtilsService.html":{},"index.html":{}}}],["design",{"_index":131,"title":{},"body":{"components/AboutComponent.html":{},"index.html":{}}}],["desir",{"_index":196,"title":{},"body":{"components/AboutComponent.html":{}}}],["desktop",{"_index":147,"title":{},"body":{"components/AboutComponent.html":{}}}],["destori",{"_index":1109,"title":{},"body":{"components/ListItemComponent.html":{}}}],["detail",{"_index":172,"title":{},"body":{"components/AboutComponent.html":{},"index.html":{}}}],["determin",{"_index":461,"title":{},"body":{"components/ButtonsComponent.html":{},"components/EditTaskComponent.html":{},"index.html":{}}}],["develop",{"_index":1617,"title":{},"body":{"index.html":{}}}],["devic",{"_index":135,"title":{},"body":{"components/AboutComponent.html":{},"components/HeaderComponent.html":{},"components/SidenavTasksComponent.html":{},"injectables/UtilsService.html":{},"index.html":{}}}],["devtool",{"_index":155,"title":{},"body":{"components/AboutComponent.html":{},"index.html":{}}}],["diagram",{"_index":1755,"title":{},"body":{"index.html":{}}}],["dialog",{"_index":170,"title":{},"body":{"components/AboutComponent.html":{},"components/ButtonsComponent.html":{},"components/CompleteTaskComponent.html":{},"components/ConfirmDeleteTaskComponent.html":{},"components/CreateTaskComponent.html":{},"components/EditTaskComponent.html":{},"components/RecurringTaskComponent.html":{},"components/SidenavTasksComponent.html":{},"modules/TasksDialogModule.html":{},"injectables/UtilsService.html":{}}}],["dialog.modul",{"_index":942,"title":{},"body":{"modules/EditTaskModule.html":{},"modules/TasksTableModule.html":{}}}],["dialog.module.t",{"_index":1406,"title":{},"body":{"modules/TasksDialogModule.html":{}}}],["dialogconfig",{"_index":475,"title":{},"body":{"components/ButtonsComponent.html":{},"components/EditTaskComponent.html":{},"components/SidenavTasksComponent.html":{}}}],["dialogconfig.autofocu",{"_index":478,"title":{},"body":{"components/ButtonsComponent.html":{},"components/EditTaskComponent.html":{},"components/SidenavTasksComponent.html":{}}}],["dialogconfig.data",{"_index":479,"title":{},"body":{"components/ButtonsComponent.html":{},"components/EditTaskComponent.html":{}}}],["dialogconfig.maxheight",{"_index":1235,"title":{},"body":{"components/SidenavTasksComponent.html":{}}}],["dialogconfig.maxwidth",{"_index":1233,"title":{},"body":{"components/SidenavTasksComponent.html":{}}}],["dialogconfig.width",{"_index":476,"title":{},"body":{"components/ButtonsComponent.html":{},"components/EditTaskComponent.html":{},"components/SidenavTasksComponent.html":{}}}],["dialogref",{"_index":515,"title":{},"body":{"components/CompleteTaskComponent.html":{},"components/ConfirmDeleteTaskComponent.html":{},"components/CreateTaskComponent.html":{},"components/RecurringTaskComponent.html":{},"injectables/UtilsService.html":{}}}],["dialogref.afterclosed().subscrib",{"_index":1522,"title":{},"body":{"injectables/UtilsService.html":{}}}],["dialogref.updatesize('100",{"_index":1520,"title":{},"body":{"injectables/UtilsService.html":{}}}],["dialogref.updatesize(larges",{"_index":1521,"title":{},"body":{"injectables/UtilsService.html":{}}}],["differ",{"_index":1440,"title":{},"body":{"components/TasksFilterComponent.html":{}}}],["direct",{"_index":233,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ButtonBarComponent.html":{},"components/ButtonsComponent.html":{},"components/CompleteTaskComponent.html":{},"components/CompleteTasksTableComponent.html":{},"components/ConfirmDeleteTaskComponent.html":{},"components/CreateTaskComponent.html":{},"components/EditTaskComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/ListItemComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PendingTasksTableComponent.html":{},"components/RecurringTaskComponent.html":{},"components/SidenavTasksComponent.html":{},"components/TaskFormComponent.html":{},"components/TasksComponent.html":{},"components/TasksFilterComponent.html":{}}}],["directli",{"_index":958,"title":{},"body":{"components/HeaderComponent.html":{},"index.html":{}}}],["directori",{"_index":1627,"title":{},"body":{"index.html":{}}}],["dirti",{"_index":531,"title":{},"body":{"components/CompleteTaskComponent.html":{},"components/TaskFormComponent.html":{}}}],["disabl",{"_index":392,"title":{},"body":{"components/ButtonBarComponent.html":{},"components/ButtonsComponent.html":{},"components/CompleteTaskComponent.html":{},"components/CreateTaskComponent.html":{},"components/EditTaskComponent.html":{},"components/RecurringTaskComponent.html":{},"components/TaskFormComponent.html":{}}}],["disablecompletebutton",{"_index":397,"title":{},"body":{"components/ButtonBarComponent.html":{},"components/ButtonsComponent.html":{}}}],["disabledeletebutton",{"_index":398,"title":{},"body":{"components/ButtonBarComponent.html":{},"components/ButtonsComponent.html":{}}}],["disableeditbutton",{"_index":399,"title":{},"body":{"components/ButtonBarComponent.html":{},"components/ButtonsComponent.html":{}}}],["disk",{"_index":1694,"title":{},"body":{"index.html":{}}}],["display",{"_index":74,"title":{},"body":{"components/AboutComponent.html":{},"components/ButtonsComponent.html":{},"components/CompleteTaskComponent.html":{},"components/CompleteTasksTableComponent.html":{},"components/ConfirmDeleteTaskComponent.html":{},"components/EditTaskComponent.html":{},"components/HeaderComponent.html":{},"injectables/HttpService.html":{},"components/ListItemComponent.html":{},"injectables/LoaderService.html":{},"interfaces/LoaderState.html":{},"injectables/MatPaginatorCustom.html":{},"components/PendingTasksTableComponent.html":{},"index.html":{}}}],["displayscrolltotop",{"_index":25,"title":{},"body":{"components/AboutComponent.html":{}}}],["distinctuntilchang",{"_index":1432,"title":{},"body":{"components/TasksFilterComponent.html":{}}}],["div",{"_index":62,"title":{},"body":{"components/AboutComponent.html":{}}}],["dive",{"_index":1778,"title":{},"body":{"index.html":{}}}],["divid",{"_index":1604,"title":{},"body":{"index.html":{}}}],["doc",{"_index":1738,"title":{},"body":{"index.html":{}}}],["docbuilt",{"_index":1740,"title":{},"body":{"index.html":{}}}],["docker",{"_index":1613,"title":{},"body":{"index.html":{}}}],["document",{"_index":1526,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["document.queryselector",{"_index":101,"title":{},"body":{"components/AboutComponent.html":{}}}],["doesn't",{"_index":550,"title":{},"body":{"components/CompleteTaskComponent.html":{}}}],["dom",{"_index":5,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ButtonBarComponent.html":{},"components/ButtonsComponent.html":{},"components/CompleteTaskComponent.html":{},"components/CompleteTasksTableComponent.html":{},"components/ConfirmDeleteTaskComponent.html":{},"components/CreateTaskComponent.html":{},"components/EditTaskComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/ListItemComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PendingTasksTableComponent.html":{},"components/RecurringTaskComponent.html":{},"components/SidenavTasksComponent.html":{},"components/TaskFormComponent.html":{},"components/TasksComponent.html":{},"components/TasksFilterComponent.html":{}}}],["don't",{"_index":865,"title":{},"body":{"components/EditTaskComponent.html":{},"index.html":{}}}],["down",{"_index":178,"title":{},"body":{"components/AboutComponent.html":{}}}],["download",{"_index":1725,"title":{},"body":{"index.html":{}}}],["drift",{"_index":1671,"title":{},"body":{"index.html":{}}}],["driver",{"_index":1727,"title":{},"body":{"index.html":{}}}],["drop",{"_index":177,"title":{},"body":{"components/AboutComponent.html":{}}}],["dropdown",{"_index":1079,"title":{},"body":{"components/ListItemComponent.html":{},"components/TasksFilterComponent.html":{}}}],["due",{"_index":126,"title":{},"body":{"components/AboutComponent.html":{},"components/EditTaskComponent.html":{},"components/ListItemComponent.html":{},"components/SidenavTasksComponent.html":{},"classes/Task.html":{},"components/TaskFormComponent.html":{},"components/TasksFilterComponent.html":{},"index.html":{}}}],["duebutton",{"_index":956,"title":{},"body":{"components/HeaderComponent.html":{},"components/TasksFilterComponent.html":{}}}],["duedat",{"_index":748,"title":{},"body":{"components/CreateTaskComponent.html":{},"components/EditTaskComponent.html":{},"classes/Task.html":{},"components/TaskFormComponent.html":{}}}],["duedate.format('mm/dd/yyyi",{"_index":903,"title":{},"body":{"components/EditTaskComponent.html":{}}}],["duetodaybadg",{"_index":1221,"title":{},"body":{"components/SidenavTasksComponent.html":{}}}],["duetomorrowbadg",{"_index":1222,"title":{},"body":{"components/SidenavTasksComponent.html":{}}}],["dummi",{"_index":1355,"title":{},"body":{"components/TaskFormComponent.html":{}}}],["durat",{"_index":858,"title":{},"body":{"components/EditTaskComponent.html":{}}}],["dynam",{"_index":1582,"title":{},"body":{"dependencies.html":{}}}],["e2",{"_index":1620,"title":{},"body":{"index.html":{}}}],["e2e:headlessa",{"_index":1718,"title":{},"body":{"index.html":{}}}],["e2e:screenshotsif",{"_index":1732,"title":{},"body":{"index.html":{}}}],["e2ethi",{"_index":1715,"title":{},"body":{"index.html":{}}}],["each",{"_index":635,"title":{},"body":{"components/ConfirmDeleteTaskComponent.html":{},"injectables/ConsoleLoggerService.html":{},"modules/CoreModule.html":{},"components/SidenavTasksComponent.html":{},"modules/TasksModule.html":{},"index.html":{}}}],["easi",{"_index":960,"title":{},"body":{"components/HeaderComponent.html":{},"injectables/HttpService.html":{},"components/ListItemComponent.html":{}}}],["easili",{"_index":1017,"title":{},"body":{"injectables/HttpService.html":{}}}],["edg",{"_index":1723,"title":{},"body":{"index.html":{}}}],["edit",{"_index":251,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ButtonBarComponent.html":{},"components/ButtonsComponent.html":{},"components/CompleteTaskComponent.html":{},"components/CompleteTasksTableComponent.html":{},"components/ConfirmDeleteTaskComponent.html":{},"components/CreateTaskComponent.html":{},"components/EditTaskComponent.html":{},"modules/EditTaskModule.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/ListItemComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PendingTasksTableComponent.html":{},"components/RecurringTaskComponent.html":{},"components/SidenavTasksComponent.html":{},"components/TaskFormComponent.html":{},"modules/TasksButtonsModule.html":{},"components/TasksComponent.html":{},"components/TasksFilterComponent.html":{}}}],["editrecurringtaskform",{"_index":1180,"title":{},"body":{"components/RecurringTaskComponent.html":{}}}],["edittaskcompon",{"_index":250,"title":{"components/EditTaskComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ButtonBarComponent.html":{},"components/ButtonsComponent.html":{},"components/CompleteTaskComponent.html":{},"components/CompleteTasksTableComponent.html":{},"components/ConfirmDeleteTaskComponent.html":{},"components/CreateTaskComponent.html":{},"components/EditTaskComponent.html":{},"modules/EditTaskModule.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/ListItemComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PendingTasksTableComponent.html":{},"components/RecurringTaskComponent.html":{},"components/SidenavTasksComponent.html":{},"components/TaskFormComponent.html":{},"components/TasksComponent.html":{},"components/TasksFilterComponent.html":{},"modules/TasksRoutingModule.html":{},"coverage.html":{},"overview.html":{}}}],["edittaskmodul",{"_index":925,"title":{"modules/EditTaskModule.html":{}},"body":{"modules/EditTaskModule.html":{},"modules/TasksModule.html":{},"modules.html":{},"overview.html":{}}}],["element",{"_index":49,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ButtonBarComponent.html":{},"components/ButtonsComponent.html":{},"components/CompleteTaskComponent.html":{},"components/CompleteTasksTableComponent.html":{},"components/ConfirmDeleteTaskComponent.html":{},"components/CreateTaskComponent.html":{},"components/EditTaskComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/ListItemComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PendingTasksTableComponent.html":{},"components/RecurringTaskComponent.html":{},"components/SidenavTasksComponent.html":{},"components/TaskFormComponent.html":{},"components/TasksComponent.html":{},"components/TasksFilterComponent.html":{},"index.html":{}}}],["element.scrollintoview({behavior:'smooth",{"_index":104,"title":{},"body":{"components/AboutComponent.html":{}}}],["elementref",{"_index":64,"title":{},"body":{"components/AboutComponent.html":{},"components/TasksFilterComponent.html":{}}}],["emit",{"_index":429,"title":{},"body":{"components/ButtonBarComponent.html":{},"components/ButtonsComponent.html":{},"components/CompleteTaskComponent.html":{},"components/ConfirmDeleteTaskComponent.html":{},"components/EditTaskComponent.html":{},"components/RecurringTaskComponent.html":{},"components/TaskFormComponent.html":{},"components/TasksFilterComponent.html":{}}}],["emitt",{"_index":629,"title":{},"body":{"components/ConfirmDeleteTaskComponent.html":{}}}],["empti",{"_index":1656,"title":{},"body":{"index.html":{}}}],["emul",{"_index":152,"title":{},"body":{"components/AboutComponent.html":{},"index.html":{}}}],["enabl",{"_index":185,"title":{},"body":{"components/AboutComponent.html":{},"components/ButtonBarComponent.html":{},"components/ButtonsComponent.html":{},"components/CreateTaskComponent.html":{},"components/EditTaskComponent.html":{},"components/TaskFormComponent.html":{}}}],["enablecreatebutton",{"_index":729,"title":{},"body":{"components/CreateTaskComponent.html":{}}}],["enableupdatebutton",{"_index":772,"title":{},"body":{"components/EditTaskComponent.html":{}}}],["end",{"_index":186,"title":{},"body":{"components/AboutComponent.html":{},"components/EditTaskComponent.html":{},"components/SidenavTasksComponent.html":{},"components/TaskFormComponent.html":{}}}],["endindex",{"_index":1165,"title":{},"body":{"injectables/MatPaginatorCustom.html":{}}}],["endsaft",{"_index":752,"title":{},"body":{"components/CreateTaskComponent.html":{},"classes/Task.html":{}}}],["enhanc",{"_index":136,"title":{},"body":{"components/AboutComponent.html":{}}}],["enjoy",{"_index":1768,"title":{},"body":{"index.html":{}}}],["enter",{"_index":171,"title":{},"body":{"components/AboutComponent.html":{},"components/CompleteTaskComponent.html":{},"components/TaskFormComponent.html":{},"components/TasksFilterComponent.html":{}}}],["entir",{"_index":1775,"title":{},"body":{"index.html":{}}}],["entiti",{"_index":1753,"title":{},"body":{"index.html":{}}}],["entrycompon",{"_index":287,"title":{},"body":{"modules/AboutModule.html":{},"modules/AppModule.html":{},"modules/CompleteTaskModule.html":{},"modules/ConfirmDeleteTaskModule.html":{},"modules/CreateTaskModule.html":{},"modules/EditTaskModule.html":{},"modules/FooterModule.html":{},"modules/HeaderModule.html":{},"modules/SidenavTasksModule.html":{},"modules/TasksFilterModule.html":{},"modules/TasksTableModule.html":{}}}],["environ",{"_index":1569,"title":{},"body":{"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["er",{"_index":1754,"title":{},"body":{"index.html":{}}}],["error",{"_index":683,"title":{},"body":{"injectables/ConsoleLoggerService.html":{},"components/EditTaskComponent.html":{},"classes/Logger.html":{},"injectables/LoggerService.html":{},"components/TaskFormComponent.html":{}}}],["error('coremodul",{"_index":716,"title":{},"body":{"modules/CoreModule.html":{}}}],["even",{"_index":870,"title":{},"body":{"components/EditTaskComponent.html":{},"index.html":{}}}],["event",{"_index":60,"title":{},"body":{"components/AboutComponent.html":{},"components/ButtonBarComponent.html":{},"components/ButtonsComponent.html":{},"components/CompleteTaskComponent.html":{},"components/ConfirmDeleteTaskComponent.html":{},"components/EditTaskComponent.html":{},"components/RecurringTaskComponent.html":{},"components/SidenavTasksComponent.html":{},"components/TaskFormComponent.html":{},"components/TasksFilterComponent.html":{},"injectables/UtilsService.html":{}}}],["event.stoppropag",{"_index":492,"title":{},"body":{"components/ButtonsComponent.html":{}}}],["eventemitt",{"_index":430,"title":{},"body":{"components/ButtonBarComponent.html":{},"components/ButtonsComponent.html":{},"components/CompleteTaskComponent.html":{},"components/ConfirmDeleteTaskComponent.html":{},"components/CreateTaskComponent.html":{},"components/EditTaskComponent.html":{},"components/RecurringTaskComponent.html":{},"components/TaskFormComponent.html":{},"components/TasksFilterComponent.html":{}}}],["exampl",{"_index":1308,"title":{},"body":{"components/TaskFormComponent.html":{}}}],["excit",{"_index":1765,"title":{},"body":{"index.html":{}}}],["execut",{"_index":663,"title":{},"body":{"injectables/ConsoleLoggerService.html":{},"index.html":{}}}],["exist",{"_index":770,"title":{},"body":{"components/EditTaskComponent.html":{},"components/PageNotFoundComponent.html":{}}}],["expand",{"_index":974,"title":{},"body":{"components/HeaderComponent.html":{},"components/ListItemComponent.html":{},"components/SidenavTasksComponent.html":{},"injectables/UtilsService.html":{},"miscellaneous/typealiases.html":{}}}],["expect",{"_index":1179,"title":{},"body":{"components/RecurringTaskComponent.html":{}}}],["export",{"_index":81,"title":{},"body":{"components/AboutComponent.html":{},"modules/AboutModule.html":{},"modules/AboutRoutingModule.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ButtonBarComponent.html":{},"components/ButtonsComponent.html":{},"components/CompleteTaskComponent.html":{},"modules/CompleteTaskModule.html":{},"components/CompleteTasksTableComponent.html":{},"components/ConfirmDeleteTaskComponent.html":{},"modules/ConfirmDeleteTaskModule.html":{},"injectables/ConsoleLoggerService.html":{},"modules/CoreModule.html":{},"components/CreateTaskComponent.html":{},"modules/CreateTaskModule.html":{},"components/EditTaskComponent.html":{},"modules/EditTaskModule.html":{},"components/FooterComponent.html":{},"modules/FooterModule.html":{},"components/HeaderComponent.html":{},"modules/HeaderModule.html":{},"injectables/HttpService.html":{},"components/ListItemComponent.html":{},"injectables/LoaderService.html":{},"interfaces/LoaderState.html":{},"classes/Logger.html":{},"injectables/LoggerService.html":{},"injectables/MatPaginatorCustom.html":{},"components/PageNotFoundComponent.html":{},"components/PendingTasksTableComponent.html":{},"components/RecurringTaskComponent.html":{},"components/SidenavTasksComponent.html":{},"modules/SidenavTasksModule.html":{},"classes/Task.html":{},"components/TaskFormComponent.html":{},"modules/TaskFormModule.html":{},"modules/TasksButtonBarModule.html":{},"modules/TasksButtonsModule.html":{},"components/TasksComponent.html":{},"modules/TasksDialogModule.html":{},"components/TasksFilterComponent.html":{},"modules/TasksFilterModule.html":{},"modules/TasksModule.html":{},"modules/TasksRoutingModule.html":{},"modules/TasksTableModule.html":{},"injectables/UtilsService.html":{},"overview.html":{}}}],["express",{"_index":1606,"title":{},"body":{"index.html":{}}}],["extend",{"_index":394,"title":{},"body":{"components/ButtonBarComponent.html":{},"injectables/HttpService.html":{},"injectables/MatPaginatorCustom.html":{}}}],["extens",{"_index":1157,"title":{},"body":{"injectables/MatPaginatorCustom.html":{}}}],["f",{"_index":102,"title":{},"body":{"components/AboutComponent.html":{}}}],["fa",{"_index":810,"title":{},"body":{"components/EditTaskComponent.html":{}}}],["faangleup",{"_index":304,"title":{},"body":{"modules/AboutModule.html":{},"modules/TasksTableModule.html":{}}}],["faarrowleft",{"_index":1392,"title":{},"body":{"modules/TasksButtonBarModule.html":{},"modules/TasksButtonsModule.html":{}}}],["fabar",{"_index":1002,"title":{},"body":{"modules/HeaderModule.html":{}}}],["facheck",{"_index":610,"title":{},"body":{"modules/CompleteTaskModule.html":{},"modules/EditTaskModule.html":{},"modules/TasksButtonBarModule.html":{},"modules/TasksButtonsModule.html":{},"modules/TasksTableModule.html":{}}}],["fachecksquar",{"_index":608,"title":{},"body":{"modules/CompleteTaskModule.html":{},"modules/EditTaskModule.html":{},"modules/TasksButtonBarModule.html":{},"modules/TasksButtonsModule.html":{},"modules/TasksTableModule.html":{}}}],["faclipboardcheck",{"_index":1276,"title":{},"body":{"modules/SidenavTasksModule.html":{}}}],["faclipboardlist",{"_index":1003,"title":{},"body":{"modules/HeaderModule.html":{},"modules/SidenavTasksModule.html":{}}}],["faedit",{"_index":938,"title":{},"body":{"modules/EditTaskModule.html":{},"modules/TasksButtonBarModule.html":{},"modules/TasksButtonsModule.html":{},"modules/TasksTableModule.html":{}}}],["fahourglass",{"_index":1275,"title":{},"body":{"modules/SidenavTasksModule.html":{}}}],["fahourglassend",{"_index":1277,"title":{},"body":{"modules/SidenavTasksModule.html":{}}}],["fahourglasshalf",{"_index":1278,"title":{},"body":{"modules/SidenavTasksModule.html":{}}}],["fahourglassstart",{"_index":1279,"title":{},"body":{"modules/SidenavTasksModule.html":{}}}],["fail",{"_index":1734,"title":{},"body":{"index.html":{}}}],["fals",{"_index":76,"title":{},"body":{"components/AboutComponent.html":{},"components/ButtonsComponent.html":{},"components/CompleteTaskComponent.html":{},"components/CreateTaskComponent.html":{},"components/EditTaskComponent.html":{},"components/HeaderComponent.html":{},"injectables/LoaderService.html":{},"interfaces/LoaderState.html":{},"components/RecurringTaskComponent.html":{},"components/SidenavTasksComponent.html":{},"classes/Task.html":{},"components/TaskFormComponent.html":{},"injectables/UtilsService.html":{},"miscellaneous/variables.html":{}}}],["fapast",{"_index":765,"title":{},"body":{"modules/CreateTaskModule.html":{},"modules/EditTaskModule.html":{},"modules/SidenavTasksModule.html":{},"modules/TasksButtonBarModule.html":{},"modules/TasksButtonsModule.html":{}}}],["far",{"_index":809,"title":{},"body":{"components/EditTaskComponent.html":{}}}],["fasearch",{"_index":1449,"title":{},"body":{"modules/TasksFilterModule.html":{}}}],["fatim",{"_index":1450,"title":{},"body":{"modules/TasksFilterModule.html":{}}}],["fatrash",{"_index":652,"title":{},"body":{"modules/ConfirmDeleteTaskModule.html":{},"modules/EditTaskModule.html":{},"modules/TasksButtonBarModule.html":{},"modules/TasksButtonsModule.html":{},"modules/TasksTableModule.html":{}}}],["favorit",{"_index":1714,"title":{},"body":{"index.html":{}}}],["featur",{"_index":1745,"title":{},"body":{"index.html":{}}}],["few",{"_index":1637,"title":{},"body":{"index.html":{}}}],["field",{"_index":183,"title":{},"body":{"components/AboutComponent.html":{},"components/CompleteTaskComponent.html":{},"components/TaskFormComponent.html":{}}}],["file",{"_index":7,"title":{},"body":{"components/AboutComponent.html":{},"modules/AboutModule.html":{},"modules/AboutRoutingModule.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ButtonBarComponent.html":{},"components/ButtonsComponent.html":{},"components/CompleteTaskComponent.html":{},"modules/CompleteTaskModule.html":{},"components/CompleteTasksTableComponent.html":{},"components/ConfirmDeleteTaskComponent.html":{},"modules/ConfirmDeleteTaskModule.html":{},"injectables/ConsoleLoggerService.html":{},"modules/CoreModule.html":{},"components/CreateTaskComponent.html":{},"modules/CreateTaskModule.html":{},"components/EditTaskComponent.html":{},"modules/EditTaskModule.html":{},"components/FooterComponent.html":{},"modules/FooterModule.html":{},"components/HeaderComponent.html":{},"modules/HeaderModule.html":{},"injectables/HttpService.html":{},"components/ListItemComponent.html":{},"injectables/LoaderService.html":{},"interfaces/LoaderState.html":{},"classes/Logger.html":{},"injectables/LoggerService.html":{},"injectables/MatPaginatorCustom.html":{},"components/PageNotFoundComponent.html":{},"components/PendingTasksTableComponent.html":{},"components/RecurringTaskComponent.html":{},"components/SidenavTasksComponent.html":{},"modules/SidenavTasksModule.html":{},"classes/Task.html":{},"components/TaskFormComponent.html":{},"modules/TaskFormModule.html":{},"modules/TasksButtonBarModule.html":{},"modules/TasksButtonsModule.html":{},"components/TasksComponent.html":{},"modules/TasksDialogModule.html":{},"components/TasksFilterComponent.html":{},"modules/TasksFilterModule.html":{},"modules/TasksModule.html":{},"modules/TasksRoutingModule.html":{},"modules/TasksTableModule.html":{},"injectables/UtilsService.html":{},"coverage.html":{},"index.html":{}}}],["fill",{"_index":191,"title":{},"body":{"components/AboutComponent.html":{}}}],["filter",{"_index":116,"title":{},"body":{"components/AboutComponent.html":{},"components/ListItemComponent.html":{},"components/SidenavTasksComponent.html":{},"components/TasksFilterComponent.html":{},"modules/TasksFilterModule.html":{},"index.html":{}}}],["filter'},{'nam",{"_index":270,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ButtonBarComponent.html":{},"components/ButtonsComponent.html":{},"components/CompleteTaskComponent.html":{},"components/CompleteTasksTableComponent.html":{},"components/ConfirmDeleteTaskComponent.html":{},"components/CreateTaskComponent.html":{},"components/EditTaskComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/ListItemComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PendingTasksTableComponent.html":{},"components/RecurringTaskComponent.html":{},"components/SidenavTasksComponent.html":{},"components/TaskFormComponent.html":{},"components/TasksComponent.html":{},"components/TasksFilterComponent.html":{}}}],["filter(ev",{"_index":1247,"title":{},"body":{"components/SidenavTasksComponent.html":{}}}],["filter.compon",{"_index":986,"title":{},"body":{"components/HeaderComponent.html":{},"modules/TasksFilterModule.html":{}}}],["filter.component.css",{"_index":1412,"title":{},"body":{"components/TasksFilterComponent.html":{}}}],["filter.component.html",{"_index":1413,"title":{},"body":{"components/TasksFilterComponent.html":{}}}],["filter.component.t",{"_index":1408,"title":{},"body":{"components/TasksFilterComponent.html":{},"coverage.html":{}}}],["filter.component.ts:24",{"_index":1429,"title":{},"body":{"components/TasksFilterComponent.html":{}}}],["filter.component.ts:26",{"_index":1428,"title":{},"body":{"components/TasksFilterComponent.html":{}}}],["filter.component.ts:28",{"_index":1417,"title":{},"body":{"components/TasksFilterComponent.html":{}}}],["filter.component.ts:38",{"_index":1418,"title":{},"body":{"components/TasksFilterComponent.html":{}}}],["filter.component.ts:46",{"_index":1421,"title":{},"body":{"components/TasksFilterComponent.html":{}}}],["filter.component.ts:53",{"_index":1422,"title":{},"body":{"components/TasksFilterComponent.html":{}}}],["filter.component.ts:66",{"_index":1419,"title":{},"body":{"components/TasksFilterComponent.html":{}}}],["filter.component.ts:86",{"_index":1423,"title":{},"body":{"components/TasksFilterComponent.html":{}}}],["filter.modul",{"_index":1006,"title":{},"body":{"modules/HeaderModule.html":{}}}],["filter.module.t",{"_index":1448,"title":{},"body":{"modules/TasksFilterModule.html":{}}}],["filter/search",{"_index":1411,"title":{},"body":{"components/TasksFilterComponent.html":{}}}],["final",{"_index":1068,"title":{},"body":{"injectables/HttpService.html":{}}}],["find",{"_index":829,"title":{},"body":{"components/EditTaskComponent.html":{}}}],["finish",{"_index":193,"title":{},"body":{"components/AboutComponent.html":{}}}],["first",{"_index":423,"title":{},"body":{"components/ButtonBarComponent.html":{},"index.html":{}}}],["fix",{"_index":1684,"title":{},"body":{"index.html":{}}}],["fixth",{"_index":1686,"title":{},"body":{"index.html":{}}}],["flexlayoutmodul",{"_index":293,"title":{},"body":{"modules/AboutModule.html":{},"modules/CompleteTaskModule.html":{},"modules/ConfirmDeleteTaskModule.html":{},"modules/CoreModule.html":{},"modules/CreateTaskModule.html":{},"modules/EditTaskModule.html":{},"modules/FooterModule.html":{},"modules/HeaderModule.html":{},"modules/SidenavTasksModule.html":{},"modules/TaskFormModule.html":{},"modules/TasksButtonBarModule.html":{},"modules/TasksButtonsModule.html":{},"modules/TasksFilterModule.html":{},"modules/TasksModule.html":{},"modules/TasksTableModule.html":{}}}],["follow",{"_index":1307,"title":{},"body":{"components/TaskFormComponent.html":{},"index.html":{}}}],["font",{"_index":1589,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["fontawesom",{"_index":298,"title":{},"body":{"modules/AboutModule.html":{},"modules/CompleteTaskModule.html":{},"modules/ConfirmDeleteTaskModule.html":{},"modules/CreateTaskModule.html":{},"modules/EditTaskModule.html":{},"modules/HeaderModule.html":{},"modules/SidenavTasksModule.html":{},"modules/TasksButtonBarModule.html":{},"modules/TasksButtonsModule.html":{},"modules/TasksFilterModule.html":{},"modules/TasksTableModule.html":{},"dependencies.html":{}}}],["fontawesomemodul",{"_index":299,"title":{},"body":{"modules/AboutModule.html":{},"modules/CompleteTaskModule.html":{},"modules/ConfirmDeleteTaskModule.html":{},"modules/CreateTaskModule.html":{},"modules/EditTaskModule.html":{},"modules/HeaderModule.html":{},"modules/SidenavTasksModule.html":{},"modules/TasksButtonBarModule.html":{},"modules/TasksButtonsModule.html":{},"modules/TasksFilterModule.html":{},"modules/TasksTableModule.html":{}}}],["footer",{"_index":322,"title":{},"body":{"components/AppComponent.html":{},"components/FooterComponent.html":{},"modules/FooterModule.html":{},"components/SidenavTasksComponent.html":{}}}],["footer'},{'nam",{"_index":253,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ButtonBarComponent.html":{},"components/ButtonsComponent.html":{},"components/CompleteTaskComponent.html":{},"components/CompleteTasksTableComponent.html":{},"components/ConfirmDeleteTaskComponent.html":{},"components/CreateTaskComponent.html":{},"components/EditTaskComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/ListItemComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PendingTasksTableComponent.html":{},"components/RecurringTaskComponent.html":{},"components/SidenavTasksComponent.html":{},"components/TaskFormComponent.html":{},"components/TasksComponent.html":{},"components/TasksFilterComponent.html":{}}}],["footer.compon",{"_index":953,"title":{},"body":{"modules/FooterModule.html":{}}}],["footer.component.css",{"_index":946,"title":{},"body":{"components/FooterComponent.html":{}}}],["footer.component.html",{"_index":947,"title":{},"body":{"components/FooterComponent.html":{}}}],["footer/footer.modul",{"_index":370,"title":{},"body":{"modules/AppModule.html":{}}}],["footercompon",{"_index":252,"title":{"components/FooterComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ButtonBarComponent.html":{},"components/ButtonsComponent.html":{},"components/CompleteTaskComponent.html":{},"components/CompleteTasksTableComponent.html":{},"components/ConfirmDeleteTaskComponent.html":{},"components/CreateTaskComponent.html":{},"components/EditTaskComponent.html":{},"components/FooterComponent.html":{},"modules/FooterModule.html":{},"components/HeaderComponent.html":{},"components/ListItemComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PendingTasksTableComponent.html":{},"components/RecurringTaskComponent.html":{},"components/SidenavTasksComponent.html":{},"components/TaskFormComponent.html":{},"components/TasksComponent.html":{},"components/TasksFilterComponent.html":{},"coverage.html":{},"overview.html":{}}}],["footermodul",{"_index":355,"title":{"modules/FooterModule.html":{}},"body":{"modules/AppModule.html":{},"modules/FooterModule.html":{},"modules.html":{},"overview.html":{}}}],["form",{"_index":180,"title":{},"body":{"components/AboutComponent.html":{},"components/CompleteTaskComponent.html":{},"components/CreateTaskComponent.html":{},"components/EditTaskComponent.html":{},"components/RecurringTaskComponent.html":{},"components/TaskFormComponent.html":{},"modules/TaskFormModule.html":{},"components/TasksFilterComponent.html":{}}}],["form'},{'nam",{"_index":267,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ButtonBarComponent.html":{},"components/ButtonsComponent.html":{},"components/CompleteTaskComponent.html":{},"components/CompleteTasksTableComponent.html":{},"components/ConfirmDeleteTaskComponent.html":{},"components/CreateTaskComponent.html":{},"components/EditTaskComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/ListItemComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PendingTasksTableComponent.html":{},"components/RecurringTaskComponent.html":{},"components/SidenavTasksComponent.html":{},"components/TaskFormComponent.html":{},"components/TasksComponent.html":{},"components/TasksFilterComponent.html":{}}}],["form.compon",{"_index":742,"title":{},"body":{"components/CreateTaskComponent.html":{},"components/EditTaskComponent.html":{},"modules/TaskFormModule.html":{}}}],["form.component.css",{"_index":1309,"title":{},"body":{"components/TaskFormComponent.html":{}}}],["form.component.html",{"_index":1310,"title":{},"body":{"components/TaskFormComponent.html":{}}}],["form.component.t",{"_index":1306,"title":{},"body":{"components/TaskFormComponent.html":{},"coverage.html":{}}}],["form.component.ts:106",{"_index":1328,"title":{},"body":{"components/TaskFormComponent.html":{}}}],["form.component.ts:113",{"_index":1329,"title":{},"body":{"components/TaskFormComponent.html":{}}}],["form.component.ts:197",{"_index":1331,"title":{},"body":{"components/TaskFormComponent.html":{}}}],["form.component.ts:34",{"_index":1320,"title":{},"body":{"components/TaskFormComponent.html":{}}}],["form.component.ts:36",{"_index":1318,"title":{},"body":{"components/TaskFormComponent.html":{}}}],["form.component.ts:38",{"_index":1319,"title":{},"body":{"components/TaskFormComponent.html":{}}}],["form.component.ts:40",{"_index":1332,"title":{},"body":{"components/TaskFormComponent.html":{}}}],["form.component.ts:42",{"_index":1334,"title":{},"body":{"components/TaskFormComponent.html":{}}}],["form.component.ts:44",{"_index":1337,"title":{},"body":{"components/TaskFormComponent.html":{}}}],["form.component.ts:46",{"_index":1333,"title":{},"body":{"components/TaskFormComponent.html":{}}}],["form.component.ts:48",{"_index":1335,"title":{},"body":{"components/TaskFormComponent.html":{}}}],["form.component.ts:50",{"_index":1317,"title":{},"body":{"components/TaskFormComponent.html":{}}}],["form.component.ts:63",{"_index":1322,"title":{},"body":{"components/TaskFormComponent.html":{}}}],["form.component.ts:81",{"_index":1324,"title":{},"body":{"components/TaskFormComponent.html":{}}}],["form.component.ts:90",{"_index":1326,"title":{},"body":{"components/TaskFormComponent.html":{}}}],["form.get(property).dirti",{"_index":1345,"title":{},"body":{"components/TaskFormComponent.html":{}}}],["form.get(property).invalid",{"_index":1344,"title":{},"body":{"components/TaskFormComponent.html":{}}}],["form.get(property).touch",{"_index":1346,"title":{},"body":{"components/TaskFormComponent.html":{}}}],["form.modul",{"_index":767,"title":{},"body":{"modules/CreateTaskModule.html":{},"modules/EditTaskModule.html":{},"modules/TasksDialogModule.html":{}}}],["form.module.t",{"_index":1384,"title":{},"body":{"modules/TaskFormModule.html":{}}}],["formbuild",{"_index":517,"title":{},"body":{"components/CompleteTaskComponent.html":{},"components/RecurringTaskComponent.html":{},"components/TaskFormComponent.html":{}}}],["formdata",{"_index":1351,"title":{},"body":{"components/TaskFormComponent.html":{}}}],["formdata.statu",{"_index":1353,"title":{},"body":{"components/TaskFormComponent.html":{}}}],["formdata.value.descript",{"_index":912,"title":{},"body":{"components/EditTaskComponent.html":{}}}],["formdata.value.du",{"_index":914,"title":{},"body":{"components/EditTaskComponent.html":{}}}],["formdata.value.nam",{"_index":908,"title":{},"body":{"components/EditTaskComponent.html":{}}}],["formdata.value.prior",{"_index":910,"title":{},"body":{"components/EditTaskComponent.html":{}}}],["formgroup",{"_index":544,"title":{},"body":{"components/CompleteTaskComponent.html":{},"components/RecurringTaskComponent.html":{},"components/TaskFormComponent.html":{}}}],["formsmodul",{"_index":601,"title":{},"body":{"modules/CompleteTaskModule.html":{},"modules/ConfirmDeleteTaskModule.html":{},"modules/CreateTaskModule.html":{},"modules/EditTaskModule.html":{},"modules/TaskFormModule.html":{},"modules/TasksModule.html":{},"modules/TasksTableModule.html":{}}}],["formsvalid",{"_index":1374,"title":{},"body":{"components/TaskFormComponent.html":{}}}],["formvalid",{"_index":728,"title":{},"body":{"components/CreateTaskComponent.html":{},"components/EditTaskComponent.html":{},"components/TaskFormComponent.html":{}}}],["forroot",{"_index":723,"title":{},"body":{"modules/CoreModule.html":{},"modules/TasksModule.html":{}}}],["fortawesome/angular",{"_index":300,"title":{},"body":{"modules/AboutModule.html":{},"modules/CompleteTaskModule.html":{},"modules/ConfirmDeleteTaskModule.html":{},"modules/CreateTaskModule.html":{},"modules/EditTaskModule.html":{},"modules/HeaderModule.html":{},"modules/SidenavTasksModule.html":{},"modules/TasksButtonBarModule.html":{},"modules/TasksButtonsModule.html":{},"modules/TasksFilterModule.html":{},"modules/TasksTableModule.html":{},"dependencies.html":{}}}],["fortawesome/fontawesom",{"_index":301,"title":{},"body":{"modules/AboutModule.html":{},"modules/CompleteTaskModule.html":{},"modules/ConfirmDeleteTaskModule.html":{},"modules/CreateTaskModule.html":{},"modules/EditTaskModule.html":{},"modules/HeaderModule.html":{},"modules/SidenavTasksModule.html":{},"modules/TasksButtonBarModule.html":{},"modules/TasksButtonsModule.html":{},"modules/TasksFilterModule.html":{},"modules/TasksTableModule.html":{},"dependencies.html":{}}}],["fortawesome/fre",{"_index":305,"title":{},"body":{"modules/AboutModule.html":{},"modules/CompleteTaskModule.html":{},"modules/ConfirmDeleteTaskModule.html":{},"modules/CreateTaskModule.html":{},"modules/EditTaskModule.html":{},"modules/HeaderModule.html":{},"modules/SidenavTasksModule.html":{},"modules/TasksButtonBarModule.html":{},"modules/TasksButtonsModule.html":{},"modules/TasksFilterModule.html":{},"modules/TasksTableModule.html":{},"dependencies.html":{}}}],["found",{"_index":830,"title":{},"body":{"components/EditTaskComponent.html":{},"components/PageNotFoundComponent.html":{},"components/SidenavTasksComponent.html":{},"index.html":{}}}],["found'},{'nam",{"_index":260,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ButtonBarComponent.html":{},"components/ButtonsComponent.html":{},"components/CompleteTaskComponent.html":{},"components/CompleteTasksTableComponent.html":{},"components/ConfirmDeleteTaskComponent.html":{},"components/CreateTaskComponent.html":{},"components/EditTaskComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/ListItemComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PendingTasksTableComponent.html":{},"components/RecurringTaskComponent.html":{},"components/SidenavTasksComponent.html":{},"components/TaskFormComponent.html":{},"components/TasksComponent.html":{},"components/TasksFilterComponent.html":{}}}],["found.compon",{"_index":368,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["found.component.css",{"_index":1172,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["found.component.html",{"_index":1173,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["found.component.t",{"_index":1171,"title":{},"body":{"components/PageNotFoundComponent.html":{},"coverage.html":{}}}],["found/pag",{"_index":367,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/PageNotFoundComponent.html":{},"coverage.html":{}}}],["fragment",{"_index":47,"title":{},"body":{"components/AboutComponent.html":{}}}],["framework",{"_index":1759,"title":{},"body":{"index.html":{}}}],["frequenc",{"_index":1286,"title":{},"body":{"classes/Task.html":{}}}],["fromev",{"_index":1430,"title":{},"body":{"components/TasksFilterComponent.html":{}}}],["fromevent(this.taskfilterinput.nativeelement,'keyup",{"_index":1441,"title":{},"body":{"components/TasksFilterComponent.html":{}}}],["front",{"_index":1094,"title":{},"body":{"components/ListItemComponent.html":{}}}],["full",{"_index":380,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/TasksRoutingModule.html":{},"injectables/UtilsService.html":{},"index.html":{}}}],["fulli",{"_index":156,"title":{},"body":{"components/AboutComponent.html":{},"components/TasksFilterComponent.html":{},"index.html":{}}}],["fullscreendialogsub",{"_index":1486,"title":{},"body":{"injectables/UtilsService.html":{}}}],["fullscreendialogsub(dialogref",{"_index":1491,"title":{},"body":{"injectables/UtilsService.html":{}}}],["function",{"_index":137,"title":{},"body":{"components/AboutComponent.html":{},"injectables/ConsoleLoggerService.html":{},"injectables/MatPaginatorCustom.html":{},"components/TasksFilterComponent.html":{}}}],["futur",{"_index":555,"title":{},"body":{"components/CompleteTaskComponent.html":{}}}],["gave",{"_index":1776,"title":{},"body":{"index.html":{}}}],["gener",{"_index":1708,"title":{},"body":{"index.html":{}}}],["get",{"_index":1599,"title":{"index.html":{}},"body":{"index.html":{}}}],["get(url",{"_index":1032,"title":{},"body":{"injectables/HttpService.html":{}}}],["geterror",{"_index":684,"title":{},"body":{"injectables/ConsoleLoggerService.html":{}}}],["getformdata",{"_index":1315,"title":{},"body":{"components/TaskFormComponent.html":{}}}],["getformdata(form",{"_index":1325,"title":{},"body":{"components/TaskFormComponent.html":{}}}],["getinfo",{"_index":678,"title":{},"body":{"injectables/ConsoleLoggerService.html":{}}}],["getrangelabel",{"_index":1159,"title":{},"body":{"injectables/MatPaginatorCustom.html":{}}}],["getrequestoptionarg",{"_index":1021,"title":{},"body":{"injectables/HttpService.html":{}}}],["getrequestoptionargs(opt",{"_index":1034,"title":{},"body":{"injectables/HttpService.html":{}}}],["getrouteparamsfromchild",{"_index":1195,"title":{},"body":{"components/SidenavTasksComponent.html":{}}}],["getter",{"_index":659,"title":{},"body":{"injectables/ConsoleLoggerService.html":{}}}],["getwarn",{"_index":681,"title":{},"body":{"injectables/ConsoleLoggerService.html":{}}}],["git",{"_index":1628,"title":{},"body":{"index.html":{}}}],["github",{"_index":1758,"title":{},"body":{"index.html":{}}}],["given",{"_index":390,"title":{},"body":{"components/ButtonBarComponent.html":{},"components/CompleteTaskComponent.html":{},"injectables/ConsoleLoggerService.html":{},"components/EditTaskComponent.html":{},"injectables/HttpService.html":{},"components/RecurringTaskComponent.html":{},"components/SidenavTasksComponent.html":{},"components/TaskFormComponent.html":{},"injectables/UtilsService.html":{}}}],["go",{"_index":1773,"title":{},"body":{"index.html":{}}}],["goe",{"_index":787,"title":{},"body":{"components/EditTaskComponent.html":{}}}],["graph",{"_index":1779,"title":{},"body":{"modules.html":{}}}],["half",{"_index":899,"title":{},"body":{"components/EditTaskComponent.html":{},"components/SidenavTasksComponent.html":{}}}],["hammerj",{"_index":1592,"title":{},"body":{"dependencies.html":{}}}],["hand",{"_index":166,"title":{},"body":{"components/AboutComponent.html":{}}}],["handl",{"_index":57,"title":{},"body":{"components/AboutComponent.html":{},"components/EditTaskComponent.html":{},"injectables/LoaderService.html":{},"interfaces/LoaderState.html":{},"components/TaskFormComponent.html":{},"index.html":{}}}],["handset",{"_index":1744,"title":{},"body":{"index.html":{}}}],["header",{"_index":212,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/EditTaskComponent.html":{},"components/HeaderComponent.html":{},"modules/HeaderModule.html":{},"injectables/HttpService.html":{},"components/ListItemComponent.html":{},"components/SidenavTasksComponent.html":{}}}],["header'},{'nam",{"_index":255,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ButtonBarComponent.html":{},"components/ButtonsComponent.html":{},"components/CompleteTaskComponent.html":{},"components/CompleteTasksTableComponent.html":{},"components/ConfirmDeleteTaskComponent.html":{},"components/CreateTaskComponent.html":{},"components/EditTaskComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/ListItemComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PendingTasksTableComponent.html":{},"components/RecurringTaskComponent.html":{},"components/SidenavTasksComponent.html":{},"components/TaskFormComponent.html":{},"components/TasksComponent.html":{},"components/TasksFilterComponent.html":{}}}],["header.compon",{"_index":1005,"title":{},"body":{"modules/HeaderModule.html":{}}}],["header.component.css",{"_index":963,"title":{},"body":{"components/HeaderComponent.html":{}}}],["header.component.html",{"_index":964,"title":{},"body":{"components/HeaderComponent.html":{}}}],["header/header.modul",{"_index":371,"title":{},"body":{"modules/AppModule.html":{}}}],["headercompon",{"_index":254,"title":{"components/HeaderComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ButtonBarComponent.html":{},"components/ButtonsComponent.html":{},"components/CompleteTaskComponent.html":{},"components/CompleteTasksTableComponent.html":{},"components/ConfirmDeleteTaskComponent.html":{},"components/CreateTaskComponent.html":{},"components/EditTaskComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"modules/HeaderModule.html":{},"components/ListItemComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PendingTasksTableComponent.html":{},"components/RecurringTaskComponent.html":{},"components/SidenavTasksComponent.html":{},"components/TaskFormComponent.html":{},"components/TasksComponent.html":{},"components/TasksFilterComponent.html":{},"coverage.html":{},"overview.html":{}}}],["headermodul",{"_index":356,"title":{"modules/HeaderModule.html":{}},"body":{"modules/AppModule.html":{},"modules/HeaderModule.html":{},"modules.html":{},"overview.html":{}}}],["height",{"_index":1495,"title":{},"body":{"injectables/UtilsService.html":{}}}],["help",{"_index":1638,"title":{},"body":{"index.html":{}}}],["here",{"_index":872,"title":{},"body":{"components/EditTaskComponent.html":{},"index.html":{}}}],["hidden",{"_index":413,"title":{},"body":{"components/ButtonBarComponent.html":{},"components/ButtonsComponent.html":{},"components/HeaderComponent.html":{}}}],["hide",{"_index":393,"title":{},"body":{"components/ButtonBarComponent.html":{},"components/EditTaskComponent.html":{},"components/HeaderComponent.html":{},"injectables/HttpService.html":{},"injectables/LoaderService.html":{},"interfaces/LoaderState.html":{}}}],["hidecompletebutton",{"_index":400,"title":{},"body":{"components/ButtonBarComponent.html":{},"components/ButtonsComponent.html":{},"components/EditTaskComponent.html":{}}}],["hideeditbutton",{"_index":401,"title":{},"body":{"components/ButtonBarComponent.html":{},"components/ButtonsComponent.html":{}}}],["hideload",{"_index":1022,"title":{},"body":{"injectables/HttpService.html":{}}}],["hidepages",{"_index":402,"title":{},"body":{"components/ButtonBarComponent.html":{}}}],["high",{"_index":1302,"title":{},"body":{"classes/Task.html":{},"components/TaskFormComponent.html":{},"miscellaneous/typealiases.html":{}}}],["highlight",{"_index":1206,"title":{},"body":{"components/SidenavTasksComponent.html":{}}}],["highlightlistitem",{"_index":1196,"title":{},"body":{"components/SidenavTasksComponent.html":{}}}],["highlightlistitem(param",{"_index":1204,"title":{},"body":{"components/SidenavTasksComponent.html":{}}}],["hint",{"_index":506,"title":{},"body":{"components/CompleteTaskComponent.html":{}}}],["home",{"_index":1757,"title":{},"body":{"index.html":{}}}],["host",{"_index":1670,"title":{},"body":{"index.html":{}}}],["hostbind",{"_index":512,"title":{},"body":{"components/CompleteTaskComponent.html":{},"components/ConfirmDeleteTaskComponent.html":{},"components/CreateTaskComponent.html":{},"components/EditTaskComponent.html":{},"components/RecurringTaskComponent.html":{},"components/TaskFormComponent.html":{}}}],["hostbinding('class.mark",{"_index":565,"title":{},"body":{"components/CompleteTaskComponent.html":{},"components/ConfirmDeleteTaskComponent.html":{},"components/CreateTaskComponent.html":{},"components/EditTaskComponent.html":{},"components/RecurringTaskComponent.html":{},"components/TaskFormComponent.html":{}}}],["hourglass",{"_index":895,"title":{},"body":{"components/EditTaskComponent.html":{},"components/SidenavTasksComponent.html":{}}}],["html",{"_index":232,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ButtonBarComponent.html":{},"components/ButtonsComponent.html":{},"components/CompleteTaskComponent.html":{},"components/CompleteTasksTableComponent.html":{},"components/ConfirmDeleteTaskComponent.html":{},"components/CreateTaskComponent.html":{},"components/EditTaskComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/ListItemComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PendingTasksTableComponent.html":{},"components/RecurringTaskComponent.html":{},"components/SidenavTasksComponent.html":{},"components/TaskFormComponent.html":{},"components/TasksComponent.html":{},"components/TasksFilterComponent.html":{}}}],["http",{"_index":1008,"title":{},"body":{"injectables/HttpService.html":{}}}],["http://localhost:3000/api",{"_index":1047,"title":{},"body":{"injectables/HttpService.html":{}}}],["http://localhost:3000/api/task",{"_index":1702,"title":{},"body":{"index.html":{}}}],["http://localhost:4200",{"_index":1664,"title":{},"body":{"index.html":{}}}],["http:httpclient",{"_index":1053,"title":{},"body":{"injectables/HttpService.html":{}}}],["httpclient",{"_index":1028,"title":{},"body":{"injectables/HttpService.html":{}}}],["httpclientmodul",{"_index":703,"title":{},"body":{"modules/CoreModule.html":{}}}],["httpheader",{"_index":1048,"title":{},"body":{"injectables/HttpService.html":{}}}],["https://github.com/angular/angular/issues/6595",{"_index":98,"title":{},"body":{"components/AboutComponent.html":{}}}],["https://github.com/jonathan",{"_index":1629,"title":{},"body":{"index.html":{}}}],["https://medium.com/beauti",{"_index":1009,"title":{},"body":{"injectables/HttpService.html":{}}}],["https://robferguson.org/blog/2017/09/09/a",{"_index":1150,"title":{},"body":{"classes/Logger.html":{},"injectables/LoggerService.html":{}}}],["httpservic",{"_index":709,"title":{"injectables/HttpService.html":{}},"body":{"modules/CoreModule.html":{},"injectables/HttpService.html":{},"coverage.html":{}}}],["hwclock",{"_index":1675,"title":{},"body":{"index.html":{}}}],["icon",{"_index":307,"title":{},"body":{"modules/AboutModule.html":{},"modules/CompleteTaskModule.html":{},"modules/ConfirmDeleteTaskModule.html":{},"modules/CreateTaskModule.html":{},"components/EditTaskComponent.html":{},"modules/EditTaskModule.html":{},"components/HeaderComponent.html":{},"modules/HeaderModule.html":{},"components/ListItemComponent.html":{},"components/SidenavTasksComponent.html":{},"modules/SidenavTasksModule.html":{},"modules/TasksButtonBarModule.html":{},"modules/TasksButtonsModule.html":{},"modules/TasksFilterModule.html":{},"modules/TasksTableModule.html":{},"dependencies.html":{},"index.html":{}}}],["iconclass",{"_index":773,"title":{},"body":{"components/EditTaskComponent.html":{}}}],["id",{"_index":576,"title":{},"body":{"components/CompleteTaskComponent.html":{},"components/EditTaskComponent.html":{},"classes/Task.html":{}}}],["identifi",{"_index":1297,"title":{},"body":{"classes/Task.html":{},"coverage.html":{}}}],["if(!task.iscomplet",{"_index":846,"title":{},"body":{"components/EditTaskComponent.html":{}}}],["if(!this.task",{"_index":1354,"title":{},"body":{"components/TaskFormComponent.html":{}}}],["if(!this.task.iscomplet",{"_index":886,"title":{},"body":{"components/EditTaskComponent.html":{}}}],["if(!this.updateal",{"_index":881,"title":{},"body":{"components/EditTaskComponent.html":{}}}],["if(chang",{"_index":856,"title":{},"body":{"components/EditTaskComponent.html":{}}}],["if(duedate.isbefore(today",{"_index":891,"title":{},"body":{"components/EditTaskComponent.html":{}}}],["if(duedate.issame(today",{"_index":898,"title":{},"body":{"components/EditTaskComponent.html":{}}}],["if(duedate.issame(tomorrow",{"_index":901,"title":{},"body":{"components/EditTaskComponent.html":{}}}],["if(el",{"_index":103,"title":{},"body":{"components/AboutComponent.html":{}}}],["if(filt",{"_index":1265,"title":{},"body":{"components/SidenavTasksComponent.html":{}}}],["if(formvalid",{"_index":758,"title":{},"body":{"components/CreateTaskComponent.html":{}}}],["if(index",{"_index":641,"title":{},"body":{"components/ConfirmDeleteTaskComponent.html":{}}}],["if(isdevmod",{"_index":690,"title":{},"body":{"injectables/ConsoleLoggerService.html":{}}}],["if(ismediumscreen",{"_index":1519,"title":{},"body":{"injectables/UtilsService.html":{}}}],["if(isnan(id",{"_index":863,"title":{},"body":{"components/EditTaskComponent.html":{}}}],["if(next",{"_index":1249,"title":{},"body":{"components/SidenavTasksComponent.html":{}}}],["if(num",{"_index":1131,"title":{},"body":{"components/ListItemComponent.html":{}}}],["if(parentmodul",{"_index":714,"title":{},"body":{"modules/CoreModule.html":{}}}],["if(properti",{"_index":1341,"title":{},"body":{"components/TaskFormComponent.html":{}}}],["if(this.editrecurringtaskform.get('updateall').valu",{"_index":1185,"title":{},"body":{"components/RecurringTaskComponent.html":{}}}],["if(this.isexpand",{"_index":1253,"title":{},"body":{"components/SidenavTasksComponent.html":{}}}],["if(this.repeatpropertiesform.get(property).valu",{"_index":1367,"title":{},"body":{"components/TaskFormComponent.html":{}}}],["if(this.router.url.indexof('complet",{"_index":1266,"title":{},"body":{"components/SidenavTasksComponent.html":{}}}],["if(this.sidenavmenust",{"_index":992,"title":{},"body":{"components/HeaderComponent.html":{}}}],["if(this.task",{"_index":844,"title":{},"body":{"components/EditTaskComponent.html":{}}}],["if(this.task.iscomplet",{"_index":824,"title":{},"body":{"components/EditTaskComponent.html":{},"components/TaskFormComponent.html":{}}}],["if(this.tasks.length",{"_index":575,"title":{},"body":{"components/CompleteTaskComponent.html":{},"components/ConfirmDeleteTaskComponent.html":{}}}],["if(this.text",{"_index":1110,"title":{},"body":{"components/ListItemComponent.html":{}}}],["implement",{"_index":13,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/CompleteTaskComponent.html":{},"components/ConfirmDeleteTaskComponent.html":{},"injectables/ConsoleLoggerService.html":{},"components/CreateTaskComponent.html":{},"components/EditTaskComponent.html":{},"components/HeaderComponent.html":{},"components/ListItemComponent.html":{},"classes/Logger.html":{},"injectables/LoggerService.html":{},"components/RecurringTaskComponent.html":{},"components/SidenavTasksComponent.html":{},"components/TaskFormComponent.html":{},"components/TasksFilterComponent.html":{},"index.html":{}}}],["import",{"_index":77,"title":{},"body":{"components/AboutComponent.html":{},"modules/AboutModule.html":{},"modules/AboutRoutingModule.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ButtonBarComponent.html":{},"components/ButtonsComponent.html":{},"components/CompleteTaskComponent.html":{},"modules/CompleteTaskModule.html":{},"components/CompleteTasksTableComponent.html":{},"components/ConfirmDeleteTaskComponent.html":{},"modules/ConfirmDeleteTaskModule.html":{},"injectables/ConsoleLoggerService.html":{},"modules/CoreModule.html":{},"components/CreateTaskComponent.html":{},"modules/CreateTaskModule.html":{},"components/EditTaskComponent.html":{},"modules/EditTaskModule.html":{},"components/FooterComponent.html":{},"modules/FooterModule.html":{},"components/HeaderComponent.html":{},"modules/HeaderModule.html":{},"injectables/HttpService.html":{},"components/ListItemComponent.html":{},"injectables/LoaderService.html":{},"interfaces/LoaderState.html":{},"classes/Logger.html":{},"injectables/LoggerService.html":{},"injectables/MatPaginatorCustom.html":{},"components/PageNotFoundComponent.html":{},"components/PendingTasksTableComponent.html":{},"components/RecurringTaskComponent.html":{},"components/SidenavTasksComponent.html":{},"modules/SidenavTasksModule.html":{},"components/TaskFormComponent.html":{},"modules/TaskFormModule.html":{},"modules/TasksButtonBarModule.html":{},"modules/TasksButtonsModule.html":{},"components/TasksComponent.html":{},"modules/TasksDialogModule.html":{},"components/TasksFilterComponent.html":{},"modules/TasksFilterModule.html":{},"modules/TasksModule.html":{},"modules/TasksRoutingModule.html":{},"modules/TasksTableModule.html":{},"injectables/UtilsService.html":{}}}],["includ",{"_index":215,"title":{},"body":{"components/AboutComponent.html":{},"components/ButtonsComponent.html":{},"injectables/HttpService.html":{},"modules/TasksButtonsModule.html":{},"index.html":{}}}],["index",{"_index":22,"title":{"index.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ButtonBarComponent.html":{},"components/ButtonsComponent.html":{},"components/CompleteTaskComponent.html":{},"components/CompleteTasksTableComponent.html":{},"components/ConfirmDeleteTaskComponent.html":{},"injectables/ConsoleLoggerService.html":{},"components/CreateTaskComponent.html":{},"components/EditTaskComponent.html":{},"components/HeaderComponent.html":{},"injectables/HttpService.html":{},"components/ListItemComponent.html":{},"injectables/LoaderService.html":{},"interfaces/LoaderState.html":{},"classes/Logger.html":{},"injectables/LoggerService.html":{},"injectables/MatPaginatorCustom.html":{},"components/PendingTasksTableComponent.html":{},"components/RecurringTaskComponent.html":{},"components/SidenavTasksComponent.html":{},"classes/Task.html":{},"components/TaskFormComponent.html":{},"components/TasksFilterComponent.html":{},"injectables/UtilsService.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["index.html",{"_index":1713,"title":{},"body":{"index.html":{}}}],["index:numb",{"_index":639,"title":{},"body":{"components/ConfirmDeleteTaskComponent.html":{}}}],["indic",{"_index":71,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ButtonBarComponent.html":{},"components/ButtonsComponent.html":{},"components/CreateTaskComponent.html":{},"components/EditTaskComponent.html":{},"components/HeaderComponent.html":{},"injectables/HttpService.html":{},"components/ListItemComponent.html":{},"injectables/LoaderService.html":{},"interfaces/LoaderState.html":{},"components/SidenavTasksComponent.html":{},"components/TaskFormComponent.html":{},"components/TasksFilterComponent.html":{},"index.html":{}}}],["individu",{"_index":633,"title":{},"body":{"components/ConfirmDeleteTaskComponent.html":{},"index.html":{}}}],["info",{"_index":2,"title":{},"body":{"components/AboutComponent.html":{},"modules/AboutModule.html":{},"modules/AboutRoutingModule.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ButtonBarComponent.html":{},"components/ButtonsComponent.html":{},"components/CompleteTaskComponent.html":{},"modules/CompleteTaskModule.html":{},"components/CompleteTasksTableComponent.html":{},"components/ConfirmDeleteTaskComponent.html":{},"modules/ConfirmDeleteTaskModule.html":{},"injectables/ConsoleLoggerService.html":{},"modules/CoreModule.html":{},"components/CreateTaskComponent.html":{},"modules/CreateTaskModule.html":{},"components/EditTaskComponent.html":{},"modules/EditTaskModule.html":{},"components/FooterComponent.html":{},"modules/FooterModule.html":{},"components/HeaderComponent.html":{},"modules/HeaderModule.html":{},"injectables/HttpService.html":{},"components/ListItemComponent.html":{},"injectables/LoaderService.html":{},"interfaces/LoaderState.html":{},"classes/Logger.html":{},"injectables/LoggerService.html":{},"injectables/MatPaginatorCustom.html":{},"components/PageNotFoundComponent.html":{},"components/PendingTasksTableComponent.html":{},"components/RecurringTaskComponent.html":{},"components/SidenavTasksComponent.html":{},"modules/SidenavTasksModule.html":{},"classes/Task.html":{},"components/TaskFormComponent.html":{},"modules/TaskFormModule.html":{},"modules/TasksButtonBarModule.html":{},"modules/TasksButtonsModule.html":{},"components/TasksComponent.html":{},"modules/TasksDialogModule.html":{},"components/TasksFilterComponent.html":{},"modules/TasksFilterModule.html":{},"modules/TasksModule.html":{},"modules/TasksRoutingModule.html":{},"modules/TasksTableModule.html":{},"injectables/UtilsService.html":{}}}],["inid",{"_index":804,"title":{},"body":{"components/EditTaskComponent.html":{}}}],["initi",{"_index":45,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/CompleteTaskComponent.html":{},"components/ConfirmDeleteTaskComponent.html":{},"components/CreateTaskComponent.html":{},"components/EditTaskComponent.html":{},"components/HeaderComponent.html":{},"components/ListItemComponent.html":{},"components/RecurringTaskComponent.html":{},"components/SidenavTasksComponent.html":{},"components/TaskFormComponent.html":{},"components/TasksFilterComponent.html":{},"index.html":{}}}],["initiconclass",{"_index":778,"title":{},"body":{"components/EditTaskComponent.html":{}}}],["initpagin",{"_index":779,"title":{},"body":{"components/EditTaskComponent.html":{}}}],["inject",{"_index":559,"title":{"injectables/ConsoleLoggerService.html":{},"injectables/HttpService.html":{},"injectables/LoaderService.html":{},"injectables/LoggerService.html":{},"injectables/MatPaginatorCustom.html":{},"injectables/UtilsService.html":{}},"body":{"components/CompleteTaskComponent.html":{},"components/ConfirmDeleteTaskComponent.html":{},"injectables/ConsoleLoggerService.html":{},"injectables/HttpService.html":{},"injectables/LoaderService.html":{},"interfaces/LoaderState.html":{},"classes/Logger.html":{},"injectables/LoggerService.html":{},"injectables/MatPaginatorCustom.html":{},"components/RecurringTaskComponent.html":{},"injectables/UtilsService.html":{},"coverage.html":{},"overview.html":{}}}],["inject(mat_dialog_data",{"_index":567,"title":{},"body":{"components/CompleteTaskComponent.html":{},"components/ConfirmDeleteTaskComponent.html":{},"components/RecurringTaskComponent.html":{}}}],["input",{"_index":144,"title":{},"body":{"components/AboutComponent.html":{},"components/ButtonBarComponent.html":{},"components/ButtonsComponent.html":{},"components/ListItemComponent.html":{},"components/TaskFormComponent.html":{},"components/TasksFilterComponent.html":{}}}],["insert",{"_index":1015,"title":{},"body":{"injectables/HttpService.html":{},"index.html":{}}}],["instal",{"_index":1634,"title":{},"body":{"index.html":{}}}],["instanc",{"_index":719,"title":{},"body":{"modules/CoreModule.html":{},"modules/TasksModule.html":{}}}],["instead",{"_index":1693,"title":{},"body":{"index.html":{}}}],["intercept",{"_index":1023,"title":{},"body":{"injectables/HttpService.html":{}}}],["intercept(observ",{"_index":1038,"title":{},"body":{"injectables/HttpService.html":{}}}],["interfac",{"_index":1140,"title":{"interfaces/LoaderState.html":{}},"body":{"injectables/LoaderService.html":{},"interfaces/LoaderState.html":{},"classes/Logger.html":{},"injectables/LoggerService.html":{},"coverage.html":{},"overview.html":{}}}],["invalid",{"_index":530,"title":{},"body":{"components/CompleteTaskComponent.html":{},"components/TaskFormComponent.html":{}}}],["invokeconsolemethod",{"_index":670,"title":{},"body":{"injectables/ConsoleLoggerService.html":{},"injectables/LoggerService.html":{}}}],["invokeconsolemethod(typ",{"_index":671,"title":{},"body":{"injectables/ConsoleLoggerService.html":{},"classes/Logger.html":{},"injectables/LoggerService.html":{}}}],["iscomplet",{"_index":750,"title":{},"body":{"components/CreateTaskComponent.html":{},"classes/Task.html":{}}}],["iscomplete=fals",{"_index":1285,"title":{},"body":{"classes/Task.html":{}}}],["isdevmod",{"_index":686,"title":{},"body":{"injectables/ConsoleLoggerService.html":{}}}],["isexpand",{"_index":1191,"title":{},"body":{"components/SidenavTasksComponent.html":{}}}],["ismediumscreen",{"_index":965,"title":{},"body":{"components/HeaderComponent.html":{},"components/SidenavTasksComponent.html":{},"components/TaskFormComponent.html":{},"components/TasksFilterComponent.html":{},"injectables/UtilsService.html":{}}}],["ismediumscreensourc",{"_index":1484,"title":{},"body":{"injectables/UtilsService.html":{}}}],["issu",{"_index":96,"title":{},"body":{"components/AboutComponent.html":{},"index.html":{}}}],["istanbul",{"_index":1711,"title":{},"body":{"index.html":{}}}],["it'",{"_index":727,"title":{},"body":{"components/CreateTaskComponent.html":{},"components/EditTaskComponent.html":{}}}],["item",{"_index":217,"title":{},"body":{"components/AboutComponent.html":{},"components/ListItemComponent.html":{},"components/RecurringTaskComponent.html":{},"components/SidenavTasksComponent.html":{}}}],["item'},{'nam",{"_index":258,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ButtonBarComponent.html":{},"components/ButtonsComponent.html":{},"components/CompleteTaskComponent.html":{},"components/CompleteTasksTableComponent.html":{},"components/ConfirmDeleteTaskComponent.html":{},"components/CreateTaskComponent.html":{},"components/EditTaskComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/ListItemComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PendingTasksTableComponent.html":{},"components/RecurringTaskComponent.html":{},"components/SidenavTasksComponent.html":{},"components/TaskFormComponent.html":{},"components/TasksComponent.html":{},"components/TasksFilterComponent.html":{}}}],["item.compon",{"_index":1282,"title":{},"body":{"modules/SidenavTasksModule.html":{}}}],["item.component.css",{"_index":1080,"title":{},"body":{"components/ListItemComponent.html":{}}}],["item.component.html",{"_index":1081,"title":{},"body":{"components/ListItemComponent.html":{}}}],["item.component.t",{"_index":1073,"title":{},"body":{"components/ListItemComponent.html":{},"coverage.html":{}}}],["item.component.ts:25",{"_index":1090,"title":{},"body":{"components/ListItemComponent.html":{}}}],["item.component.ts:27",{"_index":1095,"title":{},"body":{"components/ListItemComponent.html":{}}}],["item.component.ts:29",{"_index":1093,"title":{},"body":{"components/ListItemComponent.html":{}}}],["item.component.ts:31",{"_index":1097,"title":{},"body":{"components/ListItemComponent.html":{}}}],["item.component.ts:33",{"_index":1098,"title":{},"body":{"components/ListItemComponent.html":{}}}],["item.component.ts:35",{"_index":1099,"title":{},"body":{"components/ListItemComponent.html":{}}}],["item.component.ts:37",{"_index":1102,"title":{},"body":{"components/ListItemComponent.html":{}}}],["item.component.ts:39",{"_index":1103,"title":{},"body":{"components/ListItemComponent.html":{}}}],["item.component.ts:41",{"_index":1104,"title":{},"body":{"components/ListItemComponent.html":{}}}],["item.component.ts:43",{"_index":1086,"title":{},"body":{"components/ListItemComponent.html":{}}}],["item.component.ts:50",{"_index":1100,"title":{},"body":{"components/ListItemComponent.html":{}}}],["item.component.ts:57",{"_index":1101,"title":{},"body":{"components/ListItemComponent.html":{}}}],["jonathan",{"_index":1762,"title":{},"body":{"index.html":{}}}],["jqueri",{"_index":1771,"title":{},"body":{"index.html":{}}}],["js",{"_index":1587,"title":{},"body":{"dependencies.html":{}}}],["json",{"_index":1698,"title":{},"body":{"index.html":{}}}],["jwt",{"_index":1011,"title":{},"body":{"injectables/HttpService.html":{}}}],["karma",{"_index":1703,"title":{},"body":{"index.html":{}}}],["keyup",{"_index":1420,"title":{},"body":{"components/TasksFilterComponent.html":{}}}],["keyword",{"_index":224,"title":{},"body":{"components/AboutComponent.html":{},"index.html":{}}}],["label",{"_index":1158,"title":{},"body":{"injectables/MatPaginatorCustom.html":{}}}],["lack",{"_index":142,"title":{},"body":{"components/AboutComponent.html":{}}}],["laptop",{"_index":148,"title":{},"body":{"components/AboutComponent.html":{}}}],["larg",{"_index":955,"title":{},"body":{"components/HeaderComponent.html":{},"components/ListItemComponent.html":{},"injectables/UtilsService.html":{}}}],["larger",{"_index":975,"title":{},"body":{"components/HeaderComponent.html":{}}}],["larges",{"_index":1492,"title":{},"body":{"injectables/UtilsService.html":{}}}],["last",{"_index":424,"title":{},"body":{"components/ButtonBarComponent.html":{},"components/SidenavTasksComponent.html":{},"components/TasksFilterComponent.html":{}}}],["latest",{"_index":1739,"title":{},"body":{"index.html":{}}}],["layout",{"_index":295,"title":{},"body":{"modules/AboutModule.html":{},"components/AppComponent.html":{},"modules/CompleteTaskModule.html":{},"modules/ConfirmDeleteTaskModule.html":{},"modules/CoreModule.html":{},"modules/CreateTaskModule.html":{},"modules/EditTaskModule.html":{},"modules/FooterModule.html":{},"modules/HeaderModule.html":{},"components/SidenavTasksComponent.html":{},"modules/SidenavTasksModule.html":{},"modules/TaskFormModule.html":{},"modules/TasksButtonBarModule.html":{},"modules/TasksButtonsModule.html":{},"components/TasksComponent.html":{},"modules/TasksFilterModule.html":{},"modules/TasksModule.html":{},"modules/TasksTableModule.html":{},"dependencies.html":{},"index.html":{}}}],["learn",{"_index":1767,"title":{},"body":{"index.html":{}}}],["left",{"_index":165,"title":{},"body":{"components/AboutComponent.html":{}}}],["legend",{"_index":231,"title":{},"body":{"components/AboutComponent.html":{},"modules/AboutModule.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ButtonBarComponent.html":{},"components/ButtonsComponent.html":{},"components/CompleteTaskComponent.html":{},"modules/CompleteTaskModule.html":{},"components/CompleteTasksTableComponent.html":{},"components/ConfirmDeleteTaskComponent.html":{},"modules/ConfirmDeleteTaskModule.html":{},"components/CreateTaskComponent.html":{},"modules/CreateTaskModule.html":{},"components/EditTaskComponent.html":{},"modules/EditTaskModule.html":{},"components/FooterComponent.html":{},"modules/FooterModule.html":{},"components/HeaderComponent.html":{},"modules/HeaderModule.html":{},"components/ListItemComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PendingTasksTableComponent.html":{},"components/RecurringTaskComponent.html":{},"components/SidenavTasksComponent.html":{},"modules/SidenavTasksModule.html":{},"components/TaskFormComponent.html":{},"modules/TaskFormModule.html":{},"modules/TasksButtonBarModule.html":{},"modules/TasksButtonsModule.html":{},"components/TasksComponent.html":{},"modules/TasksDialogModule.html":{},"components/TasksFilterComponent.html":{},"modules/TasksFilterModule.html":{},"modules/TasksModule.html":{},"modules/TasksTableModule.html":{},"overview.html":{}}}],["length",{"_index":403,"title":{},"body":{"components/ButtonBarComponent.html":{},"injectables/MatPaginatorCustom.html":{}}}],["leverag",{"_index":1741,"title":{},"body":{"index.html":{}}}],["librari",{"_index":289,"title":{},"body":{"modules/AboutModule.html":{},"modules/AboutRoutingModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CompleteTaskComponent.html":{},"modules/CompleteTaskModule.html":{},"modules/ConfirmDeleteTaskModule.html":{},"modules/CoreModule.html":{},"modules/CreateTaskModule.html":{},"components/EditTaskComponent.html":{},"modules/EditTaskModule.html":{},"modules/FooterModule.html":{},"modules/HeaderModule.html":{},"components/ListItemComponent.html":{},"modules/SidenavTasksModule.html":{},"components/TaskFormComponent.html":{},"modules/TaskFormModule.html":{},"modules/TasksButtonBarModule.html":{},"modules/TasksButtonsModule.html":{},"modules/TasksDialogModule.html":{},"modules/TasksFilterModule.html":{},"modules/TasksModule.html":{},"modules/TasksRoutingModule.html":{},"modules/TasksTableModule.html":{}}}],["library.add(faangleup",{"_index":310,"title":{},"body":{"modules/AboutModule.html":{},"modules/TasksTableModule.html":{}}}],["library.add(faarrowleft",{"_index":1393,"title":{},"body":{"modules/TasksButtonBarModule.html":{},"modules/TasksButtonsModule.html":{}}}],["library.add(fabar",{"_index":1004,"title":{},"body":{"modules/HeaderModule.html":{}}}],["library.add(facheck",{"_index":611,"title":{},"body":{"modules/CompleteTaskModule.html":{},"modules/EditTaskModule.html":{}}}],["library.add(faclipboardlist",{"_index":1280,"title":{},"body":{"modules/SidenavTasksModule.html":{}}}],["library.add(fapast",{"_index":766,"title":{},"body":{"modules/CreateTaskModule.html":{}}}],["library.add(fasearch",{"_index":1451,"title":{},"body":{"modules/TasksFilterModule.html":{}}}],["library.add(fatrash",{"_index":653,"title":{},"body":{"modules/ConfirmDeleteTaskModule.html":{}}}],["limit",{"_index":138,"title":{},"body":{"components/AboutComponent.html":{}}}],["line",{"_index":669,"title":{},"body":{"injectables/ConsoleLoggerService.html":{},"classes/Logger.html":{},"injectables/LoggerService.html":{}}}],["link",{"_index":1639,"title":{},"body":{"index.html":{}}}],["link{buttonscompon",{"_index":387,"title":{},"body":{"components/ButtonBarComponent.html":{}}}],["list",{"_index":257,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ButtonBarComponent.html":{},"components/ButtonsComponent.html":{},"components/CompleteTaskComponent.html":{},"components/CompleteTasksTableComponent.html":{},"components/ConfirmDeleteTaskComponent.html":{},"components/CreateTaskComponent.html":{},"components/EditTaskComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/ListItemComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PendingTasksTableComponent.html":{},"components/RecurringTaskComponent.html":{},"components/SidenavTasksComponent.html":{},"modules/SidenavTasksModule.html":{},"components/TaskFormComponent.html":{},"components/TasksComponent.html":{},"components/TasksFilterComponent.html":{},"index.html":{}}}],["listen",{"_index":1424,"title":{},"body":{"components/TasksFilterComponent.html":{},"index.html":{}}}],["listitem",{"_index":1192,"title":{},"body":{"components/SidenavTasksComponent.html":{}}}],["listitemcompon",{"_index":256,"title":{"components/ListItemComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ButtonBarComponent.html":{},"components/ButtonsComponent.html":{},"components/CompleteTaskComponent.html":{},"components/CompleteTasksTableComponent.html":{},"components/ConfirmDeleteTaskComponent.html":{},"components/CreateTaskComponent.html":{},"components/EditTaskComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/ListItemComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PendingTasksTableComponent.html":{},"components/RecurringTaskComponent.html":{},"components/SidenavTasksComponent.html":{},"modules/SidenavTasksModule.html":{},"components/TaskFormComponent.html":{},"components/TasksComponent.html":{},"components/TasksFilterComponent.html":{},"coverage.html":{},"overview.html":{}}}],["load",{"_index":328,"title":{},"body":{"components/AppComponent.html":{},"modules/CoreModule.html":{},"components/EditTaskComponent.html":{},"injectables/HttpService.html":{},"injectables/LoaderService.html":{},"interfaces/LoaderState.html":{},"modules/TasksModule.html":{}}}],["loadchildren",{"_index":377,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["loader",{"_index":1037,"title":{},"body":{"injectables/HttpService.html":{},"injectables/LoaderService.html":{},"interfaces/LoaderState.html":{}}}],["loader.servic",{"_index":1052,"title":{},"body":{"injectables/HttpService.html":{}}}],["loaderservic",{"_index":332,"title":{"injectables/LoaderService.html":{}},"body":{"components/AppComponent.html":{},"modules/CoreModule.html":{},"injectables/HttpService.html":{},"injectables/LoaderService.html":{},"interfaces/LoaderState.html":{},"coverage.html":{}}}],["loaderservice:loaderservic",{"_index":1054,"title":{},"body":{"injectables/HttpService.html":{}}}],["loaderst",{"_index":340,"title":{"interfaces/LoaderState.html":{}},"body":{"components/AppComponent.html":{},"injectables/LoaderService.html":{},"interfaces/LoaderState.html":{},"coverage.html":{}}}],["loaderstate.show",{"_index":345,"title":{},"body":{"components/AppComponent.html":{}}}],["loadersubject",{"_index":1134,"title":{},"body":{"injectables/LoaderService.html":{},"interfaces/LoaderState.html":{}}}],["loadtask",{"_index":780,"title":{},"body":{"components/EditTaskComponent.html":{}}}],["loadtask(id",{"_index":795,"title":{},"body":{"components/EditTaskComponent.html":{}}}],["local",{"_index":1737,"title":{},"body":{"index.html":{}}}],["locat",{"_index":162,"title":{},"body":{"components/AboutComponent.html":{},"components/EditTaskComponent.html":{}}}],["log",{"_index":658,"title":{},"body":{"injectables/ConsoleLoggerService.html":{},"classes/Logger.html":{},"injectables/LoggerService.html":{}}}],["logfn",{"_index":694,"title":{},"body":{"injectables/ConsoleLoggerService.html":{}}}],["logfn.apply(consol",{"_index":697,"title":{},"body":{"injectables/ConsoleLoggerService.html":{}}}],["logger",{"_index":518,"title":{"classes/Logger.html":{}},"body":{"components/CompleteTaskComponent.html":{},"components/ConfirmDeleteTaskComponent.html":{},"injectables/ConsoleLoggerService.html":{},"components/CreateTaskComponent.html":{},"components/EditTaskComponent.html":{},"injectables/HttpService.html":{},"classes/Logger.html":{},"injectables/LoggerService.html":{},"injectables/UtilsService.html":{},"coverage.html":{}}}],["logger.servic",{"_index":687,"title":{},"body":{"injectables/ConsoleLoggerService.html":{},"modules/CoreModule.html":{},"injectables/HttpService.html":{}}}],["logger.service.t",{"_index":656,"title":{},"body":{"injectables/ConsoleLoggerService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["logger.service.ts:21",{"_index":679,"title":{},"body":{"injectables/ConsoleLoggerService.html":{}}}],["logger.service.ts:32",{"_index":682,"title":{},"body":{"injectables/ConsoleLoggerService.html":{}}}],["logger.service.ts:43",{"_index":685,"title":{},"body":{"injectables/ConsoleLoggerService.html":{}}}],["logger.service.ts:58",{"_index":673,"title":{},"body":{"injectables/ConsoleLoggerService.html":{}}}],["loggerservic",{"_index":519,"title":{"injectables/LoggerService.html":{}},"body":{"components/CompleteTaskComponent.html":{},"components/ConfirmDeleteTaskComponent.html":{},"modules/CoreModule.html":{},"components/CreateTaskComponent.html":{},"components/EditTaskComponent.html":{},"injectables/HttpService.html":{},"classes/Logger.html":{},"injectables/LoggerService.html":{},"injectables/UtilsService.html":{},"coverage.html":{}}}],["long",{"_index":205,"title":{},"body":{"components/AboutComponent.html":{}}}],["look",{"_index":666,"title":{},"body":{"injectables/ConsoleLoggerService.html":{},"components/PageNotFoundComponent.html":{}}}],["lot",{"_index":552,"title":{},"body":{"components/CompleteTaskComponent.html":{}}}],["low",{"_index":174,"title":{},"body":{"components/AboutComponent.html":{},"classes/Task.html":{},"components/TaskFormComponent.html":{},"miscellaneous/typealiases.html":{}}}],["machin",{"_index":1636,"title":{},"body":{"index.html":{}}}],["made",{"_index":1659,"title":{},"body":{"index.html":{}}}],["main",{"_index":320,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonBarComponent.html":{},"components/ButtonsComponent.html":{},"components/HeaderComponent.html":{},"components/SidenavTasksComponent.html":{},"components/TaskFormComponent.html":{},"modules/TasksButtonsModule.html":{},"components/TasksComponent.html":{},"components/TasksFilterComponent.html":{},"index.html":{}}}],["mainpropertiesform",{"_index":1311,"title":{},"body":{"components/TaskFormComponent.html":{}}}],["maintain",{"_index":1108,"title":{},"body":{"components/ListItemComponent.html":{}}}],["make",{"_index":551,"title":{},"body":{"components/CompleteTaskComponent.html":{},"modules/CoreModule.html":{},"injectables/HttpService.html":{},"components/TaskFormComponent.html":{}}}],["manag",{"_index":120,"title":{},"body":{"components/AboutComponent.html":{},"components/ButtonBarComponent.html":{},"components/ButtonsComponent.html":{},"modules/CreateTaskModule.html":{},"modules/TasksButtonsModule.html":{},"modules/TasksModule.html":{},"modules/TasksTableModule.html":{},"injectables/UtilsService.html":{},"index.html":{}}}],["manager/selenium**not",{"_index":1729,"title":{},"body":{"index.html":{}}}],["manual",{"_index":1724,"title":{},"body":{"index.html":{}}}],["map((formdata",{"_index":1350,"title":{},"body":{"components/TaskFormComponent.html":{}}}],["mark",{"_index":202,"title":{},"body":{"components/AboutComponent.html":{},"components/CompleteTaskComponent.html":{},"classes/Task.html":{},"components/TaskFormComponent.html":{}}}],["marker",{"_index":1217,"title":{},"body":{"components/SidenavTasksComponent.html":{}}}],["mat",{"_index":884,"title":{},"body":{"components/EditTaskComponent.html":{},"components/ListItemComponent.html":{}}}],["mat_dialog_data",{"_index":562,"title":{},"body":{"components/CompleteTaskComponent.html":{},"components/ConfirmDeleteTaskComponent.html":{},"components/RecurringTaskComponent.html":{}}}],["matbadgemodul",{"_index":1273,"title":{},"body":{"modules/SidenavTasksModule.html":{}}}],["matbuttonmodul",{"_index":296,"title":{},"body":{"modules/AboutModule.html":{},"modules/CompleteTaskModule.html":{},"modules/ConfirmDeleteTaskModule.html":{},"modules/CreateTaskModule.html":{},"modules/EditTaskModule.html":{},"modules/HeaderModule.html":{},"modules/SidenavTasksModule.html":{},"modules/TasksButtonBarModule.html":{},"modules/TasksButtonsModule.html":{},"modules/TasksFilterModule.html":{},"modules/TasksTableModule.html":{}}}],["match",{"_index":273,"title":{},"body":{"components/AboutComponent.html":{},"modules/AboutModule.html":{},"modules/AboutRoutingModule.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ButtonBarComponent.html":{},"components/ButtonsComponent.html":{},"components/CompleteTaskComponent.html":{},"modules/CompleteTaskModule.html":{},"components/CompleteTasksTableComponent.html":{},"components/ConfirmDeleteTaskComponent.html":{},"modules/ConfirmDeleteTaskModule.html":{},"injectables/ConsoleLoggerService.html":{},"modules/CoreModule.html":{},"components/CreateTaskComponent.html":{},"modules/CreateTaskModule.html":{},"components/EditTaskComponent.html":{},"modules/EditTaskModule.html":{},"components/FooterComponent.html":{},"modules/FooterModule.html":{},"components/HeaderComponent.html":{},"modules/HeaderModule.html":{},"injectables/HttpService.html":{},"components/ListItemComponent.html":{},"injectables/LoaderService.html":{},"interfaces/LoaderState.html":{},"classes/Logger.html":{},"injectables/LoggerService.html":{},"injectables/MatPaginatorCustom.html":{},"components/PageNotFoundComponent.html":{},"components/PendingTasksTableComponent.html":{},"components/RecurringTaskComponent.html":{},"components/SidenavTasksComponent.html":{},"modules/SidenavTasksModule.html":{},"classes/Task.html":{},"components/TaskFormComponent.html":{},"modules/TaskFormModule.html":{},"modules/TasksButtonBarModule.html":{},"modules/TasksButtonsModule.html":{},"components/TasksComponent.html":{},"modules/TasksDialogModule.html":{},"components/TasksFilterComponent.html":{},"modules/TasksFilterModule.html":{},"modules/TasksModule.html":{},"modules/TasksRoutingModule.html":{},"modules/TasksTableModule.html":{},"injectables/UtilsService.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["matcheckboxmodul",{"_index":1476,"title":{},"body":{"modules/TasksTableModule.html":{}}}],["matdatepickermodul",{"_index":603,"title":{},"body":{"modules/CompleteTaskModule.html":{},"modules/CreateTaskModule.html":{},"modules/EditTaskModule.html":{},"modules/TaskFormModule.html":{},"modules/TasksFilterModule.html":{}}}],["matdialog",{"_index":443,"title":{},"body":{"components/ButtonsComponent.html":{},"components/EditTaskComponent.html":{},"components/SidenavTasksComponent.html":{}}}],["matdialogconfig",{"_index":468,"title":{},"body":{"components/ButtonsComponent.html":{},"components/EditTaskComponent.html":{},"components/SidenavTasksComponent.html":{}}}],["matdialogmodul",{"_index":604,"title":{},"body":{"modules/CompleteTaskModule.html":{},"modules/ConfirmDeleteTaskModule.html":{},"modules/CreateTaskModule.html":{},"modules/EditTaskModule.html":{},"modules/TasksButtonBarModule.html":{},"modules/TasksButtonsModule.html":{}}}],["matdialogref",{"_index":516,"title":{},"body":{"components/CompleteTaskComponent.html":{},"components/ConfirmDeleteTaskComponent.html":{},"components/CreateTaskComponent.html":{},"components/RecurringTaskComponent.html":{},"injectables/UtilsService.html":{}}}],["materi",{"_index":1742,"title":{},"body":{"index.html":{}}}],["matformfieldmodul",{"_index":605,"title":{},"body":{"modules/CompleteTaskModule.html":{},"modules/CreateTaskModule.html":{},"modules/EditTaskModule.html":{},"modules/TaskFormModule.html":{},"modules/TasksFilterModule.html":{}}}],["math.max(length",{"_index":1163,"title":{},"body":{"injectables/MatPaginatorCustom.html":{}}}],["matinputmodul",{"_index":606,"title":{},"body":{"modules/CompleteTaskModule.html":{},"modules/CreateTaskModule.html":{},"modules/EditTaskModule.html":{},"modules/TaskFormModule.html":{},"modules/TasksFilterModule.html":{}}}],["matlistmodul",{"_index":1274,"title":{},"body":{"modules/SidenavTasksModule.html":{}}}],["matnativedatemodul",{"_index":607,"title":{},"body":{"modules/CompleteTaskModule.html":{},"modules/CreateTaskModule.html":{},"modules/EditTaskModule.html":{},"modules/TaskFormModule.html":{},"modules/TasksFilterModule.html":{}}}],["matpagin",{"_index":432,"title":{},"body":{"components/ButtonBarComponent.html":{}}}],["matpaginatorcustom",{"_index":932,"title":{"injectables/MatPaginatorCustom.html":{}},"body":{"modules/EditTaskModule.html":{},"injectables/MatPaginatorCustom.html":{},"coverage.html":{},"overview.html":{}}}],["matpaginatorintl",{"_index":933,"title":{},"body":{"modules/EditTaskModule.html":{},"injectables/MatPaginatorCustom.html":{}}}],["matpaginatormodul",{"_index":934,"title":{},"body":{"modules/EditTaskModule.html":{},"modules/TasksButtonBarModule.html":{},"modules/TasksTableModule.html":{}}}],["matprogressspinnermodul",{"_index":362,"title":{},"body":{"modules/AppModule.html":{},"modules/CoreModule.html":{},"modules/TasksTableModule.html":{}}}],["matradiomodul",{"_index":935,"title":{},"body":{"modules/EditTaskModule.html":{}}}],["matselectmodul",{"_index":1385,"title":{},"body":{"modules/TaskFormModule.html":{}}}],["matsidenavmodul",{"_index":705,"title":{},"body":{"modules/CoreModule.html":{},"modules/SidenavTasksModule.html":{},"modules/TasksModule.html":{}}}],["matsnackbar",{"_index":783,"title":{},"body":{"components/EditTaskComponent.html":{}}}],["matsnackbarmodul",{"_index":937,"title":{},"body":{"modules/EditTaskModule.html":{},"modules/TasksTableModule.html":{}}}],["matsortmodul",{"_index":1477,"title":{},"body":{"modules/TasksTableModule.html":{}}}],["mattablemodul",{"_index":1478,"title":{},"body":{"modules/TasksTableModule.html":{}}}],["mattoolbarmodul",{"_index":1001,"title":{},"body":{"modules/HeaderModule.html":{}}}],["mattooltipmodul",{"_index":936,"title":{},"body":{"modules/EditTaskModule.html":{},"modules/HeaderModule.html":{},"modules/SidenavTasksModule.html":{},"modules/TasksFilterModule.html":{}}}],["max",{"_index":549,"title":{},"body":{"components/CompleteTaskComponent.html":{}}}],["maxdatecomplet",{"_index":507,"title":{},"body":{"components/CompleteTaskComponent.html":{}}}],["meant",{"_index":119,"title":{},"body":{"components/AboutComponent.html":{},"injectables/HttpService.html":{},"components/ListItemComponent.html":{},"index.html":{}}}],["medium",{"_index":961,"title":{},"body":{"components/HeaderComponent.html":{},"components/SidenavTasksComponent.html":{},"classes/Task.html":{},"components/TaskFormComponent.html":{},"components/TasksFilterComponent.html":{},"injectables/UtilsService.html":{},"miscellaneous/typealiases.html":{}}}],["memori",{"_index":1691,"title":{},"body":{"index.html":{}}}],["menu",{"_index":164,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/HeaderComponent.html":{},"components/ListItemComponent.html":{},"components/SidenavTasksComponent.html":{},"components/TasksComponent.html":{},"components/TasksFilterComponent.html":{},"injectables/UtilsService.html":{}}}],["messag",{"_index":539,"title":{},"body":{"components/CompleteTaskComponent.html":{},"injectables/ConsoleLoggerService.html":{}}}],["metadata",{"_index":16,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ButtonBarComponent.html":{},"components/ButtonsComponent.html":{},"components/CompleteTaskComponent.html":{},"components/CompleteTasksTableComponent.html":{},"components/ConfirmDeleteTaskComponent.html":{},"components/CreateTaskComponent.html":{},"components/EditTaskComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/ListItemComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PendingTasksTableComponent.html":{},"components/RecurringTaskComponent.html":{},"components/SidenavTasksComponent.html":{},"components/TaskFormComponent.html":{},"components/TasksComponent.html":{},"components/TasksFilterComponent.html":{}}}],["method",{"_index":28,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/CompleteTaskComponent.html":{},"components/ConfirmDeleteTaskComponent.html":{},"injectables/ConsoleLoggerService.html":{},"components/CreateTaskComponent.html":{},"components/EditTaskComponent.html":{},"components/HeaderComponent.html":{},"injectables/HttpService.html":{},"components/ListItemComponent.html":{},"injectables/LoaderService.html":{},"injectables/LoggerService.html":{},"components/RecurringTaskComponent.html":{},"components/SidenavTasksComponent.html":{},"components/TaskFormComponent.html":{},"components/TasksFilterComponent.html":{},"injectables/UtilsService.html":{}}}],["microsoft",{"_index":1722,"title":{},"body":{"index.html":{}}}],["microsoftwebdriv",{"_index":1726,"title":{},"body":{"index.html":{}}}],["mindued",{"_index":1312,"title":{},"body":{"components/TaskFormComponent.html":{}}}],["minimum",{"_index":1336,"title":{},"body":{"components/TaskFormComponent.html":{}}}],["miscellan",{"_index":1783,"title":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mix",{"_index":1770,"title":{},"body":{"index.html":{}}}],["mm",{"_index":1119,"title":{},"body":{"components/ListItemComponent.html":{}}}],["mocha",{"_index":1704,"title":{},"body":{"index.html":{}}}],["modal",{"_index":169,"title":{},"body":{"components/AboutComponent.html":{}}}],["mode",{"_index":1618,"title":{},"body":{"index.html":{}}}],["modifi",{"_index":121,"title":{},"body":{"components/AboutComponent.html":{},"components/EditTaskComponent.html":{},"components/TaskFormComponent.html":{}}}],["modul",{"_index":274,"title":{"modules/AboutModule.html":{},"modules/AboutRoutingModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/CompleteTaskModule.html":{},"modules/ConfirmDeleteTaskModule.html":{},"modules/CoreModule.html":{},"modules/CreateTaskModule.html":{},"modules/EditTaskModule.html":{},"modules/FooterModule.html":{},"modules/HeaderModule.html":{},"modules/SidenavTasksModule.html":{},"modules/TaskFormModule.html":{},"modules/TasksButtonBarModule.html":{},"modules/TasksButtonsModule.html":{},"modules/TasksDialogModule.html":{},"modules/TasksFilterModule.html":{},"modules/TasksModule.html":{},"modules/TasksRoutingModule.html":{},"modules/TasksTableModule.html":{},"modules.html":{}},"body":{"modules/AboutModule.html":{},"modules/AboutRoutingModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/CompleteTaskModule.html":{},"modules/ConfirmDeleteTaskModule.html":{},"modules/CoreModule.html":{},"modules/CreateTaskModule.html":{},"components/EditTaskComponent.html":{},"modules/EditTaskModule.html":{},"modules/FooterModule.html":{},"modules/HeaderModule.html":{},"modules/SidenavTasksModule.html":{},"modules/TaskFormModule.html":{},"modules/TasksButtonBarModule.html":{},"modules/TasksButtonsModule.html":{},"modules/TasksDialogModule.html":{},"modules/TasksFilterModule.html":{},"modules/TasksModule.html":{},"modules/TasksRoutingModule.html":{},"modules/TasksTableModule.html":{},"modules.html":{},"overview.html":{}}}],["modulewithprovid",{"_index":701,"title":{},"body":{"modules/CoreModule.html":{},"modules/TasksModule.html":{},"modules/TasksTableModule.html":{}}}],["moment",{"_index":558,"title":{},"body":{"components/CompleteTaskComponent.html":{},"components/EditTaskComponent.html":{},"components/ListItemComponent.html":{},"components/TaskFormComponent.html":{},"dependencies.html":{}}}],["moment().startof('day').add(1",{"_index":889,"title":{},"body":{"components/EditTaskComponent.html":{},"components/ListItemComponent.html":{}}}],["moment().startof('day').utc",{"_index":888,"title":{},"body":{"components/EditTaskComponent.html":{}}}],["moment().startof('day').utc().format('yyyi",{"_index":1118,"title":{},"body":{"components/ListItemComponent.html":{}}}],["moment().startof('day').utc().tod",{"_index":586,"title":{},"body":{"components/CompleteTaskComponent.html":{}}}],["moment(this.task.datecomplet",{"_index":1358,"title":{},"body":{"components/TaskFormComponent.html":{}}}],["moment(this.task.dued",{"_index":1363,"title":{},"body":{"components/TaskFormComponent.html":{}}}],["moment(this.task.duedate).utc",{"_index":887,"title":{},"body":{"components/EditTaskComponent.html":{}}}],["moment.iso_8601",{"_index":1359,"title":{},"body":{"components/TaskFormComponent.html":{}}}],["monthli",{"_index":1289,"title":{},"body":{"classes/Task.html":{},"components/TaskFormComponent.html":{},"index.html":{}}}],["more",{"_index":204,"title":{},"body":{"components/AboutComponent.html":{},"components/ButtonsComponent.html":{},"components/CompleteTaskComponent.html":{},"modules/TasksButtonsModule.html":{},"index.html":{}}}],["mous",{"_index":143,"title":{},"body":{"components/AboutComponent.html":{}}}],["msg",{"_index":540,"title":{},"body":{"components/CompleteTaskComponent.html":{}}}],["multi",{"_index":1769,"title":{},"body":{"index.html":{}}}],["multipl",{"_index":1075,"title":{},"body":{"components/ListItemComponent.html":{}}}],["mytask",{"_index":109,"title":{},"body":{"components/AboutComponent.html":{},"components/HeaderComponent.html":{},"index.html":{}}}],["mytasks_angular",{"_index":1674,"title":{},"body":{"index.html":{}}}],["mytasks_serv",{"_index":1676,"title":{},"body":{"index.html":{}}}],["name",{"_index":40,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ButtonBarComponent.html":{},"components/ButtonsComponent.html":{},"components/CompleteTaskComponent.html":{},"components/CompleteTasksTableComponent.html":{},"components/ConfirmDeleteTaskComponent.html":{},"injectables/ConsoleLoggerService.html":{},"components/CreateTaskComponent.html":{},"components/EditTaskComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"injectables/HttpService.html":{},"components/ListItemComponent.html":{},"classes/Logger.html":{},"injectables/LoggerService.html":{},"components/PageNotFoundComponent.html":{},"components/PendingTasksTableComponent.html":{},"components/RecurringTaskComponent.html":{},"components/SidenavTasksComponent.html":{},"classes/Task.html":{},"components/TaskFormComponent.html":{},"components/TasksComponent.html":{},"components/TasksFilterComponent.html":{},"injectables/UtilsService.html":{},"index.html":{}}}],["navig",{"_index":1213,"title":{},"body":{"components/SidenavTasksComponent.html":{}}}],["need",{"_index":871,"title":{},"body":{"components/EditTaskComponent.html":{},"components/TaskFormComponent.html":{},"index.html":{}}}],["new",{"_index":89,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ButtonBarComponent.html":{},"components/ButtonsComponent.html":{},"components/CompleteTaskComponent.html":{},"components/ConfirmDeleteTaskComponent.html":{},"modules/CoreModule.html":{},"components/CreateTaskComponent.html":{},"components/EditTaskComponent.html":{},"components/HeaderComponent.html":{},"injectables/HttpService.html":{},"components/ListItemComponent.html":{},"injectables/LoaderService.html":{},"interfaces/LoaderState.html":{},"components/RecurringTaskComponent.html":{},"components/SidenavTasksComponent.html":{},"components/TaskFormComponent.html":{},"components/TasksFilterComponent.html":{},"injectables/UtilsService.html":{},"coverage.html":{}}}],["next",{"_index":1167,"title":{},"body":{"injectables/MatPaginatorCustom.html":{},"index.html":{}}}],["nextid",{"_index":1752,"title":{},"body":{"index.html":{}}}],["nextpagelabel",{"_index":1160,"title":{},"body":{"injectables/MatPaginatorCustom.html":{}}}],["ngafterviewinit",{"_index":29,"title":{},"body":{"components/AboutComponent.html":{},"components/TasksFilterComponent.html":{}}}],["ngmodul",{"_index":292,"title":{},"body":{"modules/AboutModule.html":{},"modules/AboutRoutingModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/CompleteTaskModule.html":{},"modules/ConfirmDeleteTaskModule.html":{},"modules/CoreModule.html":{},"modules/CreateTaskModule.html":{},"modules/EditTaskModule.html":{},"modules/FooterModule.html":{},"modules/HeaderModule.html":{},"modules/SidenavTasksModule.html":{},"modules/TaskFormModule.html":{},"modules/TasksButtonBarModule.html":{},"modules/TasksButtonsModule.html":{},"modules/TasksDialogModule.html":{},"modules/TasksFilterModule.html":{},"modules/TasksModule.html":{},"modules/TasksRoutingModule.html":{},"modules/TasksTableModule.html":{}}}],["ngondestroy",{"_index":30,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/CompleteTaskComponent.html":{},"components/ConfirmDeleteTaskComponent.html":{},"components/CreateTaskComponent.html":{},"components/EditTaskComponent.html":{},"components/HeaderComponent.html":{},"components/ListItemComponent.html":{},"components/RecurringTaskComponent.html":{},"components/SidenavTasksComponent.html":{},"components/TaskFormComponent.html":{},"components/TasksFilterComponent.html":{}}}],["ngoninit",{"_index":329,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/CompleteTaskComponent.html":{},"components/ConfirmDeleteTaskComponent.html":{},"components/CreateTaskComponent.html":{},"components/EditTaskComponent.html":{},"components/HeaderComponent.html":{},"components/ListItemComponent.html":{},"components/RecurringTaskComponent.html":{},"components/SidenavTasksComponent.html":{},"components/TaskFormComponent.html":{},"components/TasksFilterComponent.html":{}}}],["node",{"_index":1616,"title":{},"body":{"index.html":{}}}],["node_modul",{"_index":1660,"title":{},"body":{"index.html":{}}}],["none",{"_index":1062,"title":{},"body":{"injectables/HttpService.html":{}}}],["noop",{"_index":688,"title":{},"body":{"injectables/ConsoleLoggerService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["norepeat",{"_index":848,"title":{},"body":{"components/EditTaskComponent.html":{},"classes/Task.html":{},"components/TaskFormComponent.html":{}}}],["note",{"_index":221,"title":{},"body":{"components/AboutComponent.html":{},"index.html":{}}}],["notic",{"_index":885,"title":{},"body":{"components/EditTaskComponent.html":{}}}],["notifyandclos",{"_index":511,"title":{},"body":{"components/CompleteTaskComponent.html":{}}}],["notifyandclose(msg",{"_index":536,"title":{},"body":{"components/CompleteTaskComponent.html":{}}}],["npm",{"_index":1651,"title":{},"body":{"index.html":{}}}],["null",{"_index":843,"title":{},"body":{"components/EditTaskComponent.html":{},"components/TaskFormComponent.html":{}}}],["num",{"_index":1106,"title":{},"body":{"components/ListItemComponent.html":{}}}],["num.tostr",{"_index":1116,"title":{},"body":{"components/ListItemComponent.html":{}}}],["number",{"_index":187,"title":{},"body":{"components/AboutComponent.html":{},"components/ButtonBarComponent.html":{},"components/CompleteTaskComponent.html":{},"injectables/ConsoleLoggerService.html":{},"components/EditTaskComponent.html":{},"components/ListItemComponent.html":{},"classes/Logger.html":{},"injectables/LoggerService.html":{},"components/SidenavTasksComponent.html":{},"classes/Task.html":{},"components/TaskFormComponent.html":{}}}],["number(params['id",{"_index":862,"title":{},"body":{"components/EditTaskComponent.html":{}}}],["numtasksdu",{"_index":1082,"title":{},"body":{"components/ListItemComponent.html":{}}}],["numtasksduetoday",{"_index":1121,"title":{},"body":{"components/ListItemComponent.html":{},"components/SidenavTasksComponent.html":{}}}],["numtasksduetomorrow",{"_index":1126,"title":{},"body":{"components/ListItemComponent.html":{},"components/SidenavTasksComponent.html":{}}}],["numtasksoverdu",{"_index":1112,"title":{},"body":{"components/ListItemComponent.html":{},"components/SidenavTasksComponent.html":{}}}],["ob",{"_index":823,"title":{},"body":{"components/EditTaskComponent.html":{}}}],["object",{"_index":1791,"title":{},"body":{"miscellaneous/variables.html":{}}}],["obs.subscribe((task",{"_index":827,"title":{},"body":{"components/EditTaskComponent.html":{}}}],["observ",{"_index":816,"title":{},"body":{"components/EditTaskComponent.html":{},"injectables/HttpService.html":{},"components/ListItemComponent.html":{},"injectables/LoaderService.html":{},"interfaces/LoaderState.html":{},"components/SidenavTasksComponent.html":{},"components/TaskFormComponent.html":{},"components/TasksFilterComponent.html":{},"injectables/UtilsService.html":{}}}],["observable.catch((err",{"_index":1066,"title":{},"body":{"injectables/HttpService.html":{}}}],["observable.of(form.valu",{"_index":1347,"title":{},"body":{"components/TaskFormComponent.html":{}}}],["observable.of(formdata",{"_index":1349,"title":{},"body":{"components/TaskFormComponent.html":{}}}],["observable.throw(err",{"_index":1067,"title":{},"body":{"injectables/HttpService.html":{}}}],["observal",{"_index":1504,"title":{},"body":{"injectables/UtilsService.html":{}}}],["observe([breakpoints.handset",{"_index":1512,"title":{},"body":{"injectables/UtilsService.html":{}}}],["occurr",{"_index":1380,"title":{},"body":{"components/TaskFormComponent.html":{}}}],["offset",{"_index":1092,"title":{},"body":{"components/ListItemComponent.html":{}}}],["omit",{"_index":1657,"title":{},"body":{"index.html":{}}}],["on",{"_index":203,"title":{},"body":{"components/AboutComponent.html":{},"components/ButtonBarComponent.html":{},"components/ButtonsComponent.html":{},"components/CompleteTaskComponent.html":{},"modules/CoreModule.html":{},"components/RecurringTaskComponent.html":{},"modules/TasksButtonsModule.html":{},"index.html":{}}}],["onaboutscrol",{"_index":31,"title":{},"body":{"components/AboutComponent.html":{}}}],["onc",{"_index":190,"title":{},"body":{"components/AboutComponent.html":{},"index.html":{}}}],["ondestroy",{"_index":15,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/CompleteTaskComponent.html":{},"components/ConfirmDeleteTaskComponent.html":{},"components/CreateTaskComponent.html":{},"components/EditTaskComponent.html":{},"components/HeaderComponent.html":{},"components/ListItemComponent.html":{},"components/RecurringTaskComponent.html":{},"components/SidenavTasksComponent.html":{},"components/TaskFormComponent.html":{},"components/TasksFilterComponent.html":{}}}],["oninit",{"_index":324,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/CompleteTaskComponent.html":{},"components/ConfirmDeleteTaskComponent.html":{},"components/CreateTaskComponent.html":{},"components/EditTaskComponent.html":{},"components/HeaderComponent.html":{},"components/ListItemComponent.html":{},"components/RecurringTaskComponent.html":{},"components/SidenavTasksComponent.html":{},"components/TaskFormComponent.html":{},"components/TasksFilterComponent.html":{}}}],["onsidenavmenutoggl",{"_index":968,"title":{},"body":{"components/HeaderComponent.html":{}}}],["onupd",{"_index":774,"title":{},"body":{"components/EditTaskComponent.html":{}}}],["open",{"_index":168,"title":{},"body":{"components/AboutComponent.html":{},"components/ButtonsComponent.html":{},"components/EditTaskComponent.html":{},"components/RecurringTaskComponent.html":{},"components/SidenavTasksComponent.html":{},"index.html":{}}}],["opencompletedialog",{"_index":439,"title":{},"body":{"components/ButtonsComponent.html":{}}}],["opencompletedialog(ev",{"_index":455,"title":{},"body":{"components/ButtonsComponent.html":{}}}],["openconfirmdeletedialog",{"_index":440,"title":{},"body":{"components/ButtonsComponent.html":{}}}],["openconfirmdeletedialog(ev",{"_index":457,"title":{},"body":{"components/ButtonsComponent.html":{}}}],["opencreatetaskdialog",{"_index":1197,"title":{},"body":{"components/SidenavTasksComponent.html":{}}}],["openeditdialog",{"_index":441,"title":{},"body":{"components/ButtonsComponent.html":{}}}],["openeditdialog(ev",{"_index":459,"title":{},"body":{"components/ButtonsComponent.html":{}}}],["openrecurringtaskdialog",{"_index":781,"title":{},"body":{"components/EditTaskComponent.html":{}}}],["opportun",{"_index":1777,"title":{},"body":{"index.html":{}}}],["option",{"_index":42,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ButtonBarComponent.html":{},"components/ButtonsComponent.html":{},"components/CompleteTaskComponent.html":{},"components/ConfirmDeleteTaskComponent.html":{},"injectables/ConsoleLoggerService.html":{},"modules/CoreModule.html":{},"components/CreateTaskComponent.html":{},"components/EditTaskComponent.html":{},"components/HeaderComponent.html":{},"injectables/HttpService.html":{},"components/ListItemComponent.html":{},"classes/Logger.html":{},"injectables/LoggerService.html":{},"components/RecurringTaskComponent.html":{},"components/SidenavTasksComponent.html":{},"classes/Task.html":{},"components/TaskFormComponent.html":{},"components/TasksFilterComponent.html":{},"injectables/UtilsService.html":{},"index.html":{}}}],["options.head",{"_index":1063,"title":{},"body":{"injectables/HttpService.html":{}}}],["orang",{"_index":900,"title":{},"body":{"components/EditTaskComponent.html":{}}}],["order",{"_index":129,"title":{},"body":{"components/AboutComponent.html":{},"components/EditTaskComponent.html":{},"index.html":{}}}],["orm",{"_index":1760,"title":{},"body":{"index.html":{}}}],["other",{"_index":1089,"title":{},"body":{"components/ListItemComponent.html":{}}}],["otherwis",{"_index":465,"title":{},"body":{"components/ButtonsComponent.html":{},"components/HeaderComponent.html":{},"components/SidenavTasksComponent.html":{},"components/TaskFormComponent.html":{},"injectables/UtilsService.html":{}}}],["out",{"_index":192,"title":{},"body":{"components/AboutComponent.html":{},"modules/AboutModule.html":{},"modules/AppModule.html":{},"modules/CompleteTaskModule.html":{},"components/ConfirmDeleteTaskComponent.html":{},"modules/ConfirmDeleteTaskModule.html":{},"modules/CreateTaskModule.html":{},"modules/EditTaskModule.html":{},"modules/FooterModule.html":{},"modules/HeaderModule.html":{},"modules/SidenavTasksModule.html":{},"modules/TaskFormModule.html":{},"modules/TasksButtonBarModule.html":{},"modules/TasksButtonsModule.html":{},"modules/TasksDialogModule.html":{},"modules/TasksFilterModule.html":{},"modules/TasksModule.html":{},"modules/TasksTableModule.html":{},"overview.html":{}}}],["outlet",{"_index":323,"title":{},"body":{"components/AppComponent.html":{},"components/SidenavTasksComponent.html":{},"components/TasksComponent.html":{}}}],["output",{"_index":408,"title":{},"body":{"components/ButtonBarComponent.html":{},"components/ButtonsComponent.html":{},"components/CompleteTaskComponent.html":{},"components/RecurringTaskComponent.html":{},"components/TaskFormComponent.html":{}}}],["outsid",{"_index":1642,"title":{},"body":{"index.html":{}}}],["over",{"_index":218,"title":{},"body":{"components/AboutComponent.html":{},"components/EditTaskComponent.html":{},"components/ListItemComponent.html":{},"components/SidenavTasksComponent.html":{},"components/TasksFilterComponent.html":{},"index.html":{}}}],["overdu",{"_index":226,"title":{},"body":{"components/AboutComponent.html":{},"components/ListItemComponent.html":{},"components/SidenavTasksComponent.html":{}}}],["overduebadg",{"_index":1219,"title":{},"body":{"components/SidenavTasksComponent.html":{}}}],["overload",{"_index":1438,"title":{},"body":{"components/TasksFilterComponent.html":{}}}],["overview",{"_index":1780,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["packag",{"_index":1572,"title":{"dependencies.html":{}},"body":{"index.html":{}}}],["page",{"_index":11,"title":{},"body":{"components/AboutComponent.html":{},"modules/AboutModule.html":{},"components/AppComponent.html":{},"components/ButtonBarComponent.html":{},"components/ButtonsComponent.html":{},"components/CompleteTaskComponent.html":{},"components/CompleteTasksTableComponent.html":{},"components/ConfirmDeleteTaskComponent.html":{},"components/CreateTaskComponent.html":{},"components/EditTaskComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/ListItemComponent.html":{},"injectables/MatPaginatorCustom.html":{},"components/PageNotFoundComponent.html":{},"components/PendingTasksTableComponent.html":{},"components/RecurringTaskComponent.html":{},"components/SidenavTasksComponent.html":{},"components/TaskFormComponent.html":{},"components/TasksComponent.html":{},"components/TasksFilterComponent.html":{},"index.html":{}}}],["pagenotfoundcompon",{"_index":259,"title":{"components/PageNotFoundComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ButtonBarComponent.html":{},"components/ButtonsComponent.html":{},"components/CompleteTaskComponent.html":{},"components/CompleteTasksTableComponent.html":{},"components/ConfirmDeleteTaskComponent.html":{},"components/CreateTaskComponent.html":{},"components/EditTaskComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/ListItemComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PendingTasksTableComponent.html":{},"components/RecurringTaskComponent.html":{},"components/SidenavTasksComponent.html":{},"components/TaskFormComponent.html":{},"components/TasksComponent.html":{},"components/TasksFilterComponent.html":{},"coverage.html":{},"overview.html":{}}}],["pages",{"_index":404,"title":{},"body":{"components/ButtonBarComponent.html":{},"injectables/MatPaginatorCustom.html":{}}}],["pagesizeopt",{"_index":405,"title":{},"body":{"components/ButtonBarComponent.html":{}}}],["pagin",{"_index":388,"title":{},"body":{"components/ButtonBarComponent.html":{},"components/EditTaskComponent.html":{},"modules/EditTaskModule.html":{},"injectables/MatPaginatorCustom.html":{},"coverage.html":{}}}],["param",{"_index":498,"title":{},"body":{"components/ButtonsComponent.html":{},"components/CompleteTaskComponent.html":{},"injectables/ConsoleLoggerService.html":{},"components/EditTaskComponent.html":{},"components/HeaderComponent.html":{},"injectables/HttpService.html":{},"components/ListItemComponent.html":{},"classes/Logger.html":{},"injectables/LoggerService.html":{},"components/SidenavTasksComponent.html":{},"components/TaskFormComponent.html":{},"injectables/UtilsService.html":{}}}],["paramet",{"_index":38,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/CompleteTaskComponent.html":{},"components/ConfirmDeleteTaskComponent.html":{},"injectables/ConsoleLoggerService.html":{},"components/CreateTaskComponent.html":{},"components/EditTaskComponent.html":{},"components/HeaderComponent.html":{},"injectables/HttpService.html":{},"components/ListItemComponent.html":{},"injectables/LoggerService.html":{},"components/RecurringTaskComponent.html":{},"components/SidenavTasksComponent.html":{},"components/TaskFormComponent.html":{},"components/TasksFilterComponent.html":{},"injectables/UtilsService.html":{}}}],["params.subscribe(param",{"_index":1256,"title":{},"body":{"components/SidenavTasksComponent.html":{}}}],["params['filt",{"_index":1264,"title":{},"body":{"components/SidenavTasksComponent.html":{}}}],["paramssub",{"_index":860,"title":{},"body":{"components/EditTaskComponent.html":{}}}],["paramt",{"_index":1105,"title":{},"body":{"components/ListItemComponent.html":{}}}],["parent",{"_index":490,"title":{},"body":{"components/ButtonsComponent.html":{},"components/CompleteTaskComponent.html":{},"components/ConfirmDeleteTaskComponent.html":{}}}],["parentmodul",{"_index":713,"title":{},"body":{"modules/CoreModule.html":{}}}],["part",{"_index":1679,"title":{},"body":{"index.html":{}}}],["partial",{"_index":573,"title":{},"body":{"components/CompleteTaskComponent.html":{}}}],["pass",{"_index":662,"title":{},"body":{"injectables/ConsoleLoggerService.html":{},"components/EditTaskComponent.html":{},"components/HeaderComponent.html":{},"classes/Logger.html":{},"injectables/LoggerService.html":{}}}],["past",{"_index":1356,"title":{},"body":{"components/TaskFormComponent.html":{}}}],["patch",{"_index":1024,"title":{},"body":{"injectables/HttpService.html":{}}}],["patch(url",{"_index":1041,"title":{},"body":{"injectables/HttpService.html":{}}}],["path",{"_index":316,"title":{},"body":{"modules/AboutRoutingModule.html":{},"modules/AppRoutingModule.html":{},"modules/TasksRoutingModule.html":{}}}],["path:':id",{"_index":1470,"title":{},"body":{"modules/TasksRoutingModule.html":{}}}],["path:'complet",{"_index":1469,"title":{},"body":{"modules/TasksRoutingModule.html":{}}}],["path:'pend",{"_index":1468,"title":{},"body":{"modules/TasksRoutingModule.html":{}}}],["pathmatch",{"_index":379,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/TasksRoutingModule.html":{}}}],["pend",{"_index":124,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ButtonBarComponent.html":{},"components/ButtonsComponent.html":{},"components/CompleteTaskComponent.html":{},"components/CompleteTasksTableComponent.html":{},"components/ConfirmDeleteTaskComponent.html":{},"components/CreateTaskComponent.html":{},"components/EditTaskComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/ListItemComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PendingTasksTableComponent.html":{},"components/RecurringTaskComponent.html":{},"components/SidenavTasksComponent.html":{},"classes/Task.html":{},"components/TaskFormComponent.html":{},"components/TasksComponent.html":{},"components/TasksFilterComponent.html":{},"modules/TasksRoutingModule.html":{},"index.html":{}}}],["pendingtask",{"_index":1176,"title":{},"body":{"components/PendingTasksTableComponent.html":{}}}],["pendingtaskstablecompon",{"_index":261,"title":{"components/PendingTasksTableComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ButtonBarComponent.html":{},"components/ButtonsComponent.html":{},"components/CompleteTaskComponent.html":{},"components/CompleteTasksTableComponent.html":{},"components/ConfirmDeleteTaskComponent.html":{},"components/CreateTaskComponent.html":{},"components/EditTaskComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/ListItemComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PendingTasksTableComponent.html":{},"components/RecurringTaskComponent.html":{},"components/SidenavTasksComponent.html":{},"components/TaskFormComponent.html":{},"components/TasksComponent.html":{},"components/TasksFilterComponent.html":{},"modules/TasksRoutingModule.html":{},"modules/TasksTableModule.html":{},"coverage.html":{},"overview.html":{}}}],["perform",{"_index":657,"title":{},"body":{"injectables/ConsoleLoggerService.html":{},"injectables/HttpService.html":{}}}],["persist",{"_index":1661,"title":{},"body":{"index.html":{}}}],["phillip",{"_index":1763,"title":{},"body":{"index.html":{}}}],["phillips/mi",{"_index":1631,"title":{},"body":{"index.html":{}}}],["picker",{"_index":216,"title":{},"body":{"components/AboutComponent.html":{}}}],["pipe",{"_index":1442,"title":{},"body":{"components/TasksFilterComponent.html":{}}}],["point",{"_index":1668,"title":{},"body":{"index.html":{}}}],["port",{"_index":1700,"title":{},"body":{"index.html":{}}}],["post",{"_index":1025,"title":{},"body":{"injectables/HttpService.html":{}}}],["post(url",{"_index":1044,"title":{},"body":{"injectables/HttpService.html":{}}}],["prefix",{"_index":775,"title":{},"body":{"components/EditTaskComponent.html":{}}}],["prerequisit",{"_index":1610,"title":{},"body":{"index.html":{}}}],["present",{"_index":51,"title":{},"body":{"components/AboutComponent.html":{},"components/SidenavTasksComponent.html":{}}}],["prevent",{"_index":488,"title":{},"body":{"components/ButtonsComponent.html":{},"components/TasksFilterComponent.html":{},"index.html":{}}}],["previou",{"_index":788,"title":{},"body":{"components/EditTaskComponent.html":{},"injectables/MatPaginatorCustom.html":{}}}],["previouspagelabel",{"_index":1161,"title":{},"body":{"injectables/MatPaginatorCustom.html":{}}}],["prior",{"_index":1764,"title":{},"body":{"index.html":{}}}],["prioriti",{"_index":175,"title":{},"body":{"components/AboutComponent.html":{},"components/CreateTaskComponent.html":{},"classes/Task.html":{},"components/TaskFormComponent.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["prioritytyp",{"_index":1300,"title":{},"body":{"classes/Task.html":{},"miscellaneous/typealiases.html":{}}}],["privat",{"_index":26,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/CompleteTaskComponent.html":{},"components/ConfirmDeleteTaskComponent.html":{},"components/CreateTaskComponent.html":{},"components/EditTaskComponent.html":{},"injectables/HttpService.html":{},"injectables/LoaderService.html":{},"interfaces/LoaderState.html":{},"components/RecurringTaskComponent.html":{},"components/SidenavTasksComponent.html":{},"components/TaskFormComponent.html":{},"components/TasksFilterComponent.html":{},"injectables/UtilsService.html":{}}}],["privileg",{"_index":1673,"title":{},"body":{"index.html":{}}}],["product",{"_index":1792,"title":{},"body":{"miscellaneous/variables.html":{}}}],["project",{"_index":1761,"title":{},"body":{"index.html":{}}}],["propag",{"_index":489,"title":{},"body":{"components/ButtonsComponent.html":{}}}],["properti",{"_index":23,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ButtonBarComponent.html":{},"components/ButtonsComponent.html":{},"components/CompleteTaskComponent.html":{},"components/CompleteTasksTableComponent.html":{},"components/ConfirmDeleteTaskComponent.html":{},"injectables/ConsoleLoggerService.html":{},"components/CreateTaskComponent.html":{},"components/EditTaskComponent.html":{},"components/HeaderComponent.html":{},"injectables/HttpService.html":{},"components/ListItemComponent.html":{},"injectables/LoaderService.html":{},"interfaces/LoaderState.html":{},"classes/Logger.html":{},"injectables/LoggerService.html":{},"injectables/MatPaginatorCustom.html":{},"components/PendingTasksTableComponent.html":{},"components/RecurringTaskComponent.html":{},"components/SidenavTasksComponent.html":{},"classes/Task.html":{},"components/TaskFormComponent.html":{},"components/TasksFilterComponent.html":{},"injectables/UtilsService.html":{},"index.html":{}}}],["properties).subscribe((task",{"_index":580,"title":{},"body":{"components/CompleteTaskComponent.html":{}}}],["protect",{"_index":1481,"title":{},"body":{"injectables/UtilsService.html":{}}}],["protractor",{"_index":1706,"title":{},"body":{"index.html":{}}}],["provid",{"_index":179,"title":{},"body":{"components/AboutComponent.html":{},"modules/AboutModule.html":{},"modules/AppModule.html":{},"components/ButtonBarComponent.html":{},"components/ButtonsComponent.html":{},"modules/CompleteTaskModule.html":{},"modules/ConfirmDeleteTaskModule.html":{},"modules/CoreModule.html":{},"modules/CreateTaskModule.html":{},"modules/EditTaskModule.html":{},"modules/FooterModule.html":{},"modules/HeaderModule.html":{},"modules/SidenavTasksModule.html":{},"modules/TaskFormModule.html":{},"modules/TasksButtonBarModule.html":{},"modules/TasksButtonsModule.html":{},"modules/TasksDialogModule.html":{},"modules/TasksFilterModule.html":{},"modules/TasksModule.html":{},"modules/TasksTableModule.html":{},"overview.html":{}}}],["purpos",{"_index":794,"title":{},"body":{"components/EditTaskComponent.html":{},"index.html":{}}}],["quantiti",{"_index":1096,"title":{},"body":{"components/ListItemComponent.html":{}}}],["re",{"_index":1077,"title":{},"body":{"components/ListItemComponent.html":{},"index.html":{}}}],["reach",{"_index":1202,"title":{},"body":{"components/SidenavTasksComponent.html":{}}}],["react",{"_index":1425,"title":{},"body":{"components/TasksFilterComponent.html":{}}}],["reactiveformsmodul",{"_index":602,"title":{},"body":{"modules/CompleteTaskModule.html":{},"modules/ConfirmDeleteTaskModule.html":{},"modules/CreateTaskModule.html":{},"modules/EditTaskModule.html":{},"modules/TaskFormModule.html":{},"modules/TasksModule.html":{},"modules/TasksTableModule.html":{}}}],["readonli",{"_index":1483,"title":{},"body":{"injectables/UtilsService.html":{}}}],["receiv",{"_index":491,"title":{},"body":{"components/ButtonsComponent.html":{}}}],["recommend",{"_index":145,"title":{},"body":{"components/AboutComponent.html":{}}}],["recur",{"_index":263,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ButtonBarComponent.html":{},"components/ButtonsComponent.html":{},"components/CompleteTaskComponent.html":{},"components/CompleteTasksTableComponent.html":{},"components/ConfirmDeleteTaskComponent.html":{},"components/CreateTaskComponent.html":{},"components/EditTaskComponent.html":{},"modules/EditTaskModule.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/ListItemComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PendingTasksTableComponent.html":{},"components/RecurringTaskComponent.html":{},"components/SidenavTasksComponent.html":{},"components/TaskFormComponent.html":{},"components/TasksComponent.html":{},"components/TasksFilterComponent.html":{}}}],["recurringdialogref",{"_index":876,"title":{},"body":{"components/EditTaskComponent.html":{}}}],["recurringdialogref.componentinstance.updateall.subscribe((updateal",{"_index":879,"title":{},"body":{"components/EditTaskComponent.html":{}}}],["recurringtaskcompon",{"_index":262,"title":{"components/RecurringTaskComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ButtonBarComponent.html":{},"components/ButtonsComponent.html":{},"components/CompleteTaskComponent.html":{},"components/CompleteTasksTableComponent.html":{},"components/ConfirmDeleteTaskComponent.html":{},"components/CreateTaskComponent.html":{},"components/EditTaskComponent.html":{},"modules/EditTaskModule.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/ListItemComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PendingTasksTableComponent.html":{},"components/RecurringTaskComponent.html":{},"components/SidenavTasksComponent.html":{},"components/TaskFormComponent.html":{},"components/TasksComponent.html":{},"components/TasksFilterComponent.html":{},"coverage.html":{},"overview.html":{}}}],["red",{"_index":897,"title":{},"body":{"components/EditTaskComponent.html":{}}}],["redirect",{"_index":864,"title":{},"body":{"components/EditTaskComponent.html":{}}}],["redirectto",{"_index":381,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/TasksRoutingModule.html":{}}}],["refer",{"_index":68,"title":{},"body":{"components/AboutComponent.html":{},"components/HeaderComponent.html":{}}}],["regular",{"_index":609,"title":{},"body":{"modules/CompleteTaskModule.html":{},"modules/EditTaskModule.html":{},"modules/SidenavTasksModule.html":{},"modules/TasksButtonBarModule.html":{},"modules/TasksButtonsModule.html":{},"modules/TasksTableModule.html":{},"dependencies.html":{}}}],["relat",{"_index":1751,"title":{},"body":{"index.html":{}}}],["relationship",{"_index":1749,"title":{},"body":{"index.html":{}}}],["remain",{"_index":464,"title":{},"body":{"components/ButtonsComponent.html":{},"components/EditTaskComponent.html":{},"components/RecurringTaskComponent.html":{},"index.html":{}}}],["remov",{"_index":1730,"title":{},"body":{"index.html":{}}}],["render",{"_index":467,"title":{},"body":{"components/ButtonsComponent.html":{},"components/HeaderComponent.html":{}}}],["repeat",{"_index":181,"title":{},"body":{"components/AboutComponent.html":{},"components/ButtonsComponent.html":{},"components/CreateTaskComponent.html":{},"components/EditTaskComponent.html":{},"components/RecurringTaskComponent.html":{},"classes/Task.html":{},"components/TaskFormComponent.html":{},"index.html":{}}}],["repeatformdata.value.aft",{"_index":919,"title":{},"body":{"components/EditTaskComponent.html":{}}}],["repeatformdata.value.repeat",{"_index":917,"title":{},"body":{"components/EditTaskComponent.html":{}}}],["repeatproperti",{"_index":1371,"title":{},"body":{"components/TaskFormComponent.html":{}}}],["repeatpropertiesform",{"_index":1313,"title":{},"body":{"components/TaskFormComponent.html":{}}}],["repo",{"_index":1640,"title":{},"body":{"index.html":{}}}],["report",{"_index":1709,"title":{},"body":{"index.html":{}}}],["repositori",{"_index":1626,"title":{},"body":{"index.html":{}}}],["repres",{"_index":1750,"title":{},"body":{"index.html":{}}}],["request",{"_index":634,"title":{},"body":{"components/ConfirmDeleteTaskComponent.html":{},"injectables/HttpService.html":{}}}],["requir",{"_index":286,"title":{},"body":{"modules/AboutModule.html":{},"modules/CompleteTaskModule.html":{},"modules/ConfirmDeleteTaskModule.html":{},"modules/CreateTaskModule.html":{},"modules/EditTaskModule.html":{},"modules/HeaderModule.html":{},"modules/SidenavTasksModule.html":{},"classes/Task.html":{},"components/TaskFormComponent.html":{},"modules/TaskFormModule.html":{},"modules/TasksButtonBarModule.html":{},"modules/TasksButtonsModule.html":{},"modules/TasksDialogModule.html":{},"modules/TasksFilterModule.html":{},"modules/TasksModule.html":{},"modules/TasksTableModule.html":{},"index.html":{}}}],["requri",{"_index":1016,"title":{},"body":{"injectables/HttpService.html":{}}}],["reset",{"_index":284,"title":{},"body":{"modules/AboutModule.html":{},"modules/AppModule.html":{},"modules/CompleteTaskModule.html":{},"modules/ConfirmDeleteTaskModule.html":{},"modules/CreateTaskModule.html":{},"modules/EditTaskModule.html":{},"modules/FooterModule.html":{},"modules/HeaderModule.html":{},"modules/SidenavTasksModule.html":{},"modules/TaskFormModule.html":{},"modules/TasksButtonBarModule.html":{},"modules/TasksButtonsModule.html":{},"modules/TasksDialogModule.html":{},"modules/TasksFilterModule.html":{},"modules/TasksModule.html":{},"modules/TasksTableModule.html":{},"overview.html":{}}}],["respons",{"_index":132,"title":{},"body":{"components/AboutComponent.html":{},"components/HeaderComponent.html":{},"index.html":{}}}],["restart",{"_index":1662,"title":{},"body":{"index.html":{}}}],["result",{"_index":230,"title":{},"body":{"components/AboutComponent.html":{},"modules/AboutModule.html":{},"modules/AboutRoutingModule.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ButtonBarComponent.html":{},"components/ButtonsComponent.html":{},"components/CompleteTaskComponent.html":{},"modules/CompleteTaskModule.html":{},"components/CompleteTasksTableComponent.html":{},"components/ConfirmDeleteTaskComponent.html":{},"modules/ConfirmDeleteTaskModule.html":{},"injectables/ConsoleLoggerService.html":{},"modules/CoreModule.html":{},"components/CreateTaskComponent.html":{},"modules/CreateTaskModule.html":{},"components/EditTaskComponent.html":{},"modules/EditTaskModule.html":{},"components/FooterComponent.html":{},"modules/FooterModule.html":{},"components/HeaderComponent.html":{},"modules/HeaderModule.html":{},"injectables/HttpService.html":{},"components/ListItemComponent.html":{},"injectables/LoaderService.html":{},"interfaces/LoaderState.html":{},"classes/Logger.html":{},"injectables/LoggerService.html":{},"injectables/MatPaginatorCustom.html":{},"components/PageNotFoundComponent.html":{},"components/PendingTasksTableComponent.html":{},"components/RecurringTaskComponent.html":{},"components/SidenavTasksComponent.html":{},"modules/SidenavTasksModule.html":{},"classes/Task.html":{},"components/TaskFormComponent.html":{},"modules/TaskFormModule.html":{},"modules/TasksButtonBarModule.html":{},"modules/TasksButtonsModule.html":{},"components/TasksComponent.html":{},"modules/TasksDialogModule.html":{},"components/TasksFilterComponent.html":{},"modules/TasksFilterModule.html":{},"modules/TasksModule.html":{},"modules/TasksRoutingModule.html":{},"modules/TasksTableModule.html":{},"injectables/UtilsService.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":52,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/CompleteTaskComponent.html":{},"components/ConfirmDeleteTaskComponent.html":{},"injectables/ConsoleLoggerService.html":{},"modules/CoreModule.html":{},"components/CreateTaskComponent.html":{},"components/EditTaskComponent.html":{},"components/HeaderComponent.html":{},"injectables/HttpService.html":{},"components/ListItemComponent.html":{},"injectables/LoaderService.html":{},"injectables/LoggerService.html":{},"injectables/MatPaginatorCustom.html":{},"components/RecurringTaskComponent.html":{},"components/SidenavTasksComponent.html":{},"components/TaskFormComponent.html":{},"components/TasksFilterComponent.html":{},"modules/TasksModule.html":{},"injectables/UtilsService.html":{}}}],["right",{"_index":959,"title":{},"body":{"components/HeaderComponent.html":{},"components/ListItemComponent.html":{},"components/SidenavTasksComponent.html":{}}}],["rm",{"_index":1672,"title":{},"body":{"index.html":{}}}],["root",{"_index":325,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"modules/CoreModule.html":{},"components/TasksComponent.html":{},"index.html":{}}}],["root'},{'nam",{"_index":238,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ButtonBarComponent.html":{},"components/ButtonsComponent.html":{},"components/CompleteTaskComponent.html":{},"components/CompleteTasksTableComponent.html":{},"components/ConfirmDeleteTaskComponent.html":{},"components/CreateTaskComponent.html":{},"components/EditTaskComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/ListItemComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PendingTasksTableComponent.html":{},"components/RecurringTaskComponent.html":{},"components/SidenavTasksComponent.html":{},"components/TaskFormComponent.html":{},"components/TasksComponent.html":{},"components/TasksFilterComponent.html":{}}}],["rout",{"_index":43,"title":{"routes.html":{}},"body":{"components/AboutComponent.html":{},"modules/AboutRoutingModule.html":{},"modules/AppRoutingModule.html":{},"components/EditTaskComponent.html":{},"components/SidenavTasksComponent.html":{},"modules/TasksRoutingModule.html":{},"overview.html":{},"routes.html":{}}}],["route.firstchild",{"_index":1262,"title":{},"body":{"components/SidenavTasksComponent.html":{}}}],["route.param",{"_index":1263,"title":{},"body":{"components/SidenavTasksComponent.html":{}}}],["route:activatedrout",{"_index":85,"title":{},"body":{"components/AboutComponent.html":{}}}],["routeparam",{"_index":1220,"title":{},"body":{"components/SidenavTasksComponent.html":{}}}],["router",{"_index":317,"title":{},"body":{"modules/AboutRoutingModule.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/ButtonsComponent.html":{},"components/EditTaskComponent.html":{},"components/SidenavTasksComponent.html":{},"components/TasksComponent.html":{},"modules/TasksRoutingModule.html":{}}}],["routerlink",{"_index":1218,"title":{},"body":{"components/SidenavTasksComponent.html":{}}}],["routermodul",{"_index":314,"title":{},"body":{"modules/AboutRoutingModule.html":{},"modules/AppRoutingModule.html":{},"modules/CompleteTaskModule.html":{},"modules/ConfirmDeleteTaskModule.html":{},"modules/CoreModule.html":{},"modules/CreateTaskModule.html":{},"modules/EditTaskModule.html":{},"modules/FooterModule.html":{},"modules/HeaderModule.html":{},"modules/SidenavTasksModule.html":{},"modules/TasksButtonBarModule.html":{},"modules/TasksButtonsModule.html":{},"modules/TasksModule.html":{},"modules/TasksRoutingModule.html":{},"modules/TasksTableModule.html":{}}}],["routermodule.forchild(rout",{"_index":318,"title":{},"body":{"modules/AboutRoutingModule.html":{},"modules/TasksRoutingModule.html":{}}}],["routermodule.forroot(approut",{"_index":383,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["row",{"_index":195,"title":{},"body":{"components/AboutComponent.html":{}}}],["run",{"_index":1612,"title":{},"body":{"index.html":{}}}],["rxj",{"_index":80,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/CompleteTaskComponent.html":{},"components/ConfirmDeleteTaskComponent.html":{},"components/EditTaskComponent.html":{},"components/HeaderComponent.html":{},"components/ListItemComponent.html":{},"injectables/LoaderService.html":{},"interfaces/LoaderState.html":{},"components/SidenavTasksComponent.html":{},"components/TaskFormComponent.html":{},"components/TasksFilterComponent.html":{},"injectables/UtilsService.html":{},"dependencies.html":{}}}],["rxjs/add/observable/of",{"_index":1338,"title":{},"body":{"components/TaskFormComponent.html":{}}}],["rxjs/add/operator/catch",{"_index":1050,"title":{},"body":{"injectables/HttpService.html":{}}}],["rxjs/add/operator/fin",{"_index":1051,"title":{},"body":{"injectables/HttpService.html":{}}}],["rxjs/add/operator/map",{"_index":1339,"title":{},"body":{"components/TaskFormComponent.html":{}}}],["rxjs/add/operator/switchmap",{"_index":1340,"title":{},"body":{"components/TaskFormComponent.html":{}}}],["rxjs/observ",{"_index":1049,"title":{},"body":{"injectables/HttpService.html":{}}}],["rxjs/oper",{"_index":818,"title":{},"body":{"components/EditTaskComponent.html":{},"components/SidenavTasksComponent.html":{},"components/TasksFilterComponent.html":{}}}],["rxjs/subscript",{"_index":740,"title":{},"body":{"components/CreateTaskComponent.html":{},"components/RecurringTaskComponent.html":{}}}],["s",{"_index":1630,"title":{},"body":{"index.html":{}}}],["same",{"_index":206,"title":{},"body":{"components/AboutComponent.html":{},"components/CompleteTaskComponent.html":{},"index.html":{}}}],["sampl",{"_index":189,"title":{},"body":{"components/AboutComponent.html":{}}}],["scope",{"_index":1643,"title":{},"body":{"index.html":{}}}],["screen",{"_index":140,"title":{},"body":{"components/AboutComponent.html":{},"components/HeaderComponent.html":{},"components/ListItemComponent.html":{},"components/SidenavTasksComponent.html":{},"components/TaskFormComponent.html":{},"components/TasksFilterComponent.html":{},"injectables/UtilsService.html":{},"index.html":{}}}],["screenshot",{"_index":158,"title":{},"body":{"components/AboutComponent.html":{},"index.html":{}}}],["script",{"_index":1678,"title":{},"body":{"index.html":{}}}],["scroll",{"_index":50,"title":{},"body":{"components/AboutComponent.html":{}}}],["scrolltotop",{"_index":32,"title":{},"body":{"components/AboutComponent.html":{}}}],["search",{"_index":228,"title":{},"body":{"components/AboutComponent.html":{},"components/HeaderComponent.html":{},"components/TasksFilterComponent.html":{}}}],["section",{"_index":209,"title":{},"body":{"components/AboutComponent.html":{},"index.html":{}}}],["see",{"_index":229,"title":{},"body":{"components/AboutComponent.html":{},"index.html":{}}}],["seed",{"_index":1697,"title":{},"body":{"index.html":{}}}],["seem",{"_index":866,"title":{},"body":{"components/EditTaskComponent.html":{},"index.html":{}}}],["seen",{"_index":197,"title":{},"body":{"components/AboutComponent.html":{}}}],["segement",{"_index":1203,"title":{},"body":{"components/SidenavTasksComponent.html":{}}}],["select",{"_index":176,"title":{},"body":{"components/AboutComponent.html":{},"components/ButtonsComponent.html":{},"components/ConfirmDeleteTaskComponent.html":{},"components/RecurringTaskComponent.html":{},"components/SidenavTasksComponent.html":{},"components/TasksFilterComponent.html":{},"index.html":{}}}],["select(index",{"_index":1211,"title":{},"body":{"components/SidenavTasksComponent.html":{}}}],["selectedindex",{"_index":1193,"title":{},"body":{"components/SidenavTasksComponent.html":{}}}],["selector",{"_index":17,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ButtonBarComponent.html":{},"components/ButtonsComponent.html":{},"components/CompleteTaskComponent.html":{},"components/CompleteTasksTableComponent.html":{},"components/ConfirmDeleteTaskComponent.html":{},"components/CreateTaskComponent.html":{},"components/EditTaskComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/ListItemComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PendingTasksTableComponent.html":{},"components/RecurringTaskComponent.html":{},"components/SidenavTasksComponent.html":{},"components/TaskFormComponent.html":{},"components/TasksComponent.html":{},"components/TasksFilterComponent.html":{}}}],["send",{"_index":632,"title":{},"body":{"components/ConfirmDeleteTaskComponent.html":{}}}],["sens",{"_index":553,"title":{},"body":{"components/CompleteTaskComponent.html":{},"components/TaskFormComponent.html":{}}}],["separ",{"_index":122,"title":{},"body":{"components/AboutComponent.html":{},"index.html":{}}}],["sequenc",{"_index":801,"title":{},"body":{"components/EditTaskComponent.html":{},"components/RecurringTaskComponent.html":{},"index.html":{}}}],["server",{"_index":1437,"title":{},"body":{"components/TasksFilterComponent.html":{},"index.html":{}}}],["servic",{"_index":339,"title":{},"body":{"components/AppComponent.html":{},"modules/CompleteTaskModule.html":{},"modules/ConfirmDeleteTaskModule.html":{},"modules/CoreModule.html":{},"modules/CreateTaskModule.html":{},"modules/EditTaskModule.html":{},"modules/HeaderModule.html":{},"injectables/HttpService.html":{},"classes/Logger.html":{},"injectables/LoggerService.html":{},"modules/SidenavTasksModule.html":{},"modules/TaskFormModule.html":{},"modules/TasksButtonBarModule.html":{},"modules/TasksButtonsModule.html":{},"modules/TasksDialogModule.html":{},"modules/TasksFilterModule.html":{},"modules/TasksModule.html":{},"modules/TasksTableModule.html":{}}}],["services/consol",{"_index":708,"title":{},"body":{"modules/CoreModule.html":{}}}],["services/http.servic",{"_index":710,"title":{},"body":{"modules/CoreModule.html":{}}}],["services/loader.servic",{"_index":711,"title":{},"body":{"modules/CoreModule.html":{}}}],["services/logger.servic",{"_index":712,"title":{},"body":{"modules/CoreModule.html":{}}}],["set",{"_index":58,"title":{},"body":{"components/AboutComponent.html":{},"components/CompleteTaskComponent.html":{},"components/HeaderComponent.html":{},"injectables/LoaderService.html":{},"interfaces/LoaderState.html":{},"components/SidenavTasksComponent.html":{},"classes/Task.html":{},"components/TaskFormComponent.html":{},"injectables/UtilsService.html":{},"index.html":{}}}],["setshowsearchbar",{"_index":969,"title":{},"body":{"components/HeaderComponent.html":{}}}],["setshowsearchbar(showsearchbar",{"_index":977,"title":{},"body":{"components/HeaderComponent.html":{}}}],["setup",{"_index":1615,"title":{},"body":{"index.html":{}}}],["share",{"_index":720,"title":{},"body":{"modules/CoreModule.html":{},"modules/CreateTaskModule.html":{},"modules/TasksModule.html":{},"injectables/UtilsService.html":{}}}],["show",{"_index":420,"title":{},"body":{"components/ButtonBarComponent.html":{},"components/HeaderComponent.html":{},"injectables/HttpService.html":{},"injectables/LoaderService.html":{},"interfaces/LoaderState.html":{}}}],["showbackbutton",{"_index":406,"title":{},"body":{"components/ButtonBarComponent.html":{}}}],["showfirstlastbutton",{"_index":407,"title":{},"body":{"components/ButtonBarComponent.html":{}}}],["showload",{"_index":1026,"title":{},"body":{"injectables/HttpService.html":{}}}],["shown",{"_index":173,"title":{},"body":{"components/AboutComponent.html":{}}}],["showsearchbar",{"_index":966,"title":{},"body":{"components/HeaderComponent.html":{}}}],["side",{"_index":167,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/HeaderComponent.html":{},"components/SidenavTasksComponent.html":{},"components/TasksComponent.html":{},"index.html":{}}}],["sidenav",{"_index":163,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ButtonBarComponent.html":{},"components/ButtonsComponent.html":{},"components/CompleteTaskComponent.html":{},"components/CompleteTasksTableComponent.html":{},"components/ConfirmDeleteTaskComponent.html":{},"components/CreateTaskComponent.html":{},"components/EditTaskComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/ListItemComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PendingTasksTableComponent.html":{},"components/RecurringTaskComponent.html":{},"components/SidenavTasksComponent.html":{},"modules/SidenavTasksModule.html":{},"components/TaskFormComponent.html":{},"components/TasksComponent.html":{},"components/TasksFilterComponent.html":{},"injectables/UtilsService.html":{}}}],["sidenavmenuchang",{"_index":1485,"title":{},"body":{"injectables/UtilsService.html":{}}}],["sidenavmenuev",{"_index":981,"title":{},"body":{"components/HeaderComponent.html":{},"injectables/UtilsService.html":{},"miscellaneous/typealiases.html":{}}}],["sidenavmenust",{"_index":967,"title":{},"body":{"components/HeaderComponent.html":{}}}],["sidenavrout",{"_index":1194,"title":{},"body":{"components/SidenavTasksComponent.html":{}}}],["sidenavtaskscompon",{"_index":264,"title":{"components/SidenavTasksComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ButtonBarComponent.html":{},"components/ButtonsComponent.html":{},"components/CompleteTaskComponent.html":{},"components/CompleteTasksTableComponent.html":{},"components/ConfirmDeleteTaskComponent.html":{},"components/CreateTaskComponent.html":{},"components/EditTaskComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/ListItemComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PendingTasksTableComponent.html":{},"components/RecurringTaskComponent.html":{},"components/SidenavTasksComponent.html":{},"modules/SidenavTasksModule.html":{},"components/TaskFormComponent.html":{},"components/TasksComponent.html":{},"components/TasksFilterComponent.html":{},"coverage.html":{},"overview.html":{}}}],["sidenavtasksmodul",{"_index":1267,"title":{"modules/SidenavTasksModule.html":{}},"body":{"modules/SidenavTasksModule.html":{},"modules/TasksModule.html":{},"modules.html":{},"overview.html":{}}}],["simpl",{"_index":118,"title":{},"body":{"components/AboutComponent.html":{},"injectables/HttpService.html":{},"classes/Logger.html":{},"injectables/LoggerService.html":{},"index.html":{}}}],["singl",{"_index":463,"title":{},"body":{"components/ButtonsComponent.html":{},"modules/CoreModule.html":{},"components/EditTaskComponent.html":{},"components/HeaderComponent.html":{},"components/RecurringTaskComponent.html":{},"components/TasksFilterComponent.html":{},"modules/TasksModule.html":{},"index.html":{}}}],["singleton",{"_index":699,"title":{},"body":{"modules/CoreModule.html":{}}}],["size",{"_index":151,"title":{},"body":{"components/AboutComponent.html":{},"components/ButtonBarComponent.html":{},"components/HeaderComponent.html":{},"components/SidenavTasksComponent.html":{},"components/TaskFormComponent.html":{},"components/TasksFilterComponent.html":{},"injectables/UtilsService.html":{},"index.html":{}}}],["size.match",{"_index":1516,"title":{},"body":{"injectables/UtilsService.html":{}}}],["skipself",{"_index":702,"title":{},"body":{"modules/CoreModule.html":{}}}],["small",{"_index":1409,"title":{},"body":{"components/TasksFilterComponent.html":{},"injectables/UtilsService.html":{},"index.html":{}}}],["smaller",{"_index":139,"title":{},"body":{"components/AboutComponent.html":{},"components/HeaderComponent.html":{},"components/SidenavTasksComponent.html":{},"components/TaskFormComponent.html":{},"components/TasksFilterComponent.html":{},"injectables/UtilsService.html":{},"index.html":{}}}],["snackbar",{"_index":538,"title":{},"body":{"components/CompleteTaskComponent.html":{},"components/EditTaskComponent.html":{}}}],["snode",{"_index":1677,"title":{},"body":{"index.html":{}}}],["solid",{"_index":306,"title":{},"body":{"modules/AboutModule.html":{},"modules/CompleteTaskModule.html":{},"modules/ConfirmDeleteTaskModule.html":{},"modules/CreateTaskModule.html":{},"modules/EditTaskModule.html":{},"modules/HeaderModule.html":{},"modules/SidenavTasksModule.html":{},"modules/TasksButtonBarModule.html":{},"modules/TasksButtonsModule.html":{},"modules/TasksFilterModule.html":{},"modules/TasksTableModule.html":{},"dependencies.html":{}}}],["solut",{"_index":1774,"title":{},"body":{"index.html":{}}}],["someth",{"_index":338,"title":{},"body":{"components/AppComponent.html":{}}}],["sorri",{"_index":1174,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["sort",{"_index":125,"title":{},"body":{"components/AboutComponent.html":{},"components/EditTaskComponent.html":{}}}],["sourc",{"_index":3,"title":{},"body":{"components/AboutComponent.html":{},"modules/AboutModule.html":{},"modules/AboutRoutingModule.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ButtonBarComponent.html":{},"components/ButtonsComponent.html":{},"components/CompleteTaskComponent.html":{},"modules/CompleteTaskModule.html":{},"components/CompleteTasksTableComponent.html":{},"components/ConfirmDeleteTaskComponent.html":{},"modules/ConfirmDeleteTaskModule.html":{},"injectables/ConsoleLoggerService.html":{},"modules/CoreModule.html":{},"components/CreateTaskComponent.html":{},"modules/CreateTaskModule.html":{},"components/EditTaskComponent.html":{},"modules/EditTaskModule.html":{},"components/FooterComponent.html":{},"modules/FooterModule.html":{},"components/HeaderComponent.html":{},"modules/HeaderModule.html":{},"injectables/HttpService.html":{},"components/ListItemComponent.html":{},"injectables/LoaderService.html":{},"interfaces/LoaderState.html":{},"classes/Logger.html":{},"injectables/LoggerService.html":{},"injectables/MatPaginatorCustom.html":{},"components/PageNotFoundComponent.html":{},"components/PendingTasksTableComponent.html":{},"components/RecurringTaskComponent.html":{},"components/SidenavTasksComponent.html":{},"modules/SidenavTasksModule.html":{},"classes/Task.html":{},"components/TaskFormComponent.html":{},"modules/TaskFormModule.html":{},"modules/TasksButtonBarModule.html":{},"modules/TasksButtonsModule.html":{},"components/TasksComponent.html":{},"modules/TasksDialogModule.html":{},"components/TasksFilterComponent.html":{},"modules/TasksFilterModule.html":{},"modules/TasksModule.html":{},"modules/TasksRoutingModule.html":{},"modules/TasksTableModule.html":{},"injectables/UtilsService.html":{},"index.html":{}}}],["space",{"_index":141,"title":{},"body":{"components/AboutComponent.html":{}}}],["special",{"_index":223,"title":{},"body":{"components/AboutComponent.html":{}}}],["specif",{"_index":1207,"title":{},"body":{"components/SidenavTasksComponent.html":{}}}],["speed",{"_index":1667,"title":{},"body":{"index.html":{}}}],["spinner",{"_index":1133,"title":{},"body":{"injectables/LoaderService.html":{},"interfaces/LoaderState.html":{}}}],["sqlite",{"_index":1607,"title":{},"body":{"index.html":{}}}],["src/.../consol",{"_index":1790,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.prod.t",{"_index":1788,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.t",{"_index":1789,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../task.model.t",{"_index":1786,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../utils.service.t",{"_index":1787,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/app/about/about.component.t",{"_index":8,"title":{},"body":{"components/AboutComponent.html":{},"coverage.html":{}}}],["src/app/about/about.component.ts:17",{"_index":67,"title":{},"body":{"components/AboutComponent.html":{}}}],["src/app/about/about.component.ts:19",{"_index":70,"title":{},"body":{"components/AboutComponent.html":{}}}],["src/app/about/about.component.ts:21",{"_index":37,"title":{},"body":{"components/AboutComponent.html":{}}}],["src/app/about/about.component.ts:30",{"_index":54,"title":{},"body":{"components/AboutComponent.html":{}}}],["src/app/about/about.component.ts:38",{"_index":44,"title":{},"body":{"components/AboutComponent.html":{}}}],["src/app/about/about.component.ts:55",{"_index":56,"title":{},"body":{"components/AboutComponent.html":{}}}],["src/app/about/about.component.ts:67",{"_index":61,"title":{},"body":{"components/AboutComponent.html":{}}}],["src/app/about/about.module.t",{"_index":285,"title":{},"body":{"modules/AboutModule.html":{}}}],["src/app/about/about.routing.t",{"_index":313,"title":{},"body":{"modules/AboutRoutingModule.html":{}}}],["src/app/app.component.t",{"_index":319,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:20",{"_index":336,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:22",{"_index":333,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:32",{"_index":334,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:39",{"_index":335,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.t",{"_index":358,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/app.routing.t",{"_index":375,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["src/app/components/pag",{"_index":1170,"title":{},"body":{"components/PageNotFoundComponent.html":{},"coverage.html":{}}}],["src/app/core/core.module.t",{"_index":698,"title":{},"body":{"modules/CoreModule.html":{}}}],["src/app/core/services/consol",{"_index":655,"title":{},"body":{"injectables/ConsoleLoggerService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/core/services/http.service.t",{"_index":1007,"title":{},"body":{"injectables/HttpService.html":{},"coverage.html":{}}}],["src/app/core/services/http.service.ts:107",{"_index":1046,"title":{},"body":{"injectables/HttpService.html":{}}}],["src/app/core/services/http.service.ts:114",{"_index":1036,"title":{},"body":{"injectables/HttpService.html":{}}}],["src/app/core/services/http.service.ts:25",{"_index":1029,"title":{},"body":{"injectables/HttpService.html":{}}}],["src/app/core/services/http.service.ts:39",{"_index":1033,"title":{},"body":{"injectables/HttpService.html":{}}}],["src/app/core/services/http.service.ts:50",{"_index":1045,"title":{},"body":{"injectables/HttpService.html":{}}}],["src/app/core/services/http.service.ts:62",{"_index":1043,"title":{},"body":{"injectables/HttpService.html":{}}}],["src/app/core/services/http.service.ts:73",{"_index":1031,"title":{},"body":{"injectables/HttpService.html":{}}}],["src/app/core/services/http.service.ts:83",{"_index":1035,"title":{},"body":{"injectables/HttpService.html":{}}}],["src/app/core/services/http.service.ts:95",{"_index":1039,"title":{},"body":{"injectables/HttpService.html":{}}}],["src/app/core/services/loader.service.t",{"_index":1132,"title":{},"body":{"injectables/LoaderService.html":{},"interfaces/LoaderState.html":{},"coverage.html":{}}}],["src/app/core/services/loader.service.ts:20",{"_index":1138,"title":{},"body":{"injectables/LoaderService.html":{}}}],["src/app/core/services/loader.service.ts:22",{"_index":1135,"title":{},"body":{"injectables/LoaderService.html":{}}}],["src/app/core/services/loader.service.ts:32",{"_index":1137,"title":{},"body":{"injectables/LoaderService.html":{}}}],["src/app/core/services/loader.service.ts:39",{"_index":1136,"title":{},"body":{"injectables/LoaderService.html":{}}}],["src/app/core/services/logger.service.t",{"_index":1145,"title":{},"body":{"classes/Logger.html":{},"injectables/LoggerService.html":{},"coverage.html":{}}}],["src/app/core/services/logger.service.ts:11",{"_index":1148,"title":{},"body":{"classes/Logger.html":{}}}],["src/app/core/services/logger.service.ts:13",{"_index":1146,"title":{},"body":{"classes/Logger.html":{}}}],["src/app/core/services/logger.service.ts:25",{"_index":1153,"title":{},"body":{"injectables/LoggerService.html":{}}}],["src/app/core/services/logger.service.ts:27",{"_index":1154,"title":{},"body":{"injectables/LoggerService.html":{}}}],["src/app/core/services/logger.service.ts:29",{"_index":1152,"title":{},"body":{"injectables/LoggerService.html":{}}}],["src/app/core/services/logger.service.ts:38",{"_index":1151,"title":{},"body":{"injectables/LoggerService.html":{}}}],["src/app/core/services/logger.service.ts:9",{"_index":1147,"title":{},"body":{"classes/Logger.html":{}}}],["src/app/footer/footer.component.t",{"_index":945,"title":{},"body":{"components/FooterComponent.html":{},"coverage.html":{}}}],["src/app/footer/footer.module.t",{"_index":952,"title":{},"body":{"modules/FooterModule.html":{}}}],["src/app/header/header.component.t",{"_index":954,"title":{},"body":{"components/HeaderComponent.html":{},"coverage.html":{}}}],["src/app/header/header.component.ts:24",{"_index":983,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/header/header.component.ts:26",{"_index":979,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/header/header.component.ts:28",{"_index":980,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/header/header.component.ts:30",{"_index":982,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/header/header.component.ts:32",{"_index":971,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/header/header.component.ts:39",{"_index":972,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/header/header.component.ts:47",{"_index":973,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/header/header.component.ts:63",{"_index":976,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/header/header.component.ts:79",{"_index":978,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/header/header.module.t",{"_index":1000,"title":{},"body":{"modules/HeaderModule.html":{}}}],["src/app/tasks/button",{"_index":384,"title":{},"body":{"components/ButtonBarComponent.html":{},"modules/TasksButtonBarModule.html":{},"coverage.html":{}}}],["src/app/tasks/buttons/buttons.component.t",{"_index":436,"title":{},"body":{"components/ButtonsComponent.html":{},"coverage.html":{}}}],["src/app/tasks/buttons/buttons.component.ts:102",{"_index":460,"title":{},"body":{"components/ButtonsComponent.html":{}}}],["src/app/tasks/buttons/buttons.component.ts:111",{"_index":453,"title":{},"body":{"components/ButtonsComponent.html":{}}}],["src/app/tasks/buttons/buttons.component.ts:118",{"_index":454,"title":{},"body":{"components/ButtonsComponent.html":{}}}],["src/app/tasks/buttons/buttons.component.ts:26",{"_index":446,"title":{},"body":{"components/ButtonsComponent.html":{}}}],["src/app/tasks/buttons/buttons.component.ts:28",{"_index":447,"title":{},"body":{"components/ButtonsComponent.html":{}}}],["src/app/tasks/buttons/buttons.component.ts:30",{"_index":448,"title":{},"body":{"components/ButtonsComponent.html":{}}}],["src/app/tasks/buttons/buttons.component.ts:32",{"_index":449,"title":{},"body":{"components/ButtonsComponent.html":{}}}],["src/app/tasks/buttons/buttons.component.ts:34",{"_index":450,"title":{},"body":{"components/ButtonsComponent.html":{}}}],["src/app/tasks/buttons/buttons.component.ts:36",{"_index":451,"title":{},"body":{"components/ButtonsComponent.html":{}}}],["src/app/tasks/buttons/buttons.component.ts:38",{"_index":452,"title":{},"body":{"components/ButtonsComponent.html":{}}}],["src/app/tasks/buttons/buttons.component.ts:40",{"_index":445,"title":{},"body":{"components/ButtonsComponent.html":{}}}],["src/app/tasks/buttons/buttons.component.ts:53",{"_index":456,"title":{},"body":{"components/ButtonsComponent.html":{}}}],["src/app/tasks/buttons/buttons.component.ts:74",{"_index":458,"title":{},"body":{"components/ButtonsComponent.html":{}}}],["src/app/tasks/buttons/task",{"_index":1399,"title":{},"body":{"modules/TasksButtonsModule.html":{}}}],["src/app/tasks/dialogs/complet",{"_index":501,"title":{},"body":{"components/CompleteTaskComponent.html":{},"modules/CompleteTaskModule.html":{},"coverage.html":{}}}],["src/app/tasks/dialogs/confirm",{"_index":623,"title":{},"body":{"components/ConfirmDeleteTaskComponent.html":{},"modules/ConfirmDeleteTaskModule.html":{},"coverage.html":{}}}],["src/app/tasks/dialogs/cr",{"_index":725,"title":{},"body":{"components/CreateTaskComponent.html":{},"modules/CreateTaskModule.html":{},"coverage.html":{}}}],["src/app/tasks/dialogs/task",{"_index":1405,"title":{},"body":{"modules/TasksDialogModule.html":{}}}],["src/app/tasks/edit/edit",{"_index":769,"title":{},"body":{"components/EditTaskComponent.html":{},"modules/EditTaskModule.html":{},"coverage.html":{}}}],["src/app/tasks/edit/recur",{"_index":1178,"title":{},"body":{"components/RecurringTaskComponent.html":{},"coverage.html":{}}}],["src/app/tasks/filter/task",{"_index":1407,"title":{},"body":{"components/TasksFilterComponent.html":{},"modules/TasksFilterModule.html":{},"coverage.html":{}}}],["src/app/tasks/form/task",{"_index":1305,"title":{},"body":{"components/TaskFormComponent.html":{},"modules/TaskFormModule.html":{},"coverage.html":{}}}],["src/app/tasks/shared/models/task.model.t",{"_index":1284,"title":{},"body":{"classes/Task.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/app/tasks/shared/models/task.model.ts:12",{"_index":1295,"title":{},"body":{"classes/Task.html":{}}}],["src/app/tasks/shared/models/task.model.ts:14",{"_index":1299,"title":{},"body":{"classes/Task.html":{}}}],["src/app/tasks/shared/models/task.model.ts:16",{"_index":1292,"title":{},"body":{"classes/Task.html":{}}}],["src/app/tasks/shared/models/task.model.ts:18",{"_index":1293,"title":{},"body":{"classes/Task.html":{}}}],["src/app/tasks/shared/models/task.model.ts:20",{"_index":1291,"title":{},"body":{"classes/Task.html":{}}}],["src/app/tasks/shared/models/task.model.ts:22",{"_index":1298,"title":{},"body":{"classes/Task.html":{}}}],["src/app/tasks/shared/models/task.model.ts:24",{"_index":1301,"title":{},"body":{"classes/Task.html":{}}}],["src/app/tasks/shared/models/task.model.ts:26",{"_index":1304,"title":{},"body":{"classes/Task.html":{}}}],["src/app/tasks/shared/models/task.model.ts:28",{"_index":1294,"title":{},"body":{"classes/Task.html":{}}}],["src/app/tasks/shared/services/task.service.t",{"_index":1553,"title":{},"body":{"coverage.html":{}}}],["src/app/tasks/shared/services/tasks.datasource.t",{"_index":1555,"title":{},"body":{"coverage.html":{}}}],["src/app/tasks/shared/services/utils.service.t",{"_index":1479,"title":{},"body":{"injectables/UtilsService.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/app/tasks/shared/services/utils.service.ts:20",{"_index":1502,"title":{},"body":{"injectables/UtilsService.html":{}}}],["src/app/tasks/shared/services/utils.service.ts:22",{"_index":1498,"title":{},"body":{"injectables/UtilsService.html":{}}}],["src/app/tasks/shared/services/utils.service.ts:24",{"_index":1500,"title":{},"body":{"injectables/UtilsService.html":{}}}],["src/app/tasks/shared/services/utils.service.ts:26",{"_index":1490,"title":{},"body":{"injectables/UtilsService.html":{}}}],["src/app/tasks/shared/services/utils.service.ts:48",{"_index":1493,"title":{},"body":{"injectables/UtilsService.html":{}}}],["src/app/tasks/shared/services/utils.service.ts:68",{"_index":1497,"title":{},"body":{"injectables/UtilsService.html":{}}}],["src/app/tasks/shared/util/mat",{"_index":1155,"title":{},"body":{"injectables/MatPaginatorCustom.html":{},"coverage.html":{}}}],["src/app/tasks/sidenav/list",{"_index":1072,"title":{},"body":{"components/ListItemComponent.html":{},"coverage.html":{}}}],["src/app/tasks/sidenav/sidenav",{"_index":1187,"title":{},"body":{"components/SidenavTasksComponent.html":{},"modules/SidenavTasksModule.html":{},"coverage.html":{}}}],["src/app/tasks/table/complet",{"_index":612,"title":{},"body":{"components/CompleteTasksTableComponent.html":{},"coverage.html":{}}}],["src/app/tasks/table/pend",{"_index":1175,"title":{},"body":{"components/PendingTasksTableComponent.html":{},"coverage.html":{}}}],["src/app/tasks/table/task",{"_index":1474,"title":{},"body":{"modules/TasksTableModule.html":{},"coverage.html":{}}}],["src/app/tasks/tasks.component.t",{"_index":1402,"title":{},"body":{"components/TasksComponent.html":{},"coverage.html":{}}}],["src/app/tasks/tasks.module.t",{"_index":1457,"title":{},"body":{"modules/TasksModule.html":{}}}],["src/app/tasks/tasks.routing.t",{"_index":1463,"title":{},"body":{"modules/TasksRoutingModule.html":{}}}],["src/environments/environment.prod.t",{"_index":1568,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.t",{"_index":1570,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["stack",{"_index":1602,"title":{},"body":{"index.html":{}}}],["start",{"_index":700,"title":{"index.html":{}},"body":{"modules/CoreModule.html":{},"components/EditTaskComponent.html":{},"components/SidenavTasksComponent.html":{},"index.html":{}}}],["start:deval",{"_index":1699,"title":{},"body":{"index.html":{}}}],["startindex",{"_index":1164,"title":{},"body":{"injectables/MatPaginatorCustom.html":{}}}],["startonc",{"_index":1689,"title":{},"body":{"index.html":{}}}],["state",{"_index":123,"title":{},"body":{"components/AboutComponent.html":{},"components/HeaderComponent.html":{},"injectables/LoaderService.html":{},"interfaces/LoaderState.html":{},"components/SidenavTasksComponent.html":{},"injectables/UtilsService.html":{},"index.html":{}}}],["statement",{"_index":1527,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":722,"title":{},"body":{"modules/CoreModule.html":{},"modules/TasksModule.html":{}}}],["statu",{"_index":1352,"title":{},"body":{"components/TaskFormComponent.html":{}}}],["step",{"_index":1680,"title":{},"body":{"index.html":{}}}],["store",{"_index":1748,"title":{},"body":{"index.html":{}}}],["string",{"_index":528,"title":{},"body":{"components/CompleteTaskComponent.html":{},"components/ConfirmDeleteTaskComponent.html":{},"injectables/ConsoleLoggerService.html":{},"components/EditTaskComponent.html":{},"injectables/HttpService.html":{},"components/ListItemComponent.html":{},"classes/Logger.html":{},"injectables/LoggerService.html":{},"injectables/MatPaginatorCustom.html":{},"components/SidenavTasksComponent.html":{},"classes/Task.html":{},"components/TaskFormComponent.html":{},"injectables/UtilsService.html":{}}}],["style",{"_index":1074,"title":{},"body":{"components/ListItemComponent.html":{}}}],["styleurl",{"_index":18,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ButtonBarComponent.html":{},"components/ButtonsComponent.html":{},"components/CompleteTaskComponent.html":{},"components/CompleteTasksTableComponent.html":{},"components/ConfirmDeleteTaskComponent.html":{},"components/CreateTaskComponent.html":{},"components/EditTaskComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/ListItemComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PendingTasksTableComponent.html":{},"components/RecurringTaskComponent.html":{},"components/SidenavTasksComponent.html":{},"components/TaskFormComponent.html":{},"components/TasksComponent.html":{},"components/TasksFilterComponent.html":{}}}],["sub",{"_index":27,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/CompleteTaskComponent.html":{},"components/ConfirmDeleteTaskComponent.html":{},"components/CreateTaskComponent.html":{},"components/EditTaskComponent.html":{},"components/HeaderComponent.html":{},"components/ListItemComponent.html":{},"components/RecurringTaskComponent.html":{},"components/SidenavTasksComponent.html":{},"components/TaskFormComponent.html":{},"components/TasksFilterComponent.html":{},"injectables/UtilsService.html":{}}}],["sub.unsubscrib",{"_index":1523,"title":{},"body":{"injectables/UtilsService.html":{}}}],["subform",{"_index":850,"title":{},"body":{"components/EditTaskComponent.html":{}}}],["subject",{"_index":1139,"title":{},"body":{"injectables/LoaderService.html":{},"interfaces/LoaderState.html":{},"injectables/UtilsService.html":{}}}],["subload",{"_index":342,"title":{},"body":{"components/AppComponent.html":{}}}],["submenutoggl",{"_index":1245,"title":{},"body":{"components/SidenavTasksComponent.html":{}}}],["suboverdu",{"_index":1113,"title":{},"body":{"components/ListItemComponent.html":{}}}],["subscreens",{"_index":1252,"title":{},"body":{"components/SidenavTasksComponent.html":{}}}],["subscrib",{"_index":484,"title":{},"body":{"components/ButtonsComponent.html":{},"components/CreateTaskComponent.html":{},"components/EditTaskComponent.html":{},"components/ListItemComponent.html":{},"components/SidenavTasksComponent.html":{},"components/TasksFilterComponent.html":{}}}],["subscribe((s",{"_index":1514,"title":{},"body":{"injectables/UtilsService.html":{}}}],["subscribe((task",{"_index":921,"title":{},"body":{"components/EditTaskComponent.html":{}}}],["subscribe(next",{"_index":1248,"title":{},"body":{"components/SidenavTasksComponent.html":{}}}],["subscript",{"_index":46,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/CompleteTaskComponent.html":{},"components/ConfirmDeleteTaskComponent.html":{},"components/CreateTaskComponent.html":{},"components/EditTaskComponent.html":{},"components/HeaderComponent.html":{},"components/ListItemComponent.html":{},"components/RecurringTaskComponent.html":{},"components/SidenavTasksComponent.html":{},"components/TaskFormComponent.html":{},"components/TasksFilterComponent.html":{},"injectables/UtilsService.html":{}}}],["subtoday",{"_index":1122,"title":{},"body":{"components/ListItemComponent.html":{}}}],["subtomorrow",{"_index":1127,"title":{},"body":{"components/ListItemComponent.html":{}}}],["successfulli",{"_index":582,"title":{},"body":{"components/CompleteTaskComponent.html":{},"components/ConfirmDeleteTaskComponent.html":{},"components/CreateTaskComponent.html":{},"components/EditTaskComponent.html":{},"index.html":{}}}],["support",{"_index":91,"title":{},"body":{"components/AboutComponent.html":{},"modules.html":{}}}],["sure",{"_index":647,"title":{},"body":{"components/ConfirmDeleteTaskComponent.html":{},"modules/CoreModule.html":{},"components/TaskFormComponent.html":{}}}],["svg",{"_index":302,"title":{},"body":{"modules/AboutModule.html":{},"modules/CompleteTaskModule.html":{},"modules/ConfirmDeleteTaskModule.html":{},"modules/CreateTaskModule.html":{},"modules/EditTaskModule.html":{},"modules/HeaderModule.html":{},"modules/SidenavTasksModule.html":{},"modules/TasksButtonBarModule.html":{},"modules/TasksButtonsModule.html":{},"modules/TasksFilterModule.html":{},"modules/TasksTableModule.html":{},"dependencies.html":{},"modules.html":{}}}],["switchmap(formdata",{"_index":1348,"title":{},"body":{"components/TaskFormComponent.html":{}}}],["sync",{"_index":1669,"title":{},"body":{"index.html":{}}}],["system",{"_index":1654,"title":{},"body":{"index.html":{}}}],["tabl",{"_index":110,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ButtonBarComponent.html":{},"components/ButtonsComponent.html":{},"components/CompleteTaskComponent.html":{},"components/CompleteTasksTableComponent.html":{},"components/ConfirmDeleteTaskComponent.html":{},"components/CreateTaskComponent.html":{},"components/EditTaskComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/ListItemComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PendingTasksTableComponent.html":{},"components/RecurringTaskComponent.html":{},"components/SidenavTasksComponent.html":{},"components/TaskFormComponent.html":{},"components/TasksComponent.html":{},"components/TasksFilterComponent.html":{},"coverage.html":{},"index.html":{}}}],["table'},{'nam",{"_index":246,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ButtonBarComponent.html":{},"components/ButtonsComponent.html":{},"components/CompleteTaskComponent.html":{},"components/CompleteTasksTableComponent.html":{},"components/ConfirmDeleteTaskComponent.html":{},"components/CreateTaskComponent.html":{},"components/EditTaskComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/ListItemComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PendingTasksTableComponent.html":{},"components/RecurringTaskComponent.html":{},"components/SidenavTasksComponent.html":{},"components/TaskFormComponent.html":{},"components/TasksComponent.html":{},"components/TasksFilterComponent.html":{}}}],["table.compon",{"_index":621,"title":{},"body":{"components/CompleteTasksTableComponent.html":{},"components/PendingTasksTableComponent.html":{},"modules/TasksRoutingModule.html":{},"modules/TasksTableModule.html":{}}}],["table.component.css",{"_index":615,"title":{},"body":{"components/CompleteTasksTableComponent.html":{},"components/PendingTasksTableComponent.html":{}}}],["table.component.html",{"_index":616,"title":{},"body":{"components/CompleteTasksTableComponent.html":{},"components/PendingTasksTableComponent.html":{}}}],["table.component.t",{"_index":613,"title":{},"body":{"components/CompleteTasksTableComponent.html":{},"components/PendingTasksTableComponent.html":{},"coverage.html":{}}}],["table.component.ts:18",{"_index":618,"title":{},"body":{"components/CompleteTasksTableComponent.html":{},"components/PendingTasksTableComponent.html":{}}}],["table.modul",{"_index":1462,"title":{},"body":{"modules/TasksModule.html":{}}}],["table.module.t",{"_index":1475,"title":{},"body":{"modules/TasksTableModule.html":{}}}],["tablesort(document.getelementbyid('coverag",{"_index":1571,"title":{},"body":{"coverage.html":{}}}],["tag",{"_index":93,"title":{},"body":{"components/AboutComponent.html":{}}}],["take",{"_index":1665,"title":{},"body":{"index.html":{}}}],["taken",{"_index":159,"title":{},"body":{"components/AboutComponent.html":{},"classes/Logger.html":{},"injectables/LoggerService.html":{}}}],["tap",{"_index":817,"title":{},"body":{"components/EditTaskComponent.html":{}}}],["task",{"_index":113,"title":{"classes/Task.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/ButtonBarComponent.html":{},"components/ButtonsComponent.html":{},"components/CompleteTaskComponent.html":{},"modules/CompleteTaskModule.html":{},"components/CompleteTasksTableComponent.html":{},"components/ConfirmDeleteTaskComponent.html":{},"modules/ConfirmDeleteTaskModule.html":{},"components/CreateTaskComponent.html":{},"modules/CreateTaskModule.html":{},"components/EditTaskComponent.html":{},"modules/EditTaskModule.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/ListItemComponent.html":{},"injectables/MatPaginatorCustom.html":{},"components/PageNotFoundComponent.html":{},"components/PendingTasksTableComponent.html":{},"components/RecurringTaskComponent.html":{},"components/SidenavTasksComponent.html":{},"modules/SidenavTasksModule.html":{},"classes/Task.html":{},"components/TaskFormComponent.html":{},"modules/TaskFormModule.html":{},"modules/TasksButtonsModule.html":{},"components/TasksComponent.html":{},"components/TasksFilterComponent.html":{},"modules/TasksFilterModule.html":{},"modules/TasksModule.html":{},"modules/TasksRoutingModule.html":{},"modules/TasksTableModule.html":{},"coverage.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["task'},{'nam",{"_index":244,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ButtonBarComponent.html":{},"components/ButtonsComponent.html":{},"components/CompleteTaskComponent.html":{},"components/CompleteTasksTableComponent.html":{},"components/ConfirmDeleteTaskComponent.html":{},"components/CreateTaskComponent.html":{},"components/EditTaskComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/ListItemComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PendingTasksTableComponent.html":{},"components/RecurringTaskComponent.html":{},"components/SidenavTasksComponent.html":{},"components/TaskFormComponent.html":{},"components/TasksComponent.html":{},"components/TasksFilterComponent.html":{}}}],["task(",{"_index":426,"title":{},"body":{"components/ButtonBarComponent.html":{},"components/ButtonsComponent.html":{},"components/CompleteTaskComponent.html":{}}}],["task.compon",{"_index":471,"title":{},"body":{"components/ButtonsComponent.html":{},"modules/CompleteTaskModule.html":{},"modules/ConfirmDeleteTaskModule.html":{},"modules/CreateTaskModule.html":{},"components/EditTaskComponent.html":{},"modules/EditTaskModule.html":{},"components/SidenavTasksComponent.html":{},"modules/TasksRoutingModule.html":{}}}],["task.component.css",{"_index":503,"title":{},"body":{"components/CompleteTaskComponent.html":{},"components/ConfirmDeleteTaskComponent.html":{},"components/CreateTaskComponent.html":{},"components/EditTaskComponent.html":{},"components/RecurringTaskComponent.html":{}}}],["task.component.html",{"_index":504,"title":{},"body":{"components/CompleteTaskComponent.html":{},"components/ConfirmDeleteTaskComponent.html":{},"components/CreateTaskComponent.html":{},"components/EditTaskComponent.html":{},"components/RecurringTaskComponent.html":{}}}],["task.component.t",{"_index":502,"title":{},"body":{"components/CompleteTaskComponent.html":{},"components/ConfirmDeleteTaskComponent.html":{},"components/CreateTaskComponent.html":{},"components/EditTaskComponent.html":{},"components/RecurringTaskComponent.html":{},"coverage.html":{}}}],["task.component.ts:105",{"_index":535,"title":{},"body":{"components/CompleteTaskComponent.html":{}}}],["task.component.ts:122",{"_index":796,"title":{},"body":{"components/EditTaskComponent.html":{}}}],["task.component.ts:137",{"_index":537,"title":{},"body":{"components/CompleteTaskComponent.html":{}}}],["task.component.ts:152",{"_index":799,"title":{},"body":{"components/EditTaskComponent.html":{}}}],["task.component.ts:179",{"_index":797,"title":{},"body":{"components/EditTaskComponent.html":{}}}],["task.component.ts:188",{"_index":800,"title":{},"body":{"components/EditTaskComponent.html":{}}}],["task.component.ts:21",{"_index":624,"title":{},"body":{"components/ConfirmDeleteTaskComponent.html":{}}}],["task.component.ts:218",{"_index":789,"title":{},"body":{"components/EditTaskComponent.html":{}}}],["task.component.ts:22",{"_index":1182,"title":{},"body":{"components/RecurringTaskComponent.html":{}}}],["task.component.ts:23",{"_index":630,"title":{},"body":{"components/ConfirmDeleteTaskComponent.html":{}}}],["task.component.ts:24",{"_index":732,"title":{},"body":{"components/CreateTaskComponent.html":{},"components/RecurringTaskComponent.html":{}}}],["task.component.ts:25",{"_index":631,"title":{},"body":{"components/ConfirmDeleteTaskComponent.html":{}}}],["task.component.ts:258",{"_index":802,"title":{},"body":{"components/EditTaskComponent.html":{}}}],["task.component.ts:26",{"_index":738,"title":{},"body":{"components/CreateTaskComponent.html":{},"components/RecurringTaskComponent.html":{}}}],["task.component.ts:27",{"_index":524,"title":{},"body":{"components/CompleteTaskComponent.html":{},"components/ConfirmDeleteTaskComponent.html":{}}}],["task.component.ts:28",{"_index":739,"title":{},"body":{"components/CreateTaskComponent.html":{},"components/RecurringTaskComponent.html":{}}}],["task.component.ts:29",{"_index":523,"title":{},"body":{"components/CompleteTaskComponent.html":{},"components/ConfirmDeleteTaskComponent.html":{}}}],["task.component.ts:30",{"_index":731,"title":{},"body":{"components/CreateTaskComponent.html":{},"components/RecurringTaskComponent.html":{}}}],["task.component.ts:31",{"_index":541,"title":{},"body":{"components/CompleteTaskComponent.html":{},"components/ConfirmDeleteTaskComponent.html":{}}}],["task.component.ts:33",{"_index":545,"title":{},"body":{"components/CompleteTaskComponent.html":{},"components/EditTaskComponent.html":{}}}],["task.component.ts:35",{"_index":547,"title":{},"body":{"components/CompleteTaskComponent.html":{},"components/EditTaskComponent.html":{}}}],["task.component.ts:37",{"_index":803,"title":{},"body":{"components/EditTaskComponent.html":{}}}],["task.component.ts:38",{"_index":548,"title":{},"body":{"components/CompleteTaskComponent.html":{}}}],["task.component.ts:39",{"_index":812,"title":{},"body":{"components/EditTaskComponent.html":{}}}],["task.component.ts:40",{"_index":556,"title":{},"body":{"components/CompleteTaskComponent.html":{}}}],["task.component.ts:41",{"_index":733,"title":{},"body":{"components/CreateTaskComponent.html":{},"components/EditTaskComponent.html":{}}}],["task.component.ts:42",{"_index":557,"title":{},"body":{"components/CompleteTaskComponent.html":{}}}],["task.component.ts:43",{"_index":625,"title":{},"body":{"components/ConfirmDeleteTaskComponent.html":{},"components/EditTaskComponent.html":{},"components/RecurringTaskComponent.html":{}}}],["task.component.ts:44",{"_index":521,"title":{},"body":{"components/CompleteTaskComponent.html":{}}}],["task.component.ts:45",{"_index":805,"title":{},"body":{"components/EditTaskComponent.html":{}}}],["task.component.ts:47",{"_index":806,"title":{},"body":{"components/EditTaskComponent.html":{}}}],["task.component.ts:48",{"_index":735,"title":{},"body":{"components/CreateTaskComponent.html":{}}}],["task.component.ts:49",{"_index":808,"title":{},"body":{"components/EditTaskComponent.html":{}}}],["task.component.ts:50",{"_index":626,"title":{},"body":{"components/ConfirmDeleteTaskComponent.html":{},"components/RecurringTaskComponent.html":{}}}],["task.component.ts:51",{"_index":811,"title":{},"body":{"components/EditTaskComponent.html":{}}}],["task.component.ts:53",{"_index":813,"title":{},"body":{"components/EditTaskComponent.html":{}}}],["task.component.ts:55",{"_index":815,"title":{},"body":{"components/EditTaskComponent.html":{}}}],["task.component.ts:57",{"_index":525,"title":{},"body":{"components/CompleteTaskComponent.html":{},"components/EditTaskComponent.html":{},"components/RecurringTaskComponent.html":{}}}],["task.component.ts:59",{"_index":807,"title":{},"body":{"components/EditTaskComponent.html":{}}}],["task.component.ts:61",{"_index":784,"title":{},"body":{"components/EditTaskComponent.html":{}}}],["task.component.ts:68",{"_index":529,"title":{},"body":{"components/CompleteTaskComponent.html":{}}}],["task.component.ts:72",{"_index":737,"title":{},"body":{"components/CreateTaskComponent.html":{}}}],["task.component.ts:75",{"_index":533,"title":{},"body":{"components/CompleteTaskComponent.html":{}}}],["task.component.ts:76",{"_index":1183,"title":{},"body":{"components/RecurringTaskComponent.html":{}}}],["task.component.ts:77",{"_index":627,"title":{},"body":{"components/ConfirmDeleteTaskComponent.html":{}}}],["task.component.ts:78",{"_index":786,"title":{},"body":{"components/EditTaskComponent.html":{}}}],["task.component.ts:84",{"_index":628,"title":{},"body":{"components/ConfirmDeleteTaskComponent.html":{}}}],["task.component.ts:88",{"_index":793,"title":{},"body":{"components/EditTaskComponent.html":{}}}],["task.component.ts:89",{"_index":736,"title":{},"body":{"components/CreateTaskComponent.html":{}}}],["task.component.ts:98",{"_index":534,"title":{},"body":{"components/CompleteTaskComponent.html":{}}}],["task.id",{"_index":578,"title":{},"body":{"components/CompleteTaskComponent.html":{},"components/EditTaskComponent.html":{}}}],["task.iscomplet",{"_index":841,"title":{},"body":{"components/EditTaskComponent.html":{}}}],["task.modul",{"_index":1283,"title":{},"body":{"modules/SidenavTasksModule.html":{},"modules/TasksDialogModule.html":{},"modules/TasksModule.html":{}}}],["task.module.t",{"_index":600,"title":{},"body":{"modules/CompleteTaskModule.html":{},"modules/ConfirmDeleteTaskModule.html":{},"modules/CreateTaskModule.html":{},"modules/EditTaskModule.html":{}}}],["task.nam",{"_index":924,"title":{},"body":{"components/EditTaskComponent.html":{}}}],["task.repeat",{"_index":847,"title":{},"body":{"components/EditTaskComponent.html":{}}}],["task/complet",{"_index":470,"title":{},"body":{"components/ButtonsComponent.html":{},"components/CompleteTaskComponent.html":{},"modules/CompleteTaskModule.html":{},"modules/TasksDialogModule.html":{},"coverage.html":{}}}],["task/confirm",{"_index":473,"title":{},"body":{"components/ButtonsComponent.html":{},"components/ConfirmDeleteTaskComponent.html":{},"modules/ConfirmDeleteTaskModule.html":{},"modules/TasksDialogModule.html":{},"coverage.html":{}}}],["task/creat",{"_index":726,"title":{},"body":{"components/CreateTaskComponent.html":{},"modules/CreateTaskModule.html":{},"components/SidenavTasksComponent.html":{},"modules/SidenavTasksModule.html":{},"coverage.html":{}}}],["taskfilt",{"_index":957,"title":{},"body":{"components/HeaderComponent.html":{},"components/TasksFilterComponent.html":{}}}],["taskfiltercompon",{"_index":984,"title":{},"body":{"components/HeaderComponent.html":{}}}],["taskfilterinput",{"_index":1414,"title":{},"body":{"components/TasksFilterComponent.html":{}}}],["taskformcompon",{"_index":266,"title":{"components/TaskFormComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ButtonBarComponent.html":{},"components/ButtonsComponent.html":{},"components/CompleteTaskComponent.html":{},"components/CompleteTasksTableComponent.html":{},"components/ConfirmDeleteTaskComponent.html":{},"components/CreateTaskComponent.html":{},"components/EditTaskComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/ListItemComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PendingTasksTableComponent.html":{},"components/RecurringTaskComponent.html":{},"components/SidenavTasksComponent.html":{},"components/TaskFormComponent.html":{},"modules/TaskFormModule.html":{},"components/TasksComponent.html":{},"components/TasksFilterComponent.html":{},"coverage.html":{},"overview.html":{}}}],["taskformmodul",{"_index":764,"title":{"modules/TaskFormModule.html":{}},"body":{"modules/CreateTaskModule.html":{},"modules/EditTaskModule.html":{},"modules/TaskFormModule.html":{},"modules/TasksDialogModule.html":{},"modules.html":{},"overview.html":{}}}],["tasks'},{'nam",{"_index":265,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ButtonBarComponent.html":{},"components/ButtonsComponent.html":{},"components/CompleteTaskComponent.html":{},"components/CompleteTasksTableComponent.html":{},"components/ConfirmDeleteTaskComponent.html":{},"components/CreateTaskComponent.html":{},"components/EditTaskComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/ListItemComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PendingTasksTableComponent.html":{},"components/RecurringTaskComponent.html":{},"components/SidenavTasksComponent.html":{},"components/TaskFormComponent.html":{},"components/TasksComponent.html":{},"components/TasksFilterComponent.html":{}}}],["tasks.compon",{"_index":1281,"title":{},"body":{"modules/SidenavTasksModule.html":{},"modules/TasksModule.html":{}}}],["tasks.component.css",{"_index":1189,"title":{},"body":{"components/SidenavTasksComponent.html":{},"components/TasksComponent.html":{}}}],["tasks.component.html",{"_index":1190,"title":{},"body":{"components/SidenavTasksComponent.html":{},"components/TasksComponent.html":{}}}],["tasks.component.t",{"_index":1188,"title":{},"body":{"components/SidenavTasksComponent.html":{},"coverage.html":{}}}],["tasks.component.ts:132",{"_index":1212,"title":{},"body":{"components/SidenavTasksComponent.html":{}}}],["tasks.component.ts:141",{"_index":1199,"title":{},"body":{"components/SidenavTasksComponent.html":{}}}],["tasks.component.ts:159",{"_index":1205,"title":{},"body":{"components/SidenavTasksComponent.html":{}}}],["tasks.component.ts:25",{"_index":1214,"title":{},"body":{"components/SidenavTasksComponent.html":{}}}],["tasks.component.ts:27",{"_index":1215,"title":{},"body":{"components/SidenavTasksComponent.html":{}}}],["tasks.component.ts:29",{"_index":1226,"title":{},"body":{"components/SidenavTasksComponent.html":{}}}],["tasks.component.ts:31",{"_index":1224,"title":{},"body":{"components/SidenavTasksComponent.html":{}}}],["tasks.component.ts:33",{"_index":1225,"title":{},"body":{"components/SidenavTasksComponent.html":{}}}],["tasks.component.ts:35",{"_index":1227,"title":{},"body":{"components/SidenavTasksComponent.html":{}}}],["tasks.component.ts:37",{"_index":1231,"title":{},"body":{"components/SidenavTasksComponent.html":{}}}],["tasks.component.ts:39",{"_index":1230,"title":{},"body":{"components/SidenavTasksComponent.html":{}}}],["tasks.component.ts:47",{"_index":1223,"title":{},"body":{"components/SidenavTasksComponent.html":{}}}],["tasks.component.ts:53",{"_index":1198,"title":{},"body":{"components/SidenavTasksComponent.html":{}}}],["tasks.component.ts:66",{"_index":1210,"title":{},"body":{"components/SidenavTasksComponent.html":{}}}],["tasks.component.ts:80",{"_index":1208,"title":{},"body":{"components/SidenavTasksComponent.html":{}}}],["tasks.component.ts:87",{"_index":1209,"title":{},"body":{"components/SidenavTasksComponent.html":{}}}],["tasks.modul",{"_index":1461,"title":{},"body":{"modules/TasksModule.html":{}}}],["tasks.module.t",{"_index":1272,"title":{},"body":{"modules/SidenavTasksModule.html":{}}}],["tasks.rout",{"_index":1458,"title":{},"body":{"modules/TasksModule.html":{}}}],["tasks/button",{"_index":819,"title":{},"body":{"components/EditTaskComponent.html":{},"modules/EditTaskModule.html":{},"modules/TasksTableModule.html":{}}}],["tasks/buttons/buttons.compon",{"_index":1401,"title":{},"body":{"modules/TasksButtonsModule.html":{}}}],["tasks/buttons/task",{"_index":1394,"title":{},"body":{"modules/TasksButtonBarModule.html":{},"modules/TasksTableModule.html":{}}}],["tasks/complet",{"_index":1229,"title":{},"body":{"components/SidenavTasksComponent.html":{}}}],["tasks/dialogs/complet",{"_index":469,"title":{},"body":{"components/ButtonsComponent.html":{},"modules/CompleteTaskModule.html":{},"modules/TasksDialogModule.html":{}}}],["tasks/dialogs/confirm",{"_index":472,"title":{},"body":{"components/ButtonsComponent.html":{},"modules/ConfirmDeleteTaskModule.html":{},"modules/TasksDialogModule.html":{}}}],["tasks/dialogs/cr",{"_index":768,"title":{},"body":{"modules/CreateTaskModule.html":{},"components/SidenavTasksComponent.html":{},"modules/SidenavTasksModule.html":{}}}],["tasks/dialogs/task",{"_index":941,"title":{},"body":{"modules/EditTaskModule.html":{},"modules/TasksTableModule.html":{}}}],["tasks/edit/edit",{"_index":1459,"title":{},"body":{"modules/TasksModule.html":{},"modules/TasksRoutingModule.html":{}}}],["tasks/filter/task",{"_index":985,"title":{},"body":{"components/HeaderComponent.html":{},"modules/HeaderModule.html":{},"modules/TasksFilterModule.html":{}}}],["tasks/form/task",{"_index":741,"title":{},"body":{"components/CreateTaskComponent.html":{},"modules/CreateTaskModule.html":{},"components/EditTaskComponent.html":{},"modules/EditTaskModule.html":{},"modules/TaskFormModule.html":{},"modules/TasksDialogModule.html":{}}}],["tasks/pend",{"_index":1228,"title":{},"body":{"components/SidenavTasksComponent.html":{}}}],["tasks/shared/models/task.model",{"_index":433,"title":{},"body":{"components/ButtonBarComponent.html":{},"components/ButtonsComponent.html":{},"components/CompleteTaskComponent.html":{},"components/ConfirmDeleteTaskComponent.html":{},"components/CreateTaskComponent.html":{},"components/EditTaskComponent.html":{},"components/RecurringTaskComponent.html":{},"components/TaskFormComponent.html":{}}}],["tasks/shared/services/task.servic",{"_index":564,"title":{},"body":{"components/CompleteTaskComponent.html":{},"components/ConfirmDeleteTaskComponent.html":{},"components/CreateTaskComponent.html":{},"components/EditTaskComponent.html":{},"components/ListItemComponent.html":{},"components/SidenavTasksComponent.html":{},"components/TasksFilterComponent.html":{},"modules/TasksModule.html":{}}}],["tasks/shared/services/utils.servic",{"_index":474,"title":{},"body":{"components/ButtonsComponent.html":{},"components/EditTaskComponent.html":{},"components/HeaderComponent.html":{},"components/SidenavTasksComponent.html":{},"components/TaskFormComponent.html":{},"components/TasksFilterComponent.html":{},"modules/TasksModule.html":{}}}],["tasks/shared/util/mat",{"_index":943,"title":{},"body":{"modules/EditTaskModule.html":{}}}],["tasks/sidenav/sidenav",{"_index":1460,"title":{},"body":{"modules/TasksModule.html":{}}}],["tasks/table/complet",{"_index":1464,"title":{},"body":{"modules/TasksRoutingModule.html":{},"modules/TasksTableModule.html":{}}}],["tasks/table/pend",{"_index":1465,"title":{},"body":{"modules/TasksRoutingModule.html":{},"modules/TasksTableModule.html":{}}}],["tasks/table/task",{"_index":620,"title":{},"body":{"components/CompleteTasksTableComponent.html":{},"components/PendingTasksTableComponent.html":{},"modules/TasksModule.html":{},"modules/TasksTableModule.html":{}}}],["tasks/tasks.compon",{"_index":1466,"title":{},"body":{"modules/TasksRoutingModule.html":{}}}],["tasks/tasks.modul",{"_index":372,"title":{},"body":{"modules/AppModule.html":{}}}],["tasks[0",{"_index":583,"title":{},"body":{"components/CompleteTaskComponent.html":{}}}],["tasksbuttonbarmodul",{"_index":930,"title":{"modules/TasksButtonBarModule.html":{}},"body":{"modules/EditTaskModule.html":{},"modules/TasksButtonBarModule.html":{},"modules/TasksTableModule.html":{},"modules.html":{},"overview.html":{}}}],["tasksbuttonsmodul",{"_index":1390,"title":{"modules/TasksButtonsModule.html":{}},"body":{"modules/TasksButtonBarModule.html":{},"modules/TasksButtonsModule.html":{},"modules/TasksTableModule.html":{},"modules.html":{},"overview.html":{}}}],["taskscompon",{"_index":268,"title":{"components/TasksComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ButtonBarComponent.html":{},"components/ButtonsComponent.html":{},"components/CompleteTaskComponent.html":{},"components/CompleteTasksTableComponent.html":{},"components/ConfirmDeleteTaskComponent.html":{},"components/CreateTaskComponent.html":{},"components/EditTaskComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/ListItemComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PendingTasksTableComponent.html":{},"components/RecurringTaskComponent.html":{},"components/SidenavTasksComponent.html":{},"components/TaskFormComponent.html":{},"components/TasksComponent.html":{},"components/TasksFilterComponent.html":{},"modules/TasksModule.html":{},"modules/TasksRoutingModule.html":{},"coverage.html":{},"overview.html":{}}}],["tasksdatasourc",{"_index":1556,"title":{},"body":{"coverage.html":{}}}],["tasksdialogmodul",{"_index":931,"title":{"modules/TasksDialogModule.html":{}},"body":{"modules/EditTaskModule.html":{},"modules/TasksDialogModule.html":{},"modules/TasksTableModule.html":{},"modules.html":{},"overview.html":{}}}],["tasksdu",{"_index":1084,"title":{},"body":{"components/ListItemComponent.html":{}}}],["taskservic",{"_index":520,"title":{},"body":{"components/CompleteTaskComponent.html":{},"components/ConfirmDeleteTaskComponent.html":{},"modules/CoreModule.html":{},"components/CreateTaskComponent.html":{},"components/EditTaskComponent.html":{},"components/ListItemComponent.html":{},"components/SidenavTasksComponent.html":{},"components/TasksFilterComponent.html":{},"modules/TasksModule.html":{},"coverage.html":{}}}],["tasksfiltercompon",{"_index":269,"title":{"components/TasksFilterComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ButtonBarComponent.html":{},"components/ButtonsComponent.html":{},"components/CompleteTaskComponent.html":{},"components/CompleteTasksTableComponent.html":{},"components/ConfirmDeleteTaskComponent.html":{},"components/CreateTaskComponent.html":{},"components/EditTaskComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/ListItemComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PendingTasksTableComponent.html":{},"components/RecurringTaskComponent.html":{},"components/SidenavTasksComponent.html":{},"components/TaskFormComponent.html":{},"components/TasksComponent.html":{},"components/TasksFilterComponent.html":{},"modules/TasksFilterModule.html":{},"coverage.html":{},"overview.html":{}}}],["tasksfiltermodul",{"_index":999,"title":{"modules/TasksFilterModule.html":{}},"body":{"modules/HeaderModule.html":{},"modules/TasksFilterModule.html":{},"modules.html":{},"overview.html":{}}}],["tasksin",{"_index":1632,"title":{},"body":{"index.html":{}}}],["tasksmodul",{"_index":357,"title":{"modules/TasksModule.html":{}},"body":{"modules/AppModule.html":{},"modules/TasksModule.html":{},"modules.html":{},"overview.html":{}}}],["tasksmodule.forroot",{"_index":374,"title":{},"body":{"modules/AppModule.html":{}}}],["tasksroutingmodul",{"_index":1455,"title":{"modules/TasksRoutingModule.html":{}},"body":{"modules/TasksModule.html":{},"modules/TasksRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["taskstablecompon",{"_index":271,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ButtonBarComponent.html":{},"components/ButtonsComponent.html":{},"components/CompleteTaskComponent.html":{},"components/CompleteTasksTableComponent.html":{},"components/ConfirmDeleteTaskComponent.html":{},"components/CreateTaskComponent.html":{},"components/EditTaskComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/ListItemComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PendingTasksTableComponent.html":{},"components/RecurringTaskComponent.html":{},"components/SidenavTasksComponent.html":{},"components/TaskFormComponent.html":{},"components/TasksComponent.html":{},"components/TasksFilterComponent.html":{},"modules/TasksTableModule.html":{},"coverage.html":{},"overview.html":{}}}],["taskstablemodul",{"_index":1456,"title":{"modules/TasksTableModule.html":{}},"body":{"modules/TasksModule.html":{},"modules/TasksTableModule.html":{},"modules.html":{},"overview.html":{}}}],["tasksub",{"_index":838,"title":{},"body":{"components/EditTaskComponent.html":{}}}],["technolog",{"_index":1756,"title":{},"body":{"index.html":{}}}],["templat",{"_index":4,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ButtonBarComponent.html":{},"components/ButtonsComponent.html":{},"components/CompleteTaskComponent.html":{},"components/CompleteTasksTableComponent.html":{},"components/ConfirmDeleteTaskComponent.html":{},"components/CreateTaskComponent.html":{},"components/EditTaskComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/ListItemComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PendingTasksTableComponent.html":{},"components/RecurringTaskComponent.html":{},"components/SidenavTasksComponent.html":{},"components/TaskFormComponent.html":{},"components/TasksComponent.html":{},"components/TasksFilterComponent.html":{}}}],["templateurl",{"_index":20,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ButtonBarComponent.html":{},"components/ButtonsComponent.html":{},"components/CompleteTaskComponent.html":{},"components/CompleteTasksTableComponent.html":{},"components/ConfirmDeleteTaskComponent.html":{},"components/CreateTaskComponent.html":{},"components/EditTaskComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/ListItemComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PendingTasksTableComponent.html":{},"components/RecurringTaskComponent.html":{},"components/SidenavTasksComponent.html":{},"components/TaskFormComponent.html":{},"components/TasksComponent.html":{},"components/TasksFilterComponent.html":{}}}],["test",{"_index":157,"title":{},"body":{"components/AboutComponent.html":{},"index.html":{}}}],["test:coveragesepar",{"_index":1710,"title":{},"body":{"index.html":{}}}],["testth",{"_index":1707,"title":{},"body":{"index.html":{}}}],["text",{"_index":542,"title":{},"body":{"components/CompleteTaskComponent.html":{},"components/ConfirmDeleteTaskComponent.html":{},"components/ListItemComponent.html":{},"injectables/MatPaginatorCustom.html":{},"components/SidenavTasksComponent.html":{},"components/TasksFilterComponent.html":{}}}],["thing",{"_index":1019,"title":{},"body":{"injectables/HttpService.html":{}}}],["third",{"_index":1719,"title":{},"body":{"index.html":{}}}],["this._sidenavmenuchang",{"_index":1503,"title":{},"body":{"injectables/UtilsService.html":{}}}],["this._sidenavmenuchanges.next(ev",{"_index":1524,"title":{},"body":{"injectables/UtilsService.html":{}}}],["this.aboutelement.nativeelement.scrolltop",{"_index":106,"title":{},"body":{"components/AboutComponent.html":{}}}],["this.breakpointobserv",{"_index":1511,"title":{},"body":{"injectables/UtilsService.html":{}}}],["this.buttonbar.paginator.page.pip",{"_index":835,"title":{},"body":{"components/EditTaskComponent.html":{}}}],["this.buttonbar.paginator.pageindex",{"_index":831,"title":{},"body":{"components/EditTaskComponent.html":{}}}],["this.changedetector.detectchang",{"_index":828,"title":{},"body":{"components/EditTaskComponent.html":{}}}],["this.changedetectorref.detectchang",{"_index":346,"title":{},"body":{"components/AppComponent.html":{}}}],["this.checkformerror(this.mainpropertiesform",{"_index":1343,"title":{},"body":{"components/TaskFormComponent.html":{}}}],["this.checkformerror(this.repeatpropertiesform",{"_index":1342,"title":{},"body":{"components/TaskFormComponent.html":{}}}],["this.click",{"_index":435,"title":{},"body":{"components/ButtonBarComponent.html":{},"components/ButtonsComponent.html":{}}}],["this.click.emit(tru",{"_index":487,"title":{},"body":{"components/ButtonsComponent.html":{}}}],["this.completetask.emit(task",{"_index":595,"title":{},"body":{"components/CompleteTaskComponent.html":{}}}],["this.cont",{"_index":588,"title":{},"body":{"components/CompleteTaskComponent.html":{}}}],["this.data.task",{"_index":587,"title":{},"body":{"components/CompleteTaskComponent.html":{},"components/ConfirmDeleteTaskComponent.html":{},"components/RecurringTaskComponent.html":{}}}],["this.datecompletedform",{"_index":591,"title":{},"body":{"components/CompleteTaskComponent.html":{},"components/TaskFormComponent.html":{}}}],["this.datecompletedform.controls['datecompleted'].valu",{"_index":574,"title":{},"body":{"components/CompleteTaskComponent.html":{}}}],["this.datecompletedform.get(param).dirti",{"_index":571,"title":{},"body":{"components/CompleteTaskComponent.html":{}}}],["this.datecompletedform.get(param).invalid",{"_index":570,"title":{},"body":{"components/CompleteTaskComponent.html":{}}}],["this.datecompletedform.get(param).touch",{"_index":572,"title":{},"body":{"components/CompleteTaskComponent.html":{}}}],["this.deletetask.emit(tru",{"_index":643,"title":{},"body":{"components/ConfirmDeleteTaskComponent.html":{}}}],["this.dialog.open(completetaskcompon",{"_index":482,"title":{},"body":{"components/ButtonsComponent.html":{}}}],["this.dialog.open(confirmdeletetaskcompon",{"_index":494,"title":{},"body":{"components/ButtonsComponent.html":{}}}],["this.dialog.open(createtaskcompon",{"_index":1238,"title":{},"body":{"components/SidenavTasksComponent.html":{}}}],["this.dialog.open(recurringtaskcompon",{"_index":877,"title":{},"body":{"components/EditTaskComponent.html":{}}}],["this.dialogref.clos",{"_index":569,"title":{},"body":{"components/CompleteTaskComponent.html":{},"components/ConfirmDeleteTaskComponent.html":{},"components/CreateTaskComponent.html":{},"components/RecurringTaskComponent.html":{}}}],["this.dialogref.close(msg",{"_index":596,"title":{},"body":{"components/CompleteTaskComponent.html":{}}}],["this.dialogref.close(task",{"_index":756,"title":{},"body":{"components/CreateTaskComponent.html":{}}}],["this.dialogref.disableclos",{"_index":744,"title":{},"body":{"components/CreateTaskComponent.html":{}}}],["this.displayscrolltotop",{"_index":86,"title":{},"body":{"components/AboutComponent.html":{}}}],["this.editrecurringtaskform",{"_index":1184,"title":{},"body":{"components/RecurringTaskComponent.html":{}}}],["this.enablecreatebutton",{"_index":759,"title":{},"body":{"components/CreateTaskComponent.html":{}}}],["this.enableupdatebutton",{"_index":852,"title":{},"body":{"components/EditTaskComponent.html":{}}}],["this.filt",{"_index":1111,"title":{},"body":{"components/ListItemComponent.html":{}}}],["this.formbuilder.group",{"_index":592,"title":{},"body":{"components/CompleteTaskComponent.html":{},"components/RecurringTaskComponent.html":{},"components/TaskFormComponent.html":{}}}],["this.formvalid.emit(formsvalid",{"_index":1379,"title":{},"body":{"components/TaskFormComponent.html":{}}}],["this.getrequestoptionargs(opt",{"_index":1056,"title":{},"body":{"injectables/HttpService.html":{}}}],["this.getrouteparamsfromchild",{"_index":1255,"title":{},"body":{"components/SidenavTasksComponent.html":{}}}],["this.hidecompletebutton",{"_index":840,"title":{},"body":{"components/EditTaskComponent.html":{}}}],["this.hideload",{"_index":1069,"title":{},"body":{"injectables/HttpService.html":{}}}],["this.highlightlistitem(param",{"_index":1257,"title":{},"body":{"components/SidenavTasksComponent.html":{}}}],["this.hint",{"_index":589,"title":{},"body":{"components/CompleteTaskComponent.html":{}}}],["this.icon",{"_index":894,"title":{},"body":{"components/EditTaskComponent.html":{}}}],["this.iconclass",{"_index":883,"title":{},"body":{"components/EditTaskComponent.html":{}}}],["this.initiconclass",{"_index":842,"title":{},"body":{"components/EditTaskComponent.html":{}}}],["this.initpagin",{"_index":845,"title":{},"body":{"components/EditTaskComponent.html":{}}}],["this.intercept(this.http.delete(`${this.url}/${url",{"_index":1061,"title":{},"body":{"injectables/HttpService.html":{}}}],["this.intercept(this.http.get(`${this.url}/${url",{"_index":1055,"title":{},"body":{"injectables/HttpService.html":{}}}],["this.intercept(this.http.patch(`${this.url}/${url",{"_index":1060,"title":{},"body":{"injectables/HttpService.html":{}}}],["this.intercept(this.http.post(`${this.url}/${url",{"_index":1059,"title":{},"body":{"injectables/HttpService.html":{}}}],["this.isexpand",{"_index":1250,"title":{},"body":{"components/SidenavTasksComponent.html":{}}}],["this.ismediumscreen",{"_index":990,"title":{},"body":{"components/HeaderComponent.html":{},"components/SidenavTasksComponent.html":{},"components/TaskFormComponent.html":{},"components/TasksFilterComponent.html":{},"injectables/UtilsService.html":{}}}],["this.ismediumscreen.subscribe((ismediumscreen",{"_index":1518,"title":{},"body":{"injectables/UtilsService.html":{}}}],["this.ismediumscreensourc",{"_index":1508,"title":{},"body":{"injectables/UtilsService.html":{}}}],["this.ismediumscreensource.asobserv",{"_index":1510,"title":{},"body":{"injectables/UtilsService.html":{}}}],["this.ismediumscreensource.next(size.match",{"_index":1517,"title":{},"body":{"injectables/UtilsService.html":{}}}],["this.load",{"_index":344,"title":{},"body":{"components/AppComponent.html":{}}}],["this.loaderservice.hid",{"_index":1071,"title":{},"body":{"injectables/HttpService.html":{}}}],["this.loaderservice.loaderstate.subscribe((loaderst",{"_index":343,"title":{},"body":{"components/AppComponent.html":{}}}],["this.loaderservice.show",{"_index":1070,"title":{},"body":{"injectables/HttpService.html":{}}}],["this.loaderst",{"_index":1142,"title":{},"body":{"injectables/LoaderService.html":{},"interfaces/LoaderState.html":{}}}],["this.loadersubject",{"_index":1141,"title":{},"body":{"injectables/LoaderService.html":{},"interfaces/LoaderState.html":{}}}],["this.loadersubject.asobserv",{"_index":1143,"title":{},"body":{"injectables/LoaderService.html":{},"interfaces/LoaderState.html":{}}}],["this.loadersubject.next({show",{"_index":1144,"title":{},"body":{"injectables/LoaderService.html":{},"interfaces/LoaderState.html":{}}}],["this.loadtask(id",{"_index":874,"title":{},"body":{"components/EditTaskComponent.html":{}}}],["this.loadtask(this.tasks[this.buttonbar.paginator.pageindex].id",{"_index":836,"title":{},"body":{"components/EditTaskComponent.html":{}}}],["this.location.back",{"_index":822,"title":{},"body":{"components/EditTaskComponent.html":{}}}],["this.logger.info('confirmdeletetaskcompon",{"_index":645,"title":{},"body":{"components/ConfirmDeleteTaskComponent.html":{}}}],["this.logger.info('createtaskcompon",{"_index":755,"title":{},"body":{"components/CreateTaskComponent.html":{}}}],["this.logger.info('edittaskcompon",{"_index":922,"title":{},"body":{"components/EditTaskComponent.html":{}}}],["this.logger.info(`completetaskcompon",{"_index":594,"title":{},"body":{"components/CompleteTaskComponent.html":{}}}],["this.logger.info(`httpservic",{"_index":1057,"title":{},"body":{"injectables/HttpService.html":{}}}],["this.logger.info(`utilsservic",{"_index":1515,"title":{},"body":{"injectables/UtilsService.html":{}}}],["this.mainpropertiesform",{"_index":1362,"title":{},"body":{"components/TaskFormComponent.html":{}}}],["this.mainpropertiesform.valid",{"_index":1376,"title":{},"body":{"components/TaskFormComponent.html":{}}}],["this.maxdatecomplet",{"_index":585,"title":{},"body":{"components/CompleteTaskComponent.html":{}}}],["this.mindued",{"_index":1357,"title":{},"body":{"components/TaskFormComponent.html":{}}}],["this.notifyandclose('task",{"_index":581,"title":{},"body":{"components/CompleteTaskComponent.html":{}}}],["this.numtasksdu",{"_index":1115,"title":{},"body":{"components/ListItemComponent.html":{}}}],["this.numtasksduetoday",{"_index":1240,"title":{},"body":{"components/SidenavTasksComponent.html":{}}}],["this.numtasksduetomorrow",{"_index":1242,"title":{},"body":{"components/SidenavTasksComponent.html":{}}}],["this.numtasksoverdu",{"_index":1243,"title":{},"body":{"components/SidenavTasksComponent.html":{}}}],["this.onupdate.emit('task",{"_index":923,"title":{},"body":{"components/EditTaskComponent.html":{}}}],["this.openrecurringtaskdialog",{"_index":849,"title":{},"body":{"components/EditTaskComponent.html":{}}}],["this.prefix",{"_index":893,"title":{},"body":{"components/EditTaskComponent.html":{}}}],["this.repeatpropertiesform",{"_index":1365,"title":{},"body":{"components/TaskFormComponent.html":{}}}],["this.repeatpropertiesform.get('aft",{"_index":1366,"title":{},"body":{"components/TaskFormComponent.html":{}}}],["this.repeatpropertiesform.get('repeats').valu",{"_index":1375,"title":{},"body":{"components/TaskFormComponent.html":{}}}],["this.repeatpropertiesform.valid",{"_index":1378,"title":{},"body":{"components/TaskFormComponent.html":{}}}],["this.rout",{"_index":1260,"title":{},"body":{"components/SidenavTasksComponent.html":{}}}],["this.route.fragment.subscribe(f",{"_index":100,"title":{},"body":{"components/AboutComponent.html":{}}}],["this.route.params.subscribe(param",{"_index":861,"title":{},"body":{"components/EditTaskComponent.html":{}}}],["this.router.navigate(['/404",{"_index":873,"title":{},"body":{"components/EditTaskComponent.html":{}}}],["this.router.navigate(['task",{"_index":499,"title":{},"body":{"components/ButtonsComponent.html":{}}}],["this.router.navigate(this.sidenavroutes[index",{"_index":1259,"title":{},"body":{"components/SidenavTasksComponent.html":{}}}],["this.selectedindex",{"_index":1258,"title":{},"body":{"components/SidenavTasksComponent.html":{}}}],["this.showload",{"_index":1065,"title":{},"body":{"injectables/HttpService.html":{}}}],["this.showsearchbar",{"_index":988,"title":{},"body":{"components/HeaderComponent.html":{}}}],["this.sidenavmenust",{"_index":991,"title":{},"body":{"components/HeaderComponent.html":{}}}],["this.snackbar.open(chang",{"_index":857,"title":{},"body":{"components/EditTaskComponent.html":{}}}],["this.sub",{"_index":88,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/CompleteTaskComponent.html":{},"components/ConfirmDeleteTaskComponent.html":{},"components/CreateTaskComponent.html":{},"components/EditTaskComponent.html":{},"components/HeaderComponent.html":{},"components/ListItemComponent.html":{},"components/RecurringTaskComponent.html":{},"components/SidenavTasksComponent.html":{},"components/TaskFormComponent.html":{},"components/TasksFilterComponent.html":{}}}],["this.sub.add(pag",{"_index":837,"title":{},"body":{"components/EditTaskComponent.html":{}}}],["this.sub.add(paramssub",{"_index":875,"title":{},"body":{"components/EditTaskComponent.html":{}}}],["this.sub.add(sub",{"_index":105,"title":{},"body":{"components/AboutComponent.html":{},"components/ButtonsComponent.html":{},"components/CompleteTaskComponent.html":{},"components/ConfirmDeleteTaskComponent.html":{},"components/CreateTaskComponent.html":{},"components/EditTaskComponent.html":{},"components/HeaderComponent.html":{},"components/SidenavTasksComponent.html":{},"components/TaskFormComponent.html":{},"components/TasksFilterComponent.html":{}}}],["this.sub.add(subform",{"_index":853,"title":{},"body":{"components/EditTaskComponent.html":{}}}],["this.sub.add(subload",{"_index":347,"title":{},"body":{"components/AppComponent.html":{}}}],["this.sub.add(submenutoggl",{"_index":1251,"title":{},"body":{"components/SidenavTasksComponent.html":{}}}],["this.sub.add(suboverdu",{"_index":1117,"title":{},"body":{"components/ListItemComponent.html":{}}}],["this.sub.add(subscreens",{"_index":1254,"title":{},"body":{"components/SidenavTasksComponent.html":{}}}],["this.sub.add(subtoday",{"_index":1124,"title":{},"body":{"components/ListItemComponent.html":{}}}],["this.sub.add(subtomorrow",{"_index":1129,"title":{},"body":{"components/ListItemComponent.html":{}}}],["this.sub.add(tasksub",{"_index":854,"title":{},"body":{"components/EditTaskComponent.html":{}}}],["this.sub.unsubscrib",{"_index":87,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/CompleteTaskComponent.html":{},"components/ConfirmDeleteTaskComponent.html":{},"components/CreateTaskComponent.html":{},"components/EditTaskComponent.html":{},"components/HeaderComponent.html":{},"components/ListItemComponent.html":{},"components/RecurringTaskComponent.html":{},"components/SidenavTasksComponent.html":{},"components/TaskFormComponent.html":{},"components/TasksFilterComponent.html":{}}}],["this.task",{"_index":480,"title":{},"body":{"components/ButtonsComponent.html":{},"components/CompleteTaskComponent.html":{},"components/ConfirmDeleteTaskComponent.html":{},"components/EditTaskComponent.html":{},"components/RecurringTaskComponent.html":{},"components/TaskFormComponent.html":{}}}],["this.task.descript",{"_index":911,"title":{},"body":{"components/EditTaskComponent.html":{},"components/TaskFormComponent.html":{}}}],["this.task.dued",{"_index":913,"title":{},"body":{"components/EditTaskComponent.html":{},"components/TaskFormComponent.html":{}}}],["this.task.endsaft",{"_index":918,"title":{},"body":{"components/EditTaskComponent.html":{},"components/TaskFormComponent.html":{}}}],["this.task.id",{"_index":833,"title":{},"body":{"components/EditTaskComponent.html":{},"components/TaskFormComponent.html":{}}}],["this.task.iscomplet",{"_index":1364,"title":{},"body":{"components/TaskFormComponent.html":{}}}],["this.task.nam",{"_index":907,"title":{},"body":{"components/EditTaskComponent.html":{},"components/TaskFormComponent.html":{}}}],["this.task.prior",{"_index":909,"title":{},"body":{"components/EditTaskComponent.html":{},"components/TaskFormComponent.html":{}}}],["this.task.repeat",{"_index":916,"title":{},"body":{"components/EditTaskComponent.html":{},"components/TaskFormComponent.html":{}}}],["this.taskfilterinput.nativeelement.valu",{"_index":1434,"title":{},"body":{"components/TasksFilterComponent.html":{}}}],["this.taskformcomponent.formvalid.subscribe((en",{"_index":851,"title":{},"body":{"components/EditTaskComponent.html":{}}}],["this.taskformcomponent.formvalid.subscribe((formvalid",{"_index":757,"title":{},"body":{"components/CreateTaskComponent.html":{}}}],["this.taskformcomponent.getformdata(this.taskformcomponent.mainpropertiesform).switchmap(formdata",{"_index":906,"title":{},"body":{"components/EditTaskComponent.html":{}}}],["this.taskformcomponent.getformdata(this.taskformcomponent.repeatpropertiesform).switchmap(repeatformdata",{"_index":915,"title":{},"body":{"components/EditTaskComponent.html":{}}}],["this.taskformcomponent.mainpropertiesform.get('description').valu",{"_index":747,"title":{},"body":{"components/CreateTaskComponent.html":{}}}],["this.taskformcomponent.mainpropertiesform.get('due').valu",{"_index":749,"title":{},"body":{"components/CreateTaskComponent.html":{}}}],["this.taskformcomponent.mainpropertiesform.get('name').valu",{"_index":745,"title":{},"body":{"components/CreateTaskComponent.html":{}}}],["this.taskformcomponent.mainpropertiesform.get('priority').valu",{"_index":746,"title":{},"body":{"components/CreateTaskComponent.html":{}}}],["this.taskformcomponent.repeatpropertiesform.dis",{"_index":882,"title":{},"body":{"components/EditTaskComponent.html":{}}}],["this.taskformcomponent.repeatpropertiesform.get('after').valu",{"_index":753,"title":{},"body":{"components/CreateTaskComponent.html":{}}}],["this.taskformcomponent.repeatpropertiesform.get('repeats').valu",{"_index":751,"title":{},"body":{"components/CreateTaskComponent.html":{}}}],["this.tasks.findindex((task",{"_index":832,"title":{},"body":{"components/EditTaskComponent.html":{}}}],["this.tasks.foreach((task",{"_index":638,"title":{},"body":{"components/ConfirmDeleteTaskComponent.html":{}}}],["this.tasks.length",{"_index":642,"title":{},"body":{"components/ConfirmDeleteTaskComponent.html":{}}}],["this.tasks.map((task",{"_index":577,"title":{},"body":{"components/CompleteTaskComponent.html":{}}}],["this.tasks[0].id",{"_index":500,"title":{},"body":{"components/ButtonsComponent.html":{}}}],["this.taskservice.changes.subscribe((chang",{"_index":855,"title":{},"body":{"components/EditTaskComponent.html":{}}}],["this.taskservice.complete(this.tasks[0",{"_index":584,"title":{},"body":{"components/CompleteTaskComponent.html":{}}}],["this.taskservice.completeall(id",{"_index":579,"title":{},"body":{"components/CompleteTaskComponent.html":{}}}],["this.taskservice.completetask",{"_index":825,"title":{},"body":{"components/EditTaskComponent.html":{}}}],["this.taskservice.create(task).subscribe((task",{"_index":754,"title":{},"body":{"components/CreateTaskComponent.html":{}}}],["this.taskservice.delete(task).subscrib",{"_index":640,"title":{},"body":{"components/ConfirmDeleteTaskComponent.html":{}}}],["this.taskservice.delete(this.tasks[0]).subscribe((task",{"_index":644,"title":{},"body":{"components/ConfirmDeleteTaskComponent.html":{}}}],["this.taskservice.get(id).subscribe((task",{"_index":839,"title":{},"body":{"components/EditTaskComponent.html":{}}}],["this.taskservice.initnumtask",{"_index":1107,"title":{},"body":{"components/ListItemComponent.html":{}}}],["this.taskservice.numpendingtasks.subscribe((num",{"_index":1130,"title":{},"body":{"components/ListItemComponent.html":{}}}],["this.taskservice.numtasksduetoday",{"_index":1241,"title":{},"body":{"components/SidenavTasksComponent.html":{}}}],["this.taskservice.numtasksduetoday.subscribe((num",{"_index":1123,"title":{},"body":{"components/ListItemComponent.html":{}}}],["this.taskservice.numtasksduetomorrow.subscribe((num",{"_index":1128,"title":{},"body":{"components/ListItemComponent.html":{}}}],["this.taskservice.numtasksoverdu",{"_index":1244,"title":{},"body":{"components/SidenavTasksComponent.html":{}}}],["this.taskservice.numtasksoverdue.subscribe((num",{"_index":1114,"title":{},"body":{"components/ListItemComponent.html":{}}}],["this.taskservice.pendingtask",{"_index":826,"title":{},"body":{"components/EditTaskComponent.html":{}}}],["this.taskservice.settaskfilter(this.taskfilterinput.nativeelement.valu",{"_index":1444,"title":{},"body":{"components/TasksFilterComponent.html":{}}}],["this.taskservice.update(this.task",{"_index":920,"title":{},"body":{"components/EditTaskComponent.html":{}}}],["this.text",{"_index":646,"title":{},"body":{"components/ConfirmDeleteTaskComponent.html":{}}}],["this.titl",{"_index":590,"title":{},"body":{"components/CompleteTaskComponent.html":{}}}],["this.tooltip",{"_index":896,"title":{},"body":{"components/EditTaskComponent.html":{}}}],["this.updateal",{"_index":880,"title":{},"body":{"components/EditTaskComponent.html":{},"components/RecurringTaskComponent.html":{}}}],["this.updateall.emit(updateal",{"_index":1186,"title":{},"body":{"components/RecurringTaskComponent.html":{}}}],["this.updatetaskfilt",{"_index":1435,"title":{},"body":{"components/TasksFilterComponent.html":{}}}],["this.url}/${url",{"_index":1058,"title":{},"body":{"injectables/HttpService.html":{}}}],["this.utilsservice.fullscreendialogsub(completeselecteddialogref",{"_index":483,"title":{},"body":{"components/ButtonsComponent.html":{}}}],["this.utilsservice.fullscreendialogsub(confirmdeletedialogref",{"_index":495,"title":{},"body":{"components/ButtonsComponent.html":{}}}],["this.utilsservice.fullscreendialogsub(createdialogref",{"_index":1239,"title":{},"body":{"components/SidenavTasksComponent.html":{}}}],["this.utilsservice.fullscreendialogsub(recurringdialogref",{"_index":878,"title":{},"body":{"components/EditTaskComponent.html":{}}}],["this.utilsservice.ismediumscreen.subscribe((ismediumscreen",{"_index":989,"title":{},"body":{"components/HeaderComponent.html":{},"components/SidenavTasksComponent.html":{},"components/TaskFormComponent.html":{},"components/TasksFilterComponent.html":{}}}],["this.utilsservice.sidenavmenuchanges.pip",{"_index":1246,"title":{},"body":{"components/SidenavTasksComponent.html":{}}}],["this.utilsservice.togglesidenavmenu('collaps",{"_index":994,"title":{},"body":{"components/HeaderComponent.html":{}}}],["this.utilsservice.togglesidenavmenu('expand",{"_index":993,"title":{},"body":{"components/HeaderComponent.html":{}}}],["though",{"_index":1746,"title":{},"body":{"index.html":{}}}],["through",{"_index":153,"title":{},"body":{"components/AboutComponent.html":{},"components/ButtonBarComponent.html":{},"components/ConfirmDeleteTaskComponent.html":{},"components/EditTaskComponent.html":{},"index.html":{}}}],["throughout",{"_index":1721,"title":{},"body":{"index.html":{}}}],["throw",{"_index":715,"title":{},"body":{"modules/CoreModule.html":{}}}],["time",{"_index":188,"title":{},"body":{"components/AboutComponent.html":{},"classes/Task.html":{},"index.html":{}}}],["titl",{"_index":508,"title":{},"body":{"components/CompleteTaskComponent.html":{}}}],["today",{"_index":219,"title":{},"body":{"components/AboutComponent.html":{},"components/EditTaskComponent.html":{},"components/ListItemComponent.html":{},"components/SidenavTasksComponent.html":{},"components/TaskFormComponent.html":{},"components/TasksFilterComponent.html":{},"index.html":{}}}],["togeth",{"_index":868,"title":{},"body":{"components/EditTaskComponent.html":{},"index.html":{}}}],["togglesidenavmenu",{"_index":1487,"title":{},"body":{"injectables/UtilsService.html":{}}}],["togglesidenavmenu(ev",{"_index":1496,"title":{},"body":{"injectables/UtilsService.html":{}}}],["token",{"_index":1018,"title":{},"body":{"injectables/HttpService.html":{}}}],["tomorrow",{"_index":220,"title":{},"body":{"components/AboutComponent.html":{},"components/EditTaskComponent.html":{},"components/ListItemComponent.html":{},"components/SidenavTasksComponent.html":{},"components/TasksFilterComponent.html":{},"index.html":{}}}],["toolbar",{"_index":1078,"title":{},"body":{"components/ListItemComponent.html":{}}}],["tooltip",{"_index":776,"title":{},"body":{"components/EditTaskComponent.html":{}}}],["top",{"_index":63,"title":{},"body":{"components/AboutComponent.html":{},"components/EditTaskComponent.html":{}}}],["touch",{"_index":532,"title":{},"body":{"components/CompleteTaskComponent.html":{},"components/TaskFormComponent.html":{}}}],["track",{"_index":1499,"title":{},"body":{"injectables/UtilsService.html":{}}}],["travers",{"_index":1200,"title":{},"body":{"components/SidenavTasksComponent.html":{}}}],["treat",{"_index":869,"title":{},"body":{"components/EditTaskComponent.html":{}}}],["tree",{"_index":6,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ButtonBarComponent.html":{},"components/ButtonsComponent.html":{},"components/CompleteTaskComponent.html":{},"components/CompleteTasksTableComponent.html":{},"components/ConfirmDeleteTaskComponent.html":{},"components/CreateTaskComponent.html":{},"components/EditTaskComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/ListItemComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PendingTasksTableComponent.html":{},"components/RecurringTaskComponent.html":{},"components/SidenavTasksComponent.html":{},"components/TaskFormComponent.html":{},"components/TasksComponent.html":{},"components/TasksFilterComponent.html":{}}}],["tri",{"_index":1733,"title":{},"body":{"index.html":{}}}],["trigger",{"_index":222,"title":{},"body":{"components/AboutComponent.html":{},"injectables/HttpService.html":{}}}],["true",{"_index":108,"title":{},"body":{"components/AboutComponent.html":{},"components/CompleteTaskComponent.html":{},"components/ConfirmDeleteTaskComponent.html":{},"components/CreateTaskComponent.html":{},"components/EditTaskComponent.html":{},"components/HeaderComponent.html":{},"components/ListItemComponent.html":{},"injectables/LoaderService.html":{},"interfaces/LoaderState.html":{},"components/RecurringTaskComponent.html":{},"components/SidenavTasksComponent.html":{},"classes/Task.html":{},"components/TaskFormComponent.html":{},"components/TasksFilterComponent.html":{},"injectables/UtilsService.html":{},"miscellaneous/variables.html":{}}}],["true).isvalid",{"_index":1360,"title":{},"body":{"components/TaskFormComponent.html":{}}}],["true).utc().tod",{"_index":1361,"title":{},"body":{"components/TaskFormComponent.html":{}}}],["two",{"_index":1653,"title":{},"body":{"index.html":{}}}],["type",{"_index":41,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ButtonBarComponent.html":{},"components/ButtonsComponent.html":{},"components/CompleteTaskComponent.html":{},"components/CompleteTasksTableComponent.html":{},"components/ConfirmDeleteTaskComponent.html":{},"injectables/ConsoleLoggerService.html":{},"components/CreateTaskComponent.html":{},"components/EditTaskComponent.html":{},"components/HeaderComponent.html":{},"injectables/HttpService.html":{},"components/ListItemComponent.html":{},"injectables/LoaderService.html":{},"interfaces/LoaderState.html":{},"classes/Logger.html":{},"injectables/LoggerService.html":{},"injectables/MatPaginatorCustom.html":{},"components/PendingTasksTableComponent.html":{},"components/RecurringTaskComponent.html":{},"components/SidenavTasksComponent.html":{},"classes/Task.html":{},"components/TaskFormComponent.html":{},"components/TasksFilterComponent.html":{},"injectables/UtilsService.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["typealias",{"_index":1784,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typeorm",{"_index":1747,"title":{},"body":{"index.html":{}}}],["typescript",{"_index":1603,"title":{},"body":{"index.html":{}}}],["ui",{"_index":130,"title":{},"body":{"components/AboutComponent.html":{},"index.html":{}}}],["undefin",{"_index":689,"title":{},"body":{"injectables/ConsoleLoggerService.html":{},"miscellaneous/variables.html":{}}}],["uniqu",{"_index":1296,"title":{},"body":{"classes/Task.html":{}}}],["unit",{"_index":1619,"title":{},"body":{"index.html":{}}}],["unless",{"_index":1658,"title":{},"body":{"index.html":{}}}],["unsubscrib",{"_index":55,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/CompleteTaskComponent.html":{},"components/ConfirmDeleteTaskComponent.html":{},"components/CreateTaskComponent.html":{},"components/HeaderComponent.html":{},"components/ListItemComponent.html":{},"components/SidenavTasksComponent.html":{},"components/TaskFormComponent.html":{},"components/TasksFilterComponent.html":{}}}],["until",{"_index":1201,"title":{},"body":{"components/SidenavTasksComponent.html":{}}}],["up",{"_index":667,"title":{},"body":{"injectables/ConsoleLoggerService.html":{},"index.html":{}}}],["updat",{"_index":199,"title":{},"body":{"components/AboutComponent.html":{},"components/CompleteTaskComponent.html":{},"components/EditTaskComponent.html":{},"components/ListItemComponent.html":{},"components/RecurringTaskComponent.html":{},"components/SidenavTasksComponent.html":{},"components/TaskFormComponent.html":{},"components/TasksFilterComponent.html":{},"injectables/UtilsService.html":{},"index.html":{}}}],["update(properti",{"_index":1330,"title":{},"body":{"components/TaskFormComponent.html":{}}}],["updateal",{"_index":777,"title":{},"body":{"components/EditTaskComponent.html":{},"components/RecurringTaskComponent.html":{}}}],["updateall=tru",{"_index":1181,"title":{},"body":{"components/RecurringTaskComponent.html":{}}}],["updatetaskfilt",{"_index":1416,"title":{},"body":{"components/TasksFilterComponent.html":{}}}],["urgent",{"_index":1303,"title":{},"body":{"classes/Task.html":{},"components/TaskFormComponent.html":{},"miscellaneous/typealiases.html":{}}}],["url",{"_index":1020,"title":{},"body":{"injectables/HttpService.html":{},"components/ListItemComponent.html":{},"classes/Logger.html":{},"injectables/LoggerService.html":{},"components/SidenavTasksComponent.html":{},"index.html":{}}}],["us",{"_index":146,"title":{},"body":{"components/AboutComponent.html":{},"components/ButtonsComponent.html":{},"injectables/ConsoleLoggerService.html":{},"components/CreateTaskComponent.html":{},"components/EditTaskComponent.html":{},"components/ListItemComponent.html":{},"components/TaskFormComponent.html":{},"components/TasksFilterComponent.html":{},"index.html":{}}}],["useclass",{"_index":724,"title":{},"body":{"modules/CoreModule.html":{},"modules/EditTaskModule.html":{}}}],["user",{"_index":462,"title":{},"body":{"components/ButtonsComponent.html":{},"components/CompleteTaskComponent.html":{},"components/RecurringTaskComponent.html":{},"components/TasksFilterComponent.html":{}}}],["util",{"_index":1480,"title":{},"body":{"injectables/UtilsService.html":{},"index.html":{}}}],["utilsservic",{"_index":444,"title":{"injectables/UtilsService.html":{}},"body":{"components/ButtonsComponent.html":{},"modules/CoreModule.html":{},"components/EditTaskComponent.html":{},"components/HeaderComponent.html":{},"components/SidenavTasksComponent.html":{},"components/TaskFormComponent.html":{},"components/TasksFilterComponent.html":{},"modules/TasksModule.html":{},"injectables/UtilsService.html":{},"coverage.html":{}}}],["valid",{"_index":560,"title":{},"body":{"components/CompleteTaskComponent.html":{},"components/RecurringTaskComponent.html":{},"components/TaskFormComponent.html":{}}}],["validators.requir",{"_index":593,"title":{},"body":{"components/CompleteTaskComponent.html":{},"components/RecurringTaskComponent.html":{},"components/TaskFormComponent.html":{}}}],["valu",{"_index":337,"title":{},"body":{"components/AppComponent.html":{},"components/CompleteTaskComponent.html":{},"components/ConfirmDeleteTaskComponent.html":{},"components/CreateTaskComponent.html":{},"components/EditTaskComponent.html":{},"injectables/HttpService.html":{},"components/ListItemComponent.html":{},"injectables/MatPaginatorCustom.html":{},"components/RecurringTaskComponent.html":{},"components/SidenavTasksComponent.html":{},"classes/Task.html":{},"components/TaskFormComponent.html":{},"components/TasksFilterComponent.html":{},"injectables/UtilsService.html":{},"miscellaneous/variables.html":{}}}],["var",{"_index":234,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ButtonBarComponent.html":{},"components/ButtonsComponent.html":{},"components/CompleteTaskComponent.html":{},"components/CompleteTasksTableComponent.html":{},"components/ConfirmDeleteTaskComponent.html":{},"components/CreateTaskComponent.html":{},"components/EditTaskComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/ListItemComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PendingTasksTableComponent.html":{},"components/RecurringTaskComponent.html":{},"components/SidenavTasksComponent.html":{},"components/TaskFormComponent.html":{},"components/TasksComponent.html":{},"components/TasksFilterComponent.html":{}}}],["variabl",{"_index":1534,"title":{"miscellaneous/variables.html":{}},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["varieti",{"_index":134,"title":{},"body":{"components/AboutComponent.html":{},"index.html":{}}}],["variou",{"_index":1720,"title":{},"body":{"index.html":{}}}],["veri",{"_index":1601,"title":{},"body":{"index.html":{}}}],["version",{"_index":1644,"title":{},"body":{"index.html":{}}}],["view",{"_index":48,"title":{},"body":{"components/AboutComponent.html":{},"modules/CreateTaskModule.html":{},"modules/TasksTableModule.html":{},"index.html":{}}}],["viewchild",{"_index":66,"title":{},"body":{"components/AboutComponent.html":{},"components/ButtonBarComponent.html":{},"components/CompleteTasksTableComponent.html":{},"components/CreateTaskComponent.html":{},"components/EditTaskComponent.html":{},"components/HeaderComponent.html":{},"components/PendingTasksTableComponent.html":{},"components/TasksFilterComponent.html":{}}}],["viewchild('aboutscrol",{"_index":83,"title":{},"body":{"components/AboutComponent.html":{}}}],["viewchild('completedtask",{"_index":622,"title":{},"body":{"components/CompleteTasksTableComponent.html":{}}}],["viewchild('pendingtask",{"_index":1177,"title":{},"body":{"components/PendingTasksTableComponent.html":{}}}],["viewchild('taskfilt",{"_index":1433,"title":{},"body":{"components/TasksFilterComponent.html":{}}}],["viewchild('taskfilterlargescreen",{"_index":987,"title":{},"body":{"components/HeaderComponent.html":{}}}],["viewchild(buttonbarcompon",{"_index":821,"title":{},"body":{"components/EditTaskComponent.html":{}}}],["viewchild(matpagin",{"_index":434,"title":{},"body":{"components/ButtonBarComponent.html":{}}}],["viewchild(taskformcompon",{"_index":743,"title":{},"body":{"components/CreateTaskComponent.html":{},"components/EditTaskComponent.html":{}}}],["visibl",{"_index":213,"title":{},"body":{"components/AboutComponent.html":{},"components/ButtonBarComponent.html":{},"components/ButtonsComponent.html":{}}}],["visual",{"_index":1600,"title":{},"body":{"index.html":{}}}],["void",{"_index":53,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/CompleteTaskComponent.html":{},"components/ConfirmDeleteTaskComponent.html":{},"injectables/ConsoleLoggerService.html":{},"components/CreateTaskComponent.html":{},"components/EditTaskComponent.html":{},"components/HeaderComponent.html":{},"injectables/HttpService.html":{},"components/ListItemComponent.html":{},"injectables/LoaderService.html":{},"classes/Logger.html":{},"injectables/LoggerService.html":{},"components/RecurringTaskComponent.html":{},"components/SidenavTasksComponent.html":{},"components/TaskFormComponent.html":{},"components/TasksFilterComponent.html":{},"injectables/UtilsService.html":{}}}],["vulner",{"_index":1683,"title":{},"body":{"index.html":{}}}],["want",{"_index":648,"title":{},"body":{"components/ConfirmDeleteTaskComponent.html":{}}}],["warn",{"_index":680,"title":{},"body":{"injectables/ConsoleLoggerService.html":{},"classes/Logger.html":{},"injectables/LoggerService.html":{},"index.html":{}}}],["way",{"_index":1076,"title":{},"body":{"components/ListItemComponent.html":{},"index.html":{}}}],["web",{"_index":1663,"title":{},"body":{"index.html":{}}}],["webriv",{"_index":1731,"title":{},"body":{"index.html":{}}}],["weekli",{"_index":1288,"title":{},"body":{"classes/Task.html":{},"components/TaskFormComponent.html":{},"index.html":{}}}],["well",{"_index":867,"title":{},"body":{"components/EditTaskComponent.html":{},"index.html":{}}}],["whether",{"_index":72,"title":{},"body":{"components/AboutComponent.html":{},"components/ButtonBarComponent.html":{},"components/CreateTaskComponent.html":{},"components/EditTaskComponent.html":{},"components/HeaderComponent.html":{},"components/ListItemComponent.html":{},"injectables/LoaderService.html":{},"interfaces/LoaderState.html":{},"components/RecurringTaskComponent.html":{},"components/SidenavTasksComponent.html":{},"injectables/UtilsService.html":{}}}],["while(route.firstchild",{"_index":1261,"title":{},"body":{"components/SidenavTasksComponent.html":{}}}],["whose",{"_index":1327,"title":{},"body":{"components/TaskFormComponent.html":{}}}],["width",{"_index":1494,"title":{},"body":{"injectables/UtilsService.html":{}}}],["win70",{"_index":1647,"title":{},"body":{"index.html":{}}}],["window",{"_index":59,"title":{},"body":{"components/AboutComponent.html":{},"index.html":{}}}],["within",{"_index":315,"title":{},"body":{"modules/AboutRoutingModule.html":{},"modules/TasksRoutingModule.html":{}}}],["without",{"_index":1717,"title":{},"body":{"index.html":{}}}],["work",{"_index":133,"title":{},"body":{"components/AboutComponent.html":{},"components/EditTaskComponent.html":{},"index.html":{}}}],["wrapper",{"_index":614,"title":{},"body":{"components/CompleteTasksTableComponent.html":{},"modules/CoreModule.html":{},"components/PendingTasksTableComponent.html":{},"modules/TasksModule.html":{}}}],["ye",{"_index":676,"title":{},"body":{"injectables/ConsoleLoggerService.html":{},"injectables/HttpService.html":{},"injectables/LoggerService.html":{}}}],["yearli",{"_index":1290,"title":{},"body":{"classes/Task.html":{},"components/TaskFormComponent.html":{},"index.html":{}}}],["yellow",{"_index":902,"title":{},"body":{"components/EditTaskComponent.html":{}}}],["zone.j",{"_index":1597,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":283,"title":{},"body":{"modules/AboutModule.html":{},"modules/AppModule.html":{},"modules/CompleteTaskModule.html":{},"modules/ConfirmDeleteTaskModule.html":{},"modules/CreateTaskModule.html":{},"modules/EditTaskModule.html":{},"modules/FooterModule.html":{},"modules/HeaderModule.html":{},"modules/SidenavTasksModule.html":{},"modules/TaskFormModule.html":{},"modules/TasksButtonBarModule.html":{},"modules/TasksButtonsModule.html":{},"modules/TasksDialogModule.html":{},"modules/TasksFilterModule.html":{},"modules/TasksModule.html":{},"modules/TasksTableModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AboutComponent.html":{"url":"components/AboutComponent.html","title":"component - AboutComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AboutComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/about/about.component.ts\n\n\n    \n        Description\n    \n    \n        Creates the about page for the app.\n\n    \n\n\n    \n        Implements\n    \n    \n                AfterViewInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                about\n            \n\n            \n                styleUrls\n                about.component.css\n            \n\n\n\n            \n                templateUrl\n                ./about.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                aboutElement\n                            \n                            \n                                displayScrollToTop\n                            \n                            \n                                    Private\n                                sub\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngAfterViewInit\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                onAboutScroll\n                            \n                            \n                                scrollToTop\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(route: ActivatedRoute)\n                    \n                \n                        \n                            \n                                Defined in src/app/about/about.component.ts:21\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                    ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngAfterViewInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngAfterViewInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/about/about.component.ts:38\n                            \n                        \n\n\n                \n                    \n                            Initialize subscription for route fragment after view is initialized\nso element at fragment can be scrolled into view (if fragment present).\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnDestroy\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnDestroy()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/about/about.component.ts:30\n                            \n                        \n\n\n                \n                    \n                            Unsubscribe from any subscriptions.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            onAboutScroll\n                            \n                            \n                        \n                    \n                \n                \n                    \nonAboutScroll()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/about/about.component.ts:55\n                            \n                        \n\n\n                \n                    \n                            Handles setting displayScrollToTop on window scroll event.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            scrollToTop\n                            \n                            \n                        \n                    \n                \n                \n                    \nscrollToTop()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/about/about.component.ts:67\n                            \n                        \n\n\n                \n                    \n                            Scrolls the about div to the top.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            aboutElement\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        aboutElement:     ElementRef\n\n                    \n                \n                    \n                        \n                            Type :     ElementRef\n\n                        \n                    \n                    \n                        \n                            Decorators : ViewChild\n                        \n                    \n                        \n                            \n                                    Defined in src/app/about/about.component.ts:17\n                            \n                        \n\n                \n                    \n                        Reference to the element that scrolls in the component. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            displayScrollToTop\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        displayScrollToTop:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/about/about.component.ts:19\n                            \n                        \n\n                \n                    \n                        Boolean to indicate whether the button to scroll to top should display (defaults to false). \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            sub\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        sub:     Subscription\n\n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/about/about.component.ts:21\n                            \n                        \n\n                \n                    \n                        The subscriptions for the component. \n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { AfterViewInit, Component, ElementRef, OnDestroy, ViewChild } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { Subscription } from 'rxjs';\n\n/**\n * Creates the about page for the app.\n */\n@Component({\n    selector: 'about',\n    templateUrl: './about.component.html',\n    styleUrls: ['./about.component.css']\n})\nexport class AboutComponent implements AfterViewInit, OnDestroy {\n\n    /** Reference to the element that scrolls in the component. */\n    @ViewChild('aboutScroll') aboutElement: ElementRef;\n    /** Boolean to indicate whether the button to scroll to top should display (defaults to false). */\n    displayScrollToTop: boolean;\n    /** The subscriptions for the component. */\n    private sub: Subscription;\n\n    constructor(private route:ActivatedRoute) {\n        this.displayScrollToTop = false;\n    }\n\n    /**\n     * Unsubscribe from any subscriptions.\n     */\n    ngOnDestroy() {\n        this.sub.unsubscribe();\n    }\n\n    /**\n     * Initialize subscription for route fragment after view is initialized\n     * so element at fragment can be scrolled into view (if fragment present).\n     */\n    ngAfterViewInit() {\n        this.sub = new Subscription();\n\n        // Add support for handling anchor tags based on answers from issue below.\n        // https://github.com/angular/angular/issues/6595\n        const sub = this.route.fragment.subscribe(f => {\n            const element = document.querySelector('#' + f);\n            if(element) {\n                element.scrollIntoView({behavior:'smooth'});\n            }\n        });\n        this.sub.add(sub);\n    }\n\n    /**\n     * Handles setting displayScrollToTop on window scroll event.\n     */\n    onAboutScroll() {\n        if (this.aboutElement.nativeElement.scrollTop > 100) {\n            this.displayScrollToTop = true;\n        } \n        else if (this.aboutElement.nativeElement.scrollTop \n    \n\n    \n        \n    \n        MyTasks\n\n        TABLE OF CONTENTS\n\n        \n            Description of Application\n            Create Task\n            Complete Task\n            Delete Task\n            Filter Tasks\n        \n\n        1. Description of Application\n        \n            MyTasks is a simple application meant to create and manage Tasks. Tasks can be\n            modified, completed, and deleted. Tasks are displayed in tables and are separated \n            by state; pending or complete. By default tasks are sorted by due date in \n            ascending order.\n        \n        \n            The UI is designed to be responsive, and meant to work across a variety of devices. Some\n            of the enhanced functionality is limited on smaller devices (due to the smaller screen \n            space and lack of mouse input), so it is recommended to use a desktop or laptop if \n            available. Additionally smaller screen sizes have only been emulated through chrome \n            devtools and have not been fully tested.\n        \n        \n            *All screenshots below were taken on a desktop.\n        \n\n        2. Create Task\n\n        \n            To create a Task click the \n            button located in the sidenav menu on the left hand side of the screen. This \n            will open a modal dialog where you can enter the details for a Task. You must \n            enter a name, description, and due date as shown below.\n        \n\n        \n            \n        \n\n        \n            All Tasks will default to a \"Low\" priority, but you may modify this using the\n            \"Priority\" select drop down provided on the form. You may also create a \n            repeating Task by selecting anything other than \"Does not repeat\" in the \n            \"Repeat\" field at the bottom of the form. This will enable the \"End After\" \n            field where you can enter the number of times you would like this Task to \n            repeat. A sample repeating Task is shown below.\n        \n\n        \n            \n        \n\n        \n            Click the  \n            button once you have completely filled out the form to finish creating your Task.\n        \n\n        3. Complete Task\n\n        \n            To complete a Task click the row of the desired Task in the table to modify\n            the Task. This will open a page as seen below where you can complete and/or \n            update the the details of the Task.\n        \n\n        \n            \n        \n\n        \n            Click the  button\n            in the button bar above the Task details to open the dialog to complete a Task. \n            You must enter the date the Task is completed as displayed below. Then click the\n            \n            button to finish completing the Task.\n        \n\n        \n            \n        \n\n        \n            Additionally you may mark one or more Tasks complete from the pending Tasks table,\n            as long as they were all complete on the same date. Select the checkbox \n            of one or more Tasks to enable the  \n            button in the button bar above the table. Then click the \n            \n            button to display the same dialog as above and complete all selected Tasks.  \n        \n\n        4. Delete Task\n\n        \n            To delete a Task click the row of the desired Task in the table as in the \"Complete\n            Task\" section. Then click the \n            button in the button bar displayed above the Task details. This will open a confirmation\n            dialog as displayed below.\n        \n\n        \n            \n        \n\n        \n            You must click the  \n            button to delete the Task.\n        \n\n        \n            Additionally you may delete one or more Tasks from the table views (pending\n            or complete). Select the checkbox of one or more Tasks to enable the \n             \n            button in the button bar above the table. Click the \n            \n            button to display the same dialog as above and delete all selected Tasks.  \n        \n\n        5. Filter Tasks\n\n        \n            Tasks can be filtered using the \n             \n            input in the header. You may filter Tasks on any visible column (including due date \n            and date completed). To sort by date click the \n            \n            button to open the date picker and select the desired date. Additionally, pending \n            Tasks can be filtered using the sidenav menu items to filter Tasks over due, due \n            today, and due tomorrow. *Note the menu items are just triggering special keyword \n            filters which can also be used in the \n            \n            input. The actual filters are \"overdue\", \"today\", and \"tomorrow\". You may also\n            enter the current date in the search field and you will see the same results as\n            \"today\".\n        \n    \n \n\n    \n    \n    \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            MyTasks        TABLE OF CONTENTS                    Description of Application            Create Task            Complete Task            Delete Task            Filter Tasks                1. Description of Application                    MyTasks is a simple application meant to create and manage Tasks. Tasks can be            modified, completed, and deleted. Tasks are displayed in tables and are separated             by state; pending or complete. By default tasks are sorted by due date in             ascending order.                            The UI is designed to be responsive, and meant to work across a variety of devices. Some            of the enhanced functionality is limited on smaller devices (due to the smaller screen             space and lack of mouse input), so it is recommended to use a desktop or laptop if             available. Additionally smaller screen sizes have only been emulated through chrome             devtools and have not been fully tested.                            *All screenshots below were taken on a desktop.                2. Create Task                    To create a Task click the             button located in the sidenav menu on the left hand side of the screen. This             will open a modal dialog where you can enter the details for a Task. You must             enter a name, description, and due date as shown below.                                                        All Tasks will default to a \"Low\" priority, but you may modify this using the            \"Priority\" select drop down provided on the form. You may also create a             repeating Task by selecting anything other than \"Does not repeat\" in the             \"Repeat\" field at the bottom of the form. This will enable the \"End After\"             field where you can enter the number of times you would like this Task to             repeat. A sample repeating Task is shown below.                                                        Click the              button once you have completely filled out the form to finish creating your Task.                3. Complete Task                    To complete a Task click the row of the desired Task in the table to modify            the Task. This will open a page as seen below where you can complete and/or             update the the details of the Task.                                                        Click the  button            in the button bar above the Task details to open the dialog to complete a Task.             You must enter the date the Task is completed as displayed below. Then click the                        button to finish completing the Task.                                                        Additionally you may mark one or more Tasks complete from the pending Tasks table,            as long as they were all complete on the same date. Select the checkbox             of one or more Tasks to enable the              button in the button bar above the table. Then click the                         button to display the same dialog as above and complete all selected Tasks.                  4. Delete Task                    To delete a Task click the row of the desired Task in the table as in the \"Complete            Task\" section. Then click the             button in the button bar displayed above the Task details. This will open a confirmation            dialog as displayed below.                                                        You must click the              button to delete the Task.                            Additionally you may delete one or more Tasks from the table views (pending            or complete). Select the checkbox of one or more Tasks to enable the                          button in the button bar above the table. Click the                         button to display the same dialog as above and delete all selected Tasks.                  5. Filter Tasks                    Tasks can be filtered using the                          input in the header. You may filter Tasks on any visible column (including due date             and date completed). To sort by date click the                         button to open the date picker and select the desired date. Additionally, pending             Tasks can be filtered using the sidenav menu items to filter Tasks over due, due             today, and due tomorrow. *Note the menu items are just triggering special keyword             filters which can also be used in the                         input. The actual filters are \"overdue\", \"today\", and \"tomorrow\". You may also            enter the current date in the search field and you will see the same results as            \"today\".                         '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ButtonBarComponent', 'selector': 'button-bar'},{'name': 'ButtonsComponent', 'selector': 'buttons'},{'name': 'CompleteTaskComponent', 'selector': 'complete-task'},{'name': 'CompleteTasksTableComponent', 'selector': 'complete-tasks-table'},{'name': 'ConfirmDeleteTaskComponent', 'selector': 'confirm-delete'},{'name': 'CreateTaskComponent', 'selector': 'create-task'},{'name': 'EditTaskComponent', 'selector': 'edit-task'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'ListItemComponent', 'selector': 'list-item'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'PendingTasksTableComponent', 'selector': 'pending-tasks-table'},{'name': 'RecurringTaskComponent', 'selector': 'recurring-task'},{'name': 'SidenavTasksComponent', 'selector': 'sidenav-tasks'},{'name': 'TaskFormComponent', 'selector': 'task-form'},{'name': 'TasksComponent', 'selector': 'tasks-root'},{'name': 'TasksFilterComponent', 'selector': 'tasks-filter'},{'name': 'TasksTableComponent', 'selector': 'tasks-table'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AboutComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AboutModule.html":{"url":"modules/AboutModule.html","title":"module - AboutModule","body":"\n                   \n\n\n\n\n  Modules\n  AboutModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AboutModule\n\n\n\ncluster_AboutModule_declarations\n\n\n\ncluster_AboutModule_imports\n\n\n\n\nAboutComponent\n\nAboutComponent\n\n\n\nAboutModule\n\nAboutModule\n\nAboutModule -->\n\nAboutComponent->AboutModule\n\n\n\n\n\nAboutRoutingModule\n\nAboutRoutingModule\n\nAboutModule -->\n\nAboutRoutingModule->AboutModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/about/about.module.ts\n        \n\n\n            \n                Description\n            \n            \n                Defines the components and modules required for the about page.\n\n            \n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                AboutComponent\n                            \n                    \n                \n                \n                    EntryComponents\n                    \n                            \n                                AboutComponent\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    AboutRoutingModule\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        /* angular libraries */\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { MatButtonModule } from '@angular/material';\n\n/* fontawesome */\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\nimport { library } from '@fortawesome/fontawesome-svg-core'\nimport { faAngleUp } from '@fortawesome/free-solid-svg-icons';\n\n// Add icons to library for convenient access in components\nlibrary.add(faAngleUp);\n\n/* module */\nimport { AboutComponent } from './about.component';\nimport { AboutRoutingModule } from './about.routing';\n\n/**\n * Defines the components and modules required for the about page.\n */\n@NgModule({\n    declarations: [\n        AboutComponent\n    ],\n    imports: [\n        /* angular libraries */\n        CommonModule,\n        FlexLayoutModule,\n        MatButtonModule,\n\n        FontAwesomeModule,\n        \n        AboutRoutingModule\n    ],\n    entryComponents: [\n        AboutComponent\n    ]\n})\nexport class AboutModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AboutRoutingModule.html":{"url":"modules/AboutRoutingModule.html","title":"module - AboutRoutingModule","body":"\n                   \n\n\n\n\n  Modules\n  AboutRoutingModule\n\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/about/about.routing.ts\n        \n\n\n        \n\n        \n            \n            \n        \n    \n\n\n    \n        /* angular libraries */\nimport { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n/* About module components */\nimport { AboutComponent } from './about.component';\n\n/* The routes within the About module. Defaults to the AboutComponent. */\nconst routes: Routes = [\n    {\n        path: 'about',\n        component: AboutComponent\n    }\n];\n\n/**\n * The router module for the About module.\n */\n@NgModule({\n    imports: [RouterModule.forChild(routes)],\n    exports: [RouterModule]\n})\nexport class AboutRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n    \n        Description\n    \n    \n        Creates the main layout for the application. The main layout currently\nconsists of the header, side menu, footer, and router-outlet.\n\n    \n\n\n    \n        Implements\n    \n    \n                OnDestroy\n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                styleUrls\n                app.component.css\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                loading\n                            \n                            \n                                    Private\n                                sub\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(changeDetectorRef: ChangeDetectorRef, loaderService: LoaderService)\n                    \n                \n                        \n                            \n                                Defined in src/app/app.component.ts:22\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        changeDetectorRef\n                                                  \n                                                        \n                                                                    ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        loaderService\n                                                  \n                                                        \n                                                                    LoaderService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnDestroy\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnDestroy()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/app.component.ts:32\n                            \n                        \n\n\n                \n                    \n                            Unsubscribe from any subscriptions.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/app.component.ts:39\n                            \n                        \n\n\n                \n                    \n                            Initialize the component.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loading\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        loading:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:20\n                            \n                        \n\n                \n                    \n                        Boolean value to indicate when the application is loading something. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            sub\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        sub:     Subscription\n\n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:22\n                            \n                        \n\n                \n                    \n                        The subscriptions for the component. \n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnDestroy, OnInit, ChangeDetectorRef } from '@angular/core';\nimport { Subscription } from 'rxjs';\n\n/* app services */\nimport { LoaderService, LoaderState } from './core/services/loader.service';\n\n/**\n * Creates the main layout for the application. The main layout currently\n * consists of the header, side menu, footer, and router-outlet.\n */\n@Component({\n    selector: 'app-root',\n    templateUrl: './app.component.html',\n    styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnDestroy, OnInit {\n\n    /** Boolean value to indicate when the application is loading something. */\n    loading: boolean;\n    /** The subscriptions for the component. */\n    private sub: Subscription;\n\n    constructor(\n        private changeDetectorRef: ChangeDetectorRef,\n        private loaderService: LoaderService\n    ) {}\n\n    /**\n     * Unsubscribe from any subscriptions.\n     */\n    ngOnDestroy() {\n        this.sub.unsubscribe();\n    }\n\n    /**\n     * Initialize the component.\n     */\n    ngOnInit() {\n        this.sub = new Subscription();        \n        const subLoading = this.loaderService.loaderState.subscribe((loaderState: LoaderState) => {\n            this.loading = loaderState.show;\n            this.changeDetectorRef.detectChanges();\n        });\n        this.sub.add(subLoading);\n    }\n}\n\n    \n\n    \n        \n    \n\n\n\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ButtonBarComponent', 'selector': 'button-bar'},{'name': 'ButtonsComponent', 'selector': 'buttons'},{'name': 'CompleteTaskComponent', 'selector': 'complete-task'},{'name': 'CompleteTasksTableComponent', 'selector': 'complete-tasks-table'},{'name': 'ConfirmDeleteTaskComponent', 'selector': 'confirm-delete'},{'name': 'CreateTaskComponent', 'selector': 'create-task'},{'name': 'EditTaskComponent', 'selector': 'edit-task'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'ListItemComponent', 'selector': 'list-item'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'PendingTasksTableComponent', 'selector': 'pending-tasks-table'},{'name': 'RecurringTaskComponent', 'selector': 'recurring-task'},{'name': 'SidenavTasksComponent', 'selector': 'sidenav-tasks'},{'name': 'TaskFormComponent', 'selector': 'task-form'},{'name': 'TasksComponent', 'selector': 'tasks-root'},{'name': 'TasksFilterComponent', 'selector': 'tasks-filter'},{'name': 'TasksTableComponent', 'selector': 'tasks-table'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n  Modules\n  AppModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nPageNotFoundComponent\n\nPageNotFoundComponent\n\nAppModule -->\n\nPageNotFoundComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAboutModule\n\nAboutModule\n\nAppModule -->\n\nAboutModule->AppModule\n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nCoreModule\n\nCoreModule\n\nAppModule -->\n\nCoreModule->AppModule\n\n\n\n\n\nFooterModule\n\nFooterModule\n\nAppModule -->\n\nFooterModule->AppModule\n\n\n\n\n\nHeaderModule\n\nHeaderModule\n\nAppModule -->\n\nHeaderModule->AppModule\n\n\n\n\n\nTasksModule\n\nTasksModule\n\nAppModule -->\n\nTasksModule->AppModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                AppComponent\n                            \n                            \n                                PageNotFoundComponent\n                            \n                    \n                \n                \n                    EntryComponents\n                    \n                            \n                                PageNotFoundComponent\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    AboutModule\n                            \n                            \n                                    AppRoutingModule\n                            \n                            \n                                    CoreModule\n                            \n                            \n                                    FooterModule\n                            \n                            \n                                    HeaderModule\n                            \n                            \n                                    TasksModule\n                            \n                    \n                \n                \n                    Bootstrap\n                    \n                            \n                                AppComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        /* angular libraries */\nimport { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { MatProgressSpinnerModule } from '@angular/material';\n\n/* app components */\nimport { AppComponent } from './app.component';\nimport { AppRoutingModule } from './app.routing';\nimport { AboutModule } from './about/about.module';\nimport { PageNotFoundComponent } from './components/page-not-found/page-not-found.component';\nimport { CoreModule } from './core/core.module';\nimport { FooterModule } from './footer/footer.module';\nimport { HeaderModule } from './header/header.module';\nimport { TasksModule } from './tasks/tasks.module'; \n\n@NgModule({\n  declarations: [\n    AppComponent,\n    PageNotFoundComponent\n  ],\n  imports: [\n    /* angular libraries */\n    BrowserModule,\n    MatProgressSpinnerModule,\n\n    /* app modules */\n    AboutModule,\n    CoreModule.forRoot(),\n    FooterModule,\n    HeaderModule,\n    TasksModule.forRoot(),\n    AppRoutingModule\n  ],\n  bootstrap: [AppComponent],\n  entryComponents: [PageNotFoundComponent]\n})\nexport class AppModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppRoutingModule.html":{"url":"modules/AppRoutingModule.html","title":"module - AppRoutingModule","body":"\n                   \n\n\n\n\n  Modules\n  AppRoutingModule\n\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.routing.ts\n        \n\n\n        \n\n        \n            \n            \n        \n    \n\n\n    \n        /* angular libraries */\nimport { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n/* components */\nimport { PageNotFoundComponent } from './components/page-not-found/page-not-found.component';\n\n/* The routes for the app. Defaults to the tasks module at the root. */\nconst appRoutes: Routes = [\n    {\n        path: 'about',\n        loadChildren: './about/about.module#AboutModule'\n    },\n    {\n        path: '',\n        pathMatch: 'full',\n        redirectTo: 'tasks'\n    },\n    {\n        path: '404',\n        component: PageNotFoundComponent\n    },\n    {\n        path: '**',\n        component: PageNotFoundComponent\n    }\n];\n\n/**\n * The router module for the application.\n */\n@NgModule({\n    imports: [RouterModule.forRoot(appRoutes)],\n    exports: [RouterModule]\n})\nexport class AppRoutingModule {};\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ButtonBarComponent.html":{"url":"components/ButtonBarComponent.html","title":"component - ButtonBarComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ButtonBarComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/tasks/button-bar/button-bar.component.ts\n\n\n    \n        Description\n    \n    \n        Creates a bar that consists of the main @link{ButtonsComponent} and\na paginator to page through an array of given Tasks. The capability\nto disable and/or hide buttons on ButtonsComponent is extended through\nthe provided @Inputs that match the @Inputs in the ButtonsComponent.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                button-bar\n            \n\n            \n                styleUrls\n                button-bar.component.css\n            \n\n\n\n            \n                templateUrl\n                ./button-bar.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                paginator\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                disableCompleteButton\n                            \n                            \n                                disableDeleteButton\n                            \n                            \n                                disableEditButton\n                            \n                            \n                                hideCompleteButton\n                            \n                            \n                                hideEditButton\n                            \n                            \n                                hidePageSize\n                            \n                            \n                                length\n                            \n                            \n                                pageSize\n                            \n                            \n                                pageSizeOptions\n                            \n                            \n                                showBackButton\n                            \n                            \n                                showFirstLastButtons\n                            \n                            \n                                tasks\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                click\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/tasks/button-bar/button-bar.component.ts:48\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        disableCompleteButton\n                    \n                    \n                        Boolean to indicate if the complete button should be disabled (enabled by default). \n\n                            \n                            Type:    boolean\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/tasks/button-bar/button-bar.component.ts:22\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        disableDeleteButton\n                    \n                    \n                        Boolean to indicate if the delete button should be disabled (enabled by default). \n\n                            \n                            Type:    boolean\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/tasks/button-bar/button-bar.component.ts:24\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        disableEditButton\n                    \n                    \n                        Boolean to indicate if the edit button should be disabled (enabled by default). \n\n                            \n                            Type:    boolean\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/tasks/button-bar/button-bar.component.ts:26\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        hideCompleteButton\n                    \n                    \n                        Boolean to indicate if the complete button should be hidden (hidden by default). \n\n                            \n                            Type:    boolean\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/tasks/button-bar/button-bar.component.ts:28\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        hideEditButton\n                    \n                    \n                        Boolean to indicate if the edit button should be hidden (visible by default). \n\n                            \n                            Type:    boolean\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/tasks/button-bar/button-bar.component.ts:30\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        hidePageSize\n                    \n                    \n                        Boolean to indicate if the pageSize options in paginator should be hidden (hidden by default). \n\n                            \n                            Type:    boolean\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/tasks/button-bar/button-bar.component.ts:32\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        length\n                    \n                    \n                        The length of the paginator. \n\n                            \n                            Type:    number\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/tasks/button-bar/button-bar.component.ts:34\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        pageSize\n                    \n                    \n                        The size for the paginator. \n\n                            \n                            Type:    number\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/tasks/button-bar/button-bar.component.ts:36\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        pageSizeOptions\n                    \n                    \n                        The size options for pages. \n\n                            \n                            Type:    number[]\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/tasks/button-bar/button-bar.component.ts:38\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        showBackButton\n                    \n                    \n                        Boolean to indicate whether to show the back button (hidden by default). \n\n                            \n                            Type:    boolean\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/tasks/button-bar/button-bar.component.ts:40\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        showFirstLastButtons\n                    \n                    \n                        Boolean to indicate whether to show first and last buttons (hidden by default). \n\n                            \n                            Type:    boolean\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/tasks/button-bar/button-bar.component.ts:42\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        tasks\n                    \n                    \n                        The Task(s) being managed with the buttons. \n\n                            \n                            Type:    Task[]\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/tasks/button-bar/button-bar.component.ts:44\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        click\n                    \n                    \n                        Event emitted when one of the buttons is clicked. \n\n                        $event type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/tasks/button-bar/button-bar.component.ts:46\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            paginator\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        paginator:     MatPaginator\n\n                    \n                \n                    \n                        \n                            Type :     MatPaginator\n\n                        \n                    \n                    \n                        \n                            Decorators : ViewChild\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tasks/button-bar/button-bar.component.ts:48\n                            \n                        \n\n                \n                    \n                        The paginator component. \n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, EventEmitter, Input, Output, ViewChild } from '@angular/core';\nimport { MatPaginator } from '@angular/material';\n\n/* app */\nimport { Task } from '@tasks/shared/models/task.model';\n\n/**\n * Creates a bar that consists of the main @link{ButtonsComponent} and\n * a paginator to page through an array of given Tasks. The capability\n * to disable and/or hide buttons on ButtonsComponent is extended through\n * the provided @Inputs that match the @Inputs in the ButtonsComponent.\n */\n@Component({\n    selector: 'button-bar',\n    templateUrl: './button-bar.component.html',\n    styleUrls: ['./button-bar.component.css']\n})\nexport class ButtonBarComponent { \n\n    /** Boolean to indicate if the complete button should be disabled (enabled by default). */\n    @Input() disableCompleteButton: boolean;\n    /** Boolean to indicate if the delete button should be disabled (enabled by default). */\n    @Input() disableDeleteButton: boolean;\n    /** Boolean to indicate if the edit button should be disabled (enabled by default). */\n    @Input() disableEditButton: boolean;\n    /** Boolean to indicate if the complete button should be hidden (hidden by default). */\n    @Input() hideCompleteButton: boolean;\n    /** Boolean to indicate if the edit button should be hidden (visible by default). */\n    @Input() hideEditButton: boolean;\n    /** Boolean to indicate if the pageSize options in paginator should be hidden (hidden by default). */\n    @Input() hidePageSize: boolean;\n    /** The length of the paginator. */\n    @Input() length: number;\n    /** The size for the paginator. */\n    @Input() pageSize: number;\n    /** The size options for pages. */\n    @Input() pageSizeOptions: number[];\n    /** Boolean to indicate whether to show the back button (hidden by default). */\n    @Input() showBackButton: boolean;\n    /** Boolean to indicate whether to show first and last buttons (hidden by default). */\n    @Input() showFirstLastButtons: boolean;\n    /** The Task(s) being managed with the buttons. */\n    @Input() tasks: Task[];\n    /** Event emitted when one of the buttons is clicked. */\n    @Output() click: EventEmitter;\n    /** The paginator component. */\n    @ViewChild(MatPaginator) paginator: MatPaginator;\n\n    constructor(){\n        this.click = new EventEmitter();\n    }\n}\n\n    \n\n    \n        \n    \n         \n    \n    \n    \n    \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                             '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ButtonBarComponent', 'selector': 'button-bar'},{'name': 'ButtonsComponent', 'selector': 'buttons'},{'name': 'CompleteTaskComponent', 'selector': 'complete-task'},{'name': 'CompleteTasksTableComponent', 'selector': 'complete-tasks-table'},{'name': 'ConfirmDeleteTaskComponent', 'selector': 'confirm-delete'},{'name': 'CreateTaskComponent', 'selector': 'create-task'},{'name': 'EditTaskComponent', 'selector': 'edit-task'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'ListItemComponent', 'selector': 'list-item'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'PendingTasksTableComponent', 'selector': 'pending-tasks-table'},{'name': 'RecurringTaskComponent', 'selector': 'recurring-task'},{'name': 'SidenavTasksComponent', 'selector': 'sidenav-tasks'},{'name': 'TaskFormComponent', 'selector': 'task-form'},{'name': 'TasksComponent', 'selector': 'tasks-root'},{'name': 'TasksFilterComponent', 'selector': 'tasks-filter'},{'name': 'TasksTableComponent', 'selector': 'tasks-table'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ButtonBarComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ButtonsComponent.html":{"url":"components/ButtonsComponent.html","title":"component - ButtonsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ButtonsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/tasks/buttons/buttons.component.ts\n\n\n    \n        Description\n    \n    \n        Creates the main buttons to manage one or more Tasks. The main management\ncapabilities for Tasks include completing, deleting, and editing. Any \nbutton can be disabled and/or hidden using the provided @Inputs.\n\n    \n\n\n    \n        Implements\n    \n    \n                OnDestroy\n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                buttons\n            \n\n            \n                styleUrls\n                buttons.component.css\n            \n\n\n\n            \n                templateUrl\n                ./buttons.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                sub\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                openCompleteDialog\n                            \n                            \n                                openConfirmDeleteDialog\n                            \n                            \n                                openEditDialog\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                disableCompleteButton\n                            \n                            \n                                disableDeleteButton\n                            \n                            \n                                disableEditButton\n                            \n                            \n                                hideCompleteButton\n                            \n                            \n                                hideEditButton\n                            \n                            \n                                tasks\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                click\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dialog: MatDialog, router: Router, utilsService: UtilsService)\n                    \n                \n                        \n                            \n                                Defined in src/app/tasks/buttons/buttons.component.ts:40\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        utilsService\n                                                  \n                                                        \n                                                                    UtilsService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        disableCompleteButton\n                    \n                    \n                        Boolean to indicate if the complete button should be disabled (enabled by default). \n\n                            \n                            Type:    boolean\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/tasks/buttons/buttons.component.ts:26\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        disableDeleteButton\n                    \n                    \n                        Boolean to indicate if the delete button should be disabled (enabled by default). \n\n                            \n                            Type:    boolean\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/tasks/buttons/buttons.component.ts:28\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        disableEditButton\n                    \n                    \n                        Boolean to indicate if the edit button should be disabled (enabled by default). \n\n                            \n                            Type:    boolean\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/tasks/buttons/buttons.component.ts:30\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        hideCompleteButton\n                    \n                    \n                        Boolean to indicate if the complete button should be hidden (visible by default). \n\n                            \n                            Type:    boolean\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/tasks/buttons/buttons.component.ts:32\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        hideEditButton\n                    \n                    \n                        Boolean to indicate if the edit button should be hidden (visible by default). \n\n                            \n                            Type:    boolean\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/tasks/buttons/buttons.component.ts:34\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        tasks\n                    \n                    \n                        The Task(s) being managed with the buttons. \n\n                            \n                            Type:    Task[]\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/tasks/buttons/buttons.component.ts:36\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        click\n                    \n                    \n                        Event emitted when one of the buttons is clicked. \n\n                        $event type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/tasks/buttons/buttons.component.ts:38\n                            \n                        \n            \n        \n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnDestroy\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnDestroy()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/tasks/buttons/buttons.component.ts:111\n                            \n                        \n\n\n                \n                    \n                            Unsubscribe from any subscriptions.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/tasks/buttons/buttons.component.ts:118\n                            \n                        \n\n\n                \n                    \n                            Initialize the component.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            openCompleteDialog\n                            \n                            \n                        \n                    \n                \n                \n                    \nopenCompleteDialog(event: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/tasks/buttons/buttons.component.ts:53\n                            \n                        \n\n\n                \n                    \n                            Opens the dialog to complete the selected Task(s).\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        event\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            openConfirmDeleteDialog\n                            \n                            \n                        \n                    \n                \n                \n                    \nopenConfirmDeleteDialog(event: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/tasks/buttons/buttons.component.ts:74\n                            \n                        \n\n\n                \n                    \n                            Opens the dialog to confirm if the selected Task(s) should be deleted.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        event\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            openEditDialog\n                            \n                            \n                        \n                    \n                \n                \n                    \nopenEditDialog(event: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/tasks/buttons/buttons.component.ts:102\n                            \n                        \n\n\n                \n                    \n                            Opens the dialog to edit the selected Task. If the Task is not complete\nand it is a repeating Task, then the RecurringTaskComponent is displayed\nto determine if the user wants to edit the single selected Task or all\nremaining Tasks (including the one selected). Otherwise the basic edit\nTask dialog is rendered.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        event\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            sub\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        sub:     Subscription\n\n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tasks/buttons/buttons.component.ts:40\n                            \n                        \n\n                \n                    \n                        The subscriptions for the component. \n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, EventEmitter, OnDestroy, OnInit, Input, Output } from '@angular/core';\nimport { MatDialog, MatDialogConfig } from \"@angular/material\";\nimport { Router } from '@angular/router';\nimport { Subscription } from 'rxjs';\n\n/* app */\nimport { CompleteTaskComponent } from '@tasks/dialogs/complete-task/complete-task.component';\nimport { ConfirmDeleteTaskComponent } from '@tasks/dialogs/confirm-delete-task/confirm-delete-task.component';\nimport { Task } from '@tasks/shared/models/task.model';\nimport { UtilsService } from '@tasks/shared/services/utils.service';\n\n/**\n * Creates the main buttons to manage one or more Tasks. The main management\n * capabilities for Tasks include completing, deleting, and editing. Any \n * button can be disabled and/or hidden using the provided @Inputs.\n */\n@Component({\n    selector: 'buttons',\n    templateUrl: './buttons.component.html',\n    styleUrls: ['./buttons.component.css']\n})\nexport class ButtonsComponent implements OnDestroy, OnInit { \n\n    /** Boolean to indicate if the complete button should be disabled (enabled by default). */\n    @Input() disableCompleteButton: boolean;\n    /** Boolean to indicate if the delete button should be disabled (enabled by default). */\n    @Input() disableDeleteButton: boolean;\n    /** Boolean to indicate if the edit button should be disabled (enabled by default). */\n    @Input() disableEditButton: boolean;\n    /** Boolean to indicate if the complete button should be hidden (visible by default). */\n    @Input() hideCompleteButton: boolean;\n    /** Boolean to indicate if the edit button should be hidden (visible by default). */\n    @Input() hideEditButton: boolean;\n    /** The Task(s) being managed with the buttons. */\n    @Input() tasks: Task[];\n    /** Event emitted when one of the buttons is clicked. */\n    @Output() click: EventEmitter;\n    /** The subscriptions for the component. */\n    private sub: Subscription;\n\n    constructor(\n        private dialog: MatDialog,\n        private router: Router,\n        private utilsService: UtilsService\n    ){\n        this.click = new EventEmitter();\n    }\n\n    /**\n     * Opens the dialog to complete the selected Task(s).\n     */\n    openCompleteDialog(event) {\n        const dialogConfig = new MatDialogConfig();\n        dialogConfig.width = '50%';\n        dialogConfig.autoFocus = false;\n        dialogConfig.data = { tasks: this.tasks };\n        let completeSelectedDialogRef = this.dialog.open(CompleteTaskComponent, dialogConfig);\n        this.utilsService.fullScreenDialogSub(completeSelectedDialogRef, '50%');\n\n        // subscribe to the completeTask event from the dialog\n        const sub = completeSelectedDialogRef.componentInstance.completeTask.subscribe(() => {\n            this.click.emit(true);\n        });\n        this.sub.add(sub);\n\n        // prevent propagation so parent components do not receive the click event\n        event.stopPropagation();\n    }\n\n    /**\n     * Opens the dialog to confirm if the selected Task(s) should be deleted.\n     */\n    openConfirmDeleteDialog(event) {\n        const dialogConfig = new MatDialogConfig();\n        dialogConfig.width = '50%';\n        dialogConfig.autoFocus = false;\n        dialogConfig.data = { tasks: this.tasks };\n        let confirmDeleteDialogRef = this.dialog.open(ConfirmDeleteTaskComponent, dialogConfig);\n\n        this.utilsService.fullScreenDialogSub(confirmDeleteDialogRef);\n\n        // subscribe to the deleteTask event from the dialog\n        const sub = confirmDeleteDialogRef.componentInstance.deleteTask.subscribe(() => {\n            this.click.emit(true);\n        });\n        this.sub.add(sub);\n\n        // prevent propagation so parent components do not receive the click event\n        event.stopPropagation();\n    }\n\n    /**\n     * Opens the dialog to edit the selected Task. If the Task is not complete\n     * and it is a repeating Task, then the RecurringTaskComponent is displayed\n     * to determine if the user wants to edit the single selected Task or all\n     * remaining Tasks (including the one selected). Otherwise the basic edit\n     * Task dialog is rendered.\n     * \n     * @param event\n     */\n    openEditDialog(event) {\n        this.router.navigate(['tasks', this.tasks[0].id]);\n        // prevent propagation so parent components do not receive the click event\n        event.stopPropagation();\n    }\n\n    /**\n     * Unsubscribe from any subscriptions.\n     */\n    ngOnDestroy() {\n        this.sub.unsubscribe();\n    }\n\n    /**\n     * Initialize the component.\n     */\n    ngOnInit() {\n        this.sub = new Subscription();\n    }\n}\n\n    \n\n    \n        \n    \n    \n    \n\n\n     \n    \n    \n\n\n    \n    \n    \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                     '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ButtonBarComponent', 'selector': 'button-bar'},{'name': 'ButtonsComponent', 'selector': 'buttons'},{'name': 'CompleteTaskComponent', 'selector': 'complete-task'},{'name': 'CompleteTasksTableComponent', 'selector': 'complete-tasks-table'},{'name': 'ConfirmDeleteTaskComponent', 'selector': 'confirm-delete'},{'name': 'CreateTaskComponent', 'selector': 'create-task'},{'name': 'EditTaskComponent', 'selector': 'edit-task'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'ListItemComponent', 'selector': 'list-item'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'PendingTasksTableComponent', 'selector': 'pending-tasks-table'},{'name': 'RecurringTaskComponent', 'selector': 'recurring-task'},{'name': 'SidenavTasksComponent', 'selector': 'sidenav-tasks'},{'name': 'TaskFormComponent', 'selector': 'task-form'},{'name': 'TasksComponent', 'selector': 'tasks-root'},{'name': 'TasksFilterComponent', 'selector': 'tasks-filter'},{'name': 'TasksTableComponent', 'selector': 'tasks-table'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ButtonsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CompleteTaskComponent.html":{"url":"components/CompleteTaskComponent.html","title":"component - CompleteTaskComponent","body":"\n                   \n\n\n\n\n\n  Components\n  CompleteTaskComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/tasks/dialogs/complete-task/complete-task.component.ts\n\n\n    \n        Description\n    \n    \n        Creates a dialog to complete a Task or list of Tasks. If more than one\nTask is completed, then they will all be marked complete with the same\ndate.\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                complete-task\n            \n\n            \n                styleUrls\n                complete-task.component.css\n            \n\n\n\n            \n                templateUrl\n                ./complete-task.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                content\n                            \n                            \n                                dateCompletedForm\n                            \n                            \n                                hint\n                            \n                            \n                                maxDateCompleted\n                            \n                            \n                                    Private\n                                sub\n                            \n                            \n                                tasks\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                cancel\n                            \n                            \n                                checkError\n                            \n                            \n                                complete\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Private\n                                notifyAndClose\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                completeTask\n                            \n                        \n                    \n                \n\n                \n                    \n                        HostBindings\n                    \n                \n                \n                    \n                        \n                            \n                                class.marker-complete-task-dialog\n                            \n                        \n                    \n                \n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(data: any, dialogRef: MatDialogRef, formBuilder: FormBuilder, logger: LoggerService, taskService: TaskService)\n                    \n                \n                        \n                            \n                                Defined in src/app/tasks/dialogs/complete-task/complete-task.component.ts:44\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                    any\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialogRef\n                                                  \n                                                        \n                                                                    MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        formBuilder\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        logger\n                                                  \n                                                        \n                                                                    LoggerService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        taskService\n                                                  \n                                                        \n                                                                    TaskService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        completeTask\n                    \n                    \n                        Event emitted when the Task(s) are complete. \n\n                        $event type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/tasks/dialogs/complete-task/complete-task.component.ts:29\n                            \n                        \n            \n        \n\n    \n    HostBindings        \n            \n                \n                    \n                        \n                        \n                            \n                            class.marker-complete-task-dialog\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        class.marker-complete-task-dialog:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tasks/dialogs/complete-task/complete-task.component.ts:27\n                            \n                        \n\n\n            \n        \n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            cancel\n                            \n                            \n                        \n                    \n                \n                \n                    \ncancel()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/tasks/dialogs/complete-task/complete-task.component.ts:57\n                            \n                        \n\n\n                \n                    \n                            Cancels the Task edit and closes the dialog.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            checkError\n                            \n                            \n                        \n                    \n                \n                \n                    \ncheckError(param: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/tasks/dialogs/complete-task/complete-task.component.ts:68\n                            \n                        \n\n\n                \n                    \n                            Returns true if the form is invalid and the property of the given form is dirty or it has\nbeen touched.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        param\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            complete\n                            \n                            \n                        \n                    \n                \n                \n                    \ncomplete()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/tasks/dialogs/complete-task/complete-task.component.ts:75\n                            \n                        \n\n\n                \n                    \n                            Completes the Task(s).\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnDestroy\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnDestroy()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/tasks/dialogs/complete-task/complete-task.component.ts:98\n                            \n                        \n\n\n                \n                    \n                            Unsubscribe from any subscriptions.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/tasks/dialogs/complete-task/complete-task.component.ts:105\n                            \n                        \n\n\n                \n                    \n                            Initialize the component.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            notifyAndClose\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        notifyAndClose(msg: string, task: Task)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/tasks/dialogs/complete-task/complete-task.component.ts:137\n                            \n                        \n\n\n                \n                    \n                            Displays a snackBar with the given message, emits the given Task to this\ncomponents parent, and closes this dialog.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        msg\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                The message to display to the user.\n\n                                                        \n                                                \n                                                \n                                                        task\n                                                        \n                                                                    Task\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            content\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        content:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tasks/dialogs/complete-task/complete-task.component.ts:31\n                            \n                        \n\n                \n                    \n                        The text to display in the content along with the date completed field. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            dateCompletedForm\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        dateCompletedForm:     FormGroup\n\n                    \n                \n                    \n                        \n                            Type :     FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tasks/dialogs/complete-task/complete-task.component.ts:33\n                            \n                        \n\n                \n                    \n                        The form for the dateCompleted property. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            hint\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        hint:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tasks/dialogs/complete-task/complete-task.component.ts:35\n                            \n                        \n\n                \n                    \n                        The text to display for the dateCompleted hint. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            maxDateCompleted\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        maxDateCompleted:     Date\n\n                    \n                \n                    \n                        \n                            Type :     Date\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tasks/dialogs/complete-task/complete-task.component.ts:38\n                            \n                        \n\n                \n                    \n                        The max date a Task can be marked as complete (set to current date; it doesn't \nmake a lot of sense to allow user to mark a task complete in the future).\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            sub\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        sub:     Subscription\n\n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tasks/dialogs/complete-task/complete-task.component.ts:44\n                            \n                        \n\n                \n                    \n                        The subscriptions for the component. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            tasks\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        tasks:     Task[]\n\n                    \n                \n                    \n                        \n                            Type :     Task[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tasks/dialogs/complete-task/complete-task.component.ts:40\n                            \n                        \n\n                \n                    \n                        The Task(s) to complete. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        title:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tasks/dialogs/complete-task/complete-task.component.ts:42\n                            \n                        \n\n                \n                    \n                        The title text for the dialog. \n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import * as moment from 'moment';\n\n/* angular libraries */\nimport { Component, EventEmitter, HostBinding, Inject, OnDestroy, OnInit, Output } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\nimport { Subscription } from 'rxjs';\n\n/* app */\nimport { LoggerService } from 'app/core/services/logger.service';\nimport { Task } from '@tasks/shared/models/task.model';\nimport { TaskService} from '@tasks/shared/services/task.service';\n\n/**\n * Creates a dialog to complete a Task or list of Tasks. If more than one\n * Task is completed, then they will all be marked complete with the same\n * date.\n */\n@Component({\n    selector: 'complete-task',\n    templateUrl: './complete-task.component.html',\n    styleUrls: ['./complete-task.component.css']\n})\nexport class CompleteTaskComponent implements OnInit, OnDestroy {\n\n    @HostBinding('class.marker-complete-task-dialog') classMarker : boolean = true;\n    /** Event emitted when the Task(s) are complete. */\n    @Output() completeTask: EventEmitter = new EventEmitter();\n    /** The text to display in the content along with the date completed field. */\n    content: string;\n    /** The form for the dateCompleted property. */\n    dateCompletedForm: FormGroup;\n    /** The text to display for the dateCompleted hint. */\n    hint: string;\n    /** The max date a Task can be marked as complete (set to current date; it doesn't \n        make a lot of sense to allow user to mark a task complete in the future).*/\n    maxDateCompleted: Date;\n    /** The Task(s) to complete. */\n    tasks: Task[];\n    /** The title text for the dialog. */\n    title: string;\n    /** The subscriptions for the component. */\n    private sub: Subscription;\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private data:any,\n        private dialogRef: MatDialogRef,\n        private formBuilder: FormBuilder,\n        private logger: LoggerService,\n        private taskService: TaskService\n    ) {}\n\n    /**\n     * Cancels the Task edit and closes the dialog.\n     */\n    cancel() {\n        this.dialogRef.close();\n    }\n\n    /**\n     * Returns true if the form is invalid and the property of the given form is dirty or it has\n     * been touched.\n     * \n     * @param form The form to validate.\n     * @param property The property that was updated.\n     */\n    checkError(param: string) {\n        return this.dateCompletedForm.get(param).invalid && (this.dateCompletedForm.get(param).dirty || this.dateCompletedForm.get(param).touched);      \n    }\n\n    /**\n     * Completes the Task(s).\n     */\n    complete() {\n        let properties: Partial = {\n            dateCompleted: this.dateCompletedForm.controls['dateCompleted'].value\n        }\n\n        if(this.tasks.length > 1) {\n            let ids: number[] = this.tasks.map((task: Task) => task.id);\n            const sub = this.taskService.completeAll(ids, properties).subscribe((tasks: Task[]) => {\n                this.notifyAndClose('Tasks Completed Successfully', tasks[0]);\n            });\n            this.sub.add(sub);\n        }\n        else {\n            const sub = this.taskService.complete(this.tasks[0], properties).subscribe((task: Task) => {\n                this.notifyAndClose('Task Completed Successfully', task);\n            });\n            this.sub.add(sub);\n        }\n    }\n\n    /**\n     * Unsubscribe from any subscriptions.\n     */\n    ngOnDestroy() {\n        this.sub.unsubscribe();\n    }\n\n    /**\n     * Initialize the component.\n     */\n    ngOnInit() {\n        this.maxDateCompleted = moment().startOf('day').utc().toDate();\n        this.sub = new Subscription();\n        this.tasks = this.data.tasks;\n        if(this.tasks.length > 1) { \n            this.content = 'Enter the date the Tasks are completed. All Tasks will get the same date completed.';\n            this.hint = 'The date the tasks are completed';\n            this.title = 'Complete Tasks';\n        }\n        else {\n            this.content = 'Enter the date the Task is completed.';\n            this.hint = 'The date the task is completed';\n            this.title = 'Complete Task';\n        }\n\n        this.dateCompletedForm = this.formBuilder.group({\n            dateCompleted: [\n                {\n                    value: '',\n                    disabled: false\n                },\n                [Validators.required]\n            ]\n        });\n    }\n\n    /**\n     * Displays a snackBar with the given message, emits the given Task to this\n     * components parent, and closes this dialog.\n     * \n     * @param msg The message to display to the user.\n     */\n    private notifyAndClose(msg: string, task: Task): void {\n        this.logger.info(`CompleteTaskComponent: ${msg}`, task);\n        this.completeTask.emit(task);\n        this.dialogRef.close(msg);\n    }\n}\n\n    \n\n    \n        \n    {{title}}\n\n\n    {{content}}\n    \n        \n        \n            Date Completed\n            \n            \n            You must enter a date the task was completed\n            {{hint}}\n        \n        \n    \n\n\n    Cancel\n    \n        \n             \n            Complete\n        \n    \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    {{title}}    {{content}}                                Date Completed                                    You must enter a date the task was completed            {{hint}}                        Cancel                                     Complete            '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ButtonBarComponent', 'selector': 'button-bar'},{'name': 'ButtonsComponent', 'selector': 'buttons'},{'name': 'CompleteTaskComponent', 'selector': 'complete-task'},{'name': 'CompleteTasksTableComponent', 'selector': 'complete-tasks-table'},{'name': 'ConfirmDeleteTaskComponent', 'selector': 'confirm-delete'},{'name': 'CreateTaskComponent', 'selector': 'create-task'},{'name': 'EditTaskComponent', 'selector': 'edit-task'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'ListItemComponent', 'selector': 'list-item'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'PendingTasksTableComponent', 'selector': 'pending-tasks-table'},{'name': 'RecurringTaskComponent', 'selector': 'recurring-task'},{'name': 'SidenavTasksComponent', 'selector': 'sidenav-tasks'},{'name': 'TaskFormComponent', 'selector': 'task-form'},{'name': 'TasksComponent', 'selector': 'tasks-root'},{'name': 'TasksFilterComponent', 'selector': 'tasks-filter'},{'name': 'TasksTableComponent', 'selector': 'tasks-table'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CompleteTaskComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CompleteTaskModule.html":{"url":"modules/CompleteTaskModule.html","title":"module - CompleteTaskModule","body":"\n                   \n\n\n\n\n  Modules\n  CompleteTaskModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_CompleteTaskModule\n\n\n\ncluster_CompleteTaskModule_declarations\n\n\n\n\nCompleteTaskComponent\n\nCompleteTaskComponent\n\n\n\nCompleteTaskModule\n\nCompleteTaskModule\n\nCompleteTaskModule -->\n\nCompleteTaskComponent->CompleteTaskModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/tasks/dialogs/complete-task/complete-task.module.ts\n        \n\n\n            \n                Description\n            \n            \n                Defines the components, services, and modules required to complete Tasks.\n\n            \n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                CompleteTaskComponent\n                            \n                    \n                \n                \n                    EntryComponents\n                    \n                            \n                                CompleteTaskComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        /* angular libraries */\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatButtonModule, MatDatepickerModule, MatDialogModule, MatFormFieldModule, MatInputModule, MatNativeDateModule } from '@angular/material';\nimport { RouterModule } from '@angular/router';\n\n/* fontawesome */\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\nimport { library } from '@fortawesome/fontawesome-svg-core'\nimport { faCheckSquare } from '@fortawesome/free-regular-svg-icons';\nimport { faCheck } from '@fortawesome/free-solid-svg-icons';\n\n// Add icons to library for convenient access in components\nlibrary.add(faCheck, faCheckSquare);\n\n/* module */\nimport { CompleteTaskComponent } from '@tasks/dialogs/complete-task/complete-task.component';\n\n/**\n * Defines the components, services, and modules required to complete Tasks.\n */\n@NgModule({\n    declarations: [\n        CompleteTaskComponent,\n    ],\n    imports: [\n        /* angular libraries */\n        CommonModule,\n        FlexLayoutModule,\n        FormsModule,\n        MatButtonModule,\n        MatDatepickerModule,\n        MatDialogModule,\n        MatFormFieldModule,\n        MatInputModule,\n        MatNativeDateModule,\n        ReactiveFormsModule,\n        RouterModule,\n\n        FontAwesomeModule\n    ],\n    entryComponents: [\n        CompleteTaskComponent,\n    ]\n})\nexport class CompleteTaskModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CompleteTasksTableComponent.html":{"url":"components/CompleteTasksTableComponent.html","title":"component - CompleteTasksTableComponent","body":"\n                   \n\n\n\n\n\n  Components\n  CompleteTasksTableComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/tasks/table/complete-tasks-table.component.ts\n\n\n    \n        Description\n    \n    \n        A wrapper for the TasksTableComponent which only displays complete Tasks.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                complete-tasks-table\n            \n\n            \n                styleUrls\n                complete-tasks-table.component.css\n            \n\n\n\n            \n                templateUrl\n                ./complete-tasks-table.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                completedTasks\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            completedTasks\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        completedTasks:     TasksTableComponent\n\n                    \n                \n                    \n                        \n                            Type :     TasksTableComponent\n\n                        \n                    \n                    \n                        \n                            Decorators : ViewChild\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tasks/table/complete-tasks-table.component.ts:18\n                            \n                        \n\n                \n                    \n                        The table containing the complete Tasks. \n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, ViewChild } from '@angular/core';\n\n/* app */\nimport { TasksTableComponent } from '@tasks/table/tasks-table.component';\n\n/**\n * A wrapper for the TasksTableComponent which only displays complete Tasks.\n */\n@Component({\n    selector: 'complete-tasks-table',\n    templateUrl: './complete-tasks-table.component.html',\n    styleUrls: ['./complete-tasks-table.component.css']\n})\nexport class CompleteTasksTableComponent {\n\n    /** The table containing the complete Tasks. */\n    @ViewChild('completedTasks') completedTasks: TasksTableComponent;\n}\n\n    \n\n    \n        \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ButtonBarComponent', 'selector': 'button-bar'},{'name': 'ButtonsComponent', 'selector': 'buttons'},{'name': 'CompleteTaskComponent', 'selector': 'complete-task'},{'name': 'CompleteTasksTableComponent', 'selector': 'complete-tasks-table'},{'name': 'ConfirmDeleteTaskComponent', 'selector': 'confirm-delete'},{'name': 'CreateTaskComponent', 'selector': 'create-task'},{'name': 'EditTaskComponent', 'selector': 'edit-task'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'ListItemComponent', 'selector': 'list-item'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'PendingTasksTableComponent', 'selector': 'pending-tasks-table'},{'name': 'RecurringTaskComponent', 'selector': 'recurring-task'},{'name': 'SidenavTasksComponent', 'selector': 'sidenav-tasks'},{'name': 'TaskFormComponent', 'selector': 'task-form'},{'name': 'TasksComponent', 'selector': 'tasks-root'},{'name': 'TasksFilterComponent', 'selector': 'tasks-filter'},{'name': 'TasksTableComponent', 'selector': 'tasks-table'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CompleteTasksTableComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ConfirmDeleteTaskComponent.html":{"url":"components/ConfirmDeleteTaskComponent.html","title":"component - ConfirmDeleteTaskComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ConfirmDeleteTaskComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/tasks/dialogs/confirm-delete-task/confirm-delete-task.component.ts\n\n\n    \n        Description\n    \n    \n        Creates a confirmation dialog to delete a Task or list of Tasks.\n\n    \n\n\n    \n        Implements\n    \n    \n                OnDestroy\n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                confirm-delete\n            \n\n            \n                styleUrls\n                confirm-delete-task.component.css\n            \n\n\n\n            \n                templateUrl\n                ./confirm-delete-task.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                deleteTask\n                            \n                            \n                                sub\n                            \n                            \n                                task\n                            \n                            \n                                tasks\n                            \n                            \n                                text\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                cancel\n                            \n                            \n                                delete\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n                \n                    \n                        HostBindings\n                    \n                \n                \n                    \n                        \n                            \n                                class.marker-confirm-delete-task-dialog\n                            \n                        \n                    \n                \n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(data: any, dialogRef: MatDialogRef, logger: LoggerService, taskService: TaskService)\n                    \n                \n                        \n                            \n                                Defined in src/app/tasks/dialogs/confirm-delete-task/confirm-delete-task.component.ts:31\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                    any\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialogRef\n                                                  \n                                                        \n                                                                    MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        logger\n                                                  \n                                                        \n                                                                    LoggerService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        taskService\n                                                  \n                                                        \n                                                                    TaskService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n    \n    HostBindings        \n            \n                \n                    \n                        \n                        \n                            \n                            class.marker-confirm-delete-task-dialog\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        class.marker-confirm-delete-task-dialog:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tasks/dialogs/confirm-delete-task/confirm-delete-task.component.ts:21\n                            \n                        \n\n\n            \n        \n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            cancel\n                            \n                            \n                        \n                    \n                \n                \n                    \ncancel()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/tasks/dialogs/confirm-delete-task/confirm-delete-task.component.ts:43\n                            \n                        \n\n\n                \n                    \n                            Cancel out of delete and close this dialog\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            delete\n                            \n                            \n                        \n                    \n                \n                \n                    \ndelete()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/tasks/dialogs/confirm-delete-task/confirm-delete-task.component.ts:50\n                            \n                        \n\n\n                \n                    \n                            Delete the task\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnDestroy\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnDestroy()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/tasks/dialogs/confirm-delete-task/confirm-delete-task.component.ts:77\n                            \n                        \n\n\n                \n                    \n                            Unsubscribe from any subscriptions.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/tasks/dialogs/confirm-delete-task/confirm-delete-task.component.ts:84\n                            \n                        \n\n\n                \n                    \n                            Initialize the component.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            deleteTask\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        deleteTask:     \n\n                    \n                \n                    \n                        \n                            Default value : new EventEmitter()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tasks/dialogs/confirm-delete-task/confirm-delete-task.component.ts:29\n                            \n                        \n\n                \n                    \n                        The event emitter when the task is deleted. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sub\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        sub:     Subscription\n\n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tasks/dialogs/confirm-delete-task/confirm-delete-task.component.ts:31\n                            \n                        \n\n                \n                    \n                        The subscriptions for the component. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            task\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        task:     Task\n\n                    \n                \n                    \n                        \n                            Type :     Task\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tasks/dialogs/confirm-delete-task/confirm-delete-task.component.ts:23\n                            \n                        \n\n                \n                    \n                        The task to delete \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            tasks\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        tasks:     Task[]\n\n                    \n                \n                    \n                        \n                            Type :     Task[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tasks/dialogs/confirm-delete-task/confirm-delete-task.component.ts:25\n                            \n                        \n\n                \n                    \n                        The tasks to delete \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            text\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        text:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tasks/dialogs/confirm-delete-task/confirm-delete-task.component.ts:27\n                            \n                        \n\n                \n                    \n                        The confirmation text to display in the dialog. \n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, HostBinding, Inject, EventEmitter, OnDestroy, OnInit } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\nimport { Subscription } from 'rxjs';\n\n/* app */\nimport { LoggerService } from 'app/core/services/logger.service';\nimport { Task } from '@tasks/shared/models/task.model';\nimport { TaskService } from '@tasks/shared/services/task.service';\n\n/**\n * Creates a confirmation dialog to delete a Task or list of Tasks.\n */\n@Component({\n    selector: 'confirm-delete',\n    templateUrl: './confirm-delete-task.component.html',\n    styleUrls: ['./confirm-delete-task.component.css']\n})\nexport class ConfirmDeleteTaskComponent implements OnDestroy, OnInit {\n\n    @HostBinding('class.marker-confirm-delete-task-dialog') classMarker : boolean = true;\n    /** The task to delete */\n    task: Task;\n    /** The tasks to delete */\n    tasks: Task[];\n    /** The confirmation text to display in the dialog. */\n    text: string;\n    /** The event emitter when the task is deleted. */\n    deleteTask = new EventEmitter();\n    /** The subscriptions for the component. */\n    sub: Subscription;\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private data:any,\n        private dialogRef: MatDialogRef,\n        private logger: LoggerService,\n        private taskService: TaskService\n    ) {}\n\n    /**\n     * Cancel out of delete and close this dialog\n     */\n    cancel() {\n        this.dialogRef.close();\n    }\n\n    /**\n     * Delete the task\n     */\n    delete() {\n        if(this.tasks.length > 1) {\n            // send individual requests to delete each Task since bulk delete\n            // is not available through the API.\n            this.tasks.forEach((task: Task, index:number) => {\n                const sub = this.taskService.delete(task).subscribe(() => {\n                    if(index == this.tasks.length - 1) {\n                        this.deleteTask.emit(true);   // emit the deleteTask event to the edit-task parent component \n                        this.dialogRef.close(); // and close the this dialog\n                    }\n                });\n                this.sub.add(sub);\n            });\n        }\n        else {\n            const sub = this.taskService.delete(this.tasks[0]).subscribe((task: Task) => {\n                this.logger.info('ConfirmDeleteTaskComponent: Task deleted successfully', task);\n                this.deleteTask.emit(true);   // emit the deleteTask event to the edit-task parent component \n                this.dialogRef.close(); // and close the this dialog\n            });\n            this.sub.add(sub);\n        }\n    }\n\n    /**\n     * Unsubscribe from any subscriptions.\n     */\n    ngOnDestroy() {\n        this.sub.unsubscribe();\n    }\n\n    /**\n     * Initialize the component.\n     */\n    ngOnInit() {\n        this.sub = new Subscription();\n        this.tasks = this.data.tasks;\n        if(this.tasks.length > 1) {\n            this.text = `Are you sure you want to delete the selected ${this.tasks.length} tasks?`;\n        }\n        else {\n            this.text = 'Are you sure you want to delete the selected task?';\n        }\n    }\n}\n\n    \n\n    \n        \n    \n         \n        Delete Task\n    \n\n\n    {{text}}\n\n\n    Cancel\n    \n        \n             \n            Delete\n        \n    \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                     Delete Task        {{text}}    Cancel                                     Delete            '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ButtonBarComponent', 'selector': 'button-bar'},{'name': 'ButtonsComponent', 'selector': 'buttons'},{'name': 'CompleteTaskComponent', 'selector': 'complete-task'},{'name': 'CompleteTasksTableComponent', 'selector': 'complete-tasks-table'},{'name': 'ConfirmDeleteTaskComponent', 'selector': 'confirm-delete'},{'name': 'CreateTaskComponent', 'selector': 'create-task'},{'name': 'EditTaskComponent', 'selector': 'edit-task'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'ListItemComponent', 'selector': 'list-item'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'PendingTasksTableComponent', 'selector': 'pending-tasks-table'},{'name': 'RecurringTaskComponent', 'selector': 'recurring-task'},{'name': 'SidenavTasksComponent', 'selector': 'sidenav-tasks'},{'name': 'TaskFormComponent', 'selector': 'task-form'},{'name': 'TasksComponent', 'selector': 'tasks-root'},{'name': 'TasksFilterComponent', 'selector': 'tasks-filter'},{'name': 'TasksTableComponent', 'selector': 'tasks-table'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ConfirmDeleteTaskComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ConfirmDeleteTaskModule.html":{"url":"modules/ConfirmDeleteTaskModule.html","title":"module - ConfirmDeleteTaskModule","body":"\n                   \n\n\n\n\n  Modules\n  ConfirmDeleteTaskModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ConfirmDeleteTaskModule\n\n\n\ncluster_ConfirmDeleteTaskModule_declarations\n\n\n\n\nConfirmDeleteTaskComponent\n\nConfirmDeleteTaskComponent\n\n\n\nConfirmDeleteTaskModule\n\nConfirmDeleteTaskModule\n\nConfirmDeleteTaskModule -->\n\nConfirmDeleteTaskComponent->ConfirmDeleteTaskModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/tasks/dialogs/confirm-delete-task/confirm-delete-task.module.ts\n        \n\n\n            \n                Description\n            \n            \n                Defines the components, services, and modules required to delete Tasks.\n\n            \n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                ConfirmDeleteTaskComponent\n                            \n                    \n                \n                \n                    EntryComponents\n                    \n                            \n                                ConfirmDeleteTaskComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        /* angular libraries */\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatButtonModule, MatDialogModule } from '@angular/material';\nimport { RouterModule } from '@angular/router';\n\n/* fontawesome */\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\nimport { library } from '@fortawesome/fontawesome-svg-core'\nimport { faTrash } from '@fortawesome/free-solid-svg-icons';\n\n// Add icons to library for convenient access in components\nlibrary.add(faTrash);\n\n/* module */\nimport { ConfirmDeleteTaskComponent } from '@tasks/dialogs/confirm-delete-task/confirm-delete-task.component';\n\n/**\n * Defines the components, services, and modules required to delete Tasks.\n */\n@NgModule({\n    declarations: [\n        ConfirmDeleteTaskComponent\n    ],\n    imports: [\n        /* angular libraries */\n        CommonModule,\n        FlexLayoutModule,\n        FormsModule,\n        MatButtonModule,\n        MatDialogModule,\n        ReactiveFormsModule,\n        RouterModule,\n\n        FontAwesomeModule\n    ],\n    entryComponents: [\n        ConfirmDeleteTaskComponent\n    ]\n})\nexport class ConfirmDeleteTaskModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ConsoleLoggerService.html":{"url":"injectables/ConsoleLoggerService.html","title":"injectable - ConsoleLoggerService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  ConsoleLoggerService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/console-logger.service.ts\n        \n\n            \n                Description\n            \n            \n                Performs basic logging functions. A getter method is defined for each of the \nproperties which uses the bind() method to create a bound function. The passed\nin function is executed in the given context when the associated property is \nlooked up (so we log the correct source file name and line number).\n\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                invokeConsoleMethod\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            invokeConsoleMethod\n                            \n                            \n                        \n                    \n                \n                \n                    \ninvokeConsoleMethod(type: string, args?: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/services/console-logger.service.ts:58\n                            \n                        \n\n\n                \n                    \n                            Logs to the correct source file name and line number and passes along any\narguments.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        type\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                The console type.\n\n                                                        \n                                                \n                                                \n                                                        args\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            yes\n                                                    \n                                                    \n\n                                                        \n                                                                Any optional args.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        info\n                    \n                \n\n                \n                    \n                        getinfo()\n                    \n                \n                            \n                                \n                                    Defined in src/app/core/services/console-logger.service.ts:21\n                                \n                            \n                    \n                        \n                                Creates bound function for log messages.\n\n\n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        warn\n                    \n                \n\n                \n                    \n                        getwarn()\n                    \n                \n                            \n                                \n                                    Defined in src/app/core/services/console-logger.service.ts:32\n                                \n                            \n                    \n                        \n                                Creates bound function for warn messages.\n\n\n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        error\n                    \n                \n\n                \n                    \n                        geterror()\n                    \n                \n                            \n                                \n                                    Defined in src/app/core/services/console-logger.service.ts:43\n                                \n                            \n                    \n                        \n                                Creates bound function for error messages.\n\n\n                        \n                    \n\n            \n        \n\n    \n\n\n    \n        import { Injectable, isDevMode } from '@angular/core';\n\n/* app */\nimport { Logger } from './logger.service';\n\nconst noop = (): any => undefined;\n\n/**\n * Performs basic logging functions. A getter method is defined for each of the \n * properties which uses the bind() method to create a bound function. The passed\n * in function is executed in the given context when the associated property is \n * looked up (so we log the correct source file name and line number).\n */\n@Injectable()\nexport class ConsoleLoggerService implements Logger {\n\n    /**\n     * Creates bound function for log messages.\n     */\n    get info() {\n        if(isDevMode) {\n            return console.info.bind(console);\n        } else {\n            return noop;\n        }\n    }\n\n    /**\n     * Creates bound function for warn messages.\n     */\n    get warn() {\n        if(isDevMode) {\n            return console.warn.bind(console);\n        } else {\n            return noop;\n        }\n    }\n\n    /**\n     * Creates bound function for error messages.\n     */\n    get error() {\n        if(isDevMode) {\n            return console.error.bind(console);\n        } else {\n            return noop;\n        }\n    }\n  \n    /**\n     * Logs to the correct source file name and line number and passes along any\n     * arguments.\n     * \n     * @param type The console type.\n     * @param args Any optional args.\n     */\n    invokeConsoleMethod(type: string, args?: any): void {\n        const logFn: Function = (console)[type] || console.log || noop;\n        logFn.apply(console, [args]);\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CoreModule.html":{"url":"modules/CoreModule.html","title":"module - CoreModule","body":"\n                   \n\n\n\n\n  Modules\n  CoreModule\n\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/core/core.module.ts\n        \n\n\n            \n                Description\n            \n            \n                The CoreModule defines all the providers for the singleton services\nthat should be loaded when the app starts. This should only be imported\nat the root AppModule.\n\n            \n        \n\n        \n            \n            \n        \n    \n\n\n    \n        /* angular libraries */\nimport { ModuleWithProviders, NgModule, Optional, SkipSelf } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { HttpClientModule } from '@angular/common/http';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { MatProgressSpinnerModule, MatSidenavModule } from '@angular/material';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { RouterModule } from '@angular/router';\n\n/* services */\nimport { ConsoleLoggerService } from './services/console-logger.service';\nimport { HttpService } from './services/http.service';\nimport { LoaderService } from './services/loader.service';\nimport { LoggerService } from './services/logger.service';\n\n/**\n * The CoreModule defines all the providers for the singleton services\n * that should be loaded when the app starts. This should only be imported\n * at the root AppModule.\n */\n@NgModule({\n    imports: [\n        /* angular libraries */\n        BrowserAnimationsModule,\n        CommonModule,\n        FlexLayoutModule,\n        HttpClientModule,\n        MatProgressSpinnerModule,\n        MatSidenavModule,\n        RouterModule\n    ],\n    exports: [\n        /* angular libraries */\n        BrowserAnimationsModule,\n        CommonModule,\n        FlexLayoutModule,\n        HttpClientModule,\n        RouterModule\n    ]\n})\nexport class CoreModule {\n    \n    constructor (@Optional() @SkipSelf() parentModule: CoreModule) {\n        // make sure CoreModule is imported only by one NgModule the AppModule\n        if(parentModule) {\n            throw new Error('CoreModule is already loaded. Import only in AppModule');\n        }\n    }\n\n    /**\n     * Returns a wrapper around this module that associates it with the\n     * TaskService and UtilsService providers so a single instance of each\n     * service can be loaded and shared between any modules in the app.\n     */\n    static forRoot(): ModuleWithProviders {\n        return {\n            ngModule: CoreModule,\n            providers: [\n                HttpService,\n                LoaderService,\n                { provide: LoggerService, useClass: ConsoleLoggerService }\n            ]\n        };\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CreateTaskComponent.html":{"url":"components/CreateTaskComponent.html","title":"component - CreateTaskComponent","body":"\n                   \n\n\n\n\n\n  Components\n  CreateTaskComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/tasks/dialogs/create-task/create-task.component.ts\n\n\n    \n        Description\n    \n    \n        Creates a dialog to create a new Task. The dialog uses the TaskFormComponent\nand subscribes to it's formValid EventEmitter to enable and disable the \n\"create\" button.\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                create-task\n            \n\n            \n                styleUrls\n                create-task.component.css\n            \n\n\n\n            \n                templateUrl\n                ./create-task.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                enableCreateButton\n                            \n                            \n                                    Private\n                                sub\n                            \n                            \n                                taskFormComponent\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                cancel\n                            \n                            \n                                create\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n                \n                    \n                        HostBindings\n                    \n                \n                \n                    \n                        \n                            \n                                class.marker-create-task-dialog\n                            \n                        \n                    \n                \n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dialogRef: MatDialogRef, logger: LoggerService, taskService: TaskService)\n                    \n                \n                        \n                            \n                                Defined in src/app/tasks/dialogs/create-task/create-task.component.ts:30\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dialogRef\n                                                  \n                                                        \n                                                                    MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        logger\n                                                  \n                                                        \n                                                                    LoggerService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        taskService\n                                                  \n                                                        \n                                                                    TaskService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n    \n    HostBindings        \n            \n                \n                    \n                        \n                        \n                            \n                            class.marker-create-task-dialog\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        class.marker-create-task-dialog:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tasks/dialogs/create-task/create-task.component.ts:24\n                            \n                        \n\n\n            \n        \n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            cancel\n                            \n                            \n                        \n                    \n                \n                \n                    \ncancel()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/tasks/dialogs/create-task/create-task.component.ts:41\n                            \n                        \n\n\n                \n                    \n                            Cancels the Task creation and closes the dialog.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            create\n                            \n                            \n                        \n                    \n                \n                \n                    \ncreate()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/tasks/dialogs/create-task/create-task.component.ts:48\n                            \n                        \n\n\n                \n                    \n                            Creates a new task.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnDestroy\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnDestroy()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/tasks/dialogs/create-task/create-task.component.ts:89\n                            \n                        \n\n\n                \n                    \n                            Unsubscribe from any subscriptions.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/tasks/dialogs/create-task/create-task.component.ts:72\n                            \n                        \n\n\n                \n                    \n                            Initialize the component.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            enableCreateButton\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        enableCreateButton:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tasks/dialogs/create-task/create-task.component.ts:26\n                            \n                        \n\n                \n                    \n                        Boolean to indicate whether or not to enable the create button (true to enable button). \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            sub\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        sub:     Subscription\n\n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tasks/dialogs/create-task/create-task.component.ts:30\n                            \n                        \n\n                \n                    \n                        The subscriptions for the component. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            taskFormComponent\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        taskFormComponent:     TaskFormComponent\n\n                    \n                \n                    \n                        \n                            Type :     TaskFormComponent\n\n                        \n                    \n                    \n                        \n                            Decorators : ViewChild\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tasks/dialogs/create-task/create-task.component.ts:28\n                            \n                        \n\n                \n                    \n                        The form to create a Task. \n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, HostBinding, OnInit, OnDestroy, ViewChild } from '@angular/core';\nimport { MatDialogRef } from '@angular/material';\nimport { Subscription } from 'rxjs/Subscription';\n\n/* app */\nimport { LoggerService } from 'app/core/services/logger.service';\nimport { TaskFormComponent } from '@tasks/form/task-form.component';\nimport { Task } from '@tasks/shared/models/task.model';\nimport { TaskService } from '@tasks/shared/services/task.service';\n\n/**\n * Creates a dialog to create a new Task. The dialog uses the TaskFormComponent\n * and subscribes to it's formValid EventEmitter to enable and disable the \n * \"create\" button.\n */\n@Component({\n    selector: 'create-task',\n    templateUrl: './create-task.component.html',\n    styleUrls: ['./create-task.component.css']\n})\nexport class CreateTaskComponent implements OnInit, OnDestroy {\n    \n    @HostBinding('class.marker-create-task-dialog') classMarker : boolean = true;\n    /** Boolean to indicate whether or not to enable the create button (true to enable button). */\n    enableCreateButton: boolean = false;\n    /** The form to create a Task. */\n    @ViewChild(TaskFormComponent) taskFormComponent: TaskFormComponent;\n    /** The subscriptions for the component. */\n    private sub: Subscription;\n\n    constructor(\n        private dialogRef: MatDialogRef,\n        private logger: LoggerService,\n        private taskService: TaskService\n    ) {}\n\n    /**\n     * Cancels the Task creation and closes the dialog.\n     */\n    cancel() {\n        this.dialogRef.close();\n    }\n\n    /**\n     * Creates a new task.\n     */\n    create() {\n        this.dialogRef.disableClose = true;\n\n        // create a Task based on the values from the TaskFormComponent\n        let task: Task = {\n            name: this.taskFormComponent.mainPropertiesForm.get('name').value,\n            priority: this.taskFormComponent.mainPropertiesForm.get('priority').value,\n            description: this.taskFormComponent.mainPropertiesForm.get('description').value,\n            dueDate: this.taskFormComponent.mainPropertiesForm.get('due').value,\n            isComplete: false,\n            repeats: this.taskFormComponent.repeatPropertiesForm.get('repeats').value,\n            endsAfter: this.taskFormComponent.repeatPropertiesForm.get('after').value\n        } as Task;\n\n        const sub = this.taskService.create(task).subscribe((task: Task) => {\n            this.logger.info('CreateTaskComponent: Task created successfully', task);\n            this.dialogRef.close(task);\n        });\n        this.sub.add(sub);\n    }\n\n    /**\n     * Initialize the component.\n     */\n    ngOnInit() {\n        this.sub = new Subscription();\n\n        const sub = this.taskFormComponent.formValid.subscribe((formValid) => {\n            if(formValid) {\n                this.enableCreateButton = true;\n            }\n            else {\n                this.enableCreateButton = false;\n            }\n        });\n        this.sub.add(sub);\n    }\n\n    /**\n     * Unsubscribe from any subscriptions.\n     */\n    ngOnDestroy() {\n        this.sub.unsubscribe();\n    }\n}\n\n    \n\n    \n        \n     Create Task\n\n\n    \n\n\n    Cancel\n    \n        \n            Create\n        \n    \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '     Create Task        Cancel                        Create            '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ButtonBarComponent', 'selector': 'button-bar'},{'name': 'ButtonsComponent', 'selector': 'buttons'},{'name': 'CompleteTaskComponent', 'selector': 'complete-task'},{'name': 'CompleteTasksTableComponent', 'selector': 'complete-tasks-table'},{'name': 'ConfirmDeleteTaskComponent', 'selector': 'confirm-delete'},{'name': 'CreateTaskComponent', 'selector': 'create-task'},{'name': 'EditTaskComponent', 'selector': 'edit-task'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'ListItemComponent', 'selector': 'list-item'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'PendingTasksTableComponent', 'selector': 'pending-tasks-table'},{'name': 'RecurringTaskComponent', 'selector': 'recurring-task'},{'name': 'SidenavTasksComponent', 'selector': 'sidenav-tasks'},{'name': 'TaskFormComponent', 'selector': 'task-form'},{'name': 'TasksComponent', 'selector': 'tasks-root'},{'name': 'TasksFilterComponent', 'selector': 'tasks-filter'},{'name': 'TasksTableComponent', 'selector': 'tasks-table'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CreateTaskComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CreateTaskModule.html":{"url":"modules/CreateTaskModule.html","title":"module - CreateTaskModule","body":"\n                   \n\n\n\n\n  Modules\n  CreateTaskModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_CreateTaskModule\n\n\n\ncluster_CreateTaskModule_declarations\n\n\n\ncluster_CreateTaskModule_imports\n\n\n\n\nCreateTaskComponent\n\nCreateTaskComponent\n\n\n\nCreateTaskModule\n\nCreateTaskModule\n\nCreateTaskModule -->\n\nCreateTaskComponent->CreateTaskModule\n\n\n\n\n\nTaskFormModule\n\nTaskFormModule\n\nCreateTaskModule -->\n\nTaskFormModule->CreateTaskModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/tasks/dialogs/create-task/create-task.module.ts\n        \n\n\n            \n                Description\n            \n            \n                Defines the components, services, and modules required to manage and view\nTasks.\n\n            \n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                CreateTaskComponent\n                            \n                    \n                \n                \n                    EntryComponents\n                    \n                            \n                                CreateTaskComponent\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    TaskFormModule\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        /* angular libraries */\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatButtonModule, MatDatepickerModule, MatDialogModule, MatFormFieldModule, MatInputModule, MatNativeDateModule } from '@angular/material';\nimport { RouterModule } from '@angular/router';\n\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\nimport { library } from '@fortawesome/fontawesome-svg-core'\nimport { faPaste } from '@fortawesome/free-solid-svg-icons';\n\n// Add icons to fortawesome/fontawesome-svg-core library for convenient access in components\nlibrary.add(faPaste);\n\n/* app modules */\nimport { TaskFormModule } from '@tasks/form/task-form.module';\n\n/* Task shared components and services */\nimport { CreateTaskComponent } from '@tasks/dialogs/create-task/create-task.component';\n\n/**\n * Defines the components, services, and modules required to manage and view\n * Tasks.\n */\n@NgModule({\n    declarations: [\n        CreateTaskComponent\n    ],\n    imports: [\n        /* angular libraries */\n        CommonModule,\n        FlexLayoutModule,\n        FormsModule,\n        MatButtonModule,\n        MatDatepickerModule,\n        MatDialogModule,\n        MatFormFieldModule,\n        MatInputModule,\n        MatNativeDateModule,\n        ReactiveFormsModule,\n        RouterModule,\n\n        FontAwesomeModule,\n\n        /* app modules */\n        TaskFormModule\n    ],\n    entryComponents: [\n        CreateTaskComponent\n    ]\n})\nexport class CreateTaskModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/EditTaskComponent.html":{"url":"components/EditTaskComponent.html","title":"component - EditTaskComponent","body":"\n                   \n\n\n\n\n\n  Components\n  EditTaskComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/tasks/edit/edit-task.component.ts\n\n\n    \n        Description\n    \n    \n        Creates the page to edit an existing Task. The page uses the TaskFormComponent \nand subscribes to it's formValid EventEmitter to enable and disable the \n\"update\" button.\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                edit-task\n            \n\n            \n                styleUrls\n                edit-task.component.css\n            \n\n\n\n            \n                templateUrl\n                ./edit-task.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                buttonBar\n                            \n                            \n                                enableUpdateButton\n                            \n                            \n                                hideCompleteButton\n                            \n                            \n                                icon\n                            \n                            \n                                iconClass\n                            \n                            \n                                index\n                            \n                            \n                                onUpdate\n                            \n                            \n                                prefix\n                            \n                            \n                                    Private\n                                sub\n                            \n                            \n                                task\n                            \n                            \n                                taskFormComponent\n                            \n                            \n                                tasks\n                            \n                            \n                                tooltip\n                            \n                            \n                                updateAll\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                cancel\n                            \n                            \n                                initIconClass\n                            \n                            \n                                initPaginator\n                            \n                            \n                                loadTask\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                openRecurringTaskDialog\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n                \n                    \n                        HostBindings\n                    \n                \n                \n                    \n                        \n                            \n                                class.marker-edit-task-dialog\n                            \n                        \n                    \n                \n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(changeDetector: ChangeDetectorRef, dialog: MatDialog, location: Location, logger: LoggerService, route: ActivatedRoute, router: Router, snackBar: MatSnackBar, taskService: TaskService, utilsService: UtilsService)\n                    \n                \n                        \n                            \n                                Defined in src/app/tasks/edit/edit-task.component.ts:61\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        changeDetector\n                                                  \n                                                        \n                                                                    ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        location\n                                                  \n                                                        \n                                                                    Location\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        logger\n                                                  \n                                                        \n                                                                    LoggerService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                    ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        snackBar\n                                                  \n                                                        \n                                                                    MatSnackBar\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        taskService\n                                                  \n                                                        \n                                                                    TaskService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        utilsService\n                                                  \n                                                        \n                                                                    UtilsService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n    \n    HostBindings        \n            \n                \n                    \n                        \n                        \n                            \n                            class.marker-edit-task-dialog\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        class.marker-edit-task-dialog:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tasks/edit/edit-task.component.ts:33\n                            \n                        \n\n\n            \n        \n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            cancel\n                            \n                            \n                        \n                    \n                \n                \n                    \ncancel()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/tasks/edit/edit-task.component.ts:78\n                            \n                        \n\n\n                \n                    \n                            Cancels the Task edit and goes back to the previous page.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            initIconClass\n                            \n                            \n                        \n                    \n                \n                \n                    \ninitIconClass()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/tasks/edit/edit-task.component.ts:218\n                            \n                        \n\n\n                \n                    \n                            Initializes the icon and corresponding class for the icon based on the\nproperties of the Task being modified. Color classes are added to the \nicon using the iconClass string property for Tasks that are over due, \ndue today, or due tomorrow.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            initPaginator\n                            \n                            \n                        \n                    \n                \n                \n                    \ninitPaginator()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/tasks/edit/edit-task.component.ts:88\n                            \n                        \n\n\n                \n                    \n                            Initializes the paginator at the top of the page. The paginator pages\nthrough Tasks that are either pending or complete (based on the Task\nbeing modified). Tasks are sorted by due date in ascending order for\nthe purposes of this paginator.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loadTask\n                            \n                            \n                        \n                    \n                \n                \n                    \nloadTask(id: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/tasks/edit/edit-task.component.ts:122\n                            \n                        \n\n\n                \n                    \n                            Load the Task with the given id.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                The id of the Task to load. \n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnDestroy\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnDestroy()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/tasks/edit/edit-task.component.ts:179\n                            \n                        \n\n\n                \n                    \n                            Clean the component \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/tasks/edit/edit-task.component.ts:152\n                            \n                        \n\n\n                \n                    \n                            Initialize the component.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            openRecurringTaskDialog\n                            \n                            \n                        \n                    \n                \n                \n                    \nopenRecurringTaskDialog()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/tasks/edit/edit-task.component.ts:188\n                            \n                        \n\n\n                \n                    \n                            Opens the dialog to confirm whether to modify a single Task or the\ngiven Task and all remaining Tasks in it's sequence (if the Task is\na repeating Task).\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            update\n                            \n                            \n                        \n                    \n                \n                \n                    \nupdate()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/tasks/edit/edit-task.component.ts:258\n                            \n                        \n\n\n                \n                    \n                            Updates the Task passed into the component.  \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            buttonBar\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        buttonBar:     ButtonBarComponent\n\n                    \n                \n                    \n                        \n                            Type :     ButtonBarComponent\n\n                        \n                    \n                    \n                        \n                            Decorators : ViewChild\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tasks/edit/edit-task.component.ts:37\n                            \n                        \n\n                \n                    \n                        The buttonBar component. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            enableUpdateButton\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        enableUpdateButton:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tasks/edit/edit-task.component.ts:35\n                            \n                        \n\n                \n                    \n                        Boolean to indicate whether or not to enable the update button (true to enable button). \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            hideCompleteButton\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        hideCompleteButton:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tasks/edit/edit-task.component.ts:41\n                            \n                        \n\n                \n                    \n                        Boolean to inidicate whether to display or hide the complete button. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            icon\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        icon:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tasks/edit/edit-task.component.ts:43\n                            \n                        \n\n                \n                    \n                        The icon to display in the header. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            iconClass\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        iconClass:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tasks/edit/edit-task.component.ts:45\n                            \n                        \n\n                \n                    \n                        The class to add to the icon in the header of the component (if over due, due today, or tomorrow). \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            index\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        index:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tasks/edit/edit-task.component.ts:47\n                            \n                        \n\n                \n                    \n                        The index of the Task being editted in the list of tasks. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            onUpdate\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        onUpdate:     \n\n                    \n                \n                    \n                        \n                            Default value : new EventEmitter()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tasks/edit/edit-task.component.ts:59\n                            \n                        \n\n                \n                    \n                        Event emitted when Task is updated. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            prefix\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        prefix:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tasks/edit/edit-task.component.ts:49\n                            \n                        \n\n                \n                    \n                        The prefix for the icon to display (\"far\" or \"fas\"). \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            sub\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        sub:     Subscription\n\n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tasks/edit/edit-task.component.ts:61\n                            \n                        \n\n                \n                    \n                        The subscriptions for the component. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            task\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        task:     Task\n\n                    \n                \n                    \n                        \n                            Type :     Task\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tasks/edit/edit-task.component.ts:51\n                            \n                        \n\n                \n                    \n                        The Task to edit. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            taskFormComponent\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        taskFormComponent:     TaskFormComponent\n\n                    \n                \n                    \n                        \n                            Type :     TaskFormComponent\n\n                        \n                    \n                    \n                        \n                            Decorators : ViewChild\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tasks/edit/edit-task.component.ts:39\n                            \n                        \n\n                \n                    \n                        The form to edit a Task. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            tasks\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        tasks:     Task[]\n\n                    \n                \n                    \n                        \n                            Type :     Task[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tasks/edit/edit-task.component.ts:53\n                            \n                        \n\n                \n                    \n                        The list of Tasks the Task being editted belongs to (pending or complete). \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            tooltip\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        tooltip:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tasks/edit/edit-task.component.ts:55\n                            \n                        \n\n                \n                    \n                        The tooltip to display with the icon in the header of the component. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updateAll\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        updateAll:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tasks/edit/edit-task.component.ts:57\n                            \n                        \n\n                \n                    \n                        Boolean to indicate whether or not update this and all remaining Tasks in a sequence (if applicable).\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import * as moment from 'moment';\n\n/* angular libraries */\nimport { Location } from '@angular/common';\nimport { Component, EventEmitter, HostBinding, OnInit, OnDestroy, ViewChild, ChangeDetectorRef } from '@angular/core';\nimport { MatDialog, MatDialogConfig, MatSnackBar } from '@angular/material';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Observable, Subscription } from 'rxjs';\nimport { tap } from 'rxjs/operators';\n\n/* app */\nimport { LoggerService } from 'app/core/services/logger.service';\nimport { ButtonBarComponent } from '@tasks/button-bar/button-bar.component';\nimport { TaskFormComponent } from '@tasks/form/task-form.component';\nimport { Task } from '@tasks/shared/models/task.model';\nimport { TaskService } from '@tasks/shared/services/task.service';\nimport { UtilsService } from '@tasks/shared/services/utils.service';\nimport { RecurringTaskComponent } from './recurring-task.component';\n\n/**\n * Creates the page to edit an existing Task. The page uses the TaskFormComponent \n * and subscribes to it's formValid EventEmitter to enable and disable the \n * \"update\" button.\n */\n@Component({\n    selector: 'edit-task',\n    templateUrl: './edit-task.component.html',\n    styleUrls: ['./edit-task.component.css']\n})\nexport class EditTaskComponent implements OnInit, OnDestroy {\n    \n    @HostBinding('class.marker-edit-task-dialog') classMarker : boolean = true;\n    /** Boolean to indicate whether or not to enable the update button (true to enable button). */\n    enableUpdateButton: boolean = true;\n    /** The buttonBar component. */\n    @ViewChild(ButtonBarComponent) buttonBar: ButtonBarComponent;\n    /** The form to edit a Task. */\n    @ViewChild(TaskFormComponent) taskFormComponent: TaskFormComponent;\n    /** Boolean to inidicate whether to display or hide the complete button. */\n    hideCompleteButton: boolean;\n    /** The icon to display in the header. */\n    icon: string;\n    /** The class to add to the icon in the header of the component (if over due, due today, or tomorrow). */\n    iconClass: string;\n    /** The index of the Task being editted in the list of tasks. */\n    index: number;\n    /** The prefix for the icon to display (\"far\" or \"fas\"). */\n    prefix: string;\n    /** The Task to edit. */\n    task: Task;\n    /** The list of Tasks the Task being editted belongs to (pending or complete). */\n    tasks: Task[];\n    /** The tooltip to display with the icon in the header of the component. */\n    tooltip: string;\n    /** Boolean to indicate whether or not update this and all remaining Tasks in a sequence (if applicable).*/\n    updateAll: boolean = false;\n    /** Event emitted when Task is updated. */\n    onUpdate = new EventEmitter();\n    /** The subscriptions for the component. */\n    private sub: Subscription;\n\n    constructor(\n        private changeDetector: ChangeDetectorRef,\n        private dialog: MatDialog,\n        private location: Location,\n        private logger: LoggerService,\n        private route: ActivatedRoute,\n        private router: Router,\n        private snackBar: MatSnackBar,\n        private taskService: TaskService,\n        private utilsService: UtilsService\n    ) {}\n\n    /**\n     * Cancels the Task edit and goes back to the previous page.\n     */\n    cancel() {\n        this.location.back();\n    }\n\n    /**\n     * Initializes the paginator at the top of the page. The paginator pages\n     * through Tasks that are either pending or complete (based on the Task\n     * being modified). Tasks are sorted by due date in ascending order for\n     * the purposes of this paginator.\n     */\n    initPaginator() {\n        let obs: Observable;\n        // determine which observable to use from the TaskService based on\n        // whether the Task being modified is complete or not\n        if(this.task.isComplete) {\n            obs = this.taskService.completeTasks;\n        }\n        else {\n            obs = this.taskService.pendingTasks;\n        }\n\n        // subscribe to the observable\n        const sub = obs.subscribe((tasks: Task[]) => {\n            // the list of Tasks (pending or complete)\n            this.tasks = tasks;\n            this.changeDetector.detectChanges();\n\n            // find the index of the Task being modified in the list of Tasks found above\n            this.buttonBar.paginator.pageIndex = this.tasks.findIndex((task: Task) => { return task.id == this.task.id });\n            // subscribe to the paginator page changes\n            const page = this.buttonBar.paginator.page.pipe(\n                tap(() => {\n                    this.loadTask(this.tasks[this.buttonBar.paginator.pageIndex].id);\n                })).subscribe();\n            this.sub.add(page);\n        });\n        this.sub.add(sub);\n    }\n\n    /**\n     * Load the Task with the given id.\n     * \n     * @param id The id of the Task to load. \n     */\n    loadTask(id: number) {\n        const taskSub = this.taskService.get(id).subscribe((task: Task) => {\n            this.task = task;\n            this.hideCompleteButton = task.isComplete;\n            this.initIconClass();\n\n            // initialize the paginator if the Tasks array is null\n            if(this.tasks == null) {\n                this.initPaginator();\n            }\n            \n            // open dialog to modify just single task or all remaining tasks if task is not complete and\n            // it is repeating Task\n            if(!task.isComplete && task.repeats != null && task.repeats !== 'noRepeat') {\n                this.openRecurringTaskDialog();\n            }\n            else {\n                this.changeDetector.detectChanges();\n                const subForm = this.taskFormComponent.formValid.subscribe((enable: boolean) => {\n                    this.enableUpdateButton = enable;\n                });\n                this.sub.add(subForm);\n            }\n        });\n        this.sub.add(taskSub);\n    }\n\n    /**\n     * Initialize the component.\n     */\n    ngOnInit() {\n        this.sub = new Subscription();\n        const sub = this.taskService.changes.subscribe((changes: string) => {\n            if(changes) {\n                this.snackBar.open(changes, '', { duration: 2000 });\n            }\n        });\n        this.sub.add(sub);\n\n        const paramsSub = this.sub = this.route.params.subscribe(params => {\n            let id: number = Number(params['id']);\n            if(isNaN(id)) {\n                // redirect to 404 since id and ** don't seem to work well\n                // together in router module; any value treated as id even if\n                // not a number so need to handle error here if id is not number\n                this.router.navigate(['/404']);\n            }\n            else {\n                this.loadTask(id);\n            }\n        });\n        this.sub.add(paramsSub);\n    }\n\n    /**\n     * Clean the component \n     */\n    ngOnDestroy() {\n        this.sub.unsubscribe();\n    }\n\n    /**\n     * Opens the dialog to confirm whether to modify a single Task or the\n     * given Task and all remaining Tasks in it's sequence (if the Task is\n     * a repeating Task).\n     */\n    openRecurringTaskDialog() {\n        let dialogConfig = new MatDialogConfig();\n        dialogConfig.autoFocus = false;\n        dialogConfig.data = { task: this.task };\n        dialogConfig.width = '50%';\n        let recurringDialogRef = this.dialog.open(RecurringTaskComponent, dialogConfig);\n        this.utilsService.fullScreenDialogSub(recurringDialogRef, '50%');\n\n        let sub = recurringDialogRef.componentInstance.updateAll.subscribe((updateAll: boolean) => {\n            this.updateAll = updateAll;\n            if(!this.updateAll) {\n                this.taskFormComponent.repeatPropertiesForm.disable();\n            }\n\n            this.changeDetector.detectChanges();\n\n            const subForm = this.taskFormComponent.formValid.subscribe((enable: boolean) => {\n                this.enableUpdateButton = enable;\n            });\n            this.sub.add(subForm);\n        });\n        this.sub.add(sub);\n    }\n\n    /**\n     * Initializes the icon and corresponding class for the icon based on the\n     * properties of the Task being modified. Color classes are added to the \n     * icon using the iconClass string property for Tasks that are over due, \n     * due today, or due tomorrow.\n     */\n    initIconClass() {\n        this.iconClass = 'mat-icon-button notice';\n        if(!this.task.isComplete) {\n            let dueDate = moment(this.task.dueDate).utc();\n            let today = moment().startOf('day').utc();\n            let tomorrow = moment().startOf('day').add(1, 'days').utc();\n\n            if(dueDate.isBefore(today, 'day')) {\n                this.prefix = 'fas';\n                this.icon = 'hourglass-end';\n                this.tooltip = 'Over Due'\n                this.iconClass += ' red';\n            }\n            else if(dueDate.isSame(today, 'day')) {\n                this.prefix = 'fas';\n                this.icon = 'hourglass-half';\n                this.tooltip = 'Due Today'\n                this.iconClass += ' orange';\n            }\n            else if(dueDate.isSame(tomorrow, 'day')) {\n                this.prefix = 'fas';\n                this.icon = 'hourglass-start';\n                this.tooltip = 'Due Tomorrow'\n                this.iconClass += ' yellow';\n            }\n            else {\n                this.prefix = 'far';\n                this.icon = 'hourglass';\n                this.tooltip = `Due ${dueDate.format('MM/DD/YYYY')}`;\n            }\n        }\n        else {\n            this.icon = 'clipboard-check';\n            this.tooltip = 'Complete';\n        }\n    }\n\n    /**\n     * Updates the Task passed into the component.  \n     */\n    update() {\n        const sub = this.taskFormComponent.getFormData(this.taskFormComponent.mainPropertiesForm).switchMap(formData => {\n            this.task.name = formData.value.name;\n            this.task.priority = formData.value.priority;\n            this.task.description = formData.value.description;\n\n            // Only update the dueDate if the task is not complete\n            if(!this.task.isComplete) {\n                this.task.dueDate = formData.value.due;\n                return this.taskFormComponent.getFormData(this.taskFormComponent.repeatPropertiesForm).switchMap(repeatFormData => {\n                    this.task.repeats = repeatFormData.value.repeats;\n                    this.task.endsAfter = repeatFormData.value.after;\n                    return this.taskService.update(this.task, this.updateAll);\n                });\n            }\n            else {\n                return this.taskService.update(this.task, this.updateAll);\n            }\n        }).subscribe((task: Task) => {\n            this.logger.info('EditTaskComponent: Task updated successfully', task);\n            this.onUpdate.emit('Task Updated Successfully');\n            this.location.back();\n        });\n        this.sub.add(sub);\n    }\n}\n\n    \n\n    \n        \n\n    \n        {{task.name}}\n        \n             \n        \n    \n    \n    \n        Cancel\n        \n            \n                 \n                Update\n            \n        \n    \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            {{task.name}}                                                 Cancel                                                     Update                        '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ButtonBarComponent', 'selector': 'button-bar'},{'name': 'ButtonsComponent', 'selector': 'buttons'},{'name': 'CompleteTaskComponent', 'selector': 'complete-task'},{'name': 'CompleteTasksTableComponent', 'selector': 'complete-tasks-table'},{'name': 'ConfirmDeleteTaskComponent', 'selector': 'confirm-delete'},{'name': 'CreateTaskComponent', 'selector': 'create-task'},{'name': 'EditTaskComponent', 'selector': 'edit-task'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'ListItemComponent', 'selector': 'list-item'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'PendingTasksTableComponent', 'selector': 'pending-tasks-table'},{'name': 'RecurringTaskComponent', 'selector': 'recurring-task'},{'name': 'SidenavTasksComponent', 'selector': 'sidenav-tasks'},{'name': 'TaskFormComponent', 'selector': 'task-form'},{'name': 'TasksComponent', 'selector': 'tasks-root'},{'name': 'TasksFilterComponent', 'selector': 'tasks-filter'},{'name': 'TasksTableComponent', 'selector': 'tasks-table'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'EditTaskComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/EditTaskModule.html":{"url":"modules/EditTaskModule.html","title":"module - EditTaskModule","body":"\n                   \n\n\n\n\n  Modules\n  EditTaskModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_EditTaskModule\n\n\n\ncluster_EditTaskModule_declarations\n\n\n\ncluster_EditTaskModule_imports\n\n\n\ncluster_EditTaskModule_providers\n\n\n\n\nEditTaskComponent\n\nEditTaskComponent\n\n\n\nEditTaskModule\n\nEditTaskModule\n\nEditTaskModule -->\n\nEditTaskComponent->EditTaskModule\n\n\n\n\n\nRecurringTaskComponent\n\nRecurringTaskComponent\n\nEditTaskModule -->\n\nRecurringTaskComponent->EditTaskModule\n\n\n\n\n\nTaskFormModule\n\nTaskFormModule\n\nEditTaskModule -->\n\nTaskFormModule->EditTaskModule\n\n\n\n\n\nTasksButtonBarModule\n\nTasksButtonBarModule\n\nEditTaskModule -->\n\nTasksButtonBarModule->EditTaskModule\n\n\n\n\n\nTasksDialogModule\n\nTasksDialogModule\n\nEditTaskModule -->\n\nTasksDialogModule->EditTaskModule\n\n\n\n\n\nMatPaginatorCustom\n\nMatPaginatorCustom\n\nEditTaskModule -->\n\nMatPaginatorCustom->EditTaskModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/tasks/edit/edit-task.module.ts\n        \n\n\n            \n                Description\n            \n            \n                Defines the components, services, and modules required to edit a Task.\n\n            \n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                EditTaskComponent\n                            \n                            \n                                RecurringTaskComponent\n                            \n                    \n                \n                \n                    EntryComponents\n                    \n                            \n                                EditTaskComponent\n                            \n                            \n                                RecurringTaskComponent\n                            \n                    \n                \n                \n                    Providers\n                    \n                            \n                                     MatPaginatorCustom\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    TaskFormModule\n                            \n                            \n                                    TasksButtonBarModule\n                            \n                            \n                                    TasksDialogModule\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        /* angular libraries */\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatButtonModule, MatDatepickerModule, MatDialogModule, MatFormFieldModule, MatInputModule, MatNativeDateModule, MatPaginatorIntl, MatPaginatorModule, MatRadioModule, MatTooltipModule, MatSnackBarModule } from '@angular/material';\nimport { RouterModule } from '@angular/router';\n\n/* fontawesome */\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\nimport { library } from '@fortawesome/fontawesome-svg-core'\nimport { faCheckSquare } from '@fortawesome/free-regular-svg-icons';\nimport { faCheck, faEdit, faPaste, faTrash } from '@fortawesome/free-solid-svg-icons';\n\n// Add icons to library for convenient access in components\nlibrary.add(faCheck, faCheckSquare, faEdit, faPaste, faTrash);\n\n/* app */\nimport { EditTaskComponent } from './edit-task.component';\nimport { RecurringTaskComponent } from './recurring-task.component';\nimport { TasksButtonBarModule } from '@tasks/button-bar/tasks-button-bar.module';\nimport { TasksDialogModule } from '@tasks/dialogs/tasks-dialog.module';\nimport { TaskFormModule } from '@tasks/form/task-form.module';\nimport { MatPaginatorCustom } from '@tasks/shared/util/mat-paginator-custom';\n\n/**\n * Defines the components, services, and modules required to edit a Task.\n */\n@NgModule({\n    declarations: [\n        EditTaskComponent,\n        RecurringTaskComponent\n    ],\n    imports: [\n        /* angular libraries */\n        CommonModule,\n        FlexLayoutModule,\n        FormsModule,\n        MatButtonModule, \n        MatDatepickerModule,\n        MatDialogModule,\n        MatFormFieldModule,\n        MatInputModule,\n        MatNativeDateModule,\n        MatPaginatorModule, \n        MatRadioModule,\n        MatTooltipModule, \n        MatSnackBarModule,\n        ReactiveFormsModule,\n        RouterModule,\n\n        FontAwesomeModule,\n\n        /* Task modules */\n        TasksButtonBarModule,\n        TasksDialogModule,\n        TaskFormModule\n    ],\n    entryComponents: [\n        EditTaskComponent,\n        RecurringTaskComponent\n    ],\n    providers: [\n        MatPaginatorCustom,\n        { provide: MatPaginatorIntl, useClass: MatPaginatorCustom }\n    ]\n})\nexport class EditTaskModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FooterComponent.html":{"url":"components/FooterComponent.html","title":"component - FooterComponent","body":"\n                   \n\n\n\n\n\n  Components\n  FooterComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/footer/footer.component.ts\n\n\n    \n        Description\n    \n    \n        Creates the footer component for the app.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-footer\n            \n\n            \n                styleUrls\n                footer.component.css\n            \n\n\n\n            \n                templateUrl\n                ./footer.component.html\n            \n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n/**\n * Creates the footer component for the app.\n */\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.css']\n})\nexport class FooterComponent {}\n\n    \n\n    \n        \n    \n        About\n        © 2018\n    \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            About        © 2018    '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ButtonBarComponent', 'selector': 'button-bar'},{'name': 'ButtonsComponent', 'selector': 'buttons'},{'name': 'CompleteTaskComponent', 'selector': 'complete-task'},{'name': 'CompleteTasksTableComponent', 'selector': 'complete-tasks-table'},{'name': 'ConfirmDeleteTaskComponent', 'selector': 'confirm-delete'},{'name': 'CreateTaskComponent', 'selector': 'create-task'},{'name': 'EditTaskComponent', 'selector': 'edit-task'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'ListItemComponent', 'selector': 'list-item'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'PendingTasksTableComponent', 'selector': 'pending-tasks-table'},{'name': 'RecurringTaskComponent', 'selector': 'recurring-task'},{'name': 'SidenavTasksComponent', 'selector': 'sidenav-tasks'},{'name': 'TaskFormComponent', 'selector': 'task-form'},{'name': 'TasksComponent', 'selector': 'tasks-root'},{'name': 'TasksFilterComponent', 'selector': 'tasks-filter'},{'name': 'TasksTableComponent', 'selector': 'tasks-table'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'FooterComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/FooterModule.html":{"url":"modules/FooterModule.html","title":"module - FooterModule","body":"\n                   \n\n\n\n\n  Modules\n  FooterModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_FooterModule\n\n\n\ncluster_FooterModule_declarations\n\n\n\ncluster_FooterModule_exports\n\n\n\n\nFooterComponent\n\nFooterComponent\n\n\n\nFooterModule\n\nFooterModule\n\nFooterModule -->\n\nFooterComponent->FooterModule\n\n\n\n\n\nFooterComponent \n\nFooterComponent \n\nFooterComponent  -->\n\nFooterModule->FooterComponent \n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/footer/footer.module.ts\n        \n\n\n            \n                Description\n            \n            \n                Defines the components and modules for the footer.\n\n            \n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                FooterComponent\n                            \n                    \n                \n                \n                    EntryComponents\n                    \n                            \n                                FooterComponent\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    FooterComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        /* angular libraries */\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { RouterModule } from '@angular/router';\n\n/* module */\nimport { FooterComponent } from './footer.component';\n\n/**\n * Defines the components and modules for the footer.\n */\n@NgModule({\n    declarations: [\n        FooterComponent\n    ],\n    imports: [\n        /* angular libraries */\n        CommonModule,\n        FlexLayoutModule,\n        RouterModule\n    ],\n    exports: [\n        FooterComponent\n    ],\n    entryComponents: [\n        FooterComponent\n    ]\n})\nexport class FooterModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HeaderComponent.html":{"url":"components/HeaderComponent.html","title":"component - HeaderComponent","body":"\n                   \n\n\n\n\n\n  Components\n  HeaderComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/header/header.component.ts\n\n\n    \n        Description\n    \n    \n        Creates the main header element for the app. The header is responsive based on the size of the screen. If\nthe screen is large, then the dueButtons and taskFilter components are rendered directly in the header on\nthe right side of the screen for easy access. If the screen is medium or smaller, then the right side of\nthe header collapses into a single \"search\" icon button, which when clicked displays the taskFilter\ncomponent.\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-header\n            \n\n            \n                styleUrls\n                header.component.css\n            \n\n\n\n            \n                templateUrl\n                ./header.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                isMediumScreen\n                            \n                            \n                                showSearchBar\n                            \n                            \n                                sidenavMenuState\n                            \n                            \n                                sub\n                            \n                            \n                                taskFilter\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onSidenavMenuToggle\n                            \n                            \n                                setShowSearchBar\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(utilsService: UtilsService)\n                    \n                \n                        \n                            \n                                Defined in src/app/header/header.component.ts:32\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        utilsService\n                                                  \n                                                        \n                                                                    UtilsService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnDestroy\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnDestroy()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/header/header.component.ts:39\n                            \n                        \n\n\n                \n                    \n                            Unsubscribe from any subscriptions.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/header/header.component.ts:47\n                            \n                        \n\n\n                \n                    \n                            Initialize the component. The search bar should be hidden initially, and the sidenav menu should be set\nto 'Collapse' on medium or smaller devices and 'Expand' on larger devices.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            onSidenavMenuToggle\n                            \n                            \n                        \n                    \n                \n                \n                    \nonSidenavMenuToggle()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/header/header.component.ts:63\n                            \n                        \n\n\n                \n                    \n                            Expands and collapses the sidenav menu based on the current state of the sidenav menu. If the sidenav\nmenu is collapsed, then it is expanded. Otherwise the sidenav menu is collapsed.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            setShowSearchBar\n                            \n                            \n                        \n                    \n                \n                \n                    \nsetShowSearchBar(showSearchBar: boolean)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/header/header.component.ts:79\n                            \n                        \n\n\n                \n                    \n                            Displays or hides the search bar based on the boolean parameter passed in.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        showSearchBar\n                                                        \n                                                                    boolean\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                true if the search bar should be displayed, otherwise false. \n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isMediumScreen\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        isMediumScreen:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/header/header.component.ts:26\n                            \n                        \n\n                \n                    \n                        Boolean to indicate if the screen size is medium or smaller (true if screen is medium or smaller). \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            showSearchBar\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        showSearchBar:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/header/header.component.ts:28\n                            \n                        \n\n                \n                    \n                        Boolean to indicate whether or not to show the search bar (shows search bar if true). \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sidenavMenuState\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        sidenavMenuState:     SidenavMenuEvent\n\n                    \n                \n                    \n                        \n                            Type :     SidenavMenuEvent\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/header/header.component.ts:30\n                            \n                        \n\n                \n                    \n                        The current state of the sidenav ('Collapse' or 'Expand'). \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sub\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        sub:     Subscription\n\n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/header/header.component.ts:32\n                            \n                        \n\n                \n                    \n                        The subscriptions for the component. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            taskFilter\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        taskFilter:     TasksFilterComponent\n\n                    \n                \n                    \n                        \n                            Type :     TasksFilterComponent\n\n                        \n                    \n                    \n                        \n                            Decorators : ViewChild\n                        \n                    \n                        \n                            \n                                    Defined in src/app/header/header.component.ts:24\n                            \n                        \n\n                \n                    \n                        Reference to the TaskFilterComponent in the templateUrl. \n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnDestroy, OnInit, ViewChild } from '@angular/core';\nimport { Subscription } from 'rxjs';\n\n/* app */\nimport { TasksFilterComponent } from '@tasks/filter/tasks-filter.component';\nimport { SidenavMenuEvent, UtilsService } from '@tasks/shared/services/utils.service';\n\n/**\n * Creates the main header element for the app. The header is responsive based on the size of the screen. If\n * the screen is large, then the dueButtons and taskFilter components are rendered directly in the header on\n * the right side of the screen for easy access. If the screen is medium or smaller, then the right side of\n * the header collapses into a single \"search\" icon button, which when clicked displays the taskFilter\n * component.\n */\n@Component({\n    selector: 'app-header',\n    templateUrl: './header.component.html',\n    styleUrls: ['./header.component.css']\n})\nexport class HeaderComponent implements OnInit, OnDestroy {\n\n    /** Reference to the TaskFilterComponent in the templateUrl. */\n    @ViewChild('taskFilterLargeScreen') taskFilter: TasksFilterComponent;\n    /** Boolean to indicate if the screen size is medium or smaller (true if screen is medium or smaller). */\n    isMediumScreen: boolean;\n    /** Boolean to indicate whether or not to show the search bar (shows search bar if true). */\n    showSearchBar: boolean;\n    /** The current state of the sidenav ('Collapse' or 'Expand'). */\n    sidenavMenuState: SidenavMenuEvent;\n    /** The subscriptions for the component. */\n    sub: Subscription;\n\n    constructor(private utilsService: UtilsService) {}\n\n    /**\n     * Unsubscribe from any subscriptions.\n     */\n    ngOnDestroy() {\n        this.sub.unsubscribe();\n    }\n\n    /**\n     * Initialize the component. The search bar should be hidden initially, and the sidenav menu should be set\n     * to 'Collapse' on medium or smaller devices and 'Expand' on larger devices.\n     */\n    ngOnInit() {\n        this.showSearchBar = false;\n\n        this.sub = new Subscription();\n        const sub = this.utilsService.isMediumScreen.subscribe((isMediumScreen: boolean) => {\n            this.isMediumScreen = isMediumScreen;\n            // set to 'Collapse' on medium or smaller devices, otherwise to 'Expand'\n            this.sidenavMenuState = this.isMediumScreen ? 'Collapse' : 'Expand';\n        });\n        this.sub.add(sub);\n    }\n\n    /**\n     * Expands and collapses the sidenav menu based on the current state of the sidenav menu. If the sidenav\n     * menu is collapsed, then it is expanded. Otherwise the sidenav menu is collapsed.\n     */\n    onSidenavMenuToggle() {\n        if(this.sidenavMenuState === 'Collapse') {\n            this.sidenavMenuState = 'Expand';\n            this.utilsService.toggleSidenavMenu('Expand');\n        }\n        else {\n            this.sidenavMenuState = 'Collapse';\n            this.utilsService.toggleSidenavMenu('Collapse');\n        }\n    }\n\n    /**\n     * Displays or hides the search bar based on the boolean parameter passed in.\n     * \n     * @param showSearchBar true if the search bar should be displayed, otherwise false. \n     */\n    setShowSearchBar(showSearchBar: boolean) {\n        this.showSearchBar = showSearchBar;\n    }\n}\n\n    \n\n    \n        \n    \n        \n        \n            \n            \n            \n        \n    \n    \n        \n            \n                \n                \n                \n            \n            \n                \n                    \n                    MyTasks\n                \n                \n                \n            \n            \n            \n\n            \n            \n                \n                    \n                \n                \n                \n            \n        \n        \n            \n                \n                    \n                    \n                    \n                \n                \n                    \n                        \n                        MyTasks\n                    \n                    \n                    \n                \n                \n                \n                \n            \n        \n    \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                                                                                                                                                            MyTasks                                                                                                                                                                                                                                                                                                                                                                                                                        MyTasks                                                                                                                                                    '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ButtonBarComponent', 'selector': 'button-bar'},{'name': 'ButtonsComponent', 'selector': 'buttons'},{'name': 'CompleteTaskComponent', 'selector': 'complete-task'},{'name': 'CompleteTasksTableComponent', 'selector': 'complete-tasks-table'},{'name': 'ConfirmDeleteTaskComponent', 'selector': 'confirm-delete'},{'name': 'CreateTaskComponent', 'selector': 'create-task'},{'name': 'EditTaskComponent', 'selector': 'edit-task'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'ListItemComponent', 'selector': 'list-item'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'PendingTasksTableComponent', 'selector': 'pending-tasks-table'},{'name': 'RecurringTaskComponent', 'selector': 'recurring-task'},{'name': 'SidenavTasksComponent', 'selector': 'sidenav-tasks'},{'name': 'TaskFormComponent', 'selector': 'task-form'},{'name': 'TasksComponent', 'selector': 'tasks-root'},{'name': 'TasksFilterComponent', 'selector': 'tasks-filter'},{'name': 'TasksTableComponent', 'selector': 'tasks-table'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'HeaderComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/HeaderModule.html":{"url":"modules/HeaderModule.html","title":"module - HeaderModule","body":"\n                   \n\n\n\n\n  Modules\n  HeaderModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_HeaderModule\n\n\n\ncluster_HeaderModule_declarations\n\n\n\ncluster_HeaderModule_imports\n\n\n\ncluster_HeaderModule_exports\n\n\n\n\nHeaderComponent\n\nHeaderComponent\n\n\n\nHeaderModule\n\nHeaderModule\n\nHeaderModule -->\n\nHeaderComponent->HeaderModule\n\n\n\n\n\nHeaderComponent \n\nHeaderComponent \n\nHeaderComponent  -->\n\nHeaderModule->HeaderComponent \n\n\n\n\n\nTasksFilterModule\n\nTasksFilterModule\n\nHeaderModule -->\n\nTasksFilterModule->HeaderModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/header/header.module.ts\n        \n\n\n            \n                Description\n            \n            \n                Defines the components, services, and modules required for the header.\n\n            \n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                HeaderComponent\n                            \n                    \n                \n                \n                    EntryComponents\n                    \n                            \n                                HeaderComponent\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    TasksFilterModule\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    HeaderComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        /* angular libraries */\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { MatButtonModule, MatToolbarModule, MatTooltipModule } from '@angular/material';\nimport { RouterModule } from '@angular/router';\n\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\nimport { library } from '@fortawesome/fontawesome-svg-core'\nimport { faBars, faClipboardList } from '@fortawesome/free-solid-svg-icons';\n\n// Add icons to library for convenient access in components\nlibrary.add(faBars, faClipboardList);\n\n/* module */\nimport { HeaderComponent } from './header.component';\nimport { TasksFilterModule } from '@tasks/filter/tasks-filter.module';\n\n/**\n * Defines the components, services, and modules required for the header.\n */\n@NgModule({\n    declarations: [\n        HeaderComponent\n    ],\n    imports: [\n        /* angular libraries */\n        CommonModule,\n        FlexLayoutModule,\n        MatButtonModule, \n        MatToolbarModule, \n        MatTooltipModule,\n        RouterModule,\n\n        FontAwesomeModule,\n\n        /* app modules */\n        TasksFilterModule\n    ],\n    exports: [\n        HeaderComponent\n    ],\n    entryComponents: [\n        HeaderComponent\n    ]\n})\nexport class HeaderModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/HttpService.html":{"url":"injectables/HttpService.html","title":"injectable - HttpService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  HttpService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/http.service.ts\n        \n\n            \n                Description\n            \n            \n                Performs HTTP requests. This service is based on service from \nhttps://medium.com/beautiful-angular/angular-2-and-jwt-authentication-d30c21a2f24f\nIt is meant to perform actions like inserting custom headers requried \nin all requests. Currently this only adds simple \"Content-Type\" header, \nbut could easily be extended to add other headers (like JWT Token). It\nalso makes triggering things like loading indicator for all HTTP \nrequests easy.\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                url\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                delete\n                            \n                            \n                                get\n                            \n                            \n                                    Private\n                                getRequestOptionArgs\n                            \n                            \n                                    Private\n                                hideLoader\n                            \n                            \n                                    Private\n                                intercept\n                            \n                            \n                                patch\n                            \n                            \n                                post\n                            \n                            \n                                    Private\n                                showLoader\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient, loaderService: LoaderService, logger: LoggerService)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/services/http.service.ts:25\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        loaderService\n                                                  \n                                                        \n                                                                    LoaderService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        logger\n                                                  \n                                                        \n                                                                    LoggerService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            delete\n                            \n                            \n                        \n                    \n                \n                \n                    \ndelete(url: string, options?: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/services/http.service.ts:73\n                            \n                        \n\n\n                \n                    \n                            Performs an HTTP DELETE request.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        url\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                The URL to perform the DELETE request on. \n\n                                                        \n                                                \n                                                \n                                                        options\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            yes\n                                                    \n                                                    \n\n                                                        \n                                                                The options to include with the request.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            get\n                            \n                            \n                        \n                    \n                \n                \n                    \nget(url: string, options?: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/services/http.service.ts:39\n                            \n                        \n\n\n                \n                    \n                            Performs an HTTP GET request.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        url\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                The URL to perform the GET request on. \n\n                                                        \n                                                \n                                                \n                                                        options\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            yes\n                                                    \n                                                    \n\n                                                        \n                                                                The options to include with the request.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            getRequestOptionArgs\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getRequestOptionArgs(options?: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/services/http.service.ts:83\n                            \n                        \n\n\n                \n                    \n                            Returns request option arguments that can be included in a request.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        options\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            yes\n                                                    \n                                                    \n\n                                                        \n                                                                The options to include in the request.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            hideLoader\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        hideLoader()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/services/http.service.ts:114\n                            \n                        \n\n\n                \n                    \n                            Hide the loader.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            intercept\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        intercept(observable: Observable)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/services/http.service.ts:95\n                            \n                        \n\n\n                \n                    \n                            Intercepts the given Observable and performs any custom actions before\nand after the Observable completes (like showing and hiding the loader).\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        observable\n                                                        \n                                                                    Observable\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                The Observable to intercept. \n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            patch\n                            \n                            \n                        \n                    \n                \n                \n                    \npatch(url: string, body: any, options?: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/services/http.service.ts:62\n                            \n                        \n\n\n                \n                    \n                            Performs an HTTP PATCH request.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        url\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                The URL to perform the PATCH request on.\n\n                                                        \n                                                \n                                                \n                                                        body\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                The body of the request.\n\n                                                        \n                                                \n                                                \n                                                        options\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            yes\n                                                    \n                                                    \n\n                                                        \n                                                                The options to include with the request.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            post\n                            \n                            \n                        \n                    \n                \n                \n                    \npost(url: string, body: any, options?: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/services/http.service.ts:50\n                            \n                        \n\n\n                \n                    \n                            Performs an HTTP POST request.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        url\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                The URL to perform the POST request on. \n\n                                                        \n                                                \n                                                \n                                                        body\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                The body of the request.\n\n                                                        \n                                                \n                                                \n                                                        options\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            yes\n                                                    \n                                                    \n\n                                                        \n                                                                The options to include with the request.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            showLoader\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        showLoader()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/services/http.service.ts:107\n                            \n                        \n\n\n                \n                    \n                            Display the loader.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            url\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        url:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : 'http://localhost:3000/api'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/services/http.service.ts:25\n                            \n                        \n\n                \n                    \n                        The base URL for the API. \n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable } from 'rxjs/Observable';\nimport 'rxjs/add/operator/catch';\nimport 'rxjs/add/operator/finally';\n\n/* app */\nimport { LoaderService } from './loader.service';\nimport { LoggerService } from './logger.service';\n\n/**\n * Performs HTTP requests. This service is based on service from \n * https://medium.com/beautiful-angular/angular-2-and-jwt-authentication-d30c21a2f24f\n * It is meant to perform actions like inserting custom headers requried \n * in all requests. Currently this only adds simple \"Content-Type\" header, \n * but could easily be extended to add other headers (like JWT Token). It\n * also makes triggering things like loading indicator for all HTTP \n * requests easy.\n */\n@Injectable()\nexport class HttpService {\n\n    /** The base URL for the API. */\n    private url: string = 'http://localhost:3000/api';\n\n    constructor(\n        private http:HttpClient, \n        private loaderService:LoaderService,\n        private logger: LoggerService\n    ) {}\n \n    /**\n     * Performs an HTTP GET request.\n     * \n     * @param url The URL to perform the GET request on. \n     * @param options The options to include with the request.\n     */\n    get(url: string, options?: any): Observable {\n        return this.intercept(this.http.get(`${this.url}/${url}`, this.getRequestOptionArgs(options)));\n    }\n \n    /**\n     * Performs an HTTP POST request.\n     * \n     * @param url The URL to perform the POST request on. \n     * @param body The body of the request.\n     * @param options The options to include with the request.\n     */\n    post(url: string, body: any, options?: any): Observable { \n        this.logger.info(`HttpService: POST ${this.url}/${url}`, body);\n        return this.intercept(this.http.post(`${this.url}/${url}`, body, this.getRequestOptionArgs(options)));\n    }\n \n    /**\n     * Performs an HTTP PATCH request.\n     * \n     * @param url The URL to perform the PATCH request on.\n     * @param body The body of the request.\n     * @param options The options to include with the request.\n     */\n    patch(url: string, body: any, options?: any): Observable {\n        this.logger.info(`HttpService: PATCH ${this.url}/${url}`, body);   \n        return this.intercept(this.http.patch(`${this.url}/${url}`, body, this.getRequestOptionArgs(options)));\n    }\n \n    /**\n     * Performs an HTTP DELETE request.\n     * \n     * @param url The URL to perform the DELETE request on. \n     * @param options The options to include with the request.\n     */\n    delete(url: string, options?: any): Observable {\n        this.logger.info(`HttpService: DELETE ${this.url}/${url}`);\n        return this.intercept(this.http.delete(`${this.url}/${url}`, this.getRequestOptionArgs(options)));\n    }\n    \n    /**\n     * Returns request option arguments that can be included in a request.\n     * \n     * @param options The options to include in the request.\n     */\n    private getRequestOptionArgs(options?: any) : any {\n        options = options || {}; // define the options if none included\n        options.headers = options.headers || new HttpHeaders({ 'Content-Type': 'application/json' });\n        return options;\n    }\n \n    /**\n     * Intercepts the given Observable and performs any custom actions before\n     * and after the Observable completes (like showing and hiding the loader).\n     * \n     * @param observable The Observable to intercept. \n     */\n    private intercept(observable: Observable): Observable {\n        this.showLoader();\n        return observable.catch((err, source) => {\n            return Observable.throw(err);\n        }).finally(() => {\n            this.hideLoader();\n        });\n    }\n\n    /**\n     * Display the loader.\n     */\n    private showLoader(): void {\n        this.loaderService.show();\n    }\n\n    /**\n     * Hide the loader.\n     */\n    private hideLoader(): void {\n        this.loaderService.hide();\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ListItemComponent.html":{"url":"components/ListItemComponent.html","title":"component - ListItemComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ListItemComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/tasks/sidenav/list-item.component.ts\n\n\n    \n        Description\n    \n    \n        Creates 3 buttons meant for filtering Tasks \"Over Due\", \"Due Today\", and \"Due Tomorrow\". Allows \nfor the buttons to be styled in multiple ways so the buttons can be re-used on the header toolbar \nfor large screens as \"mat-button\" elements and in the task filter as \"mat-menu-item\" elements in \nthe dropdown menu.\n\n    \n\n\n    \n        Implements\n    \n    \n                OnDestroy\n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                list-item\n            \n\n            \n                styleUrls\n                list-item.component.css\n            \n\n\n\n            \n                templateUrl\n                ./list-item.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                filter\n                            \n                            \n                                numTasksDue\n                            \n                            \n                                params\n                            \n                            \n                                sub\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                buttonClass\n                            \n                            \n                                expand\n                            \n                            \n                                icon\n                            \n                            \n                                tasksDue\n                            \n                            \n                                text\n                            \n                            \n                                url\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(taskService: TaskService)\n                    \n                \n                        \n                            \n                                Defined in src/app/tasks/sidenav/list-item.component.ts:43\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        taskService\n                                                  \n                                                        \n                                                                    TaskService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        buttonClass\n                    \n                    \n                        The CSS class to apply to the buttons (only \"mat-button\" or \"mat-menu-item\" currently, but could use others). \n\n                            \n                            Type:    string\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/tasks/sidenav/list-item.component.ts:25\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        expand\n                    \n                    \n                        Boolean value to indicate whether the button should be displayed expanded (true if the badge should be offset to right). \n\n                            \n                            Type:    boolean\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/tasks/sidenav/list-item.component.ts:29\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        icon\n                    \n                    \n                        The icon to display in front of the button text. \n\n                            \n                            Type:    string\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/tasks/sidenav/list-item.component.ts:27\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        tasksDue\n                    \n                    \n                        The Observable that can be subscribed to (for displaying quantities in badge). \n\n                            \n                            Type:    Observable\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/tasks/sidenav/list-item.component.ts:31\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        text\n                    \n                    \n                        The text to display for the button. \n\n                            \n                            Type:    \"Over Due\" | \"Due Today\" | \"Due Tomorrow\" | \"Pending\" | \"Complete\"\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/tasks/sidenav/list-item.component.ts:33\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        url\n                    \n                    \n                        The base URL to use when list-item clicked. \n\n                            \n                            Type:    string\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/tasks/sidenav/list-item.component.ts:35\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnDestroy\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnDestroy()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/tasks/sidenav/list-item.component.ts:50\n                            \n                        \n\n\n                \n                    \n                            Unsubscribe from any subscriptions.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/tasks/sidenav/list-item.component.ts:57\n                            \n                        \n\n\n                \n                    \n                            Initialize the component.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            filter\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        filter:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tasks/sidenav/list-item.component.ts:37\n                            \n                        \n\n                \n                    \n                        The filter parameter to apply to the URL when the due button clicked. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            numTasksDue\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        numTasksDue:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tasks/sidenav/list-item.component.ts:39\n                            \n                        \n\n                \n                    \n                        The number of Tasks due. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            params\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        params:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tasks/sidenav/list-item.component.ts:41\n                            \n                        \n\n                \n                    \n                        The URL paramters. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sub\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        sub:     Subscription\n\n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tasks/sidenav/list-item.component.ts:43\n                            \n                        \n\n                \n                    \n                        The subscriptions for the component. \n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import * as moment from 'moment';\n\n/* angular libraries */\nimport { Component, Input, OnDestroy, OnInit } from '@angular/core';\nimport { Subscription, Observable } from 'rxjs';\n\n/* app */\nimport { TaskService } from '@tasks/shared/services/task.service';\n\n/**\n * Creates 3 buttons meant for filtering Tasks \"Over Due\", \"Due Today\", and \"Due Tomorrow\". Allows \n * for the buttons to be styled in multiple ways so the buttons can be re-used on the header toolbar \n * for large screens as \"mat-button\" elements and in the task filter as \"mat-menu-item\" elements in \n * the dropdown menu.\n */\n@Component({\n    selector: 'list-item',\n    templateUrl: './list-item.component.html',\n    styleUrls: ['./list-item.component.css']\n})\nexport class ListItemComponent implements OnDestroy, OnInit {\n\n    /** The CSS class to apply to the buttons (only \"mat-button\" or \"mat-menu-item\" currently, but could use others). */\n    @Input() buttonClass: string;\n    /** The icon to display in front of the button text. */\n    @Input() icon: string;\n    /** Boolean value to indicate whether the button should be displayed expanded (true if the badge should be offset to right). */\n    @Input() expand: boolean;\n    /** The Observable that can be subscribed to (for displaying quantities in badge). */\n    @Input() tasksDue: Observable;\n    /** The text to display for the button. */\n    @Input() text: 'Over Due' | 'Due Today' | 'Due Tomorrow' | 'Pending' | 'Complete';\n    /** The base URL to use when list-item clicked. */\n    @Input() url: string;\n    /** The filter parameter to apply to the URL when the due button clicked. */\n    filter: string;\n    /** The number of Tasks due. */\n    numTasksDue: string;\n    /** The URL paramters. */\n    params: string;\n    /** The subscriptions for the component. */\n    sub: Subscription;\n\n    constructor(private taskService: TaskService) {}\n\n    /**\n     * Unsubscribe from any subscriptions.\n     */\n    ngOnDestroy() {\n        this.sub.unsubscribe();\n    }\n\n    /**\n     * Initialize the component.\n     */\n    ngOnInit() {\n        // initialize the num tasks over due, due today, and due tomorrow\n        this.taskService.initNumTasks();\n\n        // create sub to maintain all subscriptions for the component (for easy unsubscribe on destory)\n        this.sub = new Subscription();\n\n        if(this.text == 'Over Due') {\n            this.filter = 'overdue';\n            // subscribe to the numTasksOverDue Observable and add it to the subscriptions for the component\n            const subOverDue = this.taskService.numTasksOverDue.subscribe((num: number) => {\n                this.numTasksDue = num.toString(); // update number of tasks over due (so badge updates)\n            });\n            this.sub.add(subOverDue);\n        }\n        else if(this.text == 'Due Today') {\n            this.filter = moment().startOf('day').utc().format('YYYY-MM-DD');\n            // subscribe to the numTasksDueToday Observable and add it to the subscriptions for the component\n            const subToday = this.taskService.numTasksDueToday.subscribe((num: number) => {\n                this.numTasksDue = num.toString(); // update number of tasks due today (so badge updates)\n            });\n            this.sub.add(subToday);\n        }\n        else if(this.text == 'Due Tomorrow'){\n            this.filter = moment().startOf('day').add(1, 'days').utc().format('YYYY-MM-DD');\n            // subscribe to the numTasksDueTomorrow Observable and add it to the subscriptions for the component\n            const subTomorrow = this.taskService.numTasksDueTomorrow.subscribe((num: number) => {\n                this.numTasksDue = num.toString(); // update number of tasks due tomorrow (so badge updates)\n            });\n            this.sub.add(subTomorrow);\n        }\n        else {\n            this.filter = '';\n            if(this.text !== 'Complete') {\n                const sub = this.taskService.numPendingTasks.subscribe((num: number) => {\n                    if(num \n    \n\n    \n        \n    \n    {{text}}\n    \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '        {{text}}    '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ButtonBarComponent', 'selector': 'button-bar'},{'name': 'ButtonsComponent', 'selector': 'buttons'},{'name': 'CompleteTaskComponent', 'selector': 'complete-task'},{'name': 'CompleteTasksTableComponent', 'selector': 'complete-tasks-table'},{'name': 'ConfirmDeleteTaskComponent', 'selector': 'confirm-delete'},{'name': 'CreateTaskComponent', 'selector': 'create-task'},{'name': 'EditTaskComponent', 'selector': 'edit-task'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'ListItemComponent', 'selector': 'list-item'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'PendingTasksTableComponent', 'selector': 'pending-tasks-table'},{'name': 'RecurringTaskComponent', 'selector': 'recurring-task'},{'name': 'SidenavTasksComponent', 'selector': 'sidenav-tasks'},{'name': 'TaskFormComponent', 'selector': 'task-form'},{'name': 'TasksComponent', 'selector': 'tasks-root'},{'name': 'TasksFilterComponent', 'selector': 'tasks-filter'},{'name': 'TasksTableComponent', 'selector': 'tasks-table'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ListItemComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LoaderService.html":{"url":"injectables/LoaderService.html","title":"injectable - LoaderService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  LoaderService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/loader.service.ts\n        \n\n            \n                Description\n            \n            \n                Handles displaying and hiding the loading spinner.\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                loaderState\n                            \n                            \n                                    Private\n                                loaderSubject\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                hide\n                            \n                            \n                                show\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/core/services/loader.service.ts:22\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            hide\n                            \n                            \n                        \n                    \n                \n                \n                    \nhide()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/services/loader.service.ts:39\n                            \n                        \n\n\n                \n                    \n                            Sets the loaderSubject to show: false to hide the loading spinner.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            show\n                            \n                            \n                        \n                    \n                \n                \n                    \nshow()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/services/loader.service.ts:32\n                            \n                        \n\n\n                \n                    \n                            Sets the loaderSubject to show: true to display the loading spinner.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loaderState\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        loaderState:     Observable\n\n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/services/loader.service.ts:20\n                            \n                        \n\n                \n                    \n                        An Observable for the state of the loader. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            loaderSubject\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        loaderSubject:     Subject\n\n                    \n                \n                    \n                        \n                            Type :     Subject\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/services/loader.service.ts:22\n                            \n                        \n\n                \n                    \n                        The state of the loader. \n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Observable, Subject } from 'rxjs';\n\n/**\n * The state of the loader.\n */\nexport interface LoaderState {\n    /** Boolean to indicate whether to show or hide the loading spinner. */\n    show: boolean;\n}\n\n/**\n * Handles displaying and hiding the loading spinner.\n */\n@Injectable()\nexport class LoaderService {\n\n    /** An Observable for the state of the loader. */\n    loaderState: Observable;\n    /** The state of the loader. */\n    private loaderSubject: Subject;\n\n    constructor() { \n        this.loaderSubject = new Subject();\n        this.loaderState = this.loaderSubject.asObservable();\n    }\n\n    /**\n     * Sets the loaderSubject to show: true to display the loading spinner.\n     */\n    show() {\n        this.loaderSubject.next({show: true});\n    }\n    \n    /**\n     * Sets the loaderSubject to show: false to hide the loading spinner.\n     */\n    hide() {\n        this.loaderSubject.next({show: false});\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/LoaderState.html":{"url":"interfaces/LoaderState.html","title":"interface - LoaderState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  LoaderState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/loader.service.ts\n        \n\n            \n                Description\n            \n            \n                The state of the loader.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        show\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        show\n                                    \n                                \n                                \n                                    \n                                        show:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Boolean to indicate whether to show or hide the loading spinner. \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Observable, Subject } from 'rxjs';\n\n/**\n * The state of the loader.\n */\nexport interface LoaderState {\n    /** Boolean to indicate whether to show or hide the loading spinner. */\n    show: boolean;\n}\n\n/**\n * Handles displaying and hiding the loading spinner.\n */\n@Injectable()\nexport class LoaderService {\n\n    /** An Observable for the state of the loader. */\n    loaderState: Observable;\n    /** The state of the loader. */\n    private loaderSubject: Subject;\n\n    constructor() { \n        this.loaderSubject = new Subject();\n        this.loaderState = this.loaderSubject.asObservable();\n    }\n\n    /**\n     * Sets the loaderSubject to show: true to display the loading spinner.\n     */\n    show() {\n        this.loaderSubject.next({show: true});\n    }\n    \n    /**\n     * Sets the loaderSubject to show: false to hide the loading spinner.\n     */\n    hide() {\n        this.loaderSubject.next({show: false});\n    }\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Logger.html":{"url":"classes/Logger.html","title":"class - Logger","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  Logger\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/logger.service.ts\n        \n\n            \n                Description\n            \n            \n                A simple logging interface.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                error\n                            \n                            \n                                info\n                            \n                            \n                                warn\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            error\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        error:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/services/logger.service.ts:13\n                            \n                        \n\n                \n                    \n                        Log error to the console. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            info\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        info:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/services/logger.service.ts:9\n                            \n                        \n\n                \n                    \n                        Log to the console. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            warn\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        warn:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/services/logger.service.ts:11\n                            \n                        \n\n                \n                    \n                        Log warning to the console. \n\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\n/**\n * A simple logging interface.\n */\nexport abstract class Logger {\n    /** Log to the console. */\n    info: any;\n    /** Log warning to the console. */\n    warn: any;\n    /** Log error to the console. */\n    error: any;\n}\n\n/**\n * Default implementation for logging. The service and Logger are taken\n * from the below URL.\n * \n * https://robferguson.org/blog/2017/09/09/a-simple-logging-service-for-angular-4/\n */\n@Injectable()\nexport class LoggerService implements Logger {\n    /** Log to the console. */\n    info: any;\n    /** Log warning to the console. */\n    warn: any;\n    /** Log error to the console. */\n    error: any;\n\n    /**\n     * Logs to the correct source file name and line number and passes along any\n     * arguments.\n     * \n     * @param type The console type.\n     * @param args Any optional args.\n     */\n    invokeConsoleMethod(type: string, args?: any): void {}  \n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LoggerService.html":{"url":"injectables/LoggerService.html","title":"injectable - LoggerService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  LoggerService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/logger.service.ts\n        \n\n            \n                Description\n            \n            \n                Default implementation for logging. The service and Logger are taken\nfrom the below URL.\nhttps://robferguson.org/blog/2017/09/09/a-simple-logging-service-for-angular-4/\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                error\n                            \n                            \n                                info\n                            \n                            \n                                warn\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                invokeConsoleMethod\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            invokeConsoleMethod\n                            \n                            \n                        \n                    \n                \n                \n                    \ninvokeConsoleMethod(type: string, args?: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/services/logger.service.ts:38\n                            \n                        \n\n\n                \n                    \n                            Logs to the correct source file name and line number and passes along any\narguments.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        type\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                The console type.\n\n                                                        \n                                                \n                                                \n                                                        args\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            yes\n                                                    \n                                                    \n\n                                                        \n                                                                Any optional args.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            error\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        error:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/services/logger.service.ts:29\n                            \n                        \n\n                \n                    \n                        Log error to the console. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            info\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        info:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/services/logger.service.ts:25\n                            \n                        \n\n                \n                    \n                        Log to the console. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            warn\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        warn:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/services/logger.service.ts:27\n                            \n                        \n\n                \n                    \n                        Log warning to the console. \n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\n/**\n * A simple logging interface.\n */\nexport abstract class Logger {\n    /** Log to the console. */\n    info: any;\n    /** Log warning to the console. */\n    warn: any;\n    /** Log error to the console. */\n    error: any;\n}\n\n/**\n * Default implementation for logging. The service and Logger are taken\n * from the below URL.\n * \n * https://robferguson.org/blog/2017/09/09/a-simple-logging-service-for-angular-4/\n */\n@Injectable()\nexport class LoggerService implements Logger {\n    /** Log to the console. */\n    info: any;\n    /** Log warning to the console. */\n    warn: any;\n    /** Log error to the console. */\n    error: any;\n\n    /**\n     * Logs to the correct source file name and line number and passes along any\n     * arguments.\n     * \n     * @param type The console type.\n     * @param args Any optional args.\n     */\n    invokeConsoleMethod(type: string, args?: any): void {}  \n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MatPaginatorCustom.html":{"url":"injectables/MatPaginatorCustom.html","title":"injectable - MatPaginatorCustom","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  MatPaginatorCustom\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/tasks/shared/util/mat-paginator-custom.ts\n        \n\n            \n                Description\n            \n            \n                Extension of MatPaginatorIntl to define custom labels and text displayed.\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                getRangeLabel\n                            \n                            \n                                nextPageLabel\n                            \n                            \n                                previousPageLabel\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getRangeLabel\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        getRangeLabel:     \n\n                    \n                \n                    \n                        \n                            Default value : function (page, pageSize, length) {\n        if (length == 0 || pageSize == 0) { \n            return `0 of ${length}`; \n        } \n        length = Math.max(length, 0); \n        const startIndex = page * pageSize; \n        const endIndex = startIndex \n                        \n                    \n                        \n                            \n                                    Defined in src/app/tasks/shared/util/mat-paginator-custom.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            nextPageLabel\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        nextPageLabel:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : 'Next Task'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tasks/shared/util/mat-paginator-custom.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            previousPageLabel\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        previousPageLabel:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : 'Previous Task'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tasks/shared/util/mat-paginator-custom.ts:11\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { MatPaginatorIntl } from '@angular/material';\n\n/**\n * Extension of MatPaginatorIntl to define custom labels and text displayed.\n */\n@Injectable()\nexport class MatPaginatorCustom extends MatPaginatorIntl {\n    nextPageLabel     = 'Next Task';\n    previousPageLabel = 'Previous Task';\n\n    getRangeLabel = function (page, pageSize, length) {\n        if (length == 0 || pageSize == 0) { \n            return `0 of ${length}`; \n        } \n        length = Math.max(length, 0); \n        const startIndex = page * pageSize; \n        const endIndex = startIndex \n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PageNotFoundComponent.html":{"url":"components/PageNotFoundComponent.html","title":"component - PageNotFoundComponent","body":"\n                   \n\n\n\n\n\n  Components\n  PageNotFoundComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/page-not-found/page-not-found.component.ts\n\n\n    \n        Description\n    \n    \n        Creates the base page not found (404) component for the app.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-page-not-found\n            \n\n            \n                styleUrls\n                page-not-found.component.css\n            \n\n\n\n            \n                templateUrl\n                ./page-not-found.component.html\n            \n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n/**\n * Creates the base page not found (404) component for the app.\n */\n@Component({\n  selector: 'app-page-not-found',\n  templateUrl: './page-not-found.component.html',\n  styleUrls: ['./page-not-found.component.css']\n})\nexport class PageNotFoundComponent {}\n\n    \n\n    \n        \n  404\n  Sorry, but it looks like the page you are looking for does not exist.\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  404  Sorry, but it looks like the page you are looking for does not exist.'\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ButtonBarComponent', 'selector': 'button-bar'},{'name': 'ButtonsComponent', 'selector': 'buttons'},{'name': 'CompleteTaskComponent', 'selector': 'complete-task'},{'name': 'CompleteTasksTableComponent', 'selector': 'complete-tasks-table'},{'name': 'ConfirmDeleteTaskComponent', 'selector': 'confirm-delete'},{'name': 'CreateTaskComponent', 'selector': 'create-task'},{'name': 'EditTaskComponent', 'selector': 'edit-task'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'ListItemComponent', 'selector': 'list-item'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'PendingTasksTableComponent', 'selector': 'pending-tasks-table'},{'name': 'RecurringTaskComponent', 'selector': 'recurring-task'},{'name': 'SidenavTasksComponent', 'selector': 'sidenav-tasks'},{'name': 'TaskFormComponent', 'selector': 'task-form'},{'name': 'TasksComponent', 'selector': 'tasks-root'},{'name': 'TasksFilterComponent', 'selector': 'tasks-filter'},{'name': 'TasksTableComponent', 'selector': 'tasks-table'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'PageNotFoundComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PendingTasksTableComponent.html":{"url":"components/PendingTasksTableComponent.html","title":"component - PendingTasksTableComponent","body":"\n                   \n\n\n\n\n\n  Components\n  PendingTasksTableComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/tasks/table/pending-tasks-table.component.ts\n\n\n    \n        Description\n    \n    \n        A wrapper for the TasksTableComponent which only displays pending Tasks.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                pending-tasks-table\n            \n\n            \n                styleUrls\n                pending-tasks-table.component.css\n            \n\n\n\n            \n                templateUrl\n                ./pending-tasks-table.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                pendingTasks\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            pendingTasks\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        pendingTasks:     TasksTableComponent\n\n                    \n                \n                    \n                        \n                            Type :     TasksTableComponent\n\n                        \n                    \n                    \n                        \n                            Decorators : ViewChild\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tasks/table/pending-tasks-table.component.ts:18\n                            \n                        \n\n                \n                    \n                        The table containing the pending Tasks. \n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, ViewChild } from '@angular/core';\n\n/* app */\nimport { TasksTableComponent } from '@tasks/table/tasks-table.component';\n\n/**\n * A wrapper for the TasksTableComponent which only displays pending Tasks.\n */\n@Component({\n    selector: 'pending-tasks-table',\n    templateUrl: './pending-tasks-table.component.html',\n    styleUrls: ['./pending-tasks-table.component.css']\n})\nexport class PendingTasksTableComponent {\n\n    /** The table containing the pending Tasks. */\n    @ViewChild('pendingTasks') pendingTasks: TasksTableComponent; \n}\n\n    \n\n    \n        \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ButtonBarComponent', 'selector': 'button-bar'},{'name': 'ButtonsComponent', 'selector': 'buttons'},{'name': 'CompleteTaskComponent', 'selector': 'complete-task'},{'name': 'CompleteTasksTableComponent', 'selector': 'complete-tasks-table'},{'name': 'ConfirmDeleteTaskComponent', 'selector': 'confirm-delete'},{'name': 'CreateTaskComponent', 'selector': 'create-task'},{'name': 'EditTaskComponent', 'selector': 'edit-task'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'ListItemComponent', 'selector': 'list-item'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'PendingTasksTableComponent', 'selector': 'pending-tasks-table'},{'name': 'RecurringTaskComponent', 'selector': 'recurring-task'},{'name': 'SidenavTasksComponent', 'selector': 'sidenav-tasks'},{'name': 'TaskFormComponent', 'selector': 'task-form'},{'name': 'TasksComponent', 'selector': 'tasks-root'},{'name': 'TasksFilterComponent', 'selector': 'tasks-filter'},{'name': 'TasksTableComponent', 'selector': 'tasks-table'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'PendingTasksTableComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/RecurringTaskComponent.html":{"url":"components/RecurringTaskComponent.html","title":"component - RecurringTaskComponent","body":"\n                   \n\n\n\n\n\n  Components\n  RecurringTaskComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/tasks/edit/recurring-task.component.ts\n\n\n    \n        Description\n    \n    \n        Creates a dialog to select whether to edit a single or all remaining Tasks\nin a sequence of Tasks. This component expects the given Task to be a \nrecurring one.\n\n    \n\n\n    \n        Implements\n    \n    \n                OnDestroy\n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                recurring-task\n            \n\n            \n                styleUrls\n                recurring-task.component.css\n            \n\n\n\n            \n                templateUrl\n                ./recurring-task.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                editRecurringTaskForm\n                            \n                            \n                                    Private\n                                sub\n                            \n                            \n                                task\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                cancel\n                            \n                            \n                                edit\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                updateAll\n                            \n                        \n                    \n                \n\n                \n                    \n                        HostBindings\n                    \n                \n                \n                    \n                        \n                            \n                                class.marker-repeating-task-dialog\n                            \n                        \n                    \n                \n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(data: any, dialogRef: MatDialogRef, formBuilder: FormBuilder)\n                    \n                \n                        \n                            \n                                Defined in src/app/tasks/edit/recurring-task.component.ts:30\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                    any\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialogRef\n                                                  \n                                                        \n                                                                    MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        formBuilder\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        updateAll\n                    \n                    \n                        Event emitted when user clicks the \"Edit\" button (emits boolean value updateAll=true if updating all Tasks). \n\n                        $event type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/tasks/edit/recurring-task.component.ts:28\n                            \n                        \n            \n        \n\n    \n    HostBindings        \n            \n                \n                    \n                        \n                        \n                            \n                            class.marker-repeating-task-dialog\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        class.marker-repeating-task-dialog:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tasks/edit/recurring-task.component.ts:22\n                            \n                        \n\n\n            \n        \n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            cancel\n                            \n                            \n                        \n                    \n                \n                \n                    \ncancel()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/tasks/edit/recurring-task.component.ts:43\n                            \n                        \n\n\n                \n                    \n                            Cancels the Task edit and closes the dialog.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            edit\n                            \n                            \n                        \n                    \n                \n                \n                    \nedit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/tasks/edit/recurring-task.component.ts:76\n                            \n                        \n\n\n                \n                    \n                            Opens the dialog to edit a Task.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnDestroy\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnDestroy()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/tasks/edit/recurring-task.component.ts:50\n                            \n                        \n\n\n                \n                    \n                            Clean the component \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/tasks/edit/recurring-task.component.ts:57\n                            \n                        \n\n\n                \n                    \n                            Initialize the component.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            editRecurringTaskForm\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        editRecurringTaskForm:     FormGroup\n\n                    \n                \n                    \n                        \n                            Type :     FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tasks/edit/recurring-task.component.ts:24\n                            \n                        \n\n                \n                    \n                        The form to select whether to edit single or all remaining Tasks. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            sub\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        sub:     Subscription\n\n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tasks/edit/recurring-task.component.ts:30\n                            \n                        \n\n                \n                    \n                        The subscriptions for the component. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            task\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        task:     Task\n\n                    \n                \n                    \n                        \n                            Type :     Task\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tasks/edit/recurring-task.component.ts:26\n                            \n                        \n\n                \n                    \n                        The recurring Task to edit. \n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, EventEmitter, HostBinding, Inject, OnDestroy, OnInit, Output } from '@angular/core';\nimport { FormGroup, Validators, FormBuilder } from '@angular/forms';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\nimport { Subscription } from 'rxjs/Subscription';\n\n/* app */\nimport { Task } from '@tasks/shared/models/task.model';\n\n/**\n * Creates a dialog to select whether to edit a single or all remaining Tasks\n * in a sequence of Tasks. This component expects the given Task to be a \n * recurring one.\n */\n@Component({\n    selector: 'recurring-task',\n    templateUrl: './recurring-task.component.html',\n    styleUrls: ['./recurring-task.component.css']\n})\nexport class RecurringTaskComponent implements OnDestroy, OnInit {\n\n    @HostBinding('class.marker-repeating-task-dialog') classMarker : boolean = true;\n    /** The form to select whether to edit single or all remaining Tasks. */\n    editRecurringTaskForm: FormGroup;\n    /** The recurring Task to edit. */\n    task: Task;\n    /** Event emitted when user clicks the \"Edit\" button (emits boolean value updateAll=true if updating all Tasks). */\n    @Output() updateAll: EventEmitter;\n    /** The subscriptions for the component. */\n    private sub: Subscription;\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private data:any,\n        private dialogRef: MatDialogRef,\n        private formBuilder: FormBuilder\n    ) {\n        this.updateAll = new EventEmitter();\n    }\n\n    /**\n     * Cancels the Task edit and closes the dialog.\n     */\n    cancel() {\n        this.dialogRef.close();\n    }\n\n    /**\n     * Clean the component \n     */\n    ngOnDestroy() {\n        this.sub.unsubscribe();\n    }\n\n    /**\n     * Initialize the component.\n     */\n    ngOnInit() {\n        this.task = this.data.task;\n\n        this.editRecurringTaskForm = this.formBuilder.group({\n            updateAll: [\n                {\n                    value: '',\n                    disabled: false\n                },\n                Validators.required\n            ]\n        });\n\n        this.sub = new Subscription();\n    }\n\n    /**\n     * Opens the dialog to edit a Task.\n     */\n    edit() {\n        let updateAll: boolean;\n        if(this.editRecurringTaskForm.get('updateAll').value == 'all') {\n            updateAll = true;\n        }\n        else {\n            updateAll = false;\n        }\n        this.updateAll.emit(updateAll);\n        this.dialogRef.close();\n    }\n}\n\n    \n\n    \n        \n    Edit Recurring Item\n\n\n    \n        \n            Just this Task\n            This and all remaining Tasks in sequence\n        \n    \n\n\n    Cancel\n    \n        \n             \n            Edit\n        \n    \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    Edit Recurring Item                        Just this Task            This and all remaining Tasks in sequence                Cancel                                     Edit            '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ButtonBarComponent', 'selector': 'button-bar'},{'name': 'ButtonsComponent', 'selector': 'buttons'},{'name': 'CompleteTaskComponent', 'selector': 'complete-task'},{'name': 'CompleteTasksTableComponent', 'selector': 'complete-tasks-table'},{'name': 'ConfirmDeleteTaskComponent', 'selector': 'confirm-delete'},{'name': 'CreateTaskComponent', 'selector': 'create-task'},{'name': 'EditTaskComponent', 'selector': 'edit-task'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'ListItemComponent', 'selector': 'list-item'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'PendingTasksTableComponent', 'selector': 'pending-tasks-table'},{'name': 'RecurringTaskComponent', 'selector': 'recurring-task'},{'name': 'SidenavTasksComponent', 'selector': 'sidenav-tasks'},{'name': 'TaskFormComponent', 'selector': 'task-form'},{'name': 'TasksComponent', 'selector': 'tasks-root'},{'name': 'TasksFilterComponent', 'selector': 'tasks-filter'},{'name': 'TasksTableComponent', 'selector': 'tasks-table'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'RecurringTaskComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SidenavTasksComponent.html":{"url":"components/SidenavTasksComponent.html","title":"component - SidenavTasksComponent","body":"\n                   \n\n\n\n\n\n  Components\n  SidenavTasksComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/tasks/sidenav/sidenav-tasks.component.ts\n\n\n    \n        Description\n    \n    \n        Creates the main layout for the application. The main layout currently\nconsists of the header, side menu, footer, and router-outlet.\n\n    \n\n\n    \n        Implements\n    \n    \n                OnDestroy\n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                sidenav-tasks\n            \n\n            \n                styleUrls\n                sidenav-tasks.component.css\n            \n\n\n\n            \n                templateUrl\n                ./sidenav-tasks.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                isExpanded\n                            \n                            \n                                isMediumScreen\n                            \n                            \n                                listItems\n                            \n                            \n                                numTasksDueToday\n                            \n                            \n                                numTasksDueTomorrow\n                            \n                            \n                                numTasksOverDue\n                            \n                            \n                                selectedIndex\n                            \n                            \n                                    Private\n                                sidenavRoutes\n                            \n                            \n                                    Private\n                                sub\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                getRouteParamsFromChild\n                            \n                            \n                                    Private\n                                highlightListItem\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                openCreateTaskDialog\n                            \n                            \n                                select\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dialog: MatDialog, route: ActivatedRoute, router: Router, taskService: TaskService, utilsService: UtilsService)\n                    \n                \n                        \n                            \n                                Defined in src/app/tasks/sidenav/sidenav-tasks.component.ts:53\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                    ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        taskService\n                                                  \n                                                        \n                                                                    TaskService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        utilsService\n                                                  \n                                                        \n                                                                    UtilsService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            getRouteParamsFromChild\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getRouteParamsFromChild()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/tasks/sidenav/sidenav-tasks.component.ts:141\n                            \n                        \n\n\n                \n                    \n                            Traverses the route in the router state tree until it has reached\nthe last URL segement and returns the params from there.\n\n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            highlightListItem\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        highlightListItem(params: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/tasks/sidenav/sidenav-tasks.component.ts:159\n                            \n                        \n\n\n                \n                    \n                            Highlights the correct listItem in the sidenav based on the given\nparams (specifically filter params). If no filter params are found, \nthen the listItem is set based on the current URL (\"complete\" or \n\"pending\"). The listItems are highlighted by setting the \nselectedIndex of the listItem from the array of listItems defined \nfor the component.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        params\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                The parameters from the URL.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnDestroy\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnDestroy()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/tasks/sidenav/sidenav-tasks.component.ts:80\n                            \n                        \n\n\n                \n                    \n                            Unsubscribe from any subscriptions.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/tasks/sidenav/sidenav-tasks.component.ts:87\n                            \n                        \n\n\n                \n                    \n                            Initialize the component.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            openCreateTaskDialog\n                            \n                            \n                        \n                    \n                \n                \n                    \nopenCreateTaskDialog()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/tasks/sidenav/sidenav-tasks.component.ts:66\n                            \n                        \n\n\n                \n                    \n                            Opens the dialog to create a Task.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            select\n                            \n                            \n                        \n                    \n                \n                \n                    \nselect(index: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/tasks/sidenav/sidenav-tasks.component.ts:132\n                            \n                        \n\n\n                \n                    \n                            Updates the selected index for the sidenav items and navigates to the\nroute at the given index.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        index\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                The index of the sidenav item that was clicked. \n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isExpanded\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        isExpanded:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tasks/sidenav/sidenav-tasks.component.ts:25\n                            \n                        \n\n                \n                    \n                        Boolean to indicate if the sidenav is expanded (true if expanded). \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isMediumScreen\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        isMediumScreen:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tasks/sidenav/sidenav-tasks.component.ts:27\n                            \n                        \n\n                \n                    \n                        Boolean to indicate if the screen size is medium or smaller (true if screen is medium or smaller). \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            listItems\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        listItems:     any[]\n\n                    \n                \n                    \n                        \n                            Type :     any[]\n\n                        \n                    \n                    \n                        \n                            Default value : [\n        { buttonClass: 'defaultBadge right', icon: 'clipboard-list', marker: 'marker-list-item-pending-tasks', text: 'Pending', routerLink: '/pending' },\n        { buttonClass: 'overDueBadge right', icon: 'hourglass-end', marker: '', text: 'Over Due', routerLink: '/pending', routeParams: {filter: 'overdue' } },\n        { buttonClass: 'dueTodayBadge right', icon: 'hourglass-half', marker: '', text: 'Due Today', routerLink: '/pending', routeParams: {filter: 'today' } },\n        { buttonClass: 'dueTomorrowBadge right', icon: 'hourglass-start', marker: '', text: 'Due Tomorrow', routerLink: '/pending', routeParams: {filter: 'tomorrow'} },\n        { icon: 'clipboard-check', marker: 'marker-list-item-complete-tasks', text: 'Complete', routerLink: '/complete', routeParams: {filter: ''} }\n    ]\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tasks/sidenav/sidenav-tasks.component.ts:47\n                            \n                        \n\n                \n                    \n                        The properties for each of the list-items in the sidenav. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            numTasksDueToday\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        numTasksDueToday:     Observable\n\n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tasks/sidenav/sidenav-tasks.component.ts:31\n                            \n                        \n\n                \n                    \n                        The number of Tasks due today. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            numTasksDueTomorrow\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        numTasksDueTomorrow:     Observable\n\n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tasks/sidenav/sidenav-tasks.component.ts:33\n                            \n                        \n\n                \n                    \n                        The number of Tasks due tomorrow. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            numTasksOverDue\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        numTasksOverDue:     Observable\n\n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tasks/sidenav/sidenav-tasks.component.ts:29\n                            \n                        \n\n                \n                    \n                        The number of over due Tasks. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selectedIndex\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        selectedIndex:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tasks/sidenav/sidenav-tasks.component.ts:35\n                            \n                        \n\n                \n                    \n                        The index of the sidenav item that is selected. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            sidenavRoutes\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        sidenavRoutes:     any[]\n\n                    \n                \n                    \n                        \n                            Type :     any[]\n\n                        \n                    \n                    \n                        \n                            Default value : [\n        ['tasks/pending'], \n        ['tasks/pending', { filter: 'overdue' }], \n        ['tasks/pending', { filter: 'today' }],\n        ['tasks/pending', { filter: 'tomorrow' }],\n        ['tasks/complete']\n    ]\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tasks/sidenav/sidenav-tasks.component.ts:39\n                            \n                        \n\n                \n                    \n                        The routes with filter parameter for the sidenav items. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            sub\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        sub:     Subscription\n\n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tasks/sidenav/sidenav-tasks.component.ts:37\n                            \n                        \n\n                \n                    \n                        The subscriptions for the component. \n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { MatDialog, MatDialogConfig } from \"@angular/material\";\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Observable, Subscription } from 'rxjs';\nimport { filter } from 'rxjs/operators';\n\n/* app */\nimport { CreateTaskComponent } from '@tasks/dialogs/create-task/create-task.component';\nimport { UtilsService } from '@tasks/shared/services/utils.service';\nimport { TaskService } from '@tasks/shared/services/task.service';\n\n/**\n * Creates the main layout for the application. The main layout currently\n * consists of the header, side menu, footer, and router-outlet.\n */\n@Component({\n    selector: 'sidenav-tasks',\n    templateUrl: './sidenav-tasks.component.html',\n    styleUrls: ['./sidenav-tasks.component.css']\n})\nexport class SidenavTasksComponent implements OnDestroy, OnInit {\n\n    /** Boolean to indicate if the sidenav is expanded (true if expanded). */\n    isExpanded: boolean;\n    /** Boolean to indicate if the screen size is medium or smaller (true if screen is medium or smaller). */\n    isMediumScreen: boolean;\n    /** The number of over due Tasks. */\n    numTasksOverDue: Observable;\n    /** The number of Tasks due today. */\n    numTasksDueToday: Observable;\n    /** The number of Tasks due tomorrow. */\n    numTasksDueTomorrow: Observable;\n    /** The index of the sidenav item that is selected. */\n    selectedIndex: number;\n    /** The subscriptions for the component. */\n    private sub: Subscription;\n    /** The routes with filter parameter for the sidenav items. */\n    private sidenavRoutes: any[] = [\n        ['tasks/pending'], \n        ['tasks/pending', { filter: 'overdue' }], \n        ['tasks/pending', { filter: 'today' }],\n        ['tasks/pending', { filter: 'tomorrow' }],\n        ['tasks/complete']\n    ];\n    /** The properties for each of the list-items in the sidenav. */\n    listItems: any[] = [\n        { buttonClass: 'defaultBadge right', icon: 'clipboard-list', marker: 'marker-list-item-pending-tasks', text: 'Pending', routerLink: '/pending' },\n        { buttonClass: 'overDueBadge right', icon: 'hourglass-end', marker: '', text: 'Over Due', routerLink: '/pending', routeParams: {filter: 'overdue' } },\n        { buttonClass: 'dueTodayBadge right', icon: 'hourglass-half', marker: '', text: 'Due Today', routerLink: '/pending', routeParams: {filter: 'today' } },\n        { buttonClass: 'dueTomorrowBadge right', icon: 'hourglass-start', marker: '', text: 'Due Tomorrow', routerLink: '/pending', routeParams: {filter: 'tomorrow'} },\n        { icon: 'clipboard-check', marker: 'marker-list-item-complete-tasks', text: 'Complete', routerLink: '/complete', routeParams: {filter: ''} }\n    ];\n\n    constructor(\n        private dialog: MatDialog,\n        private route: ActivatedRoute,\n        private router: Router,\n        private taskService: TaskService,\n        private utilsService: UtilsService\n    ) {}\n\n    /**\n     * Opens the dialog to create a Task.\n     */\n    openCreateTaskDialog() {\n        const dialogConfig = new MatDialogConfig();\n        dialogConfig.width = '70%';\n        dialogConfig.maxWidth = '100vw';\n        dialogConfig.maxHeight = '100vh';\n        dialogConfig.autoFocus = false;\n        let createDialogRef = this.dialog.open(CreateTaskComponent, dialogConfig);\n\n        this.utilsService.fullScreenDialogSub(createDialogRef);\n    }\n\n    /**\n     * Unsubscribe from any subscriptions.\n     */\n    ngOnDestroy() {\n        this.sub.unsubscribe();\n    }\n\n    /**\n     * Initialize the component.\n     */\n    ngOnInit() {\n        this.numTasksDueToday = this.taskService.numTasksDueToday;\n        this.numTasksDueTomorrow = this.taskService.numTasksDueToday;\n        this.numTasksOverDue = this.taskService.numTasksOverDue;\n\n        this.sub = new Subscription();\n        const subMenuToggle = this.utilsService.sidenavMenuChanges.pipe(\n            filter(event => event === 'Collapse' || event === 'Expand')\n        ).subscribe(next => {\n            if(next === 'Collapse') {\n                this.isExpanded = false;\n            }\n            else {\n                this.isExpanded = true;\n            }\n        });\n        this.sub.add(subMenuToggle);\n\n        const subScreenSize = this.utilsService.isMediumScreen.subscribe((isMediumScreen: boolean) => {\n            this.isMediumScreen = isMediumScreen;\n            if(this.isExpanded && this.isMediumScreen) {\n                this.isExpanded = false;\n            }\n            else {\n                // set to true on medium or smaller devices, otherwise to false\n                this.isExpanded = !this.isMediumScreen;\n            }\n        });\n        this.sub.add(subScreenSize);\n\n        // subscribe to the parameters in the route\n        const params = this.getRouteParamsFromChild();\n        const sub = params.subscribe(params => {\n            // highlight the list-item based on the route params\n            this.highlightListItem(params);\n        });\n        this.sub.add(sub);\n    }\n\n    /**\n     * Updates the selected index for the sidenav items and navigates to the\n     * route at the given index.\n     * \n     * @param index The index of the sidenav item that was clicked. \n     */\n    select(index: number) {\n        this.selectedIndex = index;\n        this.router.navigate(this.sidenavRoutes[index]);\n    }\n\n    /**\n     * Traverses the route in the router state tree until it has reached\n     * the last URL segement and returns the params from there.\n     */\n    private getRouteParamsFromChild() {\n        let route = this.route;\n        while(route.firstChild) {\n            route = route.firstChild;\n        }\n        return route.params;\n    }\n\n    /**\n     * Highlights the correct listItem in the sidenav based on the given\n     * params (specifically filter params). If no filter params are found, \n     * then the listItem is set based on the current URL (\"complete\" or \n     * \"pending\"). The listItems are highlighted by setting the \n     * selectedIndex of the listItem from the array of listItems defined \n     * for the component.\n     * \n     * @param params The parameters from the URL.\n     */\n    private highlightListItem(params: any) {\n        // set the selectedIndex based on the value of the filter param\n        let filter: string = params['filter'];\n        if(filter == 'overdue') {\n            this.selectedIndex = 1;\n        }\n        else if(filter == 'today') {\n            this.selectedIndex = 2;\n        }\n        else if(filter == 'tomorrow') {\n            this.selectedIndex = 3;\n        }\n        else {\n            // if no filter parameter is present, then set the selectedIndex\n            // based on whether 'complete' is in the URL.\n            if(this.router.url.indexOf('complete') >= 0) {\n                this.selectedIndex = 4;\n            }\n            else {\n                this.selectedIndex = 0;\n            }\n        }\n    }\n}\n\n    \n\n    \n        \n    \n    Create Task\n    \n    \n\n\n    \n        \n        \n        \n    \n\n\n    \n        \n    \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '        Create Task                                                        '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ButtonBarComponent', 'selector': 'button-bar'},{'name': 'ButtonsComponent', 'selector': 'buttons'},{'name': 'CompleteTaskComponent', 'selector': 'complete-task'},{'name': 'CompleteTasksTableComponent', 'selector': 'complete-tasks-table'},{'name': 'ConfirmDeleteTaskComponent', 'selector': 'confirm-delete'},{'name': 'CreateTaskComponent', 'selector': 'create-task'},{'name': 'EditTaskComponent', 'selector': 'edit-task'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'ListItemComponent', 'selector': 'list-item'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'PendingTasksTableComponent', 'selector': 'pending-tasks-table'},{'name': 'RecurringTaskComponent', 'selector': 'recurring-task'},{'name': 'SidenavTasksComponent', 'selector': 'sidenav-tasks'},{'name': 'TaskFormComponent', 'selector': 'task-form'},{'name': 'TasksComponent', 'selector': 'tasks-root'},{'name': 'TasksFilterComponent', 'selector': 'tasks-filter'},{'name': 'TasksTableComponent', 'selector': 'tasks-table'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SidenavTasksComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SidenavTasksModule.html":{"url":"modules/SidenavTasksModule.html","title":"module - SidenavTasksModule","body":"\n                   \n\n\n\n\n  Modules\n  SidenavTasksModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_SidenavTasksModule\n\n\n\ncluster_SidenavTasksModule_declarations\n\n\n\ncluster_SidenavTasksModule_imports\n\n\n\ncluster_SidenavTasksModule_exports\n\n\n\n\nListItemComponent\n\nListItemComponent\n\n\n\nSidenavTasksModule\n\nSidenavTasksModule\n\nSidenavTasksModule -->\n\nListItemComponent->SidenavTasksModule\n\n\n\n\n\nSidenavTasksComponent\n\nSidenavTasksComponent\n\nSidenavTasksModule -->\n\nSidenavTasksComponent->SidenavTasksModule\n\n\n\n\n\nSidenavTasksComponent \n\nSidenavTasksComponent \n\nSidenavTasksComponent  -->\n\nSidenavTasksModule->SidenavTasksComponent \n\n\n\n\n\nCreateTaskModule\n\nCreateTaskModule\n\nSidenavTasksModule -->\n\nCreateTaskModule->SidenavTasksModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/tasks/sidenav/sidenav-tasks.module.ts\n        \n\n\n            \n                Description\n            \n            \n                Defines the components, services, and modules required to for the Tasks\nsidenav.\n\n            \n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                ListItemComponent\n                            \n                            \n                                SidenavTasksComponent\n                            \n                    \n                \n                \n                    EntryComponents\n                    \n                            \n                                SidenavTasksComponent\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    CreateTaskModule\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    SidenavTasksComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        /* angular libraries */\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { MatBadgeModule, MatButtonModule, MatListModule, MatSidenavModule, MatTooltipModule } from '@angular/material';\nimport { RouterModule } from '@angular/router';\n\n/* fontawesome */\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\nimport { library } from '@fortawesome/fontawesome-svg-core'\nimport { faHourglass } from '@fortawesome/free-regular-svg-icons';\nimport { faClipboardList, faClipboardCheck, faHourglassEnd, faHourglassHalf, faHourglassStart, faPaste } from '@fortawesome/free-solid-svg-icons';\n\n// Add icons to library for convenient access in components\nlibrary.add(faClipboardList, faClipboardCheck, faHourglass, faHourglassEnd, faHourglassHalf, faHourglassStart, faPaste);\n\n/* module */\nimport { SidenavTasksComponent } from './sidenav-tasks.component';\nimport { ListItemComponent } from './list-item.component';\nimport { CreateTaskModule } from '@tasks/dialogs/create-task/create-task.module';\n\n/**\n * Defines the components, services, and modules required to for the Tasks\n * sidenav.\n */\n@NgModule({\n    declarations: [\n        ListItemComponent,\n        SidenavTasksComponent\n    ],\n    imports: [\n        /* angular libraries */\n        CommonModule,\n        FlexLayoutModule,\n        MatBadgeModule, \n        MatButtonModule,\n        MatListModule, \n        MatSidenavModule, \n        MatTooltipModule,\n        RouterModule,\n\n        FontAwesomeModule,\n\n        /* app modules */\n        CreateTaskModule\n    ],\n    exports: [\n        SidenavTasksComponent\n    ],\n    entryComponents: [\n        SidenavTasksComponent\n    ]\n})\nexport class SidenavTasksModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Task.html":{"url":"classes/Task.html","title":"class - Task","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  Task\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/tasks/shared/models/task.model.ts\n        \n\n            \n                Description\n            \n            \n                A Task to be completed. A Task requires a name, description, and due date.\nBy default Tasks are marked pending (isComplete=false). Tasks can also have\na priority, a frequency that they repeat (daily, weekly, monthly, yearly), and\nthe number of times they repeat (if it repeats).\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                dateCompleted\n                            \n                            \n                                description\n                            \n                            \n                                dueDate\n                            \n                            \n                                endsAfter\n                            \n                            \n                                id\n                            \n                            \n                                isComplete\n                            \n                            \n                                name\n                            \n                            \n                                priority\n                            \n                            \n                                    Optional\n                                repeats\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            dateCompleted\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        dateCompleted:     Date\n\n                    \n                \n                    \n                        \n                            Type :     Date\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tasks/shared/models/task.model.ts:20\n                            \n                        \n\n                \n                    \n                        The date the Task is completed. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            description\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        description:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tasks/shared/models/task.model.ts:16\n                            \n                        \n\n                \n                    \n                        The description of the Task.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            dueDate\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        dueDate:     Date\n\n                    \n                \n                    \n                        \n                            Type :     Date\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tasks/shared/models/task.model.ts:18\n                            \n                        \n\n                \n                    \n                        The date the Task is due. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            endsAfter\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        endsAfter:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tasks/shared/models/task.model.ts:28\n                            \n                        \n\n                \n                    \n                        The number of times the Task will repeat (if it repeats). \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        id:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tasks/shared/models/task.model.ts:12\n                            \n                        \n\n                \n                    \n                        The unique identifier of the Task. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isComplete\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        isComplete:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tasks/shared/models/task.model.ts:22\n                            \n                        \n\n                \n                    \n                        Set to true if the Task is complete, false if it is pending. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        name:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tasks/shared/models/task.model.ts:14\n                            \n                        \n\n                \n                    \n                        The name of the Task. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            priority\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        priority:     PriorityTypes\n\n                    \n                \n                    \n                        \n                            Type :     PriorityTypes\n\n                        \n                    \n                    \n                        \n                            Default value : 'Low'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tasks/shared/models/task.model.ts:24\n                            \n                        \n\n                \n                    \n                        The priority of the Task (Low, Medium, High, or Urgent). \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            repeats\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        repeats:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : 'noRepeat'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tasks/shared/models/task.model.ts:26\n                            \n                        \n\n                \n                    \n                        The frequency the Task repeats: 'noRepeat', 'daily', 'weekly', 'monthly', 'yearly'. \n\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export type PriorityTypes = \"Low\" | \"Medium\" | \"High\" | \"Urgent\";\n\n/**\n * A Task to be completed. A Task requires a name, description, and due date.\n * By default Tasks are marked pending (isComplete=false). Tasks can also have\n * a priority, a frequency that they repeat (daily, weekly, monthly, yearly), and\n * the number of times they repeat (if it repeats).\n */\nexport class Task {\n    /** The unique identifier of the Task. */\n    id: number;\n    /** The name of the Task. */\n    name: string;\n    /** The description of the Task.*/\n    description: string;\n    /** The date the Task is due. */\n    dueDate: Date;\n    /** The date the Task is completed. */\n    dateCompleted: Date;\n    /** Set to true if the Task is complete, false if it is pending. */\n    isComplete: boolean = false;\n    /** The priority of the Task (Low, Medium, High, or Urgent). */\n    priority: PriorityTypes = 'Low';\n    /** The frequency the Task repeats: 'noRepeat', 'daily', 'weekly', 'monthly', 'yearly'. */\n    repeats?: string = 'noRepeat';\n    /** The number of times the Task will repeat (if it repeats). */\n    endsAfter: number = 0;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TaskFormComponent.html":{"url":"components/TaskFormComponent.html","title":"component - TaskFormComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TaskFormComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/tasks/form/task-form.component.ts\n\n\n    \n        Description\n    \n    \n        Creates the form to create or modify a Task. A Task is required in the @Input property if modifying a\nTask (no Task required when creating a Task). Complete and Pending Tasks can be modified using this form.\nThe following example is used to create a Task:\n\nThe following example is used to modify a Task:\n\n\n    \n\n\n    \n        Implements\n    \n    \n                OnDestroy\n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                task-form\n            \n\n            \n                styleUrls\n                task-form.component.css\n            \n\n\n\n            \n                templateUrl\n                ./task-form.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                dateCompletedForm\n                            \n                            \n                                isMediumScreen\n                            \n                            \n                                mainPropertiesForm\n                            \n                            \n                                minDueDate\n                            \n                            \n                                repeatPropertiesForm\n                            \n                            \n                                sub\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                checkError\n                            \n                            \n                                    Private\n                                checkFormError\n                            \n                            \n                                getFormData\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                task\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                formValid\n                            \n                        \n                    \n                \n\n                \n                    \n                        HostBindings\n                    \n                \n                \n                    \n                        \n                            \n                                class.marker-task-form\n                            \n                        \n                    \n                \n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(formBuilder: FormBuilder, utilsService: UtilsService)\n                    \n                \n                        \n                            \n                                Defined in src/app/tasks/form/task-form.component.ts:50\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        formBuilder\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        utilsService\n                                                  \n                                                        \n                                                                    UtilsService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        task\n                    \n                    \n                        The Task to edit. \n\n                            \n                            Type:    Task\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/tasks/form/task-form.component.ts:36\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        formValid\n                    \n                    \n                        Event emitted when form is checked\n\n                        $event type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/tasks/form/task-form.component.ts:38\n                            \n                        \n            \n        \n\n    \n    HostBindings        \n            \n                \n                    \n                        \n                        \n                            \n                            class.marker-task-form\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        class.marker-task-form:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tasks/form/task-form.component.ts:34\n                            \n                        \n\n\n            \n        \n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            checkError\n                            \n                            \n                        \n                    \n                \n                \n                    \ncheckError(property: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/tasks/form/task-form.component.ts:63\n                            \n                        \n\n\n                \n                    \n                            Checks the form for errors based on the given property when the property is updated on the\nform.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        property\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                The property to check for error.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            checkFormError\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        checkFormError(form: FormGroup, property: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/tasks/form/task-form.component.ts:81\n                            \n                        \n\n\n                \n                    \n                            Returns true if the form is invalid and the property of the given form is dirty or it has\nbeen touched.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        form\n                                                        \n                                                                    FormGroup\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                The form to validate.\n\n                                                        \n                                                \n                                                \n                                                        property\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                The property that was updated.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getFormData\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetFormData(form: FormGroup)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/tasks/form/task-form.component.ts:90\n                            \n                        \n\n\n                \n                    \n                            Returns the form data as an Observable from the given formGroup.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        form\n                                                        \n                                                                    FormGroup\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                The from whose data should be returned. \n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnDestroy\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnDestroy()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/tasks/form/task-form.component.ts:106\n                            \n                        \n\n\n                \n                    \n                            Unsubscribe from any subscriptions.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/tasks/form/task-form.component.ts:113\n                            \n                        \n\n\n                \n                    \n                            Initialize the component. Creates the formGroups required for the component.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            update\n                            \n                            \n                        \n                    \n                \n                \n                    \nupdate(property: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/tasks/form/task-form.component.ts:197\n                            \n                        \n\n\n                \n                    \n                            Handles updating the form validity when a property is updated on the form and emits the formValid\nevent.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        property\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            dateCompletedForm\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        dateCompletedForm:     FormGroup\n\n                    \n                \n                    \n                        \n                            Type :     FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tasks/form/task-form.component.ts:40\n                            \n                        \n\n                \n                    \n                        The form for the dateCompleted property. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isMediumScreen\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        isMediumScreen:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tasks/form/task-form.component.ts:46\n                            \n                        \n\n                \n                    \n                        Boolean to indicate if the screen size is medium or smaller (true if screen is medium or smaller). \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            mainPropertiesForm\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        mainPropertiesForm:     FormGroup\n\n                    \n                \n                    \n                        \n                            Type :     FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tasks/form/task-form.component.ts:42\n                            \n                        \n\n                \n                    \n                        The form for the main properties (name, priority, description, and dueDate). \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            minDueDate\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        minDueDate:     Date\n\n                    \n                \n                    \n                        \n                            Type :     Date\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tasks/form/task-form.component.ts:48\n                            \n                        \n\n                \n                    \n                        The minimum date the Task can be marked due (defaults to todays date if Task creating Task). \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            repeatPropertiesForm\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        repeatPropertiesForm:     FormGroup\n\n                    \n                \n                    \n                        \n                            Type :     FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tasks/form/task-form.component.ts:44\n                            \n                        \n\n                \n                    \n                        The form for the repeat properties (repeats, after). \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sub\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        sub:     Subscription\n\n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tasks/form/task-form.component.ts:50\n                            \n                        \n\n                \n                    \n                        The subscriptions for the component. \n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import * as moment from 'moment';\n\n/* angular libraries */\nimport { Component, EventEmitter, HostBinding, Input, OnDestroy, OnInit, Output } from '@angular/core';\nimport { FormGroup, Validators, FormBuilder } from '@angular/forms';\nimport { Observable, Subscription } from 'rxjs';\nimport 'rxjs/add/observable/of';\nimport 'rxjs/add/operator/map';\nimport 'rxjs/add/operator/switchMap';\n\n/* app */\nimport { Task } from '@tasks/shared/models/task.model';\nimport { UtilsService } from '@tasks/shared/services/utils.service';\n\n/**\n * Creates the form to create or modify a Task. A Task is required in the @Input property if modifying a\n * Task (no Task required when creating a Task). Complete and Pending Tasks can be modified using this form.\n * The following example is used to create a Task:\n * \n * \n * \n * The following example is used to modify a Task:\n * \n * \n */\n@Component({\n    selector: 'task-form',\n    templateUrl: './task-form.component.html',\n    styleUrls: ['./task-form.component.css']\n})\nexport class TaskFormComponent implements OnDestroy, OnInit {\n    \n    @HostBinding('class.marker-task-form') classMarker : boolean = true;\n    /** The Task to edit. */\n    @Input() task: Task;\n    /** Event emitted when form is checked*/\n    @Output() formValid: EventEmitter = new EventEmitter();\n    /** The form for the dateCompleted property. */\n    dateCompletedForm: FormGroup;\n    /** The form for the main properties (name, priority, description, and dueDate). */\n    mainPropertiesForm: FormGroup;\n    /** The form for the repeat properties (repeats, after). */\n    repeatPropertiesForm: FormGroup;\n    /** Boolean to indicate if the screen size is medium or smaller (true if screen is medium or smaller). */\n    isMediumScreen: boolean;\n    /** The minimum date the Task can be marked due (defaults to todays date if Task creating Task). */\n    minDueDate: Date;\n    /** The subscriptions for the component. */\n    sub: Subscription;\n\n    constructor(\n        private formBuilder: FormBuilder,\n        private utilsService: UtilsService\n    ) {}\n\n    /**\n     * Checks the form for errors based on the given property when the property is updated on the\n     * form.\n     * \n     * @param property The property to check for error.\n     */\n    checkError(property: string) {\n        if(property == 'repeats' || property == 'after') {\n            // if the given property is \"repeats\" or \"after\" then check the repeatPropertiesForm\n            return this.checkFormError(this.repeatPropertiesForm, property);\n        }\n        else {\n            // else check the mainPropertiesForm\n            return this.checkFormError(this.mainPropertiesForm, property);\n        }        \n    }\n\n    /**\n     * Returns true if the form is invalid and the property of the given form is dirty or it has\n     * been touched.\n     * \n     * @param form The form to validate.\n     * @param property The property that was updated.\n     */\n    private checkFormError(form: FormGroup, property: string): boolean {\n        return form.get(property).invalid && (form.get(property).dirty || form.get(property).touched);\n    }\n\n    /**\n     * Returns the form data as an Observable from the given formGroup.\n     * \n     * @param form The from whose data should be returned. \n     */\n    getFormData(form: FormGroup): Observable {\n        return Observable.of(form.value)\n            .switchMap(formData => \n                Observable.of(formData)\n                .map((formData) => {\n                    return {\n                        value: formData,\n                        status: formData.status\n                    } as any\n                })\n            );\n    }\n\n    /**\n     * Unsubscribe from any subscriptions.\n     */\n    ngOnDestroy() {\n        this.sub.unsubscribe();\n    }\n\n    /**\n     * Initialize the component. Creates the formGroups required for the component.\n     */\n    ngOnInit() {\n        if(!this.task) {\n            // if the @Input task is not defined then create a dummy task to initialize the form data\n            this.task = new Task();\n            // and set the minDueDate to todays date (not sure it makes sense to allow due dates in past)\n            this.minDueDate = new Date();\n        }\n        else {\n            // otherwise set the minDueDate to the dueDate for the Task\n            this.minDueDate = this.task.dueDate;\n        }\n\n        // initialize the form with the dateCompleted property\n        this.dateCompletedForm = this.formBuilder.group({\n            dateCompleted: [\n                {\n                    value: moment(this.task.dateCompleted, moment.ISO_8601, true).isValid() ? moment(this.task.dateCompleted, moment.ISO_8601, true).utc().toDate() : null,\n                    disabled: true\n                }\n            ]\n        })\n\n        // initialize the form with the main properties (name, priority, description, and dueDate)\n        this.mainPropertiesForm = this.formBuilder.group({\n            name: [\n                {\n                    value: this.task.name, \n                    disabled: false\n                }, \n                [Validators.required]\n            ],\n            priority : [\n                {\n                    value: this.task.priority || 'Low',\n                    disabled: false\n                },\n                [Validators.required]\n            ],\n            description: [\n                {\n                    value: this.task.description, \n                    disabled: false\n                }, \n                [Validators.required]\n            ],\n            due: [\n                {\n                    value: moment(this.task.dueDate, moment.ISO_8601, true).isValid() ? moment(this.task.dueDate, moment.ISO_8601, true).utc().toDate() : null, \n                    disabled: this.task.isComplete\n                },\n                [Validators.required]\n            ]\n        });\n\n        // initialize the form with the repeat properties (repeats and after)\n        this.repeatPropertiesForm = this.formBuilder.group({\n            repeats: [\n                {\n                    value: this.task.repeats || 'noRepeat',\n                    disabled: this.task.id != null && (this.task.repeats == null || this.task.repeats == 'noRepeat')\n                },\n                [Validators.required]\n            ],\n            after: [\n                {\n                    value: this.task.endsAfter || '',\n                    disabled: this.task.repeats === 'noRepeat'\n                }\n            ]\n        });\n\n        this.sub = new Subscription();\n        const sub = this.utilsService.isMediumScreen.subscribe((isMediumScreen: boolean) => {\n            this.isMediumScreen = isMediumScreen;\n        });\n        this.sub.add(sub);\n    }\n\n    /**\n     * Handles updating the form validity when a property is updated on the form and emits the formValid\n     * event.\n     * \n     * @property property The form field that was updated\n     */\n    update(property: string) {\n        if(property == 'repeats') {\n            // enable or disable the repeatPropertiesForm based on the repeats value\n            let after = this.repeatPropertiesForm.get('after');\n            if(this.repeatPropertiesForm.get(property).value === 'noRepeat') {\n                // disable the repeatPropertiesForm if the repeats value is \"noRepeat\"\n                after.disable();\n                after.clearValidators();\n                after.updateValueAndValidity();\n            }\n            else {\n                // otherwise enable the repeatProperties form\n                after.enable();\n                after.setValidators([Validators.required]);\n                after.updateValueAndValidity();\n            }\n        }\n\n        // update the form validity and emit the formValid event\n        let formsValid: boolean;\n        if(this.task.isComplete || (!this.task.isComplete && this.repeatPropertiesForm.get('repeats').value == 'noRepeat')) {\n            // only need to check mainPropertiesForm is valid when task is complete or it does not repeat\n            formsValid = this.mainPropertiesForm.valid;\n        }\n        else {\n            // otherwise check both the mainPropertiesForm and repeatPropertiesForm\n            formsValid = this.mainPropertiesForm.valid && this.repeatPropertiesForm.valid;\n        }\n        this.formValid.emit(formsValid);\n    }\n}\n\n    \n\n    \n        \n    \n        Task Name\n        \n        You must enter a name   \n    \n    \n        Priority\n        \n            Low\n            Medium\n            High\n            Urgent\n        \n    \n    \n        Description\n        \n        You must enter a description   \n    \n    \n        Due Date\n        \n        \n        You must enter a due date\n        The date the task is due\n    \n    \n\n    \n    \n        \n        \n            Date Completed\n            \n            \n            The date the task is completed\n        \n        \n    \n\n    \n    \n        \n        \n            \n                Repeat\n                \n                    Does not repeat\n                    Daily\n                    Weekly\n                    Monthly\n                    Yearly\n                \n            \n            \n                End After\n                \n                Number of occurrences\n                You must enter a number\n            \n        \n    \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            Task Name                You must enter a name                   Priority                    Low            Medium            High            Urgent                        Description                You must enter a description                   Due Date                        You must enter a due date        The date the task is due                                            Date Completed                                    The date the task is completed                                                                        Repeat                                    Does not repeat                    Daily                    Weekly                    Monthly                    Yearly                                                        End After                                Number of occurrences                You must enter a number                        '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ButtonBarComponent', 'selector': 'button-bar'},{'name': 'ButtonsComponent', 'selector': 'buttons'},{'name': 'CompleteTaskComponent', 'selector': 'complete-task'},{'name': 'CompleteTasksTableComponent', 'selector': 'complete-tasks-table'},{'name': 'ConfirmDeleteTaskComponent', 'selector': 'confirm-delete'},{'name': 'CreateTaskComponent', 'selector': 'create-task'},{'name': 'EditTaskComponent', 'selector': 'edit-task'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'ListItemComponent', 'selector': 'list-item'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'PendingTasksTableComponent', 'selector': 'pending-tasks-table'},{'name': 'RecurringTaskComponent', 'selector': 'recurring-task'},{'name': 'SidenavTasksComponent', 'selector': 'sidenav-tasks'},{'name': 'TaskFormComponent', 'selector': 'task-form'},{'name': 'TasksComponent', 'selector': 'tasks-root'},{'name': 'TasksFilterComponent', 'selector': 'tasks-filter'},{'name': 'TasksTableComponent', 'selector': 'tasks-table'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TaskFormComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TaskFormModule.html":{"url":"modules/TaskFormModule.html","title":"module - TaskFormModule","body":"\n                   \n\n\n\n\n  Modules\n  TaskFormModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_TaskFormModule\n\n\n\ncluster_TaskFormModule_declarations\n\n\n\ncluster_TaskFormModule_exports\n\n\n\n\nTaskFormComponent\n\nTaskFormComponent\n\n\n\nTaskFormModule\n\nTaskFormModule\n\nTaskFormModule -->\n\nTaskFormComponent->TaskFormModule\n\n\n\n\n\nTaskFormComponent \n\nTaskFormComponent \n\nTaskFormComponent  -->\n\nTaskFormModule->TaskFormComponent \n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/tasks/form/task-form.module.ts\n        \n\n\n            \n                Description\n            \n            \n                Defines the components, services, and modules required for the Task form.\n\n            \n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                TaskFormComponent\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    TaskFormComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        /* angular libraries */\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatDatepickerModule, MatFormFieldModule, MatInputModule, MatNativeDateModule, MatSelectModule } from '@angular/material';\n\n/* module */\nimport { TaskFormComponent } from '@tasks/form/task-form.component';\n\n/**\n * Defines the components, services, and modules required for the Task form.\n */\n@NgModule({\n    declarations: [\n        TaskFormComponent\n    ],\n    imports: [\n        /* angular libraries */\n        CommonModule,\n        FlexLayoutModule,\n        FormsModule,\n        MatDatepickerModule,\n        MatFormFieldModule,\n        MatInputModule, \n        MatNativeDateModule,\n        MatSelectModule, \n        ReactiveFormsModule\n    ],\n    exports : [\n        TaskFormComponent\n    ]\n})\nexport class TaskFormModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TasksButtonBarModule.html":{"url":"modules/TasksButtonBarModule.html","title":"module - TasksButtonBarModule","body":"\n                   \n\n\n\n\n  Modules\n  TasksButtonBarModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_TasksButtonBarModule\n\n\n\ncluster_TasksButtonBarModule_declarations\n\n\n\ncluster_TasksButtonBarModule_imports\n\n\n\ncluster_TasksButtonBarModule_exports\n\n\n\n\nButtonBarComponent\n\nButtonBarComponent\n\n\n\nTasksButtonBarModule\n\nTasksButtonBarModule\n\nTasksButtonBarModule -->\n\nButtonBarComponent->TasksButtonBarModule\n\n\n\n\n\nButtonBarComponent \n\nButtonBarComponent \n\nButtonBarComponent  -->\n\nTasksButtonBarModule->ButtonBarComponent \n\n\n\n\n\nTasksButtonsModule\n\nTasksButtonsModule\n\nTasksButtonBarModule -->\n\nTasksButtonsModule->TasksButtonBarModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/tasks/button-bar/tasks-button-bar.module.ts\n        \n\n\n            \n                Description\n            \n            \n                Defines the components, services, and modules required for the button\nbar.\n\n            \n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                ButtonBarComponent\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    TasksButtonsModule\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    ButtonBarComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        /* angular libraries */\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { MatButtonModule, MatDialogModule, MatPaginatorModule } from '@angular/material';\nimport { RouterModule } from '@angular/router';\n\n/* fontawesome */\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\nimport { library } from '@fortawesome/fontawesome-svg-core'\nimport { faCheckSquare } from '@fortawesome/free-regular-svg-icons';\nimport { faArrowLeft, faCheck, faEdit, faPaste, faTrash } from '@fortawesome/free-solid-svg-icons';\n\n// Add icons to library for convenient access in components\nlibrary.add(faArrowLeft, faCheck, faCheckSquare, faEdit, faPaste, faTrash);\n\n/* module */\nimport { ButtonBarComponent } from './button-bar.component';\nimport { TasksButtonsModule } from '@tasks/buttons/tasks-buttons.module'; \n\n/**\n * Defines the components, services, and modules required for the button\n * bar.\n */\n@NgModule({\n    declarations: [\n        ButtonBarComponent\n    ],\n    imports: [\n        /* angular libraries */\n        CommonModule,\n        FlexLayoutModule,\n        MatButtonModule,\n        MatDialogModule,\n        MatPaginatorModule,\n        RouterModule,\n\n        FontAwesomeModule,\n        \n        TasksButtonsModule\n    ],\n    exports : [\n        ButtonBarComponent\n    ]\n})\nexport class TasksButtonBarModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TasksButtonsModule.html":{"url":"modules/TasksButtonsModule.html","title":"module - TasksButtonsModule","body":"\n                   \n\n\n\n\n  Modules\n  TasksButtonsModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_TasksButtonsModule\n\n\n\ncluster_TasksButtonsModule_declarations\n\n\n\ncluster_TasksButtonsModule_exports\n\n\n\n\nButtonsComponent\n\nButtonsComponent\n\n\n\nTasksButtonsModule\n\nTasksButtonsModule\n\nTasksButtonsModule -->\n\nButtonsComponent->TasksButtonsModule\n\n\n\n\n\nButtonsComponent \n\nButtonsComponent \n\nButtonsComponent  -->\n\nTasksButtonsModule->ButtonsComponent \n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/tasks/buttons/tasks-buttons.module.ts\n        \n\n\n            \n                Description\n            \n            \n                Defines the components, services, and modules required for main buttons\nto manage one or more Tasks. The main management capabilities for Tasks \ninclude completing, deleting, and editing.\n\n            \n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                ButtonsComponent\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    ButtonsComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        /* angular libraries */\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { MatButtonModule, MatDialogModule } from '@angular/material';\nimport { RouterModule } from '@angular/router';\n\n/* fontawesome */\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\nimport { library } from '@fortawesome/fontawesome-svg-core'\nimport { faCheckSquare } from '@fortawesome/free-regular-svg-icons';\nimport { faArrowLeft, faCheck, faEdit, faPaste, faTrash } from '@fortawesome/free-solid-svg-icons';\n\n// Add icons to library for convenient access in components\nlibrary.add(faArrowLeft, faCheck, faCheckSquare, faEdit, faPaste, faTrash);\n\n/* app */\nimport { ButtonsComponent } from '@tasks/buttons/buttons.component';\n\n/**\n * Defines the components, services, and modules required for main buttons\n * to manage one or more Tasks. The main management capabilities for Tasks \n * include completing, deleting, and editing.\n */\n@NgModule({\n    declarations: [\n        ButtonsComponent\n    ],\n    imports: [\n        /* angular libraries */\n        CommonModule,\n        FlexLayoutModule,\n        MatButtonModule,\n        MatDialogModule,\n        RouterModule,\n\n        FontAwesomeModule\n    ],\n    exports : [\n        ButtonsComponent\n    ]\n})\nexport class TasksButtonsModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TasksComponent.html":{"url":"components/TasksComponent.html","title":"component - TasksComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TasksComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/tasks/tasks.component.ts\n\n\n    \n        Description\n    \n    \n        Creates the main layout for Tasks. The main layout currently\nconsists of the side menu and router-outlet.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                tasks-root\n            \n\n            \n                styleUrls\n                tasks.component.css\n            \n\n\n\n            \n                templateUrl\n                ./tasks.component.html\n            \n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n/**\n * Creates the main layout for Tasks. The main layout currently\n * consists of the side menu and router-outlet.\n */\n@Component({\n    selector: 'tasks-root',\n    templateUrl: './tasks.component.html',\n    styleUrls: ['./tasks.component.css']\n})\nexport class TasksComponent {}\n\n    \n\n    \n        \n    \n        \n    \n    \n        \n    \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ButtonBarComponent', 'selector': 'button-bar'},{'name': 'ButtonsComponent', 'selector': 'buttons'},{'name': 'CompleteTaskComponent', 'selector': 'complete-task'},{'name': 'CompleteTasksTableComponent', 'selector': 'complete-tasks-table'},{'name': 'ConfirmDeleteTaskComponent', 'selector': 'confirm-delete'},{'name': 'CreateTaskComponent', 'selector': 'create-task'},{'name': 'EditTaskComponent', 'selector': 'edit-task'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'ListItemComponent', 'selector': 'list-item'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'PendingTasksTableComponent', 'selector': 'pending-tasks-table'},{'name': 'RecurringTaskComponent', 'selector': 'recurring-task'},{'name': 'SidenavTasksComponent', 'selector': 'sidenav-tasks'},{'name': 'TaskFormComponent', 'selector': 'task-form'},{'name': 'TasksComponent', 'selector': 'tasks-root'},{'name': 'TasksFilterComponent', 'selector': 'tasks-filter'},{'name': 'TasksTableComponent', 'selector': 'tasks-table'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TasksComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TasksDialogModule.html":{"url":"modules/TasksDialogModule.html","title":"module - TasksDialogModule","body":"\n                   \n\n\n\n\n  Modules\n  TasksDialogModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_TasksDialogModule\n\n\n\ncluster_TasksDialogModule_imports\n\n\n\n\nCompleteTaskModule\n\nCompleteTaskModule\n\n\n\nTasksDialogModule\n\nTasksDialogModule\n\nTasksDialogModule -->\n\nCompleteTaskModule->TasksDialogModule\n\n\n\n\n\nConfirmDeleteTaskModule\n\nConfirmDeleteTaskModule\n\nTasksDialogModule -->\n\nConfirmDeleteTaskModule->TasksDialogModule\n\n\n\n\n\nTaskFormModule\n\nTaskFormModule\n\nTasksDialogModule -->\n\nTaskFormModule->TasksDialogModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/tasks/dialogs/tasks-dialog.module.ts\n        \n\n\n            \n                Description\n            \n            \n                Defines the components, services, and modules required for dialogs.\n\n            \n        \n\n        \n            \n                \n                    Imports\n                    \n                            \n                                    CompleteTaskModule\n                            \n                            \n                                    ConfirmDeleteTaskModule\n                            \n                            \n                                    TaskFormModule\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        /* angular libraries */\nimport { NgModule } from '@angular/core';\n\n/* module */\nimport { CompleteTaskModule } from '@tasks/dialogs/complete-task/complete-task.module';\nimport { ConfirmDeleteTaskModule } from '@tasks/dialogs/confirm-delete-task/confirm-delete-task.module';\nimport { TaskFormModule } from '@tasks/form/task-form.module';\n\n/**\n * Defines the components, services, and modules required for dialogs.\n */\n@NgModule({\n    imports: [\n        /* app modules */\n        CompleteTaskModule,\n        ConfirmDeleteTaskModule,\n        TaskFormModule\n    ]\n})\nexport class TasksDialogModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TasksFilterComponent.html":{"url":"components/TasksFilterComponent.html","title":"component - TasksFilterComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TasksFilterComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/tasks/filter/tasks-filter.component.ts\n\n\n    \n        Description\n    \n    \n        Creates a small form with a single input element that contains a datepicker and\ncustom \"select\" functionality using a dropdown menu. The input element allows\nthe user to enter text or dates from the datepicker, and select a value from \nthe dropdown menu (over due, due today, or due tomorrow) to filter/search Tasks.\n\n    \n\n\n    \n        Implements\n    \n    \n                AfterViewInit\n                OnDestroy\n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                tasks-filter\n            \n\n            \n                styleUrls\n                tasks-filter.component.css\n            \n\n\n\n            \n                templateUrl\n                ./tasks-filter.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                isMediumScreen\n                            \n                            \n                                sub\n                            \n                            \n                                taskFilterInput\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                clear\n                            \n                            \n                                ngAfterViewInit\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                updateTaskFilter\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(taskService: TaskService, utilsService: UtilsService)\n                    \n                \n                        \n                            \n                                Defined in src/app/tasks/filter/tasks-filter.component.ts:28\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        taskService\n                                                  \n                                                        \n                                                                    TaskService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        utilsService\n                                                  \n                                                        \n                                                                    UtilsService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            clear\n                            \n                            \n                        \n                    \n                \n                \n                    \nclear()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/tasks/filter/tasks-filter.component.ts:38\n                            \n                        \n\n\n                \n                    \n                            Clears the the input and the Task filter in the TaskService.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngAfterViewInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngAfterViewInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/tasks/filter/tasks-filter.component.ts:66\n                            \n                        \n\n\n                \n                    \n                            Creates observables for taskFilterInput \"keyup\" event (when user is typing \ninto input element) and dueButtons \"click\" EventEmitter after the \ncomponent has been fully initialized. \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnDestroy\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnDestroy()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/tasks/filter/tasks-filter.component.ts:46\n                            \n                        \n\n\n                \n                    \n                            Unsubscribe from any subscriptions.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/tasks/filter/tasks-filter.component.ts:53\n                            \n                        \n\n\n                \n                    \n                            Initialize the component\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updateTaskFilter\n                            \n                            \n                        \n                    \n                \n                \n                    \nupdateTaskFilter()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/tasks/filter/tasks-filter.component.ts:86\n                            \n                        \n\n\n                \n                    \n                            Updates the taskFilter observable in the TaskService so that any elements\nlistening for a change to the filter can react accordingly. This method \nis used by the dateChange EventEmitter from the datepicker and the \"keyup\" \nevent defined for the taskFilterInput element. \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isMediumScreen\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        isMediumScreen:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tasks/filter/tasks-filter.component.ts:26\n                            \n                        \n\n                \n                    \n                        Boolean to indicate if the screen size is medium or smaller (true if screen is medium or smaller). \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sub\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        sub:     Subscription\n\n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tasks/filter/tasks-filter.component.ts:28\n                            \n                        \n\n                \n                    \n                        The subscriptions for the component. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            taskFilterInput\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        taskFilterInput:     ElementRef\n\n                    \n                \n                    \n                        \n                            Type :     ElementRef\n\n                        \n                    \n                    \n                        \n                            Decorators : ViewChild\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tasks/filter/tasks-filter.component.ts:24\n                            \n                        \n\n                \n                    \n                        The input element to filter Tasks. \n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { AfterViewInit, Component, ElementRef, OnDestroy, OnInit, ViewChild } from '@angular/core';\nimport { fromEvent, Subscription } from 'rxjs';\nimport { debounceTime, distinctUntilChanged } from 'rxjs/operators';\n\n/* app */\nimport { TaskService } from '@tasks/shared/services/task.service';\nimport { UtilsService } from '@tasks/shared/services/utils.service';\n\n/**\n * Creates a small form with a single input element that contains a datepicker and\n * custom \"select\" functionality using a dropdown menu. The input element allows\n * the user to enter text or dates from the datepicker, and select a value from \n * the dropdown menu (over due, due today, or due tomorrow) to filter/search Tasks.\n */\n@Component({\n    selector: 'tasks-filter',\n    templateUrl: './tasks-filter.component.html',\n    styleUrls: ['./tasks-filter.component.css']\n})\nexport class TasksFilterComponent implements AfterViewInit, OnDestroy, OnInit {\n\n    /** The input element to filter Tasks. */\n    @ViewChild('taskFilter') taskFilterInput: ElementRef;\n    /** Boolean to indicate if the screen size is medium or smaller (true if screen is medium or smaller). */\n    isMediumScreen: boolean;\n    /** The subscriptions for the component. */\n    sub: Subscription;\n\n    constructor(\n        private taskService: TaskService,\n        private utilsService: UtilsService\n    ) {}\n\n    /**\n     * Clears the the input and the Task filter in the TaskService.\n     */\n    clear() {\n        this.taskFilterInput.nativeElement.value = '';\n        this.updateTaskFilter();\n    }\n\n    /**\n     * Unsubscribe from any subscriptions.\n     */\n    ngOnDestroy() {\n        this.sub.unsubscribe();\n    }\n\n    /**\n     * Initialize the component\n     */\n    ngOnInit() {\n        this.sub = new Subscription();\n        const sub = this.utilsService.isMediumScreen.subscribe((isMediumScreen: boolean) => {\n            this.isMediumScreen = isMediumScreen;\n        });\n        this.sub.add(sub);\n    }\n\n    /**\n     * Creates observables for taskFilterInput \"keyup\" event (when user is typing \n     * into input element) and dueButtons \"click\" EventEmitter after the \n     * component has been fully initialized. \n     */\n    ngAfterViewInit() {\n        // create observable for the \"keyup\" event on the main input element but\n        // delay values emitted to prevent server overload (with debouceTime) and\n        // only emit when the current value is different from the last\n        fromEvent(this.taskFilterInput.nativeElement,'keyup')\n            .pipe(\n                debounceTime(150),\n                distinctUntilChanged()\n            ).subscribe(() => {\n                // update task filter observable in TaskService\n                this.updateTaskFilter();\n            });\n    }\n\n    /**\n     * Updates the taskFilter observable in the TaskService so that any elements\n     * listening for a change to the filter can react accordingly. This method \n     * is used by the dateChange EventEmitter from the datepicker and the \"keyup\" \n     * event defined for the taskFilterInput element. \n     */\n    updateTaskFilter() {\n        this.taskService.setTaskFilter(this.taskFilterInput.nativeElement.value);\n    }\n}\n\n    \n\n    \n        \n    \n         Search tasks \n          \n        \n        \n            \n        \n    \n      \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '             Search tasks                                                         '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ButtonBarComponent', 'selector': 'button-bar'},{'name': 'ButtonsComponent', 'selector': 'buttons'},{'name': 'CompleteTaskComponent', 'selector': 'complete-task'},{'name': 'CompleteTasksTableComponent', 'selector': 'complete-tasks-table'},{'name': 'ConfirmDeleteTaskComponent', 'selector': 'confirm-delete'},{'name': 'CreateTaskComponent', 'selector': 'create-task'},{'name': 'EditTaskComponent', 'selector': 'edit-task'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'ListItemComponent', 'selector': 'list-item'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'PendingTasksTableComponent', 'selector': 'pending-tasks-table'},{'name': 'RecurringTaskComponent', 'selector': 'recurring-task'},{'name': 'SidenavTasksComponent', 'selector': 'sidenav-tasks'},{'name': 'TaskFormComponent', 'selector': 'task-form'},{'name': 'TasksComponent', 'selector': 'tasks-root'},{'name': 'TasksFilterComponent', 'selector': 'tasks-filter'},{'name': 'TasksTableComponent', 'selector': 'tasks-table'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TasksFilterComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TasksFilterModule.html":{"url":"modules/TasksFilterModule.html","title":"module - TasksFilterModule","body":"\n                   \n\n\n\n\n  Modules\n  TasksFilterModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_TasksFilterModule\n\n\n\ncluster_TasksFilterModule_declarations\n\n\n\ncluster_TasksFilterModule_exports\n\n\n\n\nTasksFilterComponent\n\nTasksFilterComponent\n\n\n\nTasksFilterModule\n\nTasksFilterModule\n\nTasksFilterModule -->\n\nTasksFilterComponent->TasksFilterModule\n\n\n\n\n\nTasksFilterComponent \n\nTasksFilterComponent \n\nTasksFilterComponent  -->\n\nTasksFilterModule->TasksFilterComponent \n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/tasks/filter/tasks-filter.module.ts\n        \n\n\n            \n                Description\n            \n            \n                Defines the components, services, and modules required to filter Tasks.\n\n            \n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                TasksFilterComponent\n                            \n                    \n                \n                \n                    EntryComponents\n                    \n                            \n                                TasksFilterComponent\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    TasksFilterComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        /* angular libraries */\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { MatButtonModule, MatDatepickerModule, MatFormFieldModule, MatInputModule, MatNativeDateModule, MatTooltipModule } from '@angular/material';\n\n/* fontawesome */\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\nimport { library } from '@fortawesome/fontawesome-svg-core'\nimport { faSearch, faTimes } from '@fortawesome/free-solid-svg-icons';\n\n// Add icons to library for convenient access in components\nlibrary.add(faSearch, faTimes);\n\n/* module */\nimport { TasksFilterComponent } from '@tasks/filter/tasks-filter.component';\n\n/**\n * Defines the components, services, and modules required to filter Tasks.\n */\n@NgModule({\n    declarations: [\n        TasksFilterComponent\n    ],\n    imports: [\n        /* angular libraries */\n        CommonModule,\n        FlexLayoutModule,\n        MatButtonModule, \n        MatDatepickerModule, \n        MatFormFieldModule,\n        MatInputModule, \n        MatNativeDateModule,\n        MatTooltipModule, \n\n        FontAwesomeModule\n    ],\n    exports: [\n        TasksFilterComponent\n    ],\n    entryComponents: [\n        TasksFilterComponent\n    ]\n})\nexport class TasksFilterModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TasksModule.html":{"url":"modules/TasksModule.html","title":"module - TasksModule","body":"\n                   \n\n\n\n\n  Modules\n  TasksModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_TasksModule\n\n\n\ncluster_TasksModule_declarations\n\n\n\ncluster_TasksModule_imports\n\n\n\n\nTasksComponent\n\nTasksComponent\n\n\n\nTasksModule\n\nTasksModule\n\nTasksModule -->\n\nTasksComponent->TasksModule\n\n\n\n\n\nEditTaskModule\n\nEditTaskModule\n\nTasksModule -->\n\nEditTaskModule->TasksModule\n\n\n\n\n\nSidenavTasksModule\n\nSidenavTasksModule\n\nTasksModule -->\n\nSidenavTasksModule->TasksModule\n\n\n\n\n\nTasksRoutingModule\n\nTasksRoutingModule\n\nTasksModule -->\n\nTasksRoutingModule->TasksModule\n\n\n\n\n\nTasksTableModule\n\nTasksTableModule\n\nTasksModule -->\n\nTasksTableModule->TasksModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/tasks/tasks.module.ts\n        \n\n\n            \n                Description\n            \n            \n                Defines the components, services, and modules required to create and\nmanage Tasks.\n\n            \n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                TasksComponent\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    EditTaskModule\n                            \n                            \n                                    SidenavTasksModule\n                            \n                            \n                                    TasksRoutingModule\n                            \n                            \n                                    TasksTableModule\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        /* angular libraries */\nimport { CommonModule } from '@angular/common';\nimport { ModuleWithProviders, NgModule } from '@angular/core';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatSidenavModule } from '@angular/material';\nimport { RouterModule } from '@angular/router';\n\n/* module */\nimport { TasksComponent } from './tasks.component';\nimport { TasksRoutingModule } from './tasks.routing';\nimport { EditTaskModule } from '@tasks/edit/edit-task.module';\nimport { TaskService } from '@tasks/shared/services/task.service';\nimport { UtilsService } from '@tasks/shared/services/utils.service';\nimport { SidenavTasksModule } from '@tasks/sidenav/sidenav-tasks.module';\nimport { TasksTableModule } from '@tasks/table/tasks-table.module';\n\n/**\n * Defines the components, services, and modules required to create and\n * manage Tasks.\n */\n@NgModule({\n    declarations: [\n        TasksComponent\n    ],\n    imports: [\n        /* angular libraries */\n        CommonModule,\n        FlexLayoutModule,\n        FormsModule,\n        MatSidenavModule,\n        ReactiveFormsModule,\n        RouterModule,\n\n        /* Task modules */\n        EditTaskModule,\n        TasksRoutingModule,\n        TasksTableModule,\n        SidenavTasksModule,\n    ]\n})\nexport class TasksModule {\n\n    /**\n     * Returns a wrapper around this module that associates it with the\n     * TaskService and UtilsService providers so a single instance of each\n     * service can be loaded and shared between any modules in the app.\n     */\n    static forRoot(): ModuleWithProviders {\n        return {\n            ngModule: TasksModule,\n            providers: [\n                TaskService,\n                UtilsService\n            ]\n        };\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TasksRoutingModule.html":{"url":"modules/TasksRoutingModule.html","title":"module - TasksRoutingModule","body":"\n                   \n\n\n\n\n  Modules\n  TasksRoutingModule\n\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/tasks/tasks.routing.ts\n        \n\n\n        \n\n        \n            \n            \n        \n    \n\n\n    \n        /* angular libraries */\nimport { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n/* Task module components */\nimport { EditTaskComponent } from '@tasks/edit/edit-task.component';\nimport { CompleteTasksTableComponent } from '@tasks/table/complete-tasks-table.component';\nimport { PendingTasksTableComponent } from '@tasks/table/pending-tasks-table.component';\nimport { TasksComponent } from '@tasks/tasks.component';\n\n/* The routes within the Tasks module. Defaults to the PendingTasksTableComponent. */\nconst routes: Routes = [\n    {\n        path: 'tasks',\n        component: TasksComponent,\n        children: [\n            {\n                path:'pending',\n                component: PendingTasksTableComponent\n            },\n            {\n                path:'complete',\n                component: CompleteTasksTableComponent\n            },\n            {\n                path: '',\n                pathMatch: 'full',\n                redirectTo: 'pending'\n            },\n            {\n                path:':id',\n                component: EditTaskComponent,              \n            }\n        ]\n    }\n];\n\n/**\n * The router module for the Tasks module.\n */\n@NgModule({\n    imports: [RouterModule.forChild(routes)],\n    exports: [RouterModule]\n})\nexport class TasksRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TasksTableModule.html":{"url":"modules/TasksTableModule.html","title":"module - TasksTableModule","body":"\n                   \n\n\n\n\n  Modules\n  TasksTableModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_TasksTableModule\n\n\n\ncluster_TasksTableModule_declarations\n\n\n\ncluster_TasksTableModule_imports\n\n\n\n\nCompleteTasksTableComponent\n\nCompleteTasksTableComponent\n\n\n\nTasksTableModule\n\nTasksTableModule\n\nTasksTableModule -->\n\nCompleteTasksTableComponent->TasksTableModule\n\n\n\n\n\nPendingTasksTableComponent\n\nPendingTasksTableComponent\n\nTasksTableModule -->\n\nPendingTasksTableComponent->TasksTableModule\n\n\n\n\n\nTasksTableComponent\n\nTasksTableComponent\n\nTasksTableModule -->\n\nTasksTableComponent->TasksTableModule\n\n\n\n\n\nTasksButtonBarModule\n\nTasksButtonBarModule\n\nTasksTableModule -->\n\nTasksButtonBarModule->TasksTableModule\n\n\n\n\n\nTasksButtonsModule\n\nTasksButtonsModule\n\nTasksTableModule -->\n\nTasksButtonsModule->TasksTableModule\n\n\n\n\n\nTasksDialogModule\n\nTasksDialogModule\n\nTasksTableModule -->\n\nTasksDialogModule->TasksTableModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/tasks/table/tasks-table.module.ts\n        \n\n\n            \n                Description\n            \n            \n                Defines the components, services, and modules required to manage and view\nTasks.\n\n            \n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                CompleteTasksTableComponent\n                            \n                            \n                                PendingTasksTableComponent\n                            \n                            \n                                TasksTableComponent\n                            \n                    \n                \n                \n                    EntryComponents\n                    \n                            \n                                CompleteTasksTableComponent\n                            \n                            \n                                PendingTasksTableComponent\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    TasksButtonBarModule\n                            \n                            \n                                    TasksButtonsModule\n                            \n                            \n                                    TasksDialogModule\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        /* angular libraries */\nimport { CommonModule } from '@angular/common';\nimport { ModuleWithProviders, NgModule } from '@angular/core';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatButtonModule, MatCheckboxModule, MatPaginatorModule, MatProgressSpinnerModule, MatSortModule, MatTableModule, MatSnackBarModule } from '@angular/material';\nimport { RouterModule } from '@angular/router';\n\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\nimport { library } from '@fortawesome/fontawesome-svg-core'\nimport { faCheckSquare } from '@fortawesome/free-regular-svg-icons';\nimport { faAngleUp, faCheck, faEdit, faTrash } from '@fortawesome/free-solid-svg-icons';\n\n// Add icons to fortawesome/fontawesome-svg-core library for convenient access in components\nlibrary.add(faAngleUp, faCheck, faCheckSquare, faEdit, faTrash);\n\n/* components */\nimport { CompleteTasksTableComponent } from '@tasks/table/complete-tasks-table.component';\nimport { PendingTasksTableComponent } from '@tasks/table/pending-tasks-table.component';\nimport { TasksTableComponent } from '@tasks/table/tasks-table.component';\n\n/* Task modules */\nimport { TasksButtonBarModule } from '@tasks/button-bar/tasks-button-bar.module';\nimport { TasksButtonsModule } from '@tasks/buttons/tasks-buttons.module';\nimport { TasksDialogModule } from '@tasks/dialogs/tasks-dialog.module';\n\n/**\n * Defines the components, services, and modules required to manage and view\n * Tasks.\n */\n@NgModule({\n    declarations: [\n        CompleteTasksTableComponent,\n        PendingTasksTableComponent,\n        TasksTableComponent\n    ],\n    imports: [\n        /* angular libraries */\n        CommonModule,\n        FlexLayoutModule,\n        FormsModule,\n        MatButtonModule, \n        MatCheckboxModule,\n        MatPaginatorModule, \n        MatProgressSpinnerModule, \n        MatSortModule, \n        MatTableModule, \n        MatSnackBarModule,\n        ReactiveFormsModule,\n        RouterModule,\n\n        FontAwesomeModule,\n\n        /* Task modules */\n        TasksButtonBarModule,\n        TasksButtonsModule,\n        TasksDialogModule\n    ],\n    entryComponents: [\n        CompleteTasksTableComponent,\n        PendingTasksTableComponent,\n    ]\n})\nexport class TasksTableModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UtilsService.html":{"url":"injectables/UtilsService.html","title":"injectable - UtilsService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  UtilsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/tasks/shared/services/utils.service.ts\n        \n\n            \n                Description\n            \n            \n                Manages utility methods that can be shared across components.\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                _sidenavMenuChanges\n                            \n                            \n                                    Readonly\n                                isMediumScreen\n                            \n                            \n                                    Protected\n                                isMediumScreenSource\n                            \n                            \n                                    Readonly\n                                sidenavMenuChanges\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                fullScreenDialogSub\n                            \n                            \n                                toggleSidenavMenu\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(breakpointObserver: BreakpointObserver, logger: LoggerService)\n                    \n                \n                        \n                            \n                                Defined in src/app/tasks/shared/services/utils.service.ts:26\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        breakpointObserver\n                                                  \n                                                        \n                                                                    BreakpointObserver\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        logger\n                                                  \n                                                        \n                                                                    LoggerService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            fullScreenDialogSub\n                            \n                            \n                        \n                    \n                \n                \n                    \nfullScreenDialogSub(dialogRef: MatDialogRef, largeSize: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/tasks/shared/services/utils.service.ts:48\n                            \n                        \n\n\n                \n                    \n                            Sets the given dialog to full screen on medium or small devices.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        dialogRef\n                                                        \n                                                                    MatDialogRef\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                        \n                                                                The dialog to update. \n\n                                                        \n                                                \n                                                \n                                                        largeSize\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                '70%'\n                                                        \n\n                                                        \n                                                                The width and height to set for large screens.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            toggleSidenavMenu\n                            \n                            \n                        \n                    \n                \n                \n                    \ntoggleSidenavMenu(event: SidenavMenuEvent)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/tasks/shared/services/utils.service.ts:68\n                            \n                        \n\n\n                \n                    \n                            Updates the sidenav menu state.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        event\n                                                        \n                                                                    SidenavMenuEvent\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                The state to set the sidenav menu to. \n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            _sidenavMenuChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _sidenavMenuChanges:     \n\n                    \n                \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tasks/shared/services/utils.service.ts:22\n                            \n                        \n\n                \n                    \n                        Tracks the state of the sidenav menu (Collapse or Expand). \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            isMediumScreen\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        isMediumScreen:     Observable\n\n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tasks/shared/services/utils.service.ts:24\n                            \n                        \n\n                \n                    \n                        Observable for whether the screen is medium or smaller (true if medium or smaller, otherwise false). \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            isMediumScreenSource\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        isMediumScreenSource:     BehaviorSubject\n\n                    \n                \n                    \n                        \n                            Type :     BehaviorSubject\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tasks/shared/services/utils.service.ts:20\n                            \n                        \n\n                \n                    \n                        Tracks whether the screen is medium or smaller. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            sidenavMenuChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        sidenavMenuChanges:     Observable\n\n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                    \n                        \n                            Default value : this._sidenavMenuChanges\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tasks/shared/services/utils.service.ts:26\n                            \n                        \n\n                \n                    \n                        Observale for changes to the sidenav. \n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Breakpoints, BreakpointObserver, BreakpointState } from '@angular/cdk/layout';\nimport { MatDialogRef } from '@angular/material';\nimport { BehaviorSubject, Observable, Subject, Subscription } from 'rxjs';\n\n/* app */\nimport { LoggerService } from 'app/core/services/logger.service';\n\n/* The optional states of the sidenav. */\nexport type SidenavMenuEvent = \"Collapse\" | \"Expand\"\n\n/**\n * Manages utility methods that can be shared across components.\n */\n@Injectable()\nexport class UtilsService {\n\n    /** Tracks whether the screen is medium or smaller. */\n    protected isMediumScreenSource: BehaviorSubject;\n    /** Tracks the state of the sidenav menu (Collapse or Expand). */\n    protected _sidenavMenuChanges = new Subject();\n    /** Observable for whether the screen is medium or smaller (true if medium or smaller, otherwise false). */\n    readonly isMediumScreen: Observable;\n    /** Observale for changes to the sidenav. */\n    readonly sidenavMenuChanges: Observable = this._sidenavMenuChanges;\n\n    constructor(private breakpointObserver: BreakpointObserver, private logger: LoggerService) {\n        this.isMediumScreenSource = new BehaviorSubject(false);\n        this.isMediumScreen = this.isMediumScreenSource.asObservable();\n        \n        // add a subscription to the breakpointObserver so the isMediumScreenSource\n        // can be updated when the screen size changes.\n        this.breakpointObserver\n            .observe([Breakpoints.Handset, Breakpoints.Small])\n            .subscribe((size: BreakpointState) => {\n                this.logger.info(`UtilsService: screen size ${ size.matches ? 'small to medium' : 'large' }`);\n                this.isMediumScreenSource.next(size.matches);\n            });\n    }\n\n    /**\n     * Sets the given dialog to full screen on medium or small devices.\n     * \n     * @param dialogRef The dialog to update. \n     * @param largeSize The width and height to set for large screens.\n     */\n    fullScreenDialogSub(dialogRef: MatDialogRef, largeSize: string = '70%'): void {\n        const sub: Subscription = this.isMediumScreen.subscribe((isMediumScreen: boolean) => {\n            if(isMediumScreen) {\n                dialogRef.updateSize('100%', '100%');\n            }\n            else {\n                dialogRef.updateSize(largeSize);\n            }\n        });\n\n        dialogRef.afterClosed().subscribe(() => {\n            sub.unsubscribe();\n        });\n    }\n\n    /**\n     * Updates the sidenav menu state.\n     * \n     * @param event The state to set the sidenav menu to. \n     */\n    toggleSidenavMenu(event: SidenavMenuEvent) {\n        this._sidenavMenuChanges.next(event);\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                    src/app/about/about.component.ts\n            \n            \n                component\n            \n            \n                AboutComponent\n            \n            \n                88 %\n                (8/9)\n            \n        \n        \n            \n                \n                    src/app/app.component.ts\n            \n            \n                component\n            \n            \n                AppComponent\n            \n            \n                83 %\n                (5/6)\n            \n        \n        \n            \n                \n                    src/app/components/page-not-found/page-not-found.component.ts\n            \n            \n                component\n            \n            \n                PageNotFoundComponent\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    src/app/core/services/console-logger.service.ts\n            \n            \n                injectable\n            \n            \n                ConsoleLoggerService\n            \n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                    src/app/core/services/console-logger.service.ts\n            \n            \n                variable\n            \n            \n                noop\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/app/core/services/http.service.ts\n            \n            \n                injectable\n            \n            \n                HttpService\n            \n            \n                90 %\n                (10/11)\n            \n        \n        \n            \n                \n                    src/app/core/services/loader.service.ts\n            \n            \n                injectable\n            \n            \n                LoaderService\n            \n            \n                83 %\n                (5/6)\n            \n        \n        \n            \n                \n                    src/app/core/services/loader.service.ts\n            \n            \n                interface\n            \n            \n                LoaderState\n            \n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                    src/app/core/services/logger.service.ts\n            \n            \n                class\n            \n            \n                Logger\n            \n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                    src/app/core/services/logger.service.ts\n            \n            \n                injectable\n            \n            \n                LoggerService\n            \n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                    src/app/footer/footer.component.ts\n            \n            \n                component\n            \n            \n                FooterComponent\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    src/app/header/header.component.ts\n            \n            \n                component\n            \n            \n                HeaderComponent\n            \n            \n                90 %\n                (10/11)\n            \n        \n        \n            \n                \n                    src/app/tasks/button-bar/button-bar.component.ts\n            \n            \n                component\n            \n            \n                ButtonBarComponent\n            \n            \n                93 %\n                (15/16)\n            \n        \n        \n            \n                \n                    src/app/tasks/buttons/buttons.component.ts\n            \n            \n                component\n            \n            \n                ButtonsComponent\n            \n            \n                93 %\n                (14/15)\n            \n        \n        \n            \n                \n                    src/app/tasks/dialogs/complete-task/complete-task.component.ts\n            \n            \n                component\n            \n            \n                CompleteTaskComponent\n            \n            \n                88 %\n                (15/17)\n            \n        \n        \n            \n                \n                    src/app/tasks/dialogs/confirm-delete-task/confirm-delete-task.component.ts\n            \n            \n                component\n            \n            \n                ConfirmDeleteTaskComponent\n            \n            \n                83 %\n                (10/12)\n            \n        \n        \n            \n                \n                    src/app/tasks/dialogs/create-task/create-task.component.ts\n            \n            \n                component\n            \n            \n                CreateTaskComponent\n            \n            \n                80 %\n                (8/10)\n            \n        \n        \n            \n                \n                    src/app/tasks/edit/edit-task.component.ts\n            \n            \n                component\n            \n            \n                EditTaskComponent\n            \n            \n                92 %\n                (23/25)\n            \n        \n        \n            \n                \n                    src/app/tasks/edit/recurring-task.component.ts\n            \n            \n                component\n            \n            \n                RecurringTaskComponent\n            \n            \n                81 %\n                (9/11)\n            \n        \n        \n            \n                \n                    src/app/tasks/filter/tasks-filter.component.ts\n            \n            \n                component\n            \n            \n                TasksFilterComponent\n            \n            \n                90 %\n                (9/10)\n            \n        \n        \n            \n                \n                    src/app/tasks/form/task-form.component.ts\n            \n            \n                component\n            \n            \n                TaskFormComponent\n            \n            \n                88 %\n                (15/17)\n            \n        \n        \n            \n                \n                    src/app/tasks/shared/models/task.model.ts\n            \n            \n                class\n            \n            \n                Task\n            \n            \n                100 %\n                (10/10)\n            \n        \n        \n            \n                \n                    src/app/tasks/shared/services/task.service.ts\n            \n            \n                injectable\n            \n            \n                TaskService\n            \n            \n                100 %\n                (31/31)\n            \n        \n        \n            \n                \n                    src/app/tasks/shared/services/tasks.datasource.ts\n            \n            \n                class\n            \n            \n                TasksDataSource\n            \n            \n                86 %\n                (13/15)\n            \n        \n        \n            \n                \n                    src/app/tasks/shared/services/utils.service.ts\n            \n            \n                injectable\n            \n            \n                UtilsService\n            \n            \n                87 %\n                (7/8)\n            \n        \n        \n            \n                \n                    src/app/tasks/shared/util/mat-paginator-custom.ts\n            \n            \n                injectable\n            \n            \n                MatPaginatorCustom\n            \n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                \n                    src/app/tasks/sidenav/list-item.component.ts\n            \n            \n                component\n            \n            \n                ListItemComponent\n            \n            \n                92 %\n                (13/14)\n            \n        \n        \n            \n                \n                    src/app/tasks/sidenav/sidenav-tasks.component.ts\n            \n            \n                component\n            \n            \n                SidenavTasksComponent\n            \n            \n                94 %\n                (16/17)\n            \n        \n        \n            \n                \n                    src/app/tasks/table/complete-tasks-table.component.ts\n            \n            \n                component\n            \n            \n                CompleteTasksTableComponent\n            \n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                    src/app/tasks/table/pending-tasks-table.component.ts\n            \n            \n                component\n            \n            \n                PendingTasksTableComponent\n            \n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                    src/app/tasks/table/tasks-table.component.ts\n            \n            \n                component\n            \n            \n                TasksTableComponent\n            \n            \n                96 %\n                (32/33)\n            \n        \n        \n            \n                \n                    src/app/tasks/tasks.component.ts\n            \n            \n                component\n            \n            \n                TasksComponent\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    src/environments/environment.prod.ts\n            \n            \n                variable\n            \n            \n                environment\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/environments/environment.ts\n            \n            \n                variable\n            \n            \n                environment\n            \n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^6.0.9\n        \n            @angular/cdk : ^6.4.0\n        \n            @angular/common : ^6.0.9\n        \n            @angular/compiler : ^6.0.9\n        \n            @angular/core : ^6.0.9\n        \n            @angular/flex-layout : ^6.0.0-beta.16\n        \n            @angular/forms : ^6.0.9\n        \n            @angular/http : ^6.0.9\n        \n            @angular/material : ^6.4.0\n        \n            @angular/material-moment-adapter : ^6.4.0\n        \n            @angular/platform-browser : ^6.0.9\n        \n            @angular/platform-browser-dynamic : ^6.0.9\n        \n            @angular/router : ^6.0.9\n        \n            @fortawesome/angular-fontawesome : 0.1.0-10\n        \n            @fortawesome/fontawesome-svg-core : ^1.2.1\n        \n            @fortawesome/free-regular-svg-icons : ^5.1.1\n        \n            @fortawesome/free-solid-svg-icons : ^5.1.1\n        \n            core-js : ^2.5.7\n        \n            font-awesome : ^4.7.0\n        \n            hammerjs : ^2.0.8\n        \n            moment : ^2.22.2\n        \n            rxjs : ^6.2.2\n        \n            rxjs-compat : ^6.2.2\n        \n            zone.js : ^0.8.26\n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nMyTasks\n\n\nMyTasks is a simple application meant to create and manage Tasks. Tasks are displayed in tables, separated by state (pending or complete), and can be filtered by name, description, priority, due date, and date completed (if complete). Pending tasks also have keyword filters and visual indicators for tasks over due (tasks with due date before todays date), tasks due today, and tasks due tomorrow. Tasks have a very simple repeating capability; they can repeat daily, weekly, monthly, or yearly.\nThe application is a full stack TypeScript app divided into an Angular client, Express API server, and SQLite database. See the Built With section for more details on the client, server, and database. \nTable of Contents\n\nGetting Started\nPrerequisites\nBuild and Run\nDocker Compose Setup\nNode Setup\nDevelopment Mode\n\n\n\n\nAccessing the App\nRunning the Tests\nUnit Tests\ne2e Tests\n\n\nDocumentation\nBuilt With\nAuthors\nAcknowledgements\n\nGetting Started\nRun the following command to clone a copy of the repository into your current working directory.\ngit clone https://github.com/Jonathan-S-Phillips/my-tasksIn case you don't have GIT installed and configured on your machine a few helpful links are included below.\n\nGIT - Setup GIT\nClone Repo - Additional details on cloning GIT repo\n\nPrerequisites\nIn order to run the application you need to either have Docker Compose or Node installed and configured. Installing and configuring Docker Compose and Node are outside the scope of this document but a few helpful links are included below.\n\nDocker Compose - Install Docker Compose\nNode - Install Node\n\nThe app was built on Windows using the following setup:\n\nDocker version 18.06.0-ce-win70 (19075)\nCompose 1.22.0\nNode version 8.9.1\nNPM version 6.2.0 \n\nBuild and Run\nOnce you have successfully cloned the repository you can build and run the MyTasks application one of the following two ways.\n\nDocker Compose Setup; or \nNode Setup. \n\nDocker Compose Setup\nIf you have Docker Compose configured for your system, then you can use the following command from the root or base directory of the application to build and run both the server and client containers for the app.\ndocker-compose up --buildThats it! The above command will initialize the full stack application with an empty database. The next time you start the app you may omit the \"--build\" option (unless you have made changes or update the node_modules). Any Tasks created and updated will be persisted if you restart the containers. Once the application is up and running you may access the client through a web browser at http://localhost:4200. More details on accessing the application and the API server are available here. \nIt may take some time to setup and configure the containers depending on your connection speed. You may also see some warnings about npm packages, but they will not prevent the app from starting.\n**Side Note: I did have to run the below command at some point when I was building the app to sync the time between my host machine and the containers because of time drift.\ndocker run --rm --privileged mytasks_angular-client hwclock -s\ndocker run --rm --privileged mytasks_server hwclock -sNode Setup\nIf you have Node configured for your system, then you can use the npm scripts included at the root directory to build and run the application. You can build each part of the app separately, but I have included scripts at the root to run both the server and client together. The first step to build and run the application directly in your environment is to install dependencies. You can use the following command from the root of the application to install all required dependencies for both the client and server.\nnpm run install-allIf you are running npm version 6, then you will see a few vulnerabilities from the dependencies for the client. You can run the following command from the base of the client app to fix one of the vulnerabilities.\nnpm audit fixThe remaining fixes include breaking changes, which have not been tested.\nOnce the dependencies are installed you can use the following command (again from the root of the application) which will build and run both the client and server together.\nnpm startOnce the application is up and running you may access the client through a web browser at http://localhost:4200. More details on accessing the application and the API server are available here.\nDevelopment Mode\nContinuing with the Node configuration, a script is included to start the application in development mode, which uses an in-memory version of the SQLite DB instead of persisting the DB to disk. The code is automatically set up to insert seed data from a JSON array into the DB when running the in-memory version. Run the following command to run the application in development mode.\nnpm run start:devAll e2e tests use the in-memory version of the SQLite DB, and the unit tests use the same JSON array data inserted into the in-memory DB.\nAccessing the App\nOnce the application is up and running you may access the client through a web browser at http://localhost:4200. The server is setup to listen on port 3000 and the main Tasks API is available at http://localhost:3000/api/tasks.\nRunning the Tests\nThe application has both unit and e2e tests. Currently the only way to run the tests is if you have Node configured. The client is using karma, and the server is using mocha and chai for unit tests. The e2e tests use protractor.\nUnit Tests\nThe unit tests for both the client and server can be run using the following command from the root of the application.\nnpm testThe server tests should run first followed by the client tests. A script is also included to generate coverage reports with the unit tests. Running the following command will run the unit tests and generate coverage reports as well.\nnpm run test:coverageSeparate coverage reports are generated for the client and the server using Istanbul Code Coverage. A coverage directory is added to both the client and server directories and the reports are added there. To view the reports browse to either the client or server, select the corresponding coverage directory, and open the index.html file found using your favorite browser.\ne2e Tests\nThe e2e tests can be run using the following command from the root of the application.\nnpm run e2eThis command will initialize the server and client, and execute the e2e tests against the app using the chrome browser. You may also run the e2e tests without a browser using the following command.\nnpm run e2e:headlessA third e2e test script is included which is meant to take screenshots of the application and various elements throughout the app for use in the AboutComponent of the app. The Microsoft Edge browser is the only browser that seems to work to take screenshots of individual elements, so the script uses Edge for the tests. To set up the Edge browser for e2e tests you must manually download the MicrosoftWebDriver, which is available here. Once you have downloaded the driver you must add it to the following angular-client directory.\n angular-client/node_modules/protractor/node_modules/webdriver-manager/selenium**Note you may have to remove and re-add this file if you update the node_modules. Once you have your system set up with the Edge webriver, then you may run the following command to take screenshots while the e2e tests are running.\nnpm run e2e:screenshotsIf you try to run the above command without setting up the Edge browser with protractor, then the script will fail. Also I have not tested this on a machine the does not already have Edge installed, so if you are running a machine that does not have Edge installed then you may run into issues.\nDocumentation\nDocumentation for the client code and web API are included and available at the below URLs.\n\nAngular Client\nAPI\n\nDocumentation for the client was built using Compodoc and documentation for the web API was built using apiDoc. Scripts are included to generate the documentation locally as well. You can run the following command which will update the docs directory with the latest changes from the source.\nnpm run docBuilt With\nThe client is built using Angular 6, and leverages Angular Material 2 for most of the UI components. The UI is designed to be responsive, and meant to work across a variety of devices. Breakpoints from the angular CDK layout (Handset and Small) are used to determine what features are available on the screen. Smaller screen sizes have only been emulated through chrome devtools and have not been fully tested though. \nThe Express API server utilizes the TypeORM package to handle storing data in a SQLite database. The database only contains a single table for Tasks. To implement the repeating capability an optional one-to-one relationship is used to represent the relation from one Task to the next in the sequence, through the nextId property. A simple Entity Relationship (ER) diagram is included below\n\nBelow is a complete list of the technologies used to build the the app and links to their home or github pages.\n\nTypeScript\nAngular - UI Components\nAngular Material 2 - Material Design components\nFont-Awesome - Icons\nExpress - web framework\nTypeORM - ORM for TypeScript\nSQLite - DB driver\nCompodoc - Angular project documentation\napiDoc - API documentation\n\nAuthors\n\n[Jonathan Phillips] - (https://github.com/Jonathan-S-Phillips)\n\nAcknowledgments\nPrior to developing this app I had only worked with Angular, so it was an exciting challenge to learn how to set up and configure an Express API server. I also enjoyed learning about Docker containers and how to use Compose to define and run a multi-container Docker app. Also even though I have worked with Angular before, I was using a mix of Typescript, jQuery, and the Bootstrap UI framework. For the purposes of this app I decided to go with a solution built entirely in TypeScript, which also gave me an opportunity to dive into Angular Material 2.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AboutModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AboutRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CompleteTaskModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ConfirmDeleteTaskModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CoreModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CreateTaskModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        EditTaskModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        FooterModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        HeaderModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SidenavTasksModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TaskFormModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TasksButtonBarModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TasksButtonsModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TasksDialogModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TasksFilterModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TasksModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TasksRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TasksTableModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n            \n                \n                    \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AboutModule\n\n\n\ncluster_AboutModule_declarations\n\n\n\ncluster_AboutModule_imports\n\n\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_CompleteTaskModule\n\n\n\ncluster_CompleteTaskModule_declarations\n\n\n\ncluster_ConfirmDeleteTaskModule\n\n\n\ncluster_ConfirmDeleteTaskModule_declarations\n\n\n\ncluster_CreateTaskModule\n\n\n\ncluster_CreateTaskModule_declarations\n\n\n\ncluster_CreateTaskModule_imports\n\n\n\ncluster_EditTaskModule\n\n\n\ncluster_EditTaskModule_declarations\n\n\n\ncluster_EditTaskModule_imports\n\n\n\ncluster_EditTaskModule_providers\n\n\n\ncluster_FooterModule\n\n\n\ncluster_FooterModule_declarations\n\n\n\ncluster_FooterModule_exports\n\n\n\ncluster_HeaderModule\n\n\n\ncluster_HeaderModule_declarations\n\n\n\ncluster_HeaderModule_imports\n\n\n\ncluster_HeaderModule_exports\n\n\n\ncluster_SidenavTasksModule\n\n\n\ncluster_SidenavTasksModule_declarations\n\n\n\ncluster_SidenavTasksModule_exports\n\n\n\ncluster_TaskFormModule\n\n\n\ncluster_TaskFormModule_declarations\n\n\n\ncluster_TaskFormModule_exports\n\n\n\ncluster_TasksButtonBarModule\n\n\n\ncluster_TasksButtonBarModule_declarations\n\n\n\ncluster_TasksButtonBarModule_imports\n\n\n\ncluster_TasksButtonBarModule_exports\n\n\n\ncluster_TasksButtonsModule\n\n\n\ncluster_TasksButtonsModule_declarations\n\n\n\ncluster_TasksButtonsModule_exports\n\n\n\ncluster_TasksFilterModule\n\n\n\ncluster_TasksFilterModule_declarations\n\n\n\ncluster_TasksFilterModule_exports\n\n\n\ncluster_TasksModule\n\n\n\ncluster_TasksModule_declarations\n\n\n\ncluster_TasksModule_imports\n\n\n\ncluster_TasksTableModule\n\n\n\ncluster_TasksTableModule_declarations\n\n\n\n\nAboutComponent\n\nAboutComponent\n\n\n\nAboutModule\n\nAboutModule\n\nAboutModule -->\n\nAboutComponent->AboutModule\n\n\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAboutModule->AppModule\n\n\n\n\n\nAboutRoutingModule\n\nAboutRoutingModule\n\nAboutModule -->\n\nAboutRoutingModule->AboutModule\n\n\n\n\n\nAppComponent\n\nAppComponent\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nPageNotFoundComponent\n\nPageNotFoundComponent\n\nAppModule -->\n\nPageNotFoundComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nCoreModule\n\nCoreModule\n\nAppModule -->\n\nCoreModule->AppModule\n\n\n\n\n\nFooterModule\n\nFooterModule\n\nAppModule -->\n\nFooterModule->AppModule\n\n\n\n\n\nFooterComponent \n\nFooterComponent \n\nFooterComponent  -->\n\nFooterModule->FooterComponent \n\n\n\n\n\nHeaderModule\n\nHeaderModule\n\nAppModule -->\n\nHeaderModule->AppModule\n\n\n\n\n\nHeaderComponent \n\nHeaderComponent \n\nHeaderComponent  -->\n\nHeaderModule->HeaderComponent \n\n\n\n\n\nTasksModule\n\nTasksModule\n\nAppModule -->\n\nTasksModule->AppModule\n\n\n\n\n\nCompleteTaskComponent\n\nCompleteTaskComponent\n\n\n\nCompleteTaskModule\n\nCompleteTaskModule\n\nCompleteTaskModule -->\n\nCompleteTaskComponent->CompleteTaskModule\n\n\n\n\n\nTasksDialogModule\n\nTasksDialogModule\n\nTasksDialogModule -->\n\nCompleteTaskModule->TasksDialogModule\n\n\n\n\n\nConfirmDeleteTaskComponent\n\nConfirmDeleteTaskComponent\n\n\n\nConfirmDeleteTaskModule\n\nConfirmDeleteTaskModule\n\nConfirmDeleteTaskModule -->\n\nConfirmDeleteTaskComponent->ConfirmDeleteTaskModule\n\n\n\nTasksDialogModule -->\n\nConfirmDeleteTaskModule->TasksDialogModule\n\n\n\n\n\nCreateTaskComponent\n\nCreateTaskComponent\n\n\n\nCreateTaskModule\n\nCreateTaskModule\n\nCreateTaskModule -->\n\nCreateTaskComponent->CreateTaskModule\n\n\n\n\n\nSidenavTasksModule\n\nSidenavTasksModule\n\nSidenavTasksModule -->\n\nCreateTaskModule->SidenavTasksModule\n\n\n\n\n\nTaskFormModule\n\nTaskFormModule\n\nCreateTaskModule -->\n\nTaskFormModule->CreateTaskModule\n\n\n\n\n\nEditTaskModule\n\nEditTaskModule\n\nEditTaskModule -->\n\nTaskFormModule->EditTaskModule\n\n\n\nTasksDialogModule -->\n\nTaskFormModule->TasksDialogModule\n\n\n\n\n\nTaskFormComponent \n\nTaskFormComponent \n\nTaskFormComponent  -->\n\nTaskFormModule->TaskFormComponent \n\n\n\n\n\nEditTaskComponent\n\nEditTaskComponent\n\nEditTaskModule -->\n\nEditTaskComponent->EditTaskModule\n\n\n\n\n\nRecurringTaskComponent\n\nRecurringTaskComponent\n\nEditTaskModule -->\n\nRecurringTaskComponent->EditTaskModule\n\n\n\nTasksModule -->\n\nEditTaskModule->TasksModule\n\n\n\n\n\nTasksButtonBarModule\n\nTasksButtonBarModule\n\nEditTaskModule -->\n\nTasksButtonBarModule->EditTaskModule\n\n\n\n\n\nButtonBarComponent \n\nButtonBarComponent \n\nButtonBarComponent  -->\n\nTasksButtonBarModule->ButtonBarComponent \n\n\n\n\n\nTasksTableModule\n\nTasksTableModule\n\nTasksTableModule -->\n\nTasksButtonBarModule->TasksTableModule\n\n\n\nEditTaskModule -->\n\nTasksDialogModule->EditTaskModule\n\n\n\nTasksTableModule -->\n\nTasksDialogModule->TasksTableModule\n\n\n\n\n\nMatPaginatorCustom\n\nMatPaginatorCustom\n\nEditTaskModule -->\n\nMatPaginatorCustom->EditTaskModule\n\n\n\n\n\nFooterComponent\n\nFooterComponent\n\nFooterModule -->\n\nFooterComponent->FooterModule\n\n\n\n\n\nHeaderComponent\n\nHeaderComponent\n\nHeaderModule -->\n\nHeaderComponent->HeaderModule\n\n\n\n\n\nTasksFilterModule\n\nTasksFilterModule\n\nHeaderModule -->\n\nTasksFilterModule->HeaderModule\n\n\n\n\n\nTasksFilterComponent \n\nTasksFilterComponent \n\nTasksFilterComponent  -->\n\nTasksFilterModule->TasksFilterComponent \n\n\n\n\n\nListItemComponent\n\nListItemComponent\n\nSidenavTasksModule -->\n\nListItemComponent->SidenavTasksModule\n\n\n\n\n\nSidenavTasksComponent\n\nSidenavTasksComponent\n\nSidenavTasksModule -->\n\nSidenavTasksComponent->SidenavTasksModule\n\n\n\nTasksModule -->\n\nSidenavTasksModule->TasksModule\n\n\n\n\n\nSidenavTasksComponent \n\nSidenavTasksComponent \n\nSidenavTasksComponent  -->\n\nSidenavTasksModule->SidenavTasksComponent \n\n\n\n\n\nTaskFormComponent\n\nTaskFormComponent\n\nTaskFormModule -->\n\nTaskFormComponent->TaskFormModule\n\n\n\n\n\nButtonBarComponent\n\nButtonBarComponent\n\nTasksButtonBarModule -->\n\nButtonBarComponent->TasksButtonBarModule\n\n\n\n\n\nTasksButtonsModule\n\nTasksButtonsModule\n\nTasksButtonBarModule -->\n\nTasksButtonsModule->TasksButtonBarModule\n\n\n\n\n\nButtonsComponent \n\nButtonsComponent \n\nButtonsComponent  -->\n\nTasksButtonsModule->ButtonsComponent \n\n\n\nTasksTableModule -->\n\nTasksButtonsModule->TasksTableModule\n\n\n\n\n\nButtonsComponent\n\nButtonsComponent\n\nTasksButtonsModule -->\n\nButtonsComponent->TasksButtonsModule\n\n\n\n\n\nTasksFilterComponent\n\nTasksFilterComponent\n\nTasksFilterModule -->\n\nTasksFilterComponent->TasksFilterModule\n\n\n\n\n\nTasksComponent\n\nTasksComponent\n\nTasksModule -->\n\nTasksComponent->TasksModule\n\n\n\n\n\nTasksRoutingModule\n\nTasksRoutingModule\n\nTasksModule -->\n\nTasksRoutingModule->TasksModule\n\n\n\nTasksModule -->\n\nTasksTableModule->TasksModule\n\n\n\n\n\nCompleteTasksTableComponent\n\nCompleteTasksTableComponent\n\nTasksTableModule -->\n\nCompleteTasksTableComponent->TasksTableModule\n\n\n\n\n\nPendingTasksTableComponent\n\nPendingTasksTableComponent\n\nTasksTableModule -->\n\nPendingTasksTableComponent->TasksTableModule\n\n\n\n\n\nTasksTableComponent\n\nTasksTableComponent\n\nTasksTableModule -->\n\nTasksTableComponent->TasksTableModule\n\n\n\n\n\n\n                \n                \n                \n                    Zoom in\n                    Reset\n                    Zoom out\n                \n            \n\n    \n            \n                \n                    \n                        \n                        \n                            20 modules\n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                        20 components\n                    \n                \n            \n            \n                \n                    \n                        \n                        7 injectables\n                    \n                \n            \n            \n                \n                    \n                        \n                        3 classes\n                    \n                \n            \n            \n                \n                    \n                        \n                        1 interface\n                    \n                \n            \n            \n                \n                    \n                        \n                        \n                            10 routes\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            PriorityTypes   (src/.../task.model.ts)\n                        \n                        \n                            SidenavMenuEvent   (src/.../utils.service.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/tasks/shared/models/task.model.ts\n    \n        \n            \n                \n                    \n                        \n                        PriorityTypes\n                    \n                \n                    \n                        \n                            The priority types available for a Task. \n\n                        \n                    \n                \n                    \n                        PriorityTypes:     \"Low\" | \"Medium\" | \"High\" | \"Urgent\"\n\n                    \n                \n            \n        \n\n    src/app/tasks/shared/services/utils.service.ts\n    \n        \n            \n                \n                    \n                        \n                        SidenavMenuEvent\n                    \n                \n                \n                    \n                        SidenavMenuEvent:     \"Collapse\" | \"Expand\"\n\n                    \n                \n            \n        \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            environment   (src/.../environment.prod.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                        \n                            noop   (src/.../console-logger.service.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/environments/environment.prod.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        environment:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: true\n}\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        environment:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: false\n}\n                        \n                    \n\n\n            \n        \n\n    src/app/core/services/console-logger.service.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            noop\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        noop:     \n\n                    \n                \n                    \n                        \n                            Default value : (): any => undefined\n                        \n                    \n\n\n            \n        \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
